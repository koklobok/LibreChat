var au = Object.defineProperty;
var iu = (e, n, o) =>
  n in e ? au(e, n, { enumerable: !0, configurable: !0, writable: !0, value: o }) : (e[n] = o);
var ia = (e, n, o) => (iu(e, typeof n != 'symbol' ? n + '' : n, o), o);
import {
  b as u,
  c as pe,
  l as su,
  d as ru,
  r as cu,
  U as lu,
  j as t,
  e as bl,
  s as _u,
  i as yl,
  g as sa,
  k as du,
  m as pi,
  n as mu,
  o as uu,
  q as pu,
  u as hu,
  x as gu,
  y as X,
  A as Le,
  B as _s,
  R as xe,
  C as Pa,
  D as Pe,
  E as W,
  F as ye,
  G as Y,
  H as p,
  I as Ea,
  J as le,
  T as kl,
  K as _t,
  L as Ma,
  M as wl,
  N as $i,
  O as Dt,
  P as Rn,
  Q as fu,
  S as Kt,
  V as xu,
  W as ha,
  X as mn,
  Y as vu,
  Z as bu,
  _ as yu,
  $ as ku,
  a0 as hi,
  a1 as wu,
  a2 as ju,
  a3 as ds,
  a4 as ze,
  a5 as Cu,
  a6 as Nu,
  a7 as an,
  a8 as qo,
  a9 as jl,
  aa as Cl,
  ab as Nl,
  ac as Sl,
  ad as Al,
  ae as Tl,
  af as Il,
  ag as zl,
  ah as Su,
  ai as Ll,
  aj as Au,
  ak as ms,
  al as Pl,
  am as Tu,
  an as El,
  ao as Iu,
  ap as Ml,
  aq as Rl,
  ar as Ol,
  as as Dl,
  at as Fl,
  au as zu,
  av as Bl,
  aw as $l,
  ax as Lu,
  ay as Pu,
  az as us,
  aA as ps,
  aB as Ra,
  aC as oo,
  aD as Oa,
  aE as ql,
  aF as hs,
  aG as Ul,
  aH as Vl,
  aI as Gl,
  aJ as Eu,
  aK as Mu,
  aL as Ru,
  aM as Ou,
  aN as Kl,
  aO as Hl,
  aP as Du,
  aQ as Fu,
  aR as Bu,
  aS as $u,
  aT as Wl,
  aU as Jl,
  aV as qu,
  aW as gs,
  aX as un,
  aY as bn,
  aZ as Ql,
  a_ as mt,
  a$ as Zl,
  b0 as Yl,
  b1 as Xl,
  b2 as Uu,
  b3 as Vu,
  b4 as Gu,
  b5 as e_,
  b6 as Ku,
  b7 as t_,
  b8 as n_,
  b9 as Hu,
  ba as o_,
  bb as fs,
  bc as a_,
  bd as xs,
  be as i_,
  bf as s_,
  bg as vs,
  bh as r_,
  bi as c_,
  bj as l_,
  bk as __,
  bl as Wu,
  bm as Ju,
  bn as Qu,
  bo as ao,
  bp as Zu,
  bq as Yu,
  br as Xu,
  bs as ep,
  bt as Me,
  bu as jr,
  bv as tp,
  bw as bs,
  bx as Pt,
  by as Ht,
  bz as ga,
  bA as Wt,
  bB as Et,
  bC as np,
  bD as op,
  bE as d_,
  bF as m_,
  bG as Ln,
  bH as ys,
  bI as u_,
  bJ as gi,
  bK as p_,
  bL as ap,
  bM as h_,
  bN as ip,
  bO as Da,
  bP as ks,
  bQ as ws,
  bR as js,
  bS as Cs,
  bT as Ns,
  bU as g_,
  bV as sp,
  bW as Cr,
  bX as Nr,
  bY as Sr,
  bZ as Uo,
  b_ as Ar,
  b$ as fa,
  c0 as Tr,
  c1 as rp,
  c2 as cp,
  c3 as lp,
  c4 as _p,
  c5 as dp,
  c6 as mp,
  c7 as Jt,
  c8 as Ge,
  c9 as fn,
  ca as Ss,
  cb as As,
  cc as Zn,
  cd as Ts,
  ce as Is,
  cf as xn,
  cg as vn,
  ch as No,
  ci as up,
  cj as f_,
  ck as x_,
  cl as v_,
  cm as pp,
  cn as hp,
  co as b_,
  cp as zs,
  cq as y_,
  cr as gp,
  cs as fp,
  ct as xp,
  cu as vp,
  cv as bp,
  cw as yp,
  cx as kp,
  cy as wp,
  cz as jp,
  cA as k_,
  cB as w_,
  cC as Cp,
  cD as pa,
  cE as Ir,
  cF as zr,
  cG as Np,
  cH as Sp,
  cI as Sn,
  cJ as Ap,
  cK as Tp,
  cL as fi,
  cM as j_,
  cN as C_,
  cO as Ip,
  cP as zp,
  cQ as Lp,
  cR as Pp,
  cS as Ep,
  cT as Mp,
  cU as Rp,
  cV as Op,
  cW as Dp,
  cX as Fp,
  cY as Bp,
  cZ as $p,
  c_ as qp,
  c$ as Up,
  d0 as Vp,
} from './vendor-CRmMnSZD.js';
import './markdown_highlight-ByjxT0vp.js';
import './markdown_large-Dn83EM_N.js';
(function () {
  const n = document.createElement('link').relList;
  if (n && n.supports && n.supports('modulepreload')) return;
  for (const i of document.querySelectorAll('link[rel="modulepreload"]')) a(i);
  new MutationObserver((i) => {
    for (const s of i)
      if (s.type === 'childList')
        for (const r of s.addedNodes) r.tagName === 'LINK' && r.rel === 'modulepreload' && a(r);
  }).observe(document, { childList: !0, subtree: !0 });
  function o(i) {
    const s = {};
    return (
      i.integrity && (s.integrity = i.integrity),
      i.referrerPolicy && (s.referrerPolicy = i.referrerPolicy),
      i.crossOrigin === 'use-credentials'
        ? (s.credentials = 'include')
        : i.crossOrigin === 'anonymous'
        ? (s.credentials = 'omit')
        : (s.credentials = 'same-origin'),
      s
    );
  }
  function a(i) {
    if (i.ep) return;
    i.ep = !0;
    const s = o(i);
    fetch(i.href, s);
  }
})();
var nn,
  xa,
  Lr,
  ee,
  Pr,
  dt,
  Er,
  Mr,
  Rr,
  _e = function () {
    return (
      (_e =
        Object.assign ||
        function (e) {
          for (var n, o = 1, a = arguments.length; o < a; o++)
            for (var i in (n = arguments[o]))
              Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
          return e;
        }),
      _e.apply(this, arguments)
    );
  };
function Or(e, n) {
  var o = {};
  for (var a in e) Object.prototype.hasOwnProperty.call(e, a) && n.indexOf(a) < 0 && (o[a] = e[a]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function') {
    var i = 0;
    for (a = Object.getOwnPropertySymbols(e); i < a.length; i++)
      n.indexOf(a[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, a[i]) &&
        (o[a[i]] = e[a[i]]);
  }
  return o;
}
function Fe(e, n, o, a) {
  return new (o || (o = Promise))(function (i, s) {
    function r(d) {
      try {
        l(a.next(d));
      } catch (_) {
        s(_);
      }
    }
    function c(d) {
      try {
        l(a.throw(d));
      } catch (_) {
        s(_);
      }
    }
    function l(d) {
      var _;
      d.done
        ? i(d.value)
        : ((_ = d.value),
          _ instanceof o
            ? _
            : new o(function (m) {
                m(_);
              })).then(r, c);
    }
    l((a = a.apply(e, n || [])).next());
  });
}
function Be(e, n) {
  var o,
    a,
    i,
    s,
    r = {
      label: 0,
      sent: function () {
        if (1 & i[0]) throw i[1];
        return i[1];
      },
      trys: [],
      ops: [],
    };
  return (
    (s = { next: c(0), throw: c(1), return: c(2) }),
    typeof Symbol == 'function' &&
      (s[Symbol.iterator] = function () {
        return this;
      }),
    s
  );
  function c(l) {
    return function (d) {
      return (function (_) {
        if (o) throw new TypeError('Generator is already executing.');
        for (; s && ((s = 0), _[0] && (r = 0)), r; )
          try {
            if (
              ((o = 1),
              a &&
                (i =
                  2 & _[0]
                    ? a.return
                    : _[0]
                    ? a.throw || ((i = a.return) && i.call(a), 0)
                    : a.next) &&
                !(i = i.call(a, _[1])).done)
            )
              return i;
            switch (((a = 0), i && (_ = [2 & _[0], i.value]), _[0])) {
              case 0:
              case 1:
                i = _;
                break;
              case 4:
                return r.label++, { value: _[1], done: !1 };
              case 5:
                r.label++, (a = _[1]), (_ = [0]);
                continue;
              case 7:
                (_ = r.ops.pop()), r.trys.pop();
                continue;
              default:
                if (
                  ((i = r.trys),
                  !((i = i.length > 0 && i[i.length - 1]) || (_[0] !== 6 && _[0] !== 2)))
                ) {
                  r = 0;
                  continue;
                }
                if (_[0] === 3 && (!i || (_[1] > i[0] && _[1] < i[3]))) {
                  r.label = _[1];
                  break;
                }
                if (_[0] === 6 && r.label < i[1]) {
                  (r.label = i[1]), (i = _);
                  break;
                }
                if (i && r.label < i[2]) {
                  (r.label = i[2]), r.ops.push(_);
                  break;
                }
                i[2] && r.ops.pop(), r.trys.pop();
                continue;
            }
            _ = n.call(e, r);
          } catch (m) {
            (_ = [6, m]), (a = 0);
          } finally {
            o = i = 0;
          }
        if (5 & _[0]) throw _[1];
        return { value: _[0] ? _[1] : void 0, done: !0 };
      })([l, d]);
    };
  }
}
function So(e, n, o) {
  if (o || arguments.length === 2)
    for (var a, i = 0, s = n.length; i < s; i++)
      (!a && i in n) || (a || (a = Array.prototype.slice.call(n, 0, i)), (a[i] = n[i]));
  return e.concat(a || Array.prototype.slice.call(n));
}
typeof SuppressedError == 'function' && SuppressedError,
  (function (e) {
    (e.code_interpreter = 'code_interpreter'),
      (e.file_search = 'file_search'),
      (e.retrieval = 'retrieval'),
      (e.function = 'function');
  })(nn || (nn = {})),
  (function (e) {
    (e.code_interpreter = 'code_interpreter'), (e.file_search = 'file_search');
  })(xa || (xa = {})),
  (function (e) {
    (e.FILE_CITATION = 'file_citation'), (e.FILE_PATH = 'file_path');
  })(Lr || (Lr = {})),
  (function (e) {
    (e.TEXT = 'text'),
      (e.TOOL_CALL = 'tool_call'),
      (e.IMAGE_FILE = 'image_file'),
      (e.ERROR = 'error');
  })(ee || (ee = {})),
  (function (e) {
    (e.TOOL_CALLS = 'tool_calls'), (e.MESSAGE_CREATION = 'message_creation');
  })(Pr || (Pr = {})),
  (function (e) {
    (e.FUNCTION = 'function'),
      (e.RETRIEVAL = 'retrieval'),
      (e.FILE_SEARCH = 'file_search'),
      (e.CODE_INTERPRETER = 'code_interpreter');
  })(dt || (dt = {})),
  (function (e) {
    (e.IN_PROGRESS = 'in_progress'),
      (e.CANCELLED = 'cancelled'),
      (e.FAILED = 'failed'),
      (e.COMPLETED = 'completed'),
      (e.EXPIRED = 'expired');
  })(Er || (Er = {})),
  (function (e) {
    (e.TEXT = 'text'), (e.IMAGE_FILE = 'image_file');
  })(Mr || (Mr = {})),
  (function (e) {
    (e.QUEUED = 'queued'),
      (e.IN_PROGRESS = 'in_progress'),
      (e.REQUIRES_ACTION = 'requires_action'),
      (e.CANCELLING = 'cancelling'),
      (e.CANCELLED = 'cancelled'),
      (e.FAILED = 'failed'),
      (e.COMPLETED = 'completed'),
      (e.EXPIRED = 'expired');
  })(Rr || (Rr = {}));
var $e,
  st,
  Yn,
  Dr,
  N_ = '_action_',
  Gp = '---';
(function (e) {
  (e.ServiceHttp = 'service_http'), (e.OAuth = 'oauth'), (e.None = 'none');
})($e || ($e = {})),
  (function (e) {
    (e.Bearer = 'bearer'), (e.Basic = 'basic'), (e.Custom = 'custom');
  })(st || (st = {})),
  (function (e) {
    (e.DefaultPost = 'default_post'), (e.BasicAuthHeader = 'basic_auth_header');
  })(Yn || (Yn = {})),
  (function (e) {
    (e.Vision = 'vision'),
      (e.FineTune = 'fine-tune'),
      (e.FineTuneResults = 'fine-tune-results'),
      (e.Assistants = 'assistants'),
      (e.AssistantsOutput = 'assistants_output');
  })(Dr || (Dr = {}));
var Fr,
  ra,
  Br,
  xi,
  ut = { order: 'desc', limit: 100 };
(function (e) {
  (e.ThreadCreated = 'thread.created'),
    (e.ThreadRunCreated = 'thread.run.created'),
    (e.ThreadRunQueued = 'thread.run.queued'),
    (e.ThreadRunInProgress = 'thread.run.in_progress'),
    (e.ThreadRunRequiresAction = 'thread.run.requires_action'),
    (e.ThreadRunCompleted = 'thread.run.completed'),
    (e.ThreadRunFailed = 'thread.run.failed'),
    (e.ThreadRunCancelling = 'thread.run.cancelling'),
    (e.ThreadRunCancelled = 'thread.run.cancelled'),
    (e.ThreadRunExpired = 'thread.run.expired'),
    (e.ThreadRunStepCreated = 'thread.run.step.created'),
    (e.ThreadRunStepInProgress = 'thread.run.step.in_progress'),
    (e.ThreadRunStepCompleted = 'thread.run.step.completed'),
    (e.ThreadRunStepFailed = 'thread.run.step.failed'),
    (e.ThreadRunStepCancelled = 'thread.run.step.cancelled'),
    (e.ThreadRunStepExpired = 'thread.run.step.expired'),
    (e.ThreadRunStepDelta = 'thread.run.step.delta'),
    (e.ThreadMessageCreated = 'thread.message.created'),
    (e.ThreadMessageInProgress = 'thread.message.in_progress'),
    (e.ThreadMessageCompleted = 'thread.message.completed'),
    (e.ThreadMessageIncomplete = 'thread.message.incomplete'),
    (e.ThreadMessageDelta = 'thread.message.delta'),
    (e.ErrorEvent = 'error');
})(Fr || (Fr = {}));
var Xn;
u.string().uuid();
(function (e) {
  (e.OVERRIDE_AUTH = 'override_auth'),
    (e.USER_PROVIDED = 'user_provided'),
    (e.SYSTEM_DEFINED = 'SYSTEM_DEFINED');
})(Xn || (Xn = {}));
var N,
  Kp = u.nativeEnum(Xn);
(function (e) {
  (e.azureOpenAI = 'azureOpenAI'),
    (e.openAI = 'openAI'),
    (e.bingAI = 'bingAI'),
    (e.chatGPTBrowser = 'chatGPTBrowser'),
    (e.google = 'google'),
    (e.gptPlugins = 'gptPlugins'),
    (e.anthropic = 'anthropic'),
    (e.assistants = 'assistants'),
    (e.azureAssistants = 'azureAssistants'),
    (e.custom = 'custom');
})(N || (N = {}));
var He,
  he = function (e) {
    return !!e && e.toLowerCase().endsWith(N.assistants);
  };
(function (e) {
  (e.low = 'low'), (e.auto = 'auto'), (e.high = 'high');
})(He || (He = {}));
var qt,
  va = (((ra = {})[He.low] = 0), (ra[He.auto] = 1), (ra[He.high] = 2), ra),
  S_ = { 0: He.low, 1: He.auto, 2: He.high },
  Hp = u.nativeEnum(He),
  A_ = {
    assistant: '',
    id: '',
    name: '',
    description: '',
    instructions: '',
    model: '',
    functions: [],
    code_interpreter: !1,
    image_vision: !1,
    retrieval: !1,
  },
  qi =
    (((Br = { type: nn.function })[nn.function] = {
      name: 'image_vision',
      description: 'Get detailed text descriptions for all current image attachments.',
      parameters: { type: 'object', properties: {}, required: [] },
    }),
    Br),
  ba = function (e) {
    var n, o;
    return (
      e.type === 'function' &&
      ((n = e.function) === null || n === void 0 ? void 0 : n.name) ===
        ((o = qi == null ? void 0 : qi.function) === null || o === void 0 ? void 0 : o.name)
    );
  },
  Ue = {
    model: { default: 'gpt-4o' },
    temperature: { min: 0, max: 1, step: 0.01, default: 1 },
    top_p: { min: 0, max: 1, step: 0.01, default: 1 },
    presence_penalty: { min: 0, max: 2, step: 0.01, default: 0 },
    frequency_penalty: { min: 0, max: 2, step: 0.01, default: 0 },
    resendFiles: { default: !0 },
    maxContextTokens: { default: void 0 },
    max_tokens: { default: void 0 },
    imageDetail: { default: He.auto },
  },
  Wp = {
    model: { default: 'gemini-1.5-flash-latest' },
    maxOutputTokens: { min: 1, max: 8192, step: 1, default: 8192 },
    temperature: { min: 0, max: 2, step: 0.01, default: 1 },
    topP: { min: 0, max: 1, step: 0.01, default: 0.95 },
    topK: { min: 1, max: 40, step: 0.01, default: 40 },
  },
  T_ = (((xi = {})[N.openAI] = Ue), (xi[N.google] = Wp), xi),
  it = T_[N.google],
  Lo = u.nativeEnum(N),
  Ls = u.union([Lo, u.string()]),
  Jp = u.object({ authField: u.string(), label: u.string(), description: u.string() }),
  Qp = u.object({
    name: u.string(),
    pluginKey: u.string(),
    description: u.string(),
    icon: u.string(),
    authConfig: u.array(Jp),
    authenticated: u.boolean().optional(),
    isButton: u.boolean().optional(),
  }),
  Zp = u.object({
    input: u.object({ content: u.string() }),
    output: u.object({ content: u.string() }),
  });
(function (e) {
  (e.functions = 'functions'), (e.classic = 'classic');
})(qt || (qt = {}));
var $r = {
  model: { default: 'gpt-4o' },
  temperature: { min: 0, max: 1, step: 0.01, default: 0 },
  agent: { default: qt.functions, options: [qt.functions, qt.classic] },
  skipCompletion: { default: !0 },
};
u.nativeEnum(qt);
var Yp = u.object({
    agent: u.string().default(qt.functions),
    skipCompletion: u.boolean().default($r.skipCompletion.default),
    model: u.string(),
    temperature: u.number().default($r.temperature.default),
  }),
  vi = u.object({
    messageId: u.string(),
    endpoint: u.string().optional(),
    clientId: u.string().nullable().optional(),
    conversationId: u.string().nullable(),
    parentMessageId: u.string().nullable(),
    responseMessageId: u.string().nullable().optional(),
    overrideParentMessageId: u.string().nullable().optional(),
    bg: u.string().nullable().optional(),
    model: u.string().nullable().optional(),
    title: u.string().nullable().or(u.literal('New Chat')).default('New Chat'),
    sender: u.string(),
    text: u.string(),
    generation: u.string().nullable().optional(),
    isEdited: u.boolean().optional(),
    isCreatedByUser: u.boolean(),
    error: u.boolean(),
    createdAt: u
      .string()
      .optional()
      .default(function () {
        return new Date().toISOString();
      }),
    updatedAt: u
      .string()
      .optional()
      .default(function () {
        return new Date().toISOString();
      }),
    current: u.boolean().optional(),
    unfinished: u.boolean().optional(),
    searchResult: u.boolean().optional(),
    finish_reason: u.string().optional(),
    thread_id: u.string().optional(),
    iconURL: u.string().optional(),
  }),
  qr = u.union([u.number(), u.string()]).transform(function (e) {
    return typeof e == 'string' ? (e.trim() === '' ? void 0 : parseFloat(e)) : e;
  }),
  Ze = u.object({
    conversationId: u.string().nullable(),
    title: u.string().nullable().or(u.literal('New Chat')).default('New Chat'),
    user: u.string().optional(),
    endpoint: Lo.nullable(),
    endpointType: Lo.optional(),
    suggestions: u.array(u.string()).optional(),
    messages: u.array(u.string()).optional(),
    tools: u.union([u.array(Qp), u.array(u.string())]).optional(),
    createdAt: u.string(),
    updatedAt: u.string(),
    modelLabel: u.string().nullable().optional(),
    examples: u.array(Zp).optional(),
    chatGptLabel: u.string().nullable().optional(),
    userLabel: u.string().optional(),
    model: u.string().nullable().optional(),
    promptPrefix: u.string().nullable().optional(),
    temperature: u.number().optional(),
    topP: u.number().optional(),
    topK: u.number().optional(),
    context: u.string().nullable().optional(),
    top_p: u.number().optional(),
    frequency_penalty: u.number().optional(),
    presence_penalty: u.number().optional(),
    parentMessageId: u.string().optional(),
    maxOutputTokens: u.number().optional(),
    agentOptions: Yp.nullable().optional(),
    file_ids: u.array(u.string()).optional(),
    maxContextTokens: qr.optional(),
    max_tokens: qr.optional(),
    resendFiles: u.boolean().optional(),
    imageDetail: Hp.optional(),
    assistant_id: u.string().optional(),
    instructions: u.string().optional(),
    presetOverride: u.record(u.unknown()).optional(),
    stop: u.array(u.string()).optional(),
    iconURL: u.string().optional(),
    greeting: u.string().optional(),
    spec: u.string().optional(),
    systemMessage: u.string().nullable().optional(),
    jailbreak: u.boolean().optional(),
    jailbreakConversationId: u.string().nullable().optional(),
    conversationSignature: u.string().nullable().optional(),
    clientId: u.string().nullable().optional(),
    invocationId: u.number().nullable().optional(),
    toneStyle: u.string().nullable().optional(),
    resendImages: u.boolean().optional(),
  }),
  wo = Ze.omit({ conversationId: !0, createdAt: !0, updatedAt: !0, title: !0 }).merge(
    u.object({
      conversationId: u.string().nullable().optional(),
      presetId: u.string().nullable().optional(),
      title: u.string().nullable().optional(),
      defaultPreset: u.boolean().optional(),
      order: u.number().optional(),
      endpoint: Ls.nullable(),
    }),
  ),
  Ft = Ze.merge(u.object({ endpoint: Ls.nullable() })),
  Xp = Ze.merge(u.object({ endpoint: Ls.nullable() }));
u.object({
  conversationId: u.string(),
  shareId: u.string(),
  messages: u.array(u.string()),
  isAnonymous: u.boolean(),
  isPublic: u.boolean(),
  isVisible: u.boolean(),
  title: u.string(),
  createdAt: u.string(),
  updatedAt: u.string(),
});
var bi = Ze.pick({
    model: !0,
    modelLabel: !0,
    chatGptLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    top_p: !0,
    presence_penalty: !0,
    frequency_penalty: !0,
    resendFiles: !0,
    imageDetail: !0,
    stop: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
    max_tokens: !0,
  })
    .transform(function (e) {
      var n,
        o,
        a,
        i,
        s,
        r,
        c,
        l,
        d,
        _,
        m,
        f,
        g,
        h,
        v,
        x = _e(_e({}, e), {
          model: (n = e.model) !== null && n !== void 0 ? n : Ue.model.default,
          chatGptLabel:
            (a = (o = e.chatGptLabel) !== null && o !== void 0 ? o : e.modelLabel) !== null &&
            a !== void 0
              ? a
              : null,
          promptPrefix: (i = e.promptPrefix) !== null && i !== void 0 ? i : null,
          temperature: (s = e.temperature) !== null && s !== void 0 ? s : Ue.temperature.default,
          top_p: (r = e.top_p) !== null && r !== void 0 ? r : Ue.top_p.default,
          presence_penalty:
            (c = e.presence_penalty) !== null && c !== void 0 ? c : Ue.presence_penalty.default,
          frequency_penalty:
            (l = e.frequency_penalty) !== null && l !== void 0 ? l : Ue.frequency_penalty.default,
          resendFiles: typeof e.resendFiles == 'boolean' ? e.resendFiles : Ue.resendFiles.default,
          imageDetail: (d = e.imageDetail) !== null && d !== void 0 ? d : Ue.imageDetail.default,
          stop: (_ = e.stop) !== null && _ !== void 0 ? _ : void 0,
          iconURL: (m = e.iconURL) !== null && m !== void 0 ? m : void 0,
          greeting: (f = e.greeting) !== null && f !== void 0 ? f : void 0,
          spec: (g = e.spec) !== null && g !== void 0 ? g : void 0,
          maxContextTokens: (h = e.maxContextTokens) !== null && h !== void 0 ? h : void 0,
          max_tokens: (v = e.max_tokens) !== null && v !== void 0 ? v : void 0,
        });
      return e.modelLabel && (x.modelLabel = null), x;
    })
    .catch(function () {
      return {
        model: Ue.model.default,
        chatGptLabel: null,
        promptPrefix: null,
        temperature: Ue.temperature.default,
        top_p: Ue.top_p.default,
        presence_penalty: Ue.presence_penalty.default,
        frequency_penalty: Ue.frequency_penalty.default,
        resendFiles: Ue.resendFiles.default,
        imageDetail: Ue.imageDetail.default,
        stop: void 0,
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
        maxContextTokens: void 0,
        max_tokens: void 0,
      };
    }),
  eh = Ze.pick({
    model: !0,
    modelLabel: !0,
    promptPrefix: !0,
    examples: !0,
    temperature: !0,
    maxOutputTokens: !0,
    topP: !0,
    topK: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n, o, a, i, s, r, c, l, d, _, m, f;
      return _e(_e({}, e), {
        model: (n = e.model) !== null && n !== void 0 ? n : it.model.default,
        modelLabel: (o = e.modelLabel) !== null && o !== void 0 ? o : null,
        promptPrefix: (a = e.promptPrefix) !== null && a !== void 0 ? a : null,
        examples:
          (i = e.examples) !== null && i !== void 0
            ? i
            : [{ input: { content: '' }, output: { content: '' } }],
        temperature: (s = e.temperature) !== null && s !== void 0 ? s : it.temperature.default,
        maxOutputTokens:
          (r = e.maxOutputTokens) !== null && r !== void 0 ? r : it.maxOutputTokens.default,
        topP: (c = e.topP) !== null && c !== void 0 ? c : it.topP.default,
        topK: (l = e.topK) !== null && l !== void 0 ? l : it.topK.default,
        iconURL: (d = e.iconURL) !== null && d !== void 0 ? d : void 0,
        greeting: (_ = e.greeting) !== null && _ !== void 0 ? _ : void 0,
        spec: (m = e.spec) !== null && m !== void 0 ? m : void 0,
        maxContextTokens: (f = e.maxContextTokens) !== null && f !== void 0 ? f : void 0,
      });
    })
    .catch(function () {
      return {
        model: it.model.default,
        modelLabel: null,
        promptPrefix: null,
        examples: [{ input: { content: '' }, output: { content: '' } }],
        temperature: it.temperature.default,
        maxOutputTokens: it.maxOutputTokens.default,
        topP: it.topP.default,
        topK: it.topK.default,
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
        maxContextTokens: void 0,
      };
    }),
  I_ = Ze.pick({
    jailbreak: !0,
    systemMessage: !0,
    context: !0,
    toneStyle: !0,
    jailbreakConversationId: !0,
    conversationSignature: !0,
    clientId: !0,
    invocationId: !0,
  })
    .transform(function (e) {
      var n, o, a, i, s, r, c, l;
      return _e(_e({}, e), {
        model: '',
        jailbreak: (n = e.jailbreak) !== null && n !== void 0 && n,
        systemMessage: (o = e.systemMessage) !== null && o !== void 0 ? o : null,
        context: (a = e.context) !== null && a !== void 0 ? a : null,
        toneStyle: (i = e.toneStyle) !== null && i !== void 0 ? i : 'creative',
        jailbreakConversationId:
          (s = e.jailbreakConversationId) !== null && s !== void 0 ? s : null,
        conversationSignature: (r = e.conversationSignature) !== null && r !== void 0 ? r : null,
        clientId: (c = e.clientId) !== null && c !== void 0 ? c : null,
        invocationId: (l = e.invocationId) !== null && l !== void 0 ? l : 1,
      });
    })
    .catch(function () {
      return {
        model: '',
        jailbreak: !1,
        systemMessage: null,
        context: null,
        toneStyle: 'creative',
        jailbreakConversationId: null,
        conversationSignature: null,
        clientId: null,
        invocationId: 1,
      };
    }),
  th = Ze.pick({
    model: !0,
    modelLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    maxOutputTokens: !0,
    topP: !0,
    topK: !0,
    resendFiles: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n, o, a, i, s, r, c, l, d, _, m;
      return _e(_e({}, e), {
        model: (n = e.model) !== null && n !== void 0 ? n : 'claude-1',
        modelLabel: (o = e.modelLabel) !== null && o !== void 0 ? o : null,
        promptPrefix: (a = e.promptPrefix) !== null && a !== void 0 ? a : null,
        temperature: (i = e.temperature) !== null && i !== void 0 ? i : 1,
        maxOutputTokens: (s = e.maxOutputTokens) !== null && s !== void 0 ? s : 4e3,
        topP: (r = e.topP) !== null && r !== void 0 ? r : 0.7,
        topK: (c = e.topK) !== null && c !== void 0 ? c : 5,
        resendFiles: typeof e.resendFiles != 'boolean' || e.resendFiles,
        iconURL: (l = e.iconURL) !== null && l !== void 0 ? l : void 0,
        greeting: (d = e.greeting) !== null && d !== void 0 ? d : void 0,
        spec: (_ = e.spec) !== null && _ !== void 0 ? _ : void 0,
        maxContextTokens: (m = e.maxContextTokens) !== null && m !== void 0 ? m : void 0,
      });
    })
    .catch(function () {
      return {
        model: 'claude-1',
        modelLabel: null,
        promptPrefix: null,
        temperature: 1,
        maxOutputTokens: 4e3,
        topP: 0.7,
        topK: 5,
        resendFiles: !0,
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
        maxContextTokens: void 0,
      };
    }),
  nh = Ze.pick({ model: !0 })
    .transform(function (e) {
      var n;
      return _e(_e({}, e), {
        model: (n = e.model) !== null && n !== void 0 ? n : 'text-davinci-002-render-sha',
      });
    })
    .catch(function () {
      return { model: 'text-davinci-002-render-sha' };
    }),
  oh = Ze.pick({
    model: !0,
    modelLabel: !0,
    chatGptLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    top_p: !0,
    presence_penalty: !0,
    frequency_penalty: !0,
    tools: !0,
    agentOptions: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n,
        o,
        a,
        i,
        s,
        r,
        c,
        l,
        d,
        _,
        m,
        f,
        g,
        h,
        v = _e(_e({}, e), {
          model: (n = e.model) !== null && n !== void 0 ? n : 'gpt-3.5-turbo',
          chatGptLabel:
            (a = (o = e.chatGptLabel) !== null && o !== void 0 ? o : e.modelLabel) !== null &&
            a !== void 0
              ? a
              : null,
          promptPrefix: (i = e.promptPrefix) !== null && i !== void 0 ? i : null,
          temperature: (s = e.temperature) !== null && s !== void 0 ? s : 0.8,
          top_p: (r = e.top_p) !== null && r !== void 0 ? r : 1,
          presence_penalty: (c = e.presence_penalty) !== null && c !== void 0 ? c : 0,
          frequency_penalty: (l = e.frequency_penalty) !== null && l !== void 0 ? l : 0,
          tools: (d = e.tools) !== null && d !== void 0 ? d : [],
          agentOptions:
            (_ = e.agentOptions) !== null && _ !== void 0
              ? _
              : { agent: qt.functions, skipCompletion: !0, model: 'gpt-3.5-turbo', temperature: 0 },
          iconURL: (m = e.iconURL) !== null && m !== void 0 ? m : void 0,
          greeting: (f = e.greeting) !== null && f !== void 0 ? f : void 0,
          spec: (g = e.spec) !== null && g !== void 0 ? g : void 0,
          maxContextTokens: (h = e.maxContextTokens) !== null && h !== void 0 ? h : void 0,
        });
      return e.modelLabel && (v.modelLabel = null), v;
    })
    .catch(function () {
      return {
        model: 'gpt-3.5-turbo',
        chatGptLabel: null,
        promptPrefix: null,
        temperature: 0.8,
        top_p: 1,
        presence_penalty: 0,
        frequency_penalty: 0,
        tools: [],
        agentOptions: {
          agent: qt.functions,
          skipCompletion: !0,
          model: 'gpt-3.5-turbo',
          temperature: 0,
        },
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
        maxContextTokens: void 0,
      };
    });
function On(e) {
  var n = _e({}, e);
  return (
    Object.keys(n).forEach(function (o) {
      (n[o] !== void 0 && n[o] !== null && n[o] !== '') || delete n[o];
    }),
    n
  );
}
var _n,
  fo,
  Ur = Ze.pick({
    model: !0,
    assistant_id: !0,
    instructions: !0,
    promptPrefix: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
  })
    .transform(function (e) {
      var n, o, a, i, s, r, c;
      return _e(_e({}, e), {
        model: (n = e.model) !== null && n !== void 0 ? n : Ue.model.default,
        assistant_id: (o = e.assistant_id) !== null && o !== void 0 ? o : void 0,
        instructions: (a = e.instructions) !== null && a !== void 0 ? a : void 0,
        promptPrefix: (i = e.promptPrefix) !== null && i !== void 0 ? i : null,
        iconURL: (s = e.iconURL) !== null && s !== void 0 ? s : void 0,
        greeting: (r = e.greeting) !== null && r !== void 0 ? r : void 0,
        spec: (c = e.spec) !== null && c !== void 0 ? c : void 0,
      });
    })
    .catch(function () {
      return {
        model: Ue.model.default,
        assistant_id: void 0,
        instructions: void 0,
        promptPrefix: null,
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
      };
    }),
  Vr = Ze.pick({
    model: !0,
    assistant_id: !0,
    instructions: !0,
    promptPrefix: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
  })
    .transform(On)
    .catch(function () {
      return {};
    }),
  yi = Ze.pick({
    model: !0,
    chatGptLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    top_p: !0,
    presence_penalty: !0,
    frequency_penalty: !0,
    resendFiles: !0,
    imageDetail: !0,
    stop: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
    max_tokens: !0,
  })
    .transform(function (e) {
      var n = _e({}, e);
      return (
        n.temperature === 1 && delete n.temperature,
        n.top_p === 1 && delete n.top_p,
        n.presence_penalty === 0 && delete n.presence_penalty,
        n.frequency_penalty === 0 && delete n.frequency_penalty,
        n.resendFiles === !0 && delete n.resendFiles,
        n.imageDetail === He.auto && delete n.imageDetail,
        On(n)
      );
    })
    .catch(function () {
      return {};
    }),
  ah = Ze.pick({
    model: !0,
    modelLabel: !0,
    promptPrefix: !0,
    examples: !0,
    temperature: !0,
    maxOutputTokens: !0,
    topP: !0,
    topK: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n = _e({}, e);
      return (
        n.temperature === it.temperature.default && delete n.temperature,
        n.maxOutputTokens === it.maxOutputTokens.default && delete n.maxOutputTokens,
        n.topP === it.topP.default && delete n.topP,
        n.topK === it.topK.default && delete n.topK,
        On(n)
      );
    })
    .catch(function () {
      return {};
    }),
  ih = Ze.pick({
    model: !0,
    modelLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    maxOutputTokens: !0,
    topP: !0,
    topK: !0,
    resendFiles: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n = _e({}, e);
      return (
        n.temperature === 1 && delete n.temperature,
        n.maxOutputTokens === 4e3 && delete n.maxOutputTokens,
        n.topP === 0.7 && delete n.topP,
        n.topK === 5 && delete n.topK,
        n.resendFiles === !0 && delete n.resendFiles,
        On(n)
      );
    })
    .catch(function () {
      return {};
    }),
  sh = Ze.pick({ model: !0 })
    .transform(function (e) {
      return On(_e({}, e));
    })
    .catch(function () {
      return {};
    }),
  rh = Ze.pick({
    model: !0,
    chatGptLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    top_p: !0,
    presence_penalty: !0,
    frequency_penalty: !0,
    tools: !0,
    agentOptions: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n,
        o = _e({}, e);
      return (
        o.chatGptLabel === null && delete o.chatGptLabel,
        o.promptPrefix === null && delete o.promptPrefix,
        o.temperature === 0.8 && delete o.temperature,
        o.top_p === 1 && delete o.top_p,
        o.presence_penalty === 0 && delete o.presence_penalty,
        o.frequency_penalty === 0 && delete o.frequency_penalty,
        ((n = o.tools) === null || n === void 0 ? void 0 : n.length) === 0 && delete o.tools,
        o.agentOptions &&
          o.agentOptions.agent === qt.functions &&
          o.agentOptions.skipCompletion === !0 &&
          o.agentOptions.model === 'gpt-3.5-turbo' &&
          o.agentOptions.temperature === 0 &&
          delete o.agentOptions,
        On(o)
      );
    })
    .catch(function () {
      return {};
    }),
  z_ =
    (((_n = {})[N.openAI] = !0),
    (_n[N.google] = !0),
    (_n[N.assistants] = !0),
    (_n[N.azureAssistants] = !0),
    (_n[N.azureOpenAI] = !0),
    (_n[N.anthropic] = !0),
    (_n[N.custom] = !0),
    _n),
  L_ = [
    'application/vnd.ms-excel',
    'application/msexcel',
    'application/x-msexcel',
    'application/x-ms-excel',
    'application/x-excel',
    'application/x-dos_ms_excel',
    'application/xls',
    'application/x-xls',
    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
  ];
So(
  [
    'text/x-c',
    'text/x-c++',
    'application/csv',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    'text/html',
    'text/x-java',
    'application/json',
    'text/markdown',
    'application/pdf',
    'text/x-php',
    'application/vnd.openxmlformats-officedocument.presentationml.presentation',
    'text/x-python',
    'text/x-script.python',
    'text/x-ruby',
    'text/x-tex',
    'text/plain',
    'text/css',
    'image/jpeg',
    'text/javascript',
    'image/gif',
    'image/png',
    'application/x-tar',
    'application/typescript',
    'application/xml',
    'application/zip',
  ],
  L_,
  !0,
);
So(
  [
    'text/x-c',
    'text/x-c++',
    'application/csv',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    'text/html',
    'text/x-java',
    'application/json',
    'text/markdown',
    'application/pdf',
    'text/x-php',
    'application/vnd.openxmlformats-officedocument.presentationml.presentation',
    'text/x-python',
    'text/x-script.python',
    'text/x-ruby',
    'text/x-tex',
    'text/plain',
    'text/css',
    'image/jpeg',
    'text/javascript',
    'image/gif',
    'image/png',
    'application/x-tar',
    'application/typescript',
    'application/xml',
    'application/zip',
  ],
  L_,
  !0,
);
var P_ =
    /^application\/(vnd\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\.openxmlformats-officedocument\.spreadsheetml\.sheet)$/,
  ch =
    /^(text\/(x-c|x-c\+\+|x-java|html|markdown|x-php|x-python|x-script\.python|x-ruby|x-tex|plain|css|javascript|csv))$/,
  lh =
    /^(application\/(epub\+zip|csv|json|pdf|x-tar|typescript|vnd\.openxmlformats-officedocument\.(wordprocessingml\.document|presentationml\.presentation|spreadsheetml\.sheet)|xml|zip))$/,
  _h = /^image\/(jpeg|gif|png|webp)$/,
  Ui = [ch, P_, lh, _h],
  dh = {
    c: 'text/x-c',
    cs: 'text/x-csharp',
    cpp: 'text/x-c++',
    md: 'text/markdown',
    php: 'text/x-php',
    py: 'text/x-python',
    rb: 'text/x-ruby',
    tex: 'text/x-tex',
    js: 'text/javascript',
    sh: 'application/x-sh',
    ts: 'application/typescript',
    tar: 'application/x-tar',
    zip: 'application/zip',
  },
  Gr = [
    /^(text\/(x-c|x-c\+\+|html|x-java|markdown|x-php|x-python|x-script\.python|x-ruby|x-tex|plain|xml))$/,
    /^(application\/(json|pdf|vnd\.openxmlformats-officedocument\.(wordprocessingml\.document|presentationml\.presentation)))$/,
  ],
  ya = 1048576,
  Hn = function (e) {
    return e * ya;
  },
  Ao = Hn(512),
  Kr = {
    fileLimit: 10,
    fileSizeLimit: Ao,
    totalSizeLimit: Ao,
    supportedMimeTypes: Ui,
    disabled: !1,
  },
  Lt = {
    endpoints:
      ((fo = {}),
      (fo[N.assistants] = Kr),
      (fo[N.azureAssistants] = Kr),
      (fo.default = {
        fileLimit: 10,
        fileSizeLimit: Ao,
        totalSizeLimit: Ao,
        supportedMimeTypes: Ui,
        disabled: !1,
      }),
      fo),
    serverFileSizeLimit: Ao,
    avatarSizeLimit: Hn(2),
    checkType: function (e, n) {
      return (
        n === void 0 && (n = Ui),
        n.some(function (o) {
          return o.test(e);
        })
      );
    },
  },
  mh = u
    .array(u.any())
    .optional()
    .refine(
      function (e) {
        return (
          !e ||
          e.every(function (n) {
            return n instanceof RegExp || typeof n == 'string';
          })
        );
      },
      { message: 'Each mimeType must be a string or a RegExp object.' },
    ),
  uh = u.object({
    disabled: u.boolean().optional(),
    fileLimit: u.number().min(0).optional(),
    fileSizeLimit: u.number().min(0).optional(),
    totalSizeLimit: u.number().min(0).optional(),
    supportedMimeTypes: mh.optional(),
  }),
  ph = u.object({
    endpoints: u.record(uh).optional(),
    serverFileSizeLimit: u.number().min(0).optional(),
    avatarSizeLimit: u.number().min(0).optional(),
  }),
  hh = function (e) {
    return e.reduce(function (n, o) {
      try {
        var a = new RegExp(o);
        n.push(a);
      } catch {
        console.error('Invalid regex pattern "'.concat(o, '" skipped.'));
      }
      return n;
    }, []);
  };
function yn(e) {
  var n = Lt;
  if (
    !e ||
    (e.serverFileSizeLimit !== void 0 && (n.serverFileSizeLimit = Hn(e.serverFileSizeLimit)),
    e.avatarSizeLimit !== void 0 && (n.avatarSizeLimit = Hn(e.avatarSizeLimit)),
    !e.endpoints)
  )
    return n;
  var o = function (i) {
    var s = e.endpoints[i];
    n.endpoints[i] || (n.endpoints[i] = {});
    var r = n.endpoints[i];
    if (s.disabled === !0)
      return (
        (r.disabled = !0),
        (r.fileLimit = 0),
        (r.fileSizeLimit = 0),
        (r.totalSizeLimit = 0),
        (r.supportedMimeTypes = []),
        'continue'
      );
    s.fileSizeLimit !== void 0 && (r.fileSizeLimit = Hn(s.fileSizeLimit)),
      s.totalSizeLimit !== void 0 && (r.totalSizeLimit = Hn(s.totalSizeLimit)),
      ['fileLimit'].forEach(function (c) {
        s[c] !== void 0 && (r[c] = s[c]);
      }),
      s.supportedMimeTypes && (r.supportedMimeTypes = hh(s.supportedMimeTypes));
  };
  for (var a in e.endpoints) o(a);
  return n;
}
var ue,
  gh = u.object({
    name: u.string(),
    label: u.string(),
    preset: wo,
    order: u.number().optional(),
    default: u.boolean().optional(),
    description: u.string().optional(),
    showIconInMenu: u.boolean().optional(),
    showIconInHeader: u.boolean().optional(),
    iconURL: u.union([u.string(), Lo]).optional(),
    authType: Kp.optional(),
  }),
  fh = u.object({
    enforce: u.boolean().default(!1),
    prioritize: u.boolean().default(!0),
    list: u.array(gh).optional(),
  });
(function (e) {
  (e.local = 'local'),
    (e.firebase = 'firebase'),
    (e.azure = 'azure'),
    (e.openai = 'openai'),
    (e.s3 = 's3'),
    (e.vectordb = 'vectordb');
})(ue || (ue = {}));
var Ke,
  ki,
  qn,
  wt,
  Un,
  Xt,
  jt,
  dn,
  Hr = function (e) {
    return e === ue.openai || e === ue.azure;
  };
(function (e) {
  (e.avatar = 'avatar'),
    (e.unknown = 'unknown'),
    (e.assistants = 'assistants'),
    (e.image_generation = 'image_generation'),
    (e.assistants_output = 'assistants_output'),
    (e.message_attachment = 'message_attachment'),
    (e.filename = 'filename'),
    (e.updatedAt = 'updatedAt'),
    (e.source = 'source'),
    (e.context = 'context'),
    (e.bytes = 'bytes');
})(Ke || (Ke = {}));
var zt,
  xh = ['google', 'facebook', 'openid', 'github', 'discord'],
  vh = [
    'gpt-4o',
    'gpt-4o-2024-05-13',
    'gpt-4-turbo-preview',
    'gpt-3.5-turbo-0125',
    'gpt-4-0125-preview',
    'gpt-4-1106-preview',
    'gpt-3.5-turbo-1106',
    'gpt-3.5-turbo-0125',
    'gpt-4-turbo',
    'gpt-4-0125',
    'gpt-4-1106',
  ];
(function (e) {
  (e.default = 'default'), (e.advanced = 'advanced');
})(zt || (zt = {}));
var bh = u.nativeEnum(ue);
function yh(e) {
  var n = e.shape,
    o = Object.entries(n).map(function (a) {
      var i = a[0],
        s = a[1];
      return s instanceof u.ZodDefault ? [i, s._def.defaultValue()] : [i, void 0];
    });
  return Object.fromEntries(o);
}
var fe,
  kh = u
    .object({
      deploymentName: u.string().optional(),
      version: u.string().optional(),
      assistants: u.boolean().optional(),
    })
    .or(u.boolean()),
  wh = u.object({
    apiKey: u.string(),
    serverless: u.boolean().optional(),
    instanceName: u.string().optional(),
    deploymentName: u.string().optional(),
    assistants: u.boolean().optional(),
    addParams: u.record(u.any()).optional(),
    dropParams: u.array(u.string()).optional(),
    forcePrompt: u.boolean().optional(),
    version: u.string().optional(),
    baseURL: u.string().optional(),
    additionalHeaders: u.record(u.any()).optional(),
  }),
  jh = u
    .object({ group: u.string(), models: u.record(u.string(), kh) })
    .required()
    .and(wh),
  Ch = u.array(jh).min(1);
(function (e) {
  (e.code_interpreter = 'code_interpreter'),
    (e.image_vision = 'image_vision'),
    (e.retrieval = 'retrieval'),
    (e.actions = 'actions'),
    (e.tools = 'tools');
})(fe || (fe = {}));
var Wr,
  kn = (((ki = {})[N.assistants] = 2), (ki[N.azureAssistants] = 1), ki),
  Jr = u.object({
    disableBuilder: u.boolean().optional(),
    pollIntervalMs: u.number().optional(),
    timeoutMs: u.number().optional(),
    version: u.union([u.string(), u.number()]).default(2),
    supportedIds: u.array(u.string()).min(1).optional(),
    excludedIds: u.array(u.string()).min(1).optional(),
    privateAssistants: u.boolean().optional(),
    retrievalModels: u.array(u.string()).min(1).optional().default(vh),
    capabilities: u
      .array(u.nativeEnum(fe))
      .optional()
      .default([fe.code_interpreter, fe.image_vision, fe.retrieval, fe.actions, fe.tools]),
    apiKey: u.string().optional(),
    baseURL: u.string().optional(),
    models: u
      .object({
        default: u.array(u.string()).min(1),
        fetch: u.boolean().optional(),
        userIdQuery: u.boolean().optional(),
      })
      .optional(),
    titleConvo: u.boolean().optional(),
    titleMethod: u.union([u.literal('completion'), u.literal('functions')]).optional(),
    titleModel: u.string().optional(),
    headers: u.record(u.any()).optional(),
  }),
  E_ = u.object({
    name: u.string().refine(
      function (e) {
        return !Lo.safeParse(e).success;
      },
      {
        message: 'Value cannot be one of the default endpoint (EModelEndpoint) values: '.concat(
          Object.values(N).join(', '),
        ),
      },
    ),
    apiKey: u.string(),
    baseURL: u.string(),
    models: u.object({
      default: u.array(u.string()).min(1),
      fetch: u.boolean().optional(),
      userIdQuery: u.boolean().optional(),
    }),
    titleConvo: u.boolean().optional(),
    titleMethod: u.union([u.literal('completion'), u.literal('functions')]).optional(),
    titleModel: u.string().optional(),
    summarize: u.boolean().optional(),
    summaryModel: u.string().optional(),
    forcePrompt: u.boolean().optional(),
    modelDisplayLabel: u.string().optional(),
    headers: u.record(u.any()).optional(),
    addParams: u.record(u.any()).optional(),
    dropParams: u.array(u.string()).optional(),
    customOrder: u.number().optional(),
    directEndpoint: u.boolean().optional(),
    titleMessageRole: u.string().optional(),
  }),
  Nh = u
    .object({ groups: Ch, plugins: u.boolean().optional(), assistants: u.boolean().optional() })
    .and(
      E_.pick({
        titleConvo: !0,
        titleMethod: !0,
        titleModel: !0,
        summarize: !0,
        summaryModel: !0,
        customOrder: !0,
      }).partial(),
    ),
  Sh = u.object({
    url: u.string().optional(),
    apiKey: u.string(),
    model: u.string(),
    voices: u.array(u.string()),
  }),
  Ah = u.object({
    url: u.string().optional(),
    websocketUrl: u.string().optional(),
    apiKey: u.string(),
    model: u.string(),
    voices: u.array(u.string()),
    voice_settings: u
      .object({
        similarity_boost: u.number().optional(),
        stability: u.number().optional(),
        style: u.number().optional(),
        use_speaker_boost: u.boolean().optional(),
      })
      .optional(),
    pronunciation_dictionary_locators: u.array(u.string()).optional(),
  }),
  Th = u.object({
    url: u.string(),
    apiKey: u.string().optional(),
    voices: u.array(u.string()),
    backend: u.string(),
  }),
  Ih = u.object({ openai: Sh.optional(), elevenLabs: Ah.optional(), localai: Th.optional() }),
  zh = u.object({
    openai: u
      .object({
        url: u.string().optional(),
        apiKey: u.string().optional(),
        model: u.string().optional(),
      })
      .optional(),
  });
(function (e) {
  (e.FILE_UPLOAD = 'FILE_UPLOAD'), (e.IMPORT = 'IMPORT'), (e.TTS = 'TTS'), (e.STT = 'STT');
})(Wr || (Wr = {}));
var ka,
  Lh = u.object({
    fileUploads: u
      .object({
        ipMax: u.number().optional(),
        ipWindowInMinutes: u.number().optional(),
        userMax: u.number().optional(),
        userWindowInMinutes: u.number().optional(),
      })
      .optional(),
    conversationsImport: u
      .object({
        ipMax: u.number().optional(),
        ipWindowInMinutes: u.number().optional(),
        userMax: u.number().optional(),
        userWindowInMinutes: u.number().optional(),
      })
      .optional(),
    tts: u
      .object({
        ipMax: u.number().optional(),
        ipWindowInMinutes: u.number().optional(),
        userMax: u.number().optional(),
        userWindowInMinutes: u.number().optional(),
      })
      .optional(),
    stt: u
      .object({
        ipMax: u.number().optional(),
        ipWindowInMinutes: u.number().optional(),
        userMax: u.number().optional(),
        userWindowInMinutes: u.number().optional(),
      })
      .optional(),
  });
(function (e) {
  (e.PNG = 'png'), (e.WEBP = 'webp'), (e.JPEG = 'jpeg');
})(ka || (ka = {}));
var Ve,
  Qr,
  Ph = u.object({
    version: u.string(),
    cache: u.boolean().default(!0),
    secureImageLinks: u.boolean().optional(),
    imageOutputType: u.nativeEnum(ka).default(ka.PNG),
    includedTools: u.array(u.string()).optional(),
    filteredTools: u.array(u.string()).optional(),
    interface: u
      .object({
        privacyPolicy: u
          .object({ externalUrl: u.string().optional(), openNewTab: u.boolean().optional() })
          .optional(),
        termsOfService: u
          .object({ externalUrl: u.string().optional(), openNewTab: u.boolean().optional() })
          .optional(),
        endpointsMenu: u.boolean().optional(),
        modelSelect: u.boolean().optional(),
        parameters: u.boolean().optional(),
        sidePanel: u.boolean().optional(),
        presets: u.boolean().optional(),
      })
      .default({ endpointsMenu: !0, modelSelect: !0, parameters: !0, sidePanel: !0, presets: !0 }),
    fileStrategy: bh.default(ue.local),
    registration: u
      .object({
        socialLogins: u.array(u.string()).optional(),
        allowedDomains: u.array(u.string()).optional(),
      })
      .default({ socialLogins: xh }),
    tts: Ih.optional(),
    stt: zh.optional(),
    rateLimits: Lh.optional(),
    fileConfig: ph.optional(),
    modelSpecs: fh.optional(),
    endpoints: u
      .object(
        ((qn = {}),
        (qn[N.azureOpenAI] = Nh.optional()),
        (qn[N.azureAssistants] = Jr.optional()),
        (qn[N.assistants] = Jr.optional()),
        (qn.custom = u.array(E_.partial()).optional()),
        qn),
      )
      .strict()
      .refine(
        function (e) {
          return Object.keys(e).length > 0;
        },
        { message: 'At least one `endpoints` field must be provided.' },
      )
      .optional(),
  }),
  Fa = function () {
    return yh(Ph);
  };
(function (e) {
  (e.anyscale = 'anyscale'),
    (e.apipie = 'apipie'),
    (e.cohere = 'cohere'),
    (e.fireworks = 'fireworks'),
    (e.groq = 'groq'),
    (e.huggingface = 'huggingface'),
    (e.mistral = 'mistral'),
    (e.mlx = 'mlx'),
    (e.ollama = 'ollama'),
    (e.openrouter = 'openrouter'),
    (e.perplexity = 'perplexity'),
    (e.shuttleai = 'shuttleai'),
    (e['together.ai'] = 'together.ai');
})(Ve || (Ve = {})),
  (function (e) {
    e.openrouter = 'openrouter';
  })(Qr || (Qr = {}));
var Zr,
  Eh = [
    N.openAI,
    N.assistants,
    N.azureAssistants,
    N.azureOpenAI,
    N.bingAI,
    N.chatGPTBrowser,
    N.gptPlugins,
    N.google,
    N.anthropic,
    N.custom,
  ],
  Vo =
    (((wt = {})[N.openAI] = 'OpenAI'),
    (wt[N.assistants] = 'Assistants'),
    (wt[N.azureAssistants] = 'Azure Assistants'),
    (wt[N.azureOpenAI] = 'Azure OpenAI'),
    (wt[N.bingAI] = 'Bing'),
    (wt[N.chatGPTBrowser] = 'ChatGPT'),
    (wt[N.gptPlugins] = 'Plugins'),
    (wt[N.google] = 'Google'),
    (wt[N.anthropic] = 'Anthropic'),
    (wt[N.custom] = 'Custom'),
    wt),
  wi = [
    'gpt-3.5-turbo',
    'gpt-3.5-turbo-0125',
    'gpt-4-turbo',
    'gpt-4-turbo-2024-04-09',
    'gpt-4-0125-preview',
    'gpt-4-turbo-preview',
    'gpt-4-1106-preview',
    'gpt-3.5-turbo-1106',
    'gpt-3.5-turbo-16k-0613',
    'gpt-3.5-turbo-16k',
    'gpt-4',
    'gpt-4-0314',
    'gpt-4-32k-0314',
    'gpt-4-0613',
    'gpt-3.5-turbo-0613',
  ],
  Vi =
    (((Un = {})[N.azureAssistants] = wi),
    (Un[N.assistants] = So(['gpt-4o'], wi, !0)),
    (Un[N.google] = [
      'gemini-pro',
      'gemini-pro-vision',
      'chat-bison',
      'chat-bison-32k',
      'codechat-bison',
      'codechat-bison-32k',
      'text-bison',
      'text-bison-32k',
      'text-unicorn',
      'code-gecko',
      'code-bison',
      'code-bison-32k',
    ]),
    (Un[N.anthropic] = [
      'claude-3-opus-20240229',
      'claude-3-sonnet-20240229',
      'claude-3-haiku-20240307',
      'claude-2.1',
      'claude-2',
      'claude-1.2',
      'claude-1',
      'claude-1-100k',
      'claude-instant-1',
      'claude-instant-1-100k',
    ]),
    (Un[N.openAI] = So(
      So(['gpt-4o'], wi, !0),
      [
        'gpt-4-vision-preview',
        'gpt-3.5-turbo-instruct-0914',
        'gpt-3.5-turbo-0301',
        'gpt-3.5-turbo-instruct',
        'text-davinci-003',
      ],
      !1,
    )),
    Un),
  ca = Vi[N.openAI];
((Xt = { initial: [] })[N.openAI] = ca),
  (Xt[N.assistants] = ca.filter(function (e) {
    return /gpt-4|gpt-3\\.5/i.test(e) && !/vision|instruct/i.test(e);
  })),
  (Xt[N.gptPlugins] = ca),
  (Xt[N.azureOpenAI] = ca),
  (Xt[N.bingAI] = ['BingAI', 'Sydney']),
  (Xt[N.chatGPTBrowser] = ['text-davinci-002-render-sha']),
  (Xt[N.google] = Vi[N.google]),
  (Xt[N.anthropic] = Vi[N.anthropic]);
var M_ =
    (((jt = {})[N.openAI] = '/api/ask/'.concat(N.openAI)),
    (jt[N.bingAI] = '/api/ask/'.concat(N.bingAI)),
    (jt[N.google] = '/api/ask/'.concat(N.google)),
    (jt[N.custom] = '/api/ask/'.concat(N.custom)),
    (jt[N.anthropic] = '/api/ask/'.concat(N.anthropic)),
    (jt[N.gptPlugins] = '/api/ask/'.concat(N.gptPlugins)),
    (jt[N.azureOpenAI] = '/api/ask/'.concat(N.azureOpenAI)),
    (jt[N.chatGPTBrowser] = '/api/ask/'.concat(N.chatGPTBrowser)),
    (jt[N.azureAssistants] = '/api/assistants/v1/chat'),
    (jt[N.assistants] = '/api/assistants/v2/chat'),
    jt),
  gn = new Set([N.gptPlugins, N.anthropic, N.google, N.openAI, N.azureOpenAI, N.custom]);
((dn = {})[N.custom] = !0),
  (dn[N.openAI] = !0),
  (dn[N.anthropic] = !0),
  (dn[N.gptPlugins] = !0),
  (dn[N.assistants] = !0),
  (dn[N.azureAssistants] = !0),
  (dn[N.azureOpenAI] = !0);
(function (e) {
  e.generative = 'generative';
})(Zr || (Zr = {}));
var Yr,
  Gi,
  zn,
  pn,
  Xr,
  et,
  xt,
  te,
  rt,
  ec,
  Ct,
  Nt,
  R_ = new Set(['dalle', 'dall-e', 'stable-diffusion']);
(function (e) {
  (e.CONFIG_STORE = 'configStore'),
    (e.PLUGINS = 'plugins'),
    (e.GEN_TITLE = 'genTitle'),
    (e.TOOLS = 'tools'),
    (e.MODELS_CONFIG = 'modelsConfig'),
    (e.MODEL_QUERIES = 'modelQueries'),
    (e.ENDPOINT_CONFIG = 'endpointsConfig'),
    (e.TOKEN_CONFIG = 'tokenConfig'),
    (e.CUSTOM_CONFIG = 'customConfig'),
    (e.ABORT_KEYS = 'abortKeys'),
    (e.OVERRIDE_CONFIG = 'overrideConfig'),
    (e.BANS = 'bans'),
    (e.ENCODED_DOMAINS = 'encoded_domains'),
    (e.AUDIO_RUNS = 'audioRuns');
})(Yr || (Yr = {})),
  (function (e) {
    (e.FILE_UPLOAD_LIMIT = 'file_upload_limit'),
      (e.ILLEGAL_MODEL_REQUEST = 'illegal_model_request'),
      (e.TOKEN_BALANCE = 'token_balance'),
      (e.BAN = 'ban'),
      (e.TTS_LIMIT = 'tts_limit'),
      (e.STT_LIMIT = 'stt_limit'),
      (e.RESET_PASSWORD_LIMIT = 'reset_password_limit'),
      (e.VERIFY_EMAIL_LIMIT = 'verify_email_limit');
  })(Gi || (Gi = {})),
  (function (e) {
    (e.NO_USER_KEY = 'no_user_key'),
      (e.EXPIRED_USER_KEY = 'expired_user_key'),
      (e.INVALID_USER_KEY = 'invalid_user_key'),
      (e.NO_BASE_URL = 'no_base_url'),
      (e.MODERATION = 'moderation');
  })(zn || (zn = {})),
  (function (e) {
    (e.GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY'), (e.GOOGLE_API_KEY = 'GOOGLE_API_KEY');
  })(pn || (pn = {})),
  (function (e) {
    (e[(e.LOW = 85)] = 'LOW'),
      (e[(e.HIGH = 170)] = 'HIGH'),
      (e[(e.ADDITIONAL = 85)] = 'ADDITIONAL');
  })(Xr || (Xr = {})),
  (function (e) {
    (e.GENERAL = 'general'),
      (e.MESSAGES = 'messages'),
      (e.SPEECH = 'speech'),
      (e.BETA = 'beta'),
      (e.DATA = 'data'),
      (e.ACCOUNT = 'account');
  })(et || (et = {})),
  (function (e) {
    (e.VERSION = 'v0.7.3'),
      (e.CONFIG_VERSION = '1.1.4'),
      (e.NO_PARENT = '00000000-0000-0000-0000-000000000000'),
      (e[(e.ENCODED_DOMAIN_LENGTH = 10)] = 'ENCODED_DOMAIN_LENGTH'),
      (e.CURRENT_MODEL = 'current_model');
  })(xt || (xt = {})),
  (function (e) {
    (e.APP_TITLE = 'appTitle'),
      (e.LAST_CONVO_SETUP = 'lastConversationSetup'),
      (e.LAST_BING = 'lastBingSettings'),
      (e.LAST_MODEL = 'lastSelectedModel'),
      (e.LAST_TOOLS = 'lastSelectedTools'),
      (e.LAST_SPEC = 'lastSelectedSpec'),
      (e.FILES_TO_DELETE = 'filesToDelete'),
      (e.ASST_ID_PREFIX = 'assistant_id__'),
      (e.FORK_SETTING = 'forkSetting'),
      (e.REMEMBER_FORK_OPTION = 'rememberForkOption'),
      (e.FORK_SPLIT_AT_TARGET = 'splitAtTarget'),
      (e.TEXT_DRAFT = 'textDraft_'),
      (e.FILES_DRAFT = 'filesDraft_');
  })(te || (te = {})),
  (function (e) {
    (e.DIRECT_PATH = 'directPath'), (e.INCLUDE_BRANCHES = 'includeBranches'), (e.TARGET_LEVEL = '');
  })(rt || (rt = {})),
  (function (e) {
    (e.API_URL = 'https://api.cohere.ai/v1'),
      (e.ROLE_USER = 'USER'),
      (e.ROLE_SYSTEM = 'SYSTEM'),
      (e.ROLE_CHATBOT = 'CHATBOT'),
      (e.TITLE_MESSAGE = 'TITLE:');
  })(ec || (ec = {}));
var tc =
  (((Ct = {})[N.openAI] = bi),
  (Ct[N.azureOpenAI] = bi),
  (Ct[N.custom] = bi),
  (Ct[N.google] = eh),
  (Ct[N.bingAI] = I_),
  (Ct[N.anthropic] = th),
  (Ct[N.chatGPTBrowser] = nh),
  (Ct[N.gptPlugins] = oh),
  (Ct[N.assistants] = Ur),
  (Ct[N.azureAssistants] = Ur),
  Ct);
function Ki(e) {
  for (var n, o = 0, a = e; o < a.length; o++) {
    var i = a[o];
    if (i) {
      n = i;
      break;
    }
  }
  return n;
}
var O_ = function (e) {
    var n,
      o,
      a = e.endpoint,
      i = e.endpointType,
      s = e.conversation,
      r = e.possibleValues,
      c = tc[a];
    if (!c && !i) throw new Error('Unknown endpoint: '.concat(a));
    !c && i && (c = tc[i]);
    var l = c.parse(s),
      d = r ?? {},
      _ = d.models,
      m = d.secondaryModels;
    return (
      _ && l && (l.model = (n = Ki(_)) !== null && n !== void 0 ? n : l.model),
      m &&
        l.agentOptions &&
        (l.agentOptions.model = (o = Ki(m)) !== null && o !== void 0 ? o : l.agentOptions.model),
      l
    );
  },
  Mh = function (e) {
    var n,
      o = e.model,
      a = e.endpoint,
      i = e.endpointType,
      s = e.modelDisplayLabel,
      r = e.chatGptLabel,
      c = e.modelLabel,
      l = e.jailbreak;
    return [N.openAI, N.azureOpenAI, N.gptPlugins, N.chatGPTBrowser].includes(a)
      ? r ||
          (o && o.includes('gpt-3')
            ? 'GPT-3.5'
            : o && o.includes('gpt-4')
            ? 'GPT-4'
            : o && o.includes('mistral')
            ? 'Mistral'
            : (n = Vo[a]) !== null && n !== void 0
            ? n
            : 'ChatGPT')
      : a === N.bingAI
      ? l
        ? 'Sydney'
        : 'BingAI'
      : a === N.anthropic
      ? c ?? 'Claude'
      : a === N.google
      ? c || (o && o.includes('gemini') ? 'Gemini' : o && o.includes('code') ? 'Codey' : 'PaLM2')
      : a === N.custom || i === N.custom
      ? c ||
        r ||
        (o && o.includes('mistral')
          ? 'Mistral'
          : o && o.includes('gpt-3')
          ? 'GPT-3.5'
          : o && o.includes('gpt-4')
          ? 'GPT-4'
          : s || 'AI')
      : '';
  },
  nc =
    (((Nt = {})[N.openAI] = yi),
    (Nt[N.azureOpenAI] = yi),
    (Nt[N.custom] = yi),
    (Nt[N.assistants] = Vr),
    (Nt[N.azureAssistants] = Vr),
    (Nt[N.google] = ah),
    (Nt[N.bingAI] = I_),
    (Nt[N.anthropic] = ih),
    (Nt[N.chatGPTBrowser] = sh),
    (Nt[N.gptPlugins] = rh),
    Nt),
  Rh = function (e) {
    var n,
      o = e.endpoint,
      a = e.endpointType,
      i = e.conversation,
      s = e.possibleValues;
    if (!o) throw new Error('undefined endpoint: '.concat(o));
    var r = nc[o];
    if (!r && !a) throw new Error('Unknown endpoint: '.concat(o));
    !r && a && (r = nc[a]);
    var c = r.parse(i),
      l = (s ?? {}).models;
    return l && c && (c.model = (n = Ki(l)) !== null && n !== void 0 ? n : c.model), c;
  };
function oc(e) {
  for (var n = '', o = 0, a = e; o < a.length; o++) {
    var i = a[o];
    if (i.type === ee.TEXT) {
      var s = i.text.value;
      n.length > 0 && s.length > 0 && n[n.length - 1] !== ' ' && s[0] !== ' ' && (n += ' '),
        (n += s);
    }
  }
  return n;
}
var ac, ic, wa;
(function (e) {
  (e.Input = 'input'),
    (e.Textarea = 'textarea'),
    (e.Slider = 'slider'),
    (e.Checkbox = 'checkbox'),
    (e.Switch = 'switch'),
    (e.Dropdown = 'dropdown'),
    (e.Tags = 'tags');
})(ac || (ac = {})),
  (function (e) {
    (e.Number = 'number'),
      (e.Boolean = 'boolean'),
      (e.String = 'string'),
      (e.Enum = 'enum'),
      (e.Array = 'array');
  })(ic || (ic = {})),
  (function (e) {
    (e.Conversation = 'conversation'), (e.Model = 'model'), (e.Custom = 'custom');
  })(wa || (wa = {}));
var G, lt;
function Ps(e) {
  pe.defaults.headers.common.Authorization = 'Bearer ' + e;
}
(function (e) {
  (e.messages = 'messages'),
    (e.sharedMessages = 'sharedMessages'),
    (e.sharedLinks = 'sharedLinks'),
    (e.allConversations = 'allConversations'),
    (e.archivedConversations = 'archivedConversations'),
    (e.searchConversations = 'searchConversations'),
    (e.conversation = 'conversation'),
    (e.searchEnabled = 'searchEnabled'),
    (e.user = 'user'),
    (e.name = 'name'),
    (e.models = 'models'),
    (e.balance = 'balance'),
    (e.endpoints = 'endpoints'),
    (e.presets = 'presets'),
    (e.searchResults = 'searchResults'),
    (e.tokenCount = 'tokenCount'),
    (e.availablePlugins = 'availablePlugins'),
    (e.startupConfig = 'startupConfig'),
    (e.assistants = 'assistants'),
    (e.assistant = 'assistant'),
    (e.endpointsConfigOverride = 'endpointsConfigOverride'),
    (e.files = 'files'),
    (e.fileConfig = 'fileConfig'),
    (e.tools = 'tools'),
    (e.actions = 'actions'),
    (e.assistantDocs = 'assistantDocs'),
    (e.fileDownload = 'fileDownload'),
    (e.voices = 'voices');
})(G || (G = {})),
  (function (e) {
    (e.fileUpload = 'fileUpload'),
      (e.fileDelete = 'fileDelete'),
      (e.updatePreset = 'updatePreset'),
      (e.deletePreset = 'deletePreset'),
      (e.logoutUser = 'logoutUser'),
      (e.avatarUpload = 'avatarUpload'),
      (e.speechToText = 'speechToText'),
      (e.textToSpeech = 'textToSpeech'),
      (e.assistantAvatarUpload = 'assistantAvatarUpload'),
      (e.updateAction = 'updateAction'),
      (e.deleteAction = 'deleteAction'),
      (e.deleteUser = 'deleteUser');
  })(lt || (lt = {}));
var sc = function (e, n) {
    return '/api/messages/'.concat(e).concat(n ? '/'.concat(n) : '');
  },
  Ba = '/api/share',
  ji = function (e) {
    return ''.concat(Ba, '/').concat(e);
  },
  Oh = Ba,
  Dh = Ba,
  la = '/api/keys',
  Pn = '/api/convos',
  Ci = function (e, n) {
    return ''
      .concat(Pn, '?pageNumber=')
      .concat(e)
      .concat(n ? '&isArchived=true' : '');
  },
  rc = function () {
    return ''.concat(Pn, '/update');
  },
  cc = function () {
    return ''.concat(Pn, '/clear');
  },
  lc = function (e, n) {
    return '/api/search?q='.concat(e, '&pageNumber=').concat(n);
  },
  St = function (e) {
    var n = e.path,
      o = e.options,
      a = e.version,
      i = e.endpoint,
      s = '/api/assistants/v'.concat(a);
    if (
      (n && (s += '/'.concat(n)),
      i && (o = _e(_e({}, o ?? {}), { endpoint: i })),
      o && Object.keys(o).length > 0)
    ) {
      var r = new URLSearchParams(o).toString();
      s += '?'.concat(r);
    }
    return s;
  },
  _c = function () {
    return ''.concat('/api/files', '/images');
  },
  dc = function () {
    return ''.concat('/api/files', '/tts');
  };
function D_(e, n) {
  return Fe(this, void 0, void 0, function () {
    return Be(this, function (o) {
      switch (o.label) {
        case 0:
          return [
            4,
            pe.post(e, JSON.stringify(n), { headers: { 'Content-Type': 'application/json' } }),
          ];
        case 1:
          return [2, o.sent().data];
      }
    });
  });
}
var Ni = !1,
  Hi = [],
  F_ = function (e) {
    return D_(
      (function (n) {
        return '/api/auth/refresh'.concat(n ? '?retry=true' : '');
      })(e),
    );
  },
  mc = function (e, n) {
    n === void 0 && (n = null),
      Hi.forEach(function (o) {
        e ? o.reject(e) : o.resolve(n);
      }),
      (Hi = []);
  };
pe.interceptors.response.use(
  function (e) {
    return e;
  },
  function (e) {
    return Fe(void 0, void 0, void 0, function () {
      var n, o, a, i, s;
      return Be(this, function (r) {
        switch (r.label) {
          case 0:
            if (((n = e.config), e.response.status !== 401 || n._retry)) return [3, 13];
            if (((n._retry = !0), !Ni)) return [3, 5];
            r.label = 1;
          case 1:
            return (
              r.trys.push([1, 4, , 5]),
              [
                4,
                new Promise(function (c, l) {
                  Hi.push({ resolve: c, reject: l });
                }),
              ]
            );
          case 2:
            return (a = r.sent()), (n.headers.Authorization = 'Bearer ' + a), [4, pe(n)];
          case 3:
            return [2, r.sent()];
          case 4:
            return (o = r.sent()), [2, Promise.reject(o)];
          case 5:
            (Ni = !0), (r.label = 6);
          case 6:
            return (
              r.trys.push([6, 11, 12, 13]),
              [4, F_(!!(!((s = n.url) === null || s === void 0) && s.includes('api/auth/refresh')))]
            );
          case 7:
            return (a = r.sent().token)
              ? ((n.headers.Authorization = 'Bearer ' + a),
                Ps(a),
                window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: a })),
                mc(null, a),
                [4, pe(n)])
              : [3, 9];
          case 8:
            return [2, r.sent()];
          case 9:
            (window.location.href = '/login'), (r.label = 10);
          case 10:
            return [3, 13];
          case 11:
            return (i = r.sent()), mc(i, null), [2, Promise.reject(i)];
          case 12:
            return (Ni = !1), [7];
          case 13:
            return [2, Promise.reject(e)];
        }
      });
    });
  },
);
var J = {
    get: function (e, n) {
      return Fe(this, void 0, void 0, function () {
        return Be(this, function (o) {
          switch (o.label) {
            case 0:
              return [4, pe.get(e, _e({}, n))];
            case 1:
              return [2, o.sent().data];
          }
        });
      });
    },
    getResponse: function (e, n) {
      return Fe(this, void 0, void 0, function () {
        return Be(this, function (o) {
          switch (o.label) {
            case 0:
              return [4, pe.get(e, _e({}, n))];
            case 1:
              return [2, o.sent()];
          }
        });
      });
    },
    post: D_,
    postMultiPart: function (e, n, o) {
      return Fe(this, void 0, void 0, function () {
        return Be(this, function (a) {
          switch (a.label) {
            case 0:
              return [
                4,
                pe.post(
                  e,
                  n,
                  _e(_e({}, o), { headers: { 'Content-Type': 'multipart/form-data' } }),
                ),
              ];
            case 1:
              return [2, a.sent().data];
          }
        });
      });
    },
    postTTS: function (e, n, o) {
      return Fe(this, void 0, void 0, function () {
        return Be(this, function (a) {
          switch (a.label) {
            case 0:
              return [
                4,
                pe.post(
                  e,
                  n,
                  _e(_e({}, o), {
                    headers: { 'Content-Type': 'multipart/form-data' },
                    responseType: 'arraybuffer',
                  }),
                ),
              ];
            case 1:
              return [2, a.sent().data];
          }
        });
      });
    },
    put: function (e, n) {
      return Fe(this, void 0, void 0, function () {
        return Be(this, function (o) {
          switch (o.label) {
            case 0:
              return [
                4,
                pe.put(e, JSON.stringify(n), { headers: { 'Content-Type': 'application/json' } }),
              ];
            case 1:
              return [2, o.sent().data];
          }
        });
      });
    },
    delete: function (e) {
      return Fe(this, void 0, void 0, function () {
        return Be(this, function (n) {
          switch (n.label) {
            case 0:
              return [4, pe.delete(e)];
            case 1:
              return [2, n.sent().data];
          }
        });
      });
    },
    deleteWithOptions: function (e, n) {
      return Fe(this, void 0, void 0, function () {
        return Be(this, function (o) {
          switch (o.label) {
            case 0:
              return [4, pe.delete(e, _e({}, n))];
            case 1:
              return [2, o.sent().data];
          }
        });
      });
    },
    patch: function (e, n) {
      return Fe(this, void 0, void 0, function () {
        return Be(this, function (o) {
          switch (o.label) {
            case 0:
              return [
                4,
                pe.patch(e, JSON.stringify(n), { headers: { 'Content-Type': 'application/json' } }),
              ];
            case 1:
              return [2, o.sent().data];
          }
        });
      });
    },
    refreshToken: F_,
  },
  se = Object.freeze({
    __proto__: null,
    abortRequestWithMessage: function (e, n, o) {
      return J.post(
        (function (a) {
          return '/api/ask/'.concat(a, '/abort');
        })(e),
        { arg: { abortKey: n, message: o } },
      );
    },
    archiveConversation: function (e) {
      return J.post(rc(), { arg: e });
    },
    clearAllConversations: function () {
      return J.post(cc(), { arg: {} });
    },
    createAssistant: function (e) {
      var n = e.version,
        o = Or(e, ['version']);
      return J.post(St({ version: n }), o);
    },
    createPreset: function (e) {
      return J.post('/api/presets', e);
    },
    createSharedLink: function (e) {
      return J.post(Oh, e);
    },
    deleteAction: function (e) {
      var n = e.assistant_id,
        o = e.action_id,
        a = e.model,
        i = e.version,
        s = e.endpoint;
      return Fe(void 0, void 0, void 0, function () {
        return Be(this, function (r) {
          return [
            2,
            J.delete(
              St({
                path: 'actions/'.concat(n, '/').concat(o, '/').concat(a),
                version: i,
                endpoint: s,
              }),
            ),
          ];
        });
      });
    },
    deleteAssistant: function (e) {
      var n = e.assistant_id,
        o = e.model,
        a = e.endpoint,
        i = e.version;
      return J.delete(St({ path: n, options: { model: o, endpoint: a }, version: i }));
    },
    deleteConversation: function (e) {
      return J.post(cc(), { arg: e });
    },
    deleteFiles: function (e, n, o) {
      return Fe(void 0, void 0, void 0, function () {
        return Be(this, function (a) {
          return [
            2,
            J.deleteWithOptions('/api/files', {
              data: { files: e, assistant_id: n, tool_resource: o },
            }),
          ];
        });
      });
    },
    deletePreset: function (e) {
      return J.post('/api/presets/delete', e);
    },
    deleteSharedLink: function (e) {
      return J.delete(ji(e));
    },
    deleteUser: function () {
      return J.delete('/api/user/delete');
    },
    forkConversation: function (e) {
      return J.post(''.concat(Pn, '/fork'), e);
    },
    genTitle: function (e) {
      return J.post(''.concat(Pn, '/gen_title'), e);
    },
    getAIEndpoints: function () {
      return J.get('/api/endpoints');
    },
    getActions: function (e) {
      var n = e.endpoint,
        o = e.version;
      return J.get(St({ path: 'actions', version: o, endpoint: n }));
    },
    getAssistantById: function (e) {
      var n = e.endpoint,
        o = e.assistant_id,
        a = e.version;
      return J.get(St({ path: o, endpoint: n, version: a }));
    },
    getAssistantDocs: function (e) {
      var n = e.endpoint,
        o = e.version;
      return J.get(St({ path: 'documents', version: o, endpoint: n }));
    },
    getAvailablePlugins: function () {
      return J.get('/api/plugins');
    },
    getAvailableTools: function (e, n) {
      return J.get(St({ path: 'tools', endpoint: n, version: e }));
    },
    getConversationById: function (e) {
      return J.get(
        (function (n) {
          return ''.concat(Pn, '/').concat(n);
        })(e),
      );
    },
    getConversations: function (e) {
      return J.get(Ci(e));
    },
    getEndpointsConfigOverride: function () {
      return J.get('/api/endpoints/config/override');
    },
    getFileConfig: function () {
      return J.get(''.concat('/api/files', '/config'));
    },
    getFileDownload: function (e, n) {
      return Fe(void 0, void 0, void 0, function () {
        return Be(this, function (o) {
          return [
            2,
            J.getResponse(''.concat('/api/files', '/download/').concat(e, '/').concat(n), {
              responseType: 'blob',
              headers: { Accept: 'application/octet-stream' },
            }),
          ];
        });
      });
    },
    getFiles: function () {
      return J.get('/api/files');
    },
    getLoginGoogle: function () {
      return J.get('/api/auth/google');
    },
    getMessagesByConvoId: function (e) {
      return e === 'new' ? Promise.resolve([]) : J.get(sc(e));
    },
    getModels: function () {
      return Fe(void 0, void 0, void 0, function () {
        return Be(this, function (e) {
          return [2, J.get('/api/models')];
        });
      });
    },
    getPresets: function () {
      return J.get('/api/presets');
    },
    getSearchEnabled: function () {
      return J.get('/api/search/enable');
    },
    getSharedLink: function (e) {
      return J.get(ji(e));
    },
    getSharedMessages: function (e) {
      return J.get(ji(e));
    },
    getStartupConfig: function () {
      return J.get('/api/config');
    },
    getUser: function () {
      return J.get('/api/user');
    },
    getUserBalance: function () {
      return J.get('/api/balance');
    },
    getVoices: function () {
      return J.get(''.concat(dc(), '/voices'));
    },
    importConversationsFile: function (e) {
      return J.postMultiPart(''.concat(Pn, '/import'), e);
    },
    listAssistants: function (e, n) {
      return J.get(St({ version: n, options: e }));
    },
    listConversations: function (e) {
      var n = (e == null ? void 0 : e.pageNumber) || '1',
        o = (e == null ? void 0 : e.isArchived) || !1;
      return J.get(Ci(n, o));
    },
    listConversationsByQuery: function (e) {
      var n = (e == null ? void 0 : e.pageNumber) || '1',
        o = (e == null ? void 0 : e.searchQuery) || '';
      return o !== '' ? J.get(lc(o, n)) : J.get(Ci(n));
    },
    listSharedLinks: function (e) {
      var n = (e == null ? void 0 : e.pageNumber) || '1',
        o = (e == null ? void 0 : e.isPublic) || !0;
      return J.get(
        (function (a, i) {
          return ''.concat(Ba, '?pageNumber=').concat(a, '&isPublic=').concat(i);
        })(n, o),
      );
    },
    login: function (e) {
      return J.post('/api/auth/login', e);
    },
    logout: function () {
      return J.post('/api/auth/logout');
    },
    register: function (e) {
      return J.post('/api/auth/register', e);
    },
    requestPasswordReset: function (e) {
      return J.post('/api/auth/requestPasswordReset', e);
    },
    resendVerificationEmail: function (e) {
      return J.post('/api/user/verify/resend', e);
    },
    resetPassword: function (e) {
      return J.post('/api/auth/resetPassword', e);
    },
    revokeAllUserKeys: function () {
      return J.delete(''.concat(la, '?all=true'));
    },
    revokeUserKey: function (e) {
      return J.delete(
        (function (n) {
          return ''.concat(la, '/').concat(n);
        })(e),
      );
    },
    searchConversations: function (e, n) {
      return Fe(void 0, void 0, void 0, function () {
        return Be(this, function (o) {
          return [2, J.get(lc(e, n))];
        });
      });
    },
    speechToText: function (e) {
      return J.postMultiPart(''.concat('/api/files', '/stt'), e);
    },
    textToSpeech: function (e) {
      return J.postTTS(''.concat(dc(), '/manual'), e);
    },
    updateAction: function (e) {
      var n = e.assistant_id,
        o = e.version,
        a = Or(e, ['assistant_id', 'version']);
      return J.post(St({ path: 'actions/'.concat(n), version: o }), a);
    },
    updateAssistant: function (e) {
      var n = e.assistant_id,
        o = e.data,
        a = e.version;
      return J.patch(St({ path: n, version: a }), o);
    },
    updateConversation: function (e) {
      return J.post(rc(), { arg: e });
    },
    updateMessage: function (e) {
      var n = e.conversationId,
        o = e.messageId,
        a = e.text;
      if (!n) throw new Error('conversationId is required');
      return J.put(sc(n, o), { text: a });
    },
    updatePreset: function (e) {
      return J.post('/api/presets', e);
    },
    updateSharedLink: function (e) {
      return J.patch(Dh, e);
    },
    updateTokenCount: function (e) {
      return J.post('/api/tokenizer', { arg: e });
    },
    updateUserKey: function (e) {
      if (!e.value) throw new Error('value is required');
      return J.put(la, e);
    },
    updateUserPlugins: function (e) {
      return J.post('/api/user/plugins', e);
    },
    uploadAssistantAvatar: function (e) {
      return J.postMultiPart(
        St({
          path: 'avatar/'.concat(e.assistant_id),
          options: { model: e.model, endpoint: e.endpoint },
          version: e.version,
        }),
        e.formData,
      );
    },
    uploadAvatar: function (e) {
      return J.postMultiPart(''.concat(_c(), '/avatar'), e);
    },
    uploadFile: function (e) {
      return J.postMultiPart('/api/files', e);
    },
    uploadImage: function (e) {
      return J.postMultiPart(_c(), e);
    },
    userKeyQuery: function (e) {
      return J.get(
        (function (n) {
          return ''.concat(la, '?name=').concat(n);
        })(e),
      );
    },
    verifyEmail: function (e) {
      return J.post('/api/user/verify', e);
    },
  }),
  Wi = function (e, n) {
    if (!(this instanceof Wi)) return new Wi(e, n);
    (this.INITIALIZING = -1),
      (this.CONNECTING = 0),
      (this.OPEN = 1),
      (this.CLOSED = 2),
      (this.url = e),
      (n = n || {}),
      (this.headers = n.headers || {}),
      (this.payload = n.payload !== void 0 ? n.payload : ''),
      (this.method = n.method || (this.payload && 'POST') || 'GET'),
      (this.withCredentials = !!n.withCredentials),
      (this.FIELD_SEPARATOR = ':'),
      (this.listeners = {}),
      (this.xhr = null),
      (this.readyState = this.INITIALIZING),
      (this.progress = 0),
      (this.chunk = ''),
      (this.addEventListener = function (o, a) {
        this.listeners[o] === void 0 && (this.listeners[o] = []),
          this.listeners[o].indexOf(a) === -1 && this.listeners[o].push(a);
      }),
      (this.removeEventListener = function (o, a) {
        if (this.listeners[o] !== void 0) {
          var i = [];
          this.listeners[o].forEach(function (s) {
            s !== a && i.push(s);
          }),
            i.length === 0 ? delete this.listeners[o] : (this.listeners[o] = i);
        }
      }),
      (this.dispatchEvent = function (o) {
        if (!o) return !0;
        o.source = this;
        var a = 'on' + o.type;
        return (
          (!this.hasOwnProperty(a) || (this[a].call(this, o), !o.defaultPrevented)) &&
          (!this.listeners[o.type] ||
            this.listeners[o.type].every(function (i) {
              return i(o), !o.defaultPrevented;
            }))
        );
      }),
      (this._setReadyState = function (o) {
        var a = new CustomEvent('readystatechange');
        (a.readyState = o), (this.readyState = o), this.dispatchEvent(a);
      }),
      (this._onStreamFailure = function (o) {
        var a = new CustomEvent('error');
        (a.data = o.currentTarget.response), this.dispatchEvent(a), this.close();
      }),
      (this._onStreamAbort = function (o) {
        this.dispatchEvent(new CustomEvent('abort')), this.close();
      }),
      (this._onStreamProgress = async function (o) {
        if (this.xhr) {
          if (this.xhr.status !== 401 || this._retry) {
            if (this.xhr.status !== 200) return void this._onStreamFailure(o);
          } else {
            this._retry = !0;
            try {
              const i = await J.refreshToken();
              (this.headers = {
                'Content-Type': 'application/json',
                Authorization: `Bearer ${i.token}`,
              }),
                Ps(i.token),
                window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: i.token })),
                this.stream();
            } catch {
              return void this._onStreamFailure(o);
            }
          }
          this.readyState == this.CONNECTING &&
            (this.dispatchEvent(new CustomEvent('open')), this._setReadyState(this.OPEN));
          var a = this.xhr.responseText.substring(this.progress);
          (this.progress += a.length),
            a.split(/(\r\n|\r|\n){2}/g).forEach(
              function (i) {
                i.trim().length === 0
                  ? (this.dispatchEvent(this._parseEventChunk(this.chunk.trim())),
                    (this.chunk = ''))
                  : (this.chunk += i);
              }.bind(this),
            );
        }
      }),
      (this._onStreamLoaded = function (o) {
        this._onStreamProgress(o),
          this.dispatchEvent(this._parseEventChunk(this.chunk)),
          (this.chunk = '');
      }),
      (this._parseEventChunk = function (o) {
        if (!o || o.length === 0) return null;
        var a = { id: null, retry: null, data: '', event: 'message' };
        o.split(/\n|\r\n|\r/).forEach(
          function (s) {
            var r = (s = s.trimRight()).indexOf(this.FIELD_SEPARATOR);
            if (!(r <= 0)) {
              var c = s.substring(0, r);
              if (c in a) {
                var l = s.substring(r + 1).trimLeft();
                c === 'data' ? (a[c] += l) : (a[c] = l);
              }
            }
          }.bind(this),
        );
        var i = new CustomEvent(a.event);
        return (i.data = a.data), (i.id = a.id), i;
      }),
      (this._checkStreamClosed = function () {
        this.xhr && this.xhr.readyState === XMLHttpRequest.DONE && this._setReadyState(this.CLOSED);
      }),
      (this.stream = function () {
        for (var o in (this._setReadyState(this.CONNECTING),
        (this.xhr = new XMLHttpRequest()),
        this.xhr.addEventListener('progress', this._onStreamProgress.bind(this)),
        this.xhr.addEventListener('load', this._onStreamLoaded.bind(this)),
        this.xhr.addEventListener('readystatechange', this._checkStreamClosed.bind(this)),
        this.xhr.addEventListener('error', this._onStreamFailure.bind(this)),
        this.xhr.addEventListener('abort', this._onStreamAbort.bind(this)),
        this.xhr.open(this.method, this.url),
        this.headers))
          this.xhr.setRequestHeader(o, this.headers[o]);
        (this.xhr.withCredentials = this.withCredentials), this.xhr.send(this.payload);
      }),
      (this.close = function () {
        this.readyState !== this.CLOSED &&
          (this.xhr.abort(), (this.xhr = null), this._setReadyState(this.CLOSED));
      });
  };
function Fh(e) {
  return cu.createHash('sha1').update(e).digest('hex');
}
function Bh(e, n) {
  return new lu(n, e).toString();
}
var $h = (function () {
    function e(n, o, a) {
      var i, s;
      (this.name = n),
        (this.description = o),
        !((i = a.properties) === null || i === void 0) && i.requestBody
          ? (this.parameters = (s = a.properties) === null || s === void 0 ? void 0 : s.requestBody)
          : (this.parameters = a);
    }
    return (
      (e.prototype.toObjectTool = function () {
        return {
          type: nn.function,
          function: { name: this.name, description: this.description, parameters: this.parameters },
        };
      }),
      e
    );
  })(),
  qh = (function () {
    function e(n, o, a, i, s, r) {
      (this.authHeaders = {}),
        (this.domain = n),
        (this.path = o),
        (this.method = a),
        (this.operation = i),
        (this.isConsequential = s),
        (this.contentType = r);
    }
    return (
      (e.prototype.setParams = function (n) {
        return Fe(this, void 0, void 0, function () {
          var o, a, i, s, r, c;
          return Be(this, function (l) {
            for (
              this.operationHash = Fh(JSON.stringify(n)),
                this.params = n,
                o = 0,
                a = Object.entries(n);
              o < a.length;
              o++
            )
              (i = a[o]),
                (s = i[0]),
                (r = i[1]),
                (c = '{'.concat(s, '}')),
                this.path.includes(c) &&
                  ((this.path = this.path.replace(c, encodeURIComponent(r))),
                  delete this.params[s]);
            return [2];
          });
        });
      }),
      (e.prototype.setAuth = function (n) {
        return Fe(this, void 0, void 0, function () {
          var o, a, i, s, r, c, l, d, _, m, f, g, h, v, x;
          return Be(this, function (y) {
            switch (y.label) {
              case 0:
                return n.auth
                  ? ((o = n.auth),
                    (a = o.type),
                    (i = o.authorization_type),
                    (s = o.custom_auth_header),
                    (r = o.authorization_url),
                    (c = o.client_url),
                    (l = o.scope),
                    (d = o.token_exchange_method),
                    (_ = n.api_key),
                    (m = n.oauth_client_id),
                    (f = n.oauth_client_secret),
                    (g = _ && a === $e.ServiceHttp),
                    (h = m && f && a === $e.OAuth && r && c && l && d),
                    g && i === st.Basic
                      ? ((v = ru.Buffer.from(_).toString('base64')),
                        (this.authHeaders.Authorization = 'Basic '.concat(v)),
                        [3, 6])
                      : [3, 1])
                  : [2];
              case 1:
                return g && i === st.Bearer
                  ? ((this.authHeaders.Authorization = 'Bearer '.concat(_)), [3, 6])
                  : [3, 2];
              case 2:
                return g && i === st.Custom && s ? ((this.authHeaders[s] = _), [3, 6]) : [3, 3];
              case 3:
                return h
                  ? this.authToken
                    ? [3, 5]
                    : [
                        4,
                        pe.post(
                          c,
                          {
                            client_id: m,
                            client_secret: f,
                            scope: l,
                            grant_type: 'client_credentials',
                          },
                          { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } },
                        ),
                      ]
                  : [3, 6];
              case 4:
                (x = y.sent()), (this.authToken = x.data.access_token), (y.label = 5);
              case 5:
                (this.authHeaders.Authorization = 'Bearer '.concat(this.authToken)), (y.label = 6);
              case 6:
                return [2];
            }
          });
        });
      }),
      (e.prototype.execute = function () {
        return Fe(this, void 0, void 0, function () {
          var n, o, a;
          return Be(this, function (i) {
            if (
              ((n = Bh(this.domain, this.path)),
              (o = _e(_e({}, this.authHeaders), { 'Content-Type': this.contentType })),
              (a = this.method.toLowerCase()) === 'get')
            )
              return [2, pe.get(n, { headers: o, params: this.params })];
            if (a === 'post') return [2, pe.post(n, this.params, { headers: o })];
            if (a === 'put') return [2, pe.put(n, this.params, { headers: o })];
            if (a === 'delete') return [2, pe.delete(n, { headers: o, data: this.params })];
            if (a === 'patch') return [2, pe.patch(n, this.params, { headers: o })];
            throw new Error('Unsupported HTTP method: '.concat(this.method));
          });
        });
      }),
      e
    );
  })();
function Ji(e, n) {
  var o;
  if ('$ref' in e && n) {
    var a = e.$ref.replace(/^#\/components\/schemas\//, ''),
      i = (o = n.schemas) === null || o === void 0 ? void 0 : o[a];
    if (!i) throw new Error('Reference '.concat(e.$ref, ' not found'));
    return Ji(i, n);
  }
  return e;
}
function Uh(e) {
  for (
    var n,
      o,
      a,
      i,
      s = [],
      r = {},
      c =
        (a =
          (o = (n = e.servers) === null || n === void 0 ? void 0 : n[0]) === null || o === void 0
            ? void 0
            : o.url) !== null && a !== void 0
          ? a
          : '',
      l = 0,
      d = Object.entries(e.paths);
    l < d.length;
    l++
  )
    for (var _ = d[l], m = _[0], f = _[1], g = 0, h = Object.entries(f); g < h.length; g++) {
      var v = h[g],
        x = v[0],
        y = v[1],
        k = ''.concat(x, '_').concat(m),
        C = y.operationId || k.replace(/[^a-zA-Z0-9_-]/g, ''),
        j = y.summary || y.description || '',
        w = { type: 'object', properties: {}, required: [] };
      if (y.requestBody) {
        var T = y.requestBody.content,
          S = Ji(
            (i = T[Object.keys(T)[0]]) === null || i === void 0 ? void 0 : i.schema,
            e.components,
          );
        w.properties.requestBody = S;
      }
      if (y.parameters)
        for (var I = 0, P = y.parameters; I < P.length; I++) {
          var F = P[I];
          (S = Ji(_e({}, F.schema), e.components)),
            (w.properties[F.name] = S),
            F.required && w.required.push(F.name),
            F.description &&
              !('$$ref' in w.properties[F.name]) &&
              (w.properties[F.name].description = F.description);
        }
      var R = new $h(C, j, w);
      s.push(R);
      var E = new qh(
        c,
        m,
        x,
        C,
        !!y['x-openai-isConsequential'],
        y.requestBody ? 'application/json' : 'application/x-www-form-urlencoded',
      );
      r[C] = E;
    }
  return { functionSignatures: s, requestBuilders: r };
}
function Vh(e) {
  var n;
  try {
    var o = void 0;
    try {
      o = JSON.parse(e);
    } catch {
      o = su(e);
    }
    if (!o.servers || !Array.isArray(o.servers) || o.servers.length === 0)
      return { status: !1, message: 'Could not find a valid URL in `servers`' };
    if (!o.servers[0].url)
      return { status: !1, message: 'Could not find a valid URL in `servers`' };
    var a = o.paths;
    if (!a || typeof a != 'object' || Object.keys(a).length === 0)
      return { status: !1, message: 'No paths found in the OpenAPI spec.' };
    for (
      var i = ((n = o.components) === null || n === void 0 ? void 0 : n.schemas) || {},
        s = [],
        r = 0,
        c = Object.entries(a);
      r < c.length;
      r++
    )
      for (var l = c[r], d = l[0], _ = l[1], m = 0, f = Object.entries(_); m < f.length; m++) {
        var g = f[m],
          h = g[0],
          v = g[1],
          x = v.responses;
        if (typeof v == 'object' && x)
          for (var y = 0, k = Object.entries(x); y < k.length; y++) {
            var C = k[y],
              j = C[0],
              w = C[1].content;
            if (w && w['application/json'] && w['application/json'].schema) {
              var T = w['application/json'].schema;
              if ('$ref' in T && typeof T.$ref == 'string') {
                var S = T.$ref.split('/').pop();
                S &&
                  !i[S] &&
                  s.push(
                    "In context=('paths', '"
                      .concat(d, "', '")
                      .concat(h, "', '")
                      .concat(
                        j,
                        "', 'response', 'content', 'application/json', 'schema'), reference to unknown component ",
                      )
                      .concat(S, '; using empty schema'),
                  );
              }
            }
          }
      }
    return {
      status: !0,
      message:
        s.join(`
`) || 'OpenAPI spec is valid.',
      spec: o,
    };
  } catch {
    return { status: !1, message: 'Error parsing OpenAPI spec.' };
  }
}
function Gh(e) {
  var n = e.conversation,
    o = e.userMessage,
    a = e.endpointOption,
    i = e.isEdited,
    s = e.isContinued,
    r = Ft.parse(n).conversationId,
    c = a,
    l = c.endpoint,
    d = c.endpointType,
    _ = M_[d ?? l];
  return (
    i && he(l) ? (_ += '/modify') : i && (_ = _.replace('/ask/', '/edit/')),
    { server: _, payload: _e(_e(_e({}, o), a), { isContinued: !(!i || !s), conversationId: r }) }
  );
}
function Kh(e) {
  const n = {};
  for (const o of e) n[o.file_id] = o;
  return n;
}
function ja(e) {
  const n = {};
  for (const o of e) n[o.id] = o;
  return n;
}
function Qi(e) {
  return e.reduce((n, o) => ((n[o.pluginKey] = o), n), {});
}
const Es = (e) => (e ? { list: e, map: Qi(e) } : { list: [], map: {} });
function Ms(e, n) {
  return e
    .map((o) => (typeof o == 'string' ? (n == null ? void 0 : n[o]) : o))
    .filter((o) => o !== void 0);
}
function Zi(e) {
  try {
    JSON.parse(e);
  } catch {
    return !1;
  }
  return !0;
}
function Rs(e) {
  try {
    return JSON.stringify(JSON.parse(e), null, 2);
  } catch {
    return e;
  }
}
function Hh(e) {
  let n = 0,
    o = -1;
  for (let a = 0; a < e.length; a++)
    if (e[a] === '{') n === 0 && (o = a), n++;
    else if (e[a] === '}' && (n--, n === 0 && o !== -1)) return e.slice(o, a + 1);
  return '';
}
function Wh() {
  return t.jsx(t.Fragment, {
    children: t.jsx('path', {
      d: 'M15.5 10.5H12.1667C11.2462 10.5 10.5 11.2462 10.5 12.1667V13.5V18M15.5 10.5H23.8333C24.7538 10.5 25.5 11.2462 25.5 12.1667V13.5V18M15.5 10.5V25.5M15.5 25.5H18H23.8333C24.7538 25.5 25.5 24.7538 25.5 23.8333V18M15.5 25.5H12.1667C11.2462 25.5 10.5 24.7538 10.5 23.8333V18M10.5 18H25.5',
      stroke: 'white',
      strokeWidth: '1.66667',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
}
function Jh() {
  return t.jsxs(t.Fragment, {
    children: [
      t.jsx('path', {
        d: 'M19.6663 9.66663H12.9997C12.5576 9.66663 12.1337 9.84222 11.8212 10.1548C11.5086 10.4673 11.333 10.8913 11.333 11.3333V24.6666C11.333 25.1087 11.5086 25.5326 11.8212 25.8451C12.1337 26.1577 12.5576 26.3333 12.9997 26.3333H22.9997C23.4417 26.3333 23.8656 26.1577 24.1782 25.8451C24.4907 25.5326 24.6663 25.1087 24.6663 24.6666V14.6666L19.6663 9.66663Z',
        stroke: 'white',
        strokeWidth: '1.66667',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
      t.jsx('path', {
        d: 'M19.667 9.66663V14.6666H24.667',
        stroke: 'white',
        strokeWidth: '1.66667',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
      t.jsx('path', {
        d: 'M21.3337 18.8334H14.667',
        stroke: 'white',
        strokeWidth: '1.66667',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
      t.jsx('path', {
        d: 'M21.3337 22.1666H14.667',
        stroke: 'white',
        strokeWidth: '1.66667',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
      t.jsx('path', {
        d: 'M16.3337 15.5H15.5003H14.667',
        stroke: 'white',
        strokeWidth: '1.66667',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    ],
  });
}
function Qh() {
  return t.jsxs(t.Fragment, {
    children: [
      t.jsx('path', {
        d: 'M18.833 9.66663H12.9997C12.5576 9.66663 12.1337 9.84222 11.8212 10.1548C11.5086 10.4673 11.333 10.8913 11.333 11.3333V24.6666C11.333 25.1087 11.5086 25.5326 11.8212 25.8451C12.1337 26.1577 12.5576 26.3333 12.9997 26.3333H22.9997C23.4417 26.3333 23.8656 26.1577 24.1782 25.8451C24.4907 25.5326 24.6663 25.1087 24.6663 24.6666V15.5L18.833 9.66663Z',
        stroke: 'white',
        strokeWidth: '1.66667',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
      t.jsx('path', {
        d: 'M18.833 9.66663V15.5H24.6663',
        stroke: 'white',
        strokeWidth: '1.66667',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    ],
  });
}
function Zh() {
  return t.jsxs(t.Fragment, {
    children: [
      t.jsx('path', {
        d: 'M21.333 23L26.333 18L21.333 13',
        stroke: 'white',
        strokeWidth: '1.66667',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
      t.jsx('path', {
        d: 'M14.667 13L9.66699 18L14.667 23',
        stroke: 'white',
        strokeWidth: '1.66667',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    ],
  });
}
const Yh = ['text/x-'],
  uc = { paths: Jh, fill: '#FF5588', title: 'Document' },
  B_ = { paths: Wh, fill: '#10A37F', title: 'Spreadsheet' },
  Xh = { paths: Zh, fill: '#FF6E3C', title: 'Code' },
  An = {
    file: { paths: Qh, fill: '#0000FF', title: 'File' },
    text: uc,
    csv: B_,
    pdf: uc,
    'text/x-': Xh,
  },
  Os = (e = '') => {
    if (An[e]) return An[e];
    if (P_.test(e)) return B_;
    const n = Yh.find((a) => e.includes(a));
    if (n && An[n]) return An[n];
    const o = e.split('/')[0] || 'text';
    return An[o] ? An[o] : An.file;
  };
function $_(e) {
  const n = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    o = new Date(e),
    a = o.getDate(),
    i = n[o.getMonth()],
    s = o.getFullYear();
  return `${a} ${i} ${s}`;
}
function q_(e, n) {
  const o = e.getQueryData([G.files]);
  if (!o) {
    console.warn('No current files found in cache, skipped updating file query cache');
    return;
  }
  if (o.findIndex((i) => i.file_id === n.file_id) > -1) {
    console.warn('File already exists in cache, skipped updating file query cache');
    return;
  }
  e.setQueryData([G.files], [{ ...n }, ...o]);
}
const eg = /\\\(.*?\\\)|\\\[.*?\\\]|\$.*?\$|\\begin\{equation\}.*?\\end\{equation\}/,
  tg = new RegExp(/\\\((.+?)\\\)/, 'g'),
  ng = new RegExp(/\\\[(.*?[^\\])\\\]/, 'gs'),
  pc = (e, n) => e.replace(/<<CODE_BLOCK_(\d+)>>/g, (o, a) => n[a]),
  og = /(```[\s\S]*?```|`.*?`)/g,
  ag = (e) => {
    let n = e;
    const o = [];
    let a = 0;
    n = n.replace(og, (s) => ((o[a] = s), `<<CODE_BLOCK_${a++}>>`));
    let i = n.replace(/(\$)(?=\s?\d)/g, '\\$');
    return (
      eg.test(i) && (i = i.replace(tg, (s, r) => `$${r}$`).replace(ng, (s, r) => `$$${r}$$`)),
      pc(i, o)
    );
  },
  U_ = (e, n, o, a) => {
    const i = JSON.parse(JSON.stringify(e)),
      { pageIndex: s, index: r } = $a(e, a);
    return s !== -1 && r !== -1
      ? V_(e, n, o, a)
      : (i.pages[0][n].unshift({ ...o, updatedAt: new Date().toISOString() }), i);
  };
function $a(e, n) {
  for (let o = 0; o < e.pages.length; o++) {
    const a = e.pages[o],
      i = n(a);
    if (i !== -1) return { pageIndex: o, index: i };
  }
  return { pageIndex: -1, index: -1 };
}
const V_ = (e, n, o, a) => {
    const i = JSON.parse(JSON.stringify(e)),
      { pageIndex: s, index: r } = $a(e, a);
    return (
      s !== -1 &&
        r !== -1 &&
        (i.pages[s][n].splice(r, 1),
        i.pages[0][n].unshift({ ...o, updatedAt: new Date().toISOString() })),
      i
    );
  },
  G_ = (e, n, o) => {
    const a = JSON.parse(JSON.stringify(e)),
      { pageIndex: i, index: s } = $a(a, o);
    return i !== -1 && s !== -1 && a.pages[i][n].splice(s, 1), a;
  },
  eo = (e, n, o) => {
    const a = JSON.parse(JSON.stringify(e)),
      i = a.pages.length;
    if (i === 0) return a;
    const s = a.pageParams,
      r = a.pages.flatMap((l) => l[n]);
    if (r.length === 0) return a;
    const c = Array.from({ length: i }, (l, d) => ({
      ...a.pages[d],
      [n]: r.slice(d * o, (d + 1) * o),
    })).filter((l) => l[n].length > 0);
    return { pageParams: s.slice(0, c.length), pages: c };
  },
  tn = {
    today: 'com_ui_date_today',
    yesterday: 'com_ui_date_yesterday',
    previous7Days: 'com_ui_date_previous_7_days',
    previous30Days: 'com_ui_date_previous_30_days',
    january: 'com_ui_date_january',
    february: 'com_ui_date_february',
    march: 'com_ui_date_march',
    april: 'com_ui_date_april',
    may: 'com_ui_date_may',
    june: 'com_ui_date_june',
    july: 'com_ui_date_july',
    august: 'com_ui_date_august',
    september: 'com_ui_date_september',
    october: 'com_ui_date_october',
    november: 'com_ui_date_november',
    december: 'com_ui_date_december',
  },
  ig = (e) => {
    const n = new Date();
    if (yl(e)) return tn.today;
    if (sa(e, { start: du(pi(n, 1)), end: n })) return tn.yesterday;
    if (sa(e, { start: pi(n, 7), end: n })) return tn.previous7Days;
    if (sa(e, { start: pi(n, 30), end: n })) return tn.previous30Days;
    if (sa(e, { start: mu(n), end: n })) {
      const o = uu(e, 'MMMM').toLowerCase();
      return tn[o];
    }
    return ' ' + pu(e).toString();
  },
  sg = (e) => {
    if (!Array.isArray(e)) return [];
    const n = new Set(),
      o = e.reduce((s, r) => {
        if (!r || n.has(r.conversationId)) return s;
        n.add(r.conversationId);
        const c = r.updatedAt ? bl(r.updatedAt) : _u(),
          l = ig(c);
        return s[l] || (s[l] = []), s[l].push(r), s;
      }, {}),
      a = {},
      i = [tn.today, tn.yesterday, tn.previous7Days, tn.previous30Days];
    return (
      i.forEach((s) => {
        o[s] && (a[s] = o[s]);
      }),
      Object.keys(o)
        .filter((s) => !i.includes(s))
        .sort()
        .reverse()
        .forEach((s) => {
          a[s] = o[s];
        }),
      Object.entries(a)
    );
  },
  Po = (e, n) =>
    U_(e, 'conversations', n, (o) =>
      o.conversations.findIndex((a) => a.conversationId === n.conversationId),
    );
function K_(e, n) {
  return $a(e, (o) => o.conversations.findIndex((a) => a.conversationId === n.conversationId));
}
const Yi = (e, n) =>
    V_(e, 'conversations', n, (o) =>
      o.conversations.findIndex((a) => a.conversationId === n.conversationId),
    ),
  rg = (e, n) => {
    const o = JSON.parse(JSON.stringify(e)),
      { pageIndex: a, index: i } = K_(o, n);
    if (a !== -1 && i !== -1) {
      const r = o.pages[a].conversations.splice(i, 1)[0];
      o.pages[0].conversations.unshift({ ...r, ...n, updatedAt: new Date().toISOString() });
    }
    return o;
  },
  Eo = (e, n) =>
    G_(e, 'conversations', (o) => o.conversations.findIndex((a) => a.conversationId === n)),
  Xi = (e, n) => {
    if (!(!e || !n))
      for (const o of e.pages) {
        const a = o.conversations.find((i) => i.conversationId === n);
        if (a) return a;
      }
  };
function cg(e) {
  if (!e) return;
  const { endpoint: n, model: o, agentOptions: a, jailbreak: i, toneStyle: s } = e;
  if (!n) return;
  if (n === N.bingAI) {
    const c = { jailbreak: i, toneStyle: s };
    localStorage.setItem(te.LAST_BING, JSON.stringify(c));
    return;
  }
  const r = JSON.parse(localStorage.getItem(te.LAST_MODEL) || '{}');
  (r[n] = o),
    n === N.gptPlugins && (r.secondaryModel = (a == null ? void 0 : a.model) || o || ''),
    localStorage.setItem(te.LAST_MODEL, JSON.stringify(r));
}
const H_ = (e, n) => {
    const {
      endpoint: o,
      title: a,
      model: i,
      tools: s,
      promptPrefix: r,
      chatGptLabel: c,
      modelLabel: l,
      jailbreak: d,
      toneStyle: _,
    } = e;
    let m = '',
      f = i || '',
      g = '';
    const h = [N.azureOpenAI, N.openAI, N.custom],
      v = [N.google, N.anthropic];
    return (
      o && h.includes(o)
        ? (g = c || '')
        : o && v.includes(o)
        ? (g = l || '')
        : o === N.bingAI && ((f = d ? 'Sydney' : f), (g = _ ? `: ${_}` : '')),
      g && a && g.toLowerCase().includes(a.toLowerCase())
        ? ((m = g + ': '), (g = ''))
        : a && a.trim() !== 'New Chat' && (m = a + ': '),
      n
        ? `${f}${g ? ` | ${g}` : ''}${r ? ` | ${r}` : ''}${
            s ? ` | ${s.map((x) => (typeof x == 'string' ? x : x.pluginKey)).join(', ')}` : ''
          }`
        : `${m}${f}${g ? ` (${g})` : ''}`.trim()
    );
  },
  W_ = (e, n) => {
    const o = { ...e };
    return (
      o.tools &&
        o.tools.length > 0 &&
        (o.tools = o.tools
          .filter((a) => {
            let i;
            return typeof a == 'string' ? (i = a) : ({ pluginKey: i } = a), !!n[i];
          })
          .map((a) => (typeof a == 'string' ? a : a.pluginKey))),
      o
    );
  };
function lg(e, n) {
  if ((e.focus(), window.getSelection() && document.queryCommandSupported('insertText')))
    document.execCommand('insertText', !1, n);
  else {
    console.warn('insertTextAtCursor: document.execCommand is not supported');
    const o = e.selectionStart,
      a = e.selectionEnd,
      i = e.value.substring(0, o),
      s = e.value.substring(a);
    (e.value = i + n + s), (e.selectionStart = e.selectionEnd = o + n.length);
    const r = new Event('input', { bubbles: !0 });
    e.dispatchEvent(r);
  }
}
const hc = (e) => {
  e.current &&
    ((e.current.style.height = 'auto'),
    e.current.offsetHeight,
    (e.current.style.height = `${e.current.scrollHeight}px`));
};
function _g(e) {
  e.value.endsWith('@') &&
    ((e.value = e.value.slice(0, -1)),
    e.setSelectionRange(e.value.length, e.value.length),
    e.dispatchEvent(new Event('input', { bubbles: !0 }))),
    e.focus();
}
const dg = (e) => {
    const n = e ? e.length : 0,
      o = e ? e.substring(0, 5) : '';
    return `${n}${o}`;
  },
  J_ = (e) => {
    var n, o, a;
    if (!e) return '';
    if (e.text) return e.text;
    if ((n = e.content) != null && n.length)
      for (let i = e.content.length - 1; i >= 0; i--) {
        const s = e.content[i];
        if (
          s.type === ee.TEXT &&
          ((a = (o = s[ee.TEXT]) == null ? void 0 : o.value) == null ? void 0 : a.length) > 0
        )
          return s[ee.TEXT].value;
      }
    return '';
  },
  Ds = [
    'python',
    'javascript',
    'java',
    'go',
    'bash',
    'c',
    'cpp',
    'csharp',
    'css',
    'diff',
    'graphql',
    'json',
    'kotlin',
    'less',
    'lua',
    'makefile',
    'markdown',
    'objectivec',
    'perl',
    'php',
    'php-template',
    'plaintext',
    'python-repl',
    'r',
    'ruby',
    'rust',
    'scss',
    'shell',
    'sql',
    'swift',
    'typescript',
    'vbnet',
    'wasm',
    'xml',
    'yaml',
  ],
  mg = ({ name: e, localize: n }) => (e && e.length > 0 ? e : n('com_ui_assistant')),
  ug = (e) => {
    const n = {};
    if (!e) return n;
    for (const o of Object.keys(e)) n[o] = !!e[o];
    return n;
  },
  pg = (e, n) => {
    var i, s;
    const o = new Set(Eh),
      a = [];
    for (const r in n)
      (e[r] || ((i = n[r]) != null && i.type && o.has((s = n[r]) == null ? void 0 : s.type))) &&
        a.push(r);
    return a;
  };
function Ce(e, n, o) {
  if (!e || n === null || n === void 0) return;
  const a = e[n];
  if (a) return a[o];
}
function qa(e) {
  const n = ug(e);
  return pg(n, e).sort((o, a) => {
    var i, s;
    return (
      (((i = e == null ? void 0 : e[o]) == null ? void 0 : i.order) ?? 0) -
      (((s = e == null ? void 0 : e[a]) == null ? void 0 : s.order) ?? 0)
    );
  });
}
function hg({ endpoint: e, model: n }) {
  if (!n) return;
  const o = JSON.parse(localStorage.getItem(te.LAST_CONVO_SETUP) || '{}');
  o.endpoint === e && ((o.model = n), localStorage.setItem(te.LAST_CONVO_SETUP, JSON.stringify(o)));
  const a = JSON.parse(localStorage.getItem(te.LAST_MODEL) || '{}');
  (a[e] = n), localStorage.setItem(te.LAST_MODEL, JSON.stringify(a));
}
function Qn(e) {
  const { conversation: n, newEndpoint: o, endpointsConfig: a, modularChat: i } = e,
    s = n == null ? void 0 : n.endpoint,
    r = { ...n, endpoint: o, conversationId: 'new' },
    c = he(o) && he(s) && s === o,
    l = n == null ? void 0 : n.conversationId,
    d = !!(l && l !== 'new'),
    _ = Ce(a, s, 'type') ?? s,
    m = Ce(a, o, 'type') ?? o,
    f = gn.has(s ?? ''),
    g = gn.has(_ ?? ''),
    h = f || g || c,
    v = gn.has(o ?? ''),
    x = gn.has(m ?? '');
  return {
    template: r,
    shouldSwitch: s === o || i || c,
    isExistingConversation: d,
    isCurrentModular: h,
    newEndpointType: m,
    isNewModular: v || x || c,
  };
}
function es(e) {
  const n = e == null ? void 0 : e.find((i) => i.default),
    o = localStorage.getItem(te.LAST_SPEC),
    a = e == null ? void 0 : e.find((i) => i.name === o);
  return n || a || (e == null ? void 0 : e[0]);
}
function to(e) {
  return e.iconURL ?? e.preset.iconURL ?? e.preset.endpoint ?? '';
}
function io({ endpointsConfig: e, iconURL: n, endpoint: o }) {
  return (e != null && e[n ?? ''] ? n ?? o : o) ?? '';
}
function Go({ endpoint: e, endpointType: n, endpointsConfig: o, endpointIconURL: a }) {
  const i = n ?? Ce(o, e, 'type'),
    s = a ?? Ce(o, e, 'iconURL');
  return s && N[s] ? s : i ? 'unknown' : e ?? 'unknown';
}
const Q_ = (e, n) =>
    U_(e, 'sharedLinks', n, (o) => o.sharedLinks.findIndex((a) => a.shareId === n.shareId)),
  Fs = (e, n) => G_(e, 'sharedLinks', (o) => o.sharedLinks.findIndex((a) => a.shareId === n));
function b(...e) {
  return hu(gu(e));
}
const gg =
    'w-full border-b border-black/10 dark:border-gray-800/50 text-gray-800 bg-white dark:text-gray-200 group dark:bg-gray-800 hover:bg-gray-200/25 hover:text-gray-700  dark:hover:bg-gray-800 dark:hover:text-gray-200',
  fg =
    'w-full border-b border-black/10 bg-gray-50 dark:border-gray-800/50 text-gray-800 dark:text-gray-200 group bg-gray-200 dark:bg-gray-700 hover:bg-gray-200/40 hover:text-gray-700 dark:hover:bg-gray-800 dark:hover:text-gray-200';
function Ko({ messages: e, fileMap: n, groupAll: o = !1 }) {
  if (e === null) return null;
  const a = {},
    i = [];
  if (o) return e.map((s, r) => ({ ...s, bg: r % 2 === 0 ? gg : fg }));
  if (!o)
    return (
      e.forEach((s) => {
        (a[s.messageId] = { ...s, children: [] }),
          s.files && n && (a[s.messageId].files = s.files.map((c) => n[c.file_id ?? ''] ?? c));
        const r = a[s.parentMessageId ?? ''];
        r ? r.children.push(a[s.messageId]) : i.push(a[s.messageId]);
      }),
      i
    );
}
const xg = (e) => {
    const n = 'com_auth_error_login';
    if (!e) return n;
    switch (!0) {
      case e.includes('429'):
        return 'com_auth_error_login_rl';
      case e.includes('403'):
        return 'com_auth_error_login_ban';
      case e.includes('500'):
        return 'com_auth_error_login_server';
      case e.includes('422'):
        return 'com_auth_error_login_unverified';
      default:
        return n;
    }
  },
  Xe = ({ preset: e }) => {
    const { endpoint: n, endpointType: o } = e;
    if (!n)
      return (
        console.error(`Unknown endpoint ${n}`, e),
        {
          endpoint: null,
          presetId: (e == null ? void 0 : e.presetId) ?? null,
          title: (e == null ? void 0 : e.title) ?? 'New Preset',
        }
      );
    const { presetOverride: a = {}, ...i } = e,
      s = { ...i, ...a },
      r = O_({ endpoint: n, endpointType: o, conversation: s });
    return {
      presetId: (e == null ? void 0 : e.presetId) ?? null,
      ...r,
      endpoint: n,
      endpointType: o,
      title: (e == null ? void 0 : e.title) ?? 'New Preset',
    };
  };
function Z_(e) {
  if (
    !(
      e.includes('<iframe role="presentation" style="') &&
      e.includes('src="https://www.bing.com/images/create')
    )
  )
    return !1;
  const o = /<iframe\s[^>]*?>/g,
    a = e.match(o);
  if (!a || a.length > 1) return !1;
  const s = new DOMParser().parseFromString(e, 'text/html'),
    r = ['script', 'img', 'style', 'div', 'a', 'input', 'button', 'form'];
  for (const m of r) if (s.getElementsByTagName(m).length > 0) return !1;
  const c = s.getElementsByTagName('iframe');
  if (c.length !== 1) return !1;
  const l = c[0],
    d = l.getAttribute('role'),
    _ = l.getAttribute('src');
  return d === 'presentation' && _ && _.startsWith('https://www.bing.com/images/create');
}
function Y_() {
  const e = {
      lastSelectedModel: localStorage.getItem(te.LAST_MODEL),
      lastSelectedTools: localStorage.getItem(te.LAST_TOOLS),
      lastBingSettings: localStorage.getItem(te.LAST_BING),
      lastConversationSetup: localStorage.getItem(te.LAST_CONVO_SETUP),
    },
    n = e.lastSelectedModel ? JSON.parse(e.lastSelectedModel) : {},
    o = e.lastSelectedTools ? JSON.parse(e.lastSelectedTools) : [],
    a = e.lastBingSettings ? JSON.parse(e.lastBingSettings) : {},
    i = e.lastConversationSetup ? JSON.parse(e.lastConversationSetup) : {};
  return {
    lastSelectedModel: n,
    lastSelectedTools: o,
    lastBingSettings: a,
    lastConversationSetup: i,
  };
}
const Ua = ({ conversation: e, endpoint: n, models: o, lastConversationSetup: a }) => {
    var y;
    const { lastSelectedModel: i, lastSelectedTools: s, lastBingSettings: r } = Y_(),
      { jailbreak: c, toneStyle: l } = r,
      d = (a == null ? void 0 : a.endpointType) ?? (e == null ? void 0 : e.endpointType);
    if (!n) return { ...e, endpointType: d, endpoint: n };
    const _ = o,
      m = (a == null ? void 0 : a.model) ?? (i == null ? void 0 : i[n]),
      f =
        n === N.gptPlugins
          ? ((y = a == null ? void 0 : a.agentOptions) == null ? void 0 : y.model) ??
            (i == null ? void 0 : i.secondaryModel)
          : null;
    let g, h;
    _.includes(m) ? (g = [m, ..._]) : (g = [..._]),
      f && _.includes(f) ? (h = [f, ..._]) : (h = [..._]);
    const v = O_({
        endpoint: n,
        endpointType: d,
        conversation: a,
        possibleValues: { models: g, secondaryModels: h },
      }),
      x = { ...e, ...v, endpointType: d, endpoint: n };
    return (
      he(n) && !x.assistant_id && v.assistant_id && (x.assistant_id = v.assistant_id),
      (x.tools = (a == null ? void 0 : a.tools) ?? s ?? x.tools),
      (x.jailbreak = c ?? x.jailbreak),
      (x.toneStyle = l ?? x.toneStyle),
      x
    );
  },
  vg = (e, n) => {
    const { endpoint: o } = e || {};
    return o && n != null && n[o ?? '']
      ? o
      : (o && console.warn(`Illegal target endpoint ${o} ${n}`), null);
  },
  bg = (e) => {
    var n;
    try {
      const { lastConversationSetup: o } = Y_(),
        { endpoint: a } = o,
        i = (n = Object.values(e ?? {})) == null ? void 0 : n.every((s) => !s);
      return (i && a) || (i && a) || (a && e != null && e[a ?? '']) ? a : null;
    } catch (o) {
      return console.error(o), null;
    }
  },
  yg = (e) => qa(e).find((o) => Object.hasOwn(e ?? {}, o)),
  Va = ({ convoSetup: e, endpointsConfig: n }) => vg(e, n) || bg(n) || yg(n),
  tt = '',
  Vt = 'focus:outline-none focus:ring-0 focus:ring-opacity-0 focus:ring-offset-0',
  Gt =
    'transition-colors rounded-md min-w-[75px] border font-normal bg-white hover:bg-gray-50 dark:border-gray-700 dark:hover:bg-gray-700 dark:bg-gray-800 text-black dark:text-gray-600 focus:outline-none data-[state=open]:bg-gray-50 dark:data-[state=open]:bg-gray-700',
  Q =
    'rounded-md border border-gray-200 focus:border-gray-400 focus:bg-gray-50 bg-transparent text-sm shadow-[0_0_10px_rgba(0,0,0,0.05)] outline-none placeholder:text-gray-400 focus:outline-none focus:ring-gray-400 focus:ring-opacity-20 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:bg-gray-700 dark:border-gray-600 dark:focus:bg-gray-600 dark:focus:border-gray-600 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:outline-none',
  ge =
    'p-0 shadow-none text-right pr-1 h-8 border-transparent hover:bg-gray-800/10 dark:hover:bg-white/10 dark:focus:bg-white/10 transition-colors',
  Ga = (e) =>
    Le([G.files], () => se.getFiles(), {
      refetchOnWindowFocus: !1,
      refetchOnReconnect: !1,
      refetchOnMount: !1,
      ...e,
    }),
  wn = (e) =>
    Le([G.fileConfig], () => se.getFileConfig(), {
      refetchOnWindowFocus: !1,
      refetchOnReconnect: !1,
      refetchOnMount: !1,
      ...e,
    }),
  X_ = (e) =>
    Le([G.presets], () => se.getPresets(), {
      refetchOnWindowFocus: !1,
      refetchOnReconnect: !1,
      refetchOnMount: !1,
      ...e,
    }),
  kg = (e) =>
    Le([G.endpointsConfigOverride], () => se.getEndpointsConfigOverride(), {
      refetchOnWindowFocus: !1,
      refetchOnReconnect: !1,
      refetchOnMount: !1,
      ...e,
    }),
  wg = (e, n) => {
    const o = X();
    return Le(
      [G.conversation, e],
      () => {
        const a = () => se.getConversationById(e),
          i = o.getQueryData([G.allConversations]);
        if (!i) return a();
        const { pageIndex: s, index: r } = K_(i, { conversationId: e });
        return s > -1 && r > -1 ? i.pages[s].conversations[r] : a();
      },
      { refetchOnWindowFocus: !1, refetchOnReconnect: !1, refetchOnMount: !1, ...n },
    );
  },
  jg = (e, n) =>
    _s(
      [G.searchConversations, e],
      ({ pageParam: o = '1' }) => se.listConversationsByQuery({ ...e, pageNumber: o }),
      {
        getNextPageParam: (o) => {
          const a = Number(o.pageNumber),
            i = Number(o.pages);
          return a < i ? a + 1 : void 0;
        },
        refetchOnWindowFocus: !1,
        refetchOnReconnect: !1,
        refetchOnMount: !1,
        ...n,
      },
    ),
  Mo = (e, n) =>
    _s(
      e != null && e.isArchived ? [G.archivedConversations] : [G.allConversations],
      ({ pageParam: o = '' }) =>
        se.listConversations({
          ...e,
          pageNumber: o == null ? void 0 : o.toString(),
          isArchived: (e == null ? void 0 : e.isArchived) || !1,
        }),
      {
        getNextPageParam: (o) => {
          const a = Number(o.pageNumber),
            i = Number(o.pages);
          return a < i ? a + 1 : void 0;
        },
        refetchOnWindowFocus: !1,
        refetchOnReconnect: !1,
        refetchOnMount: !1,
        ...n,
      },
    ),
  Ka = (e, n) =>
    _s(
      [G.sharedLinks],
      ({ pageParam: o = '' }) =>
        se.listSharedLinks({
          ...e,
          pageNumber: o == null ? void 0 : o.toString(),
          isPublic: (e == null ? void 0 : e.isPublic) || !0,
        }),
      {
        getNextPageParam: (o) => {
          const a = Number(o.pageNumber),
            i = Number(o.pages);
          return a < i ? a + 1 : void 0;
        },
        refetchOnWindowFocus: !1,
        refetchOnReconnect: !1,
        refetchOnMount: !1,
        ...n,
      },
    ),
  Cg = (e) => {
    var l, d;
    const n = X(),
      o = n.getQueryData([G.endpoints]),
      a = n.getQueryData([G.name, e]),
      s = !!((l = o == null ? void 0 : o[e]) != null && l.userProvide)
        ? !!(a != null && a.expiresAt)
        : !0,
      r = !!(o != null && o[e]) && s,
      c = ((d = o == null ? void 0 : o[e]) == null ? void 0 : d.version) ?? kn[e];
    return Le([G.tools], () => se.getAvailableTools(c, e), {
      refetchOnWindowFocus: !1,
      refetchOnReconnect: !1,
      refetchOnMount: !1,
      enabled: r,
    });
  },
  Ro = (e, n = ut, o) => {
    var _, m;
    const a = X(),
      i = a.getQueryData([G.endpoints]),
      s = a.getQueryData([G.name, e]),
      c = !!((_ = i == null ? void 0 : i[e]) != null && _.userProvide)
        ? !!(s != null && s.expiresAt)
        : !0,
      l = !!(i != null && i[e]) && c,
      d = ((m = i == null ? void 0 : i[e]) == null ? void 0 : m.version) ?? kn[e];
    return Le([G.assistants, e, n], () => se.listAssistants({ ...n, endpoint: e }, d), {
      refetchOnWindowFocus: !1,
      refetchOnReconnect: !1,
      refetchOnMount: !1,
      retry: !1,
      ...o,
      enabled:
        (o == null ? void 0 : o.enabled) !== void 0 ? (o == null ? void 0 : o.enabled) && l : l,
    });
  },
  Ng = (e, n) => {
    var d, _;
    const o = X(),
      a = o.getQueryData([G.endpoints]),
      i = o.getQueryData([G.name, e]),
      r = !!((d = a == null ? void 0 : a[e]) != null && d.userProvide)
        ? !!(i != null && i.expiresAt)
        : !0,
      c = !!(a != null && a[e]) && r,
      l = ((_ = a == null ? void 0 : a[e]) == null ? void 0 : _.version) ?? kn[e];
    return Le([G.actions], () => se.getActions({ endpoint: e, version: l }), {
      refetchOnWindowFocus: !1,
      refetchOnReconnect: !1,
      refetchOnMount: !1,
      ...n,
      enabled:
        (n == null ? void 0 : n.enabled) !== void 0 ? (n == null ? void 0 : n.enabled) && c : c,
    });
  },
  Sg = (e, n) => {
    const o = X();
    return Le(
      [G.fileDownload, n],
      async () => {
        if (!e || !n) {
          console.warn('No user ID provided for file download');
          return;
        }
        const a = await se.getFileDownload(e, n),
          i = a.data,
          s = window.URL.createObjectURL(i);
        try {
          const r = JSON.parse(a.headers['x-file-metadata']);
          if (!r) return console.warn('No metadata found for file download', a.headers), s;
          q_(o, r);
        } catch (r) {
          console.error('Error parsing file metadata, skipped updating file query cache', r);
        }
        return s;
      },
      { enabled: !1, retry: !1 },
    );
  },
  Ag = () => Le([G.voices], () => se.getVoices()),
  Tg = xe({ key: 'conversation', default: null }),
  ed = xe({ key: 'messages', default: [] }),
  Ig = Pa({ key: 'messagesTree', get: ({ get: e }) => Ko({ messages: e(ed) }) }),
  zg = xe({ key: 'latestMessage', default: null }),
  Lg = Pe({ key: 'messagesSiblingIdx', default: 0 }),
  Pg = {
    messages: ed,
    conversation: Tg,
    messagesTree: Ig,
    latestMessage: zg,
    messagesSiblingIdxFamily: Lg,
  },
  Eg = xe({ key: 'refreshConversationsHint', default: 1 }),
  Mg = { refreshConversationsHint: Eg },
  no = Pe({
    key: 'conversationByIndex',
    default: null,
    effects: [
      ({ onSet: e, node: n }) => {
        e(async (o) => {
          const a = Number(n.key.split('__')[1]);
          o != null &&
            o.assistant_id &&
            localStorage.setItem(
              `${te.ASST_ID_PREFIX}${a}${o == null ? void 0 : o.endpoint}`,
              o.assistant_id,
            ),
            o != null && o.spec && localStorage.setItem(te.LAST_SPEC, o.spec),
            o != null &&
              o.tools &&
              Array.isArray(o.tools) &&
              localStorage.setItem(te.LAST_TOOLS, JSON.stringify(o.tools.filter((i) => !!i))),
            o && (cg(o), localStorage.setItem(te.LAST_CONVO_SETUP, JSON.stringify(o)));
        });
      },
    ],
  }),
  Rg = Pe({ key: 'filesByIndex', default: new Map() }),
  Ca = xe({ key: 'conversationKeys', default: [] }),
  Og = Pa({
    key: 'allConversationsSelector',
    get: ({ get: e }) =>
      e(Ca)
        .map((o) => e(no(o)))
        .map((o) => (o == null ? void 0 : o.conversationId)),
  }),
  Dg = Pe({ key: 'presetByIndex', default: null }),
  Fg = Pe({ key: 'submissionByIndex', default: null }),
  Bg = Pe({ key: 'textByIndex', default: '' }),
  $g = Pe({ key: 'showStopButtonByIndex', default: !1 }),
  qg = Pe({ key: 'abortScrollByIndex', default: !1 }),
  Ug = Pe({ key: 'isSubmittingByIndex', default: !1 }),
  Vg = Pe({ key: 'optionSettingsByIndex', default: {} }),
  Gg = Pe({ key: 'showAgentSettingsByIndex', default: !1 }),
  Kg = Pe({ key: 'showBingToneSettingByIndex', default: !1 }),
  Hg = Pe({ key: 'showPopoverByIndex', default: !1 }),
  Wg = Pe({ key: 'showMentionPopoverByIndex', default: !1 }),
  Jg = Pe({ key: 'globalAudioURLByIndex', default: null }),
  Qg = Pe({ key: 'globalAudioisFetchingByIndex', default: !1 }),
  Zg = Pe({ key: 'globalAudioisPlayingByIndex', default: !1 }),
  Yg = Pe({ key: 'activeRunByIndex', default: null }),
  Xg = Pe({ key: 'audioRunByIndex', default: null }),
  td = Pe({ key: 'latestMessageByIndex', default: null });
function e0(e) {
  const [n, o] = W(Ca),
    a = ye(no(e)),
    i = Y(no(e));
  return (
    p.useEffect(() => {
      n.includes(e) || o([...n, e]);
    }, [e, n, o]),
    { conversation: i, setConversation: a }
  );
}
function t0() {
  return Ea(
    ({ reset: n, snapshot: o }) =>
      async () => {
        const a = await o.getPromise(Ca);
        for (const i of a) n(no(i)), (await o.getPromise(no(i))) && n(td(i));
        n(Ca);
      },
    [],
  );
}
const n0 = {
    conversationByIndex: no,
    filesByIndex: Rg,
    presetByIndex: Dg,
    submissionByIndex: Fg,
    textByIndex: Bg,
    showStopButtonByIndex: $g,
    abortScrollFamily: qg,
    isSubmittingFamily: Ug,
    optionSettingsFamily: Vg,
    showAgentSettingsFamily: Gg,
    showBingToneSettingFamily: Kg,
    showPopoverFamily: Hg,
    latestMessageFamily: td,
    allConversationsSelector: Og,
    useClearConvoState: t0,
    useCreateConversationAtom: e0,
    showMentionPopoverFamily: Wg,
    globalAudioURLFamily: Jg,
    activeRunFamily: Yg,
    audioRunFamily: Xg,
    globalAudioPlayingFamily: Zg,
    globalAudioFetchingFamily: Qg,
  },
  nd = {
    [N.azureOpenAI]: null,
    [N.azureAssistants]: null,
    [N.assistants]: null,
    [N.openAI]: null,
    [N.bingAI]: null,
    [N.chatGPTBrowser]: null,
    [N.gptPlugins]: null,
    [N.google]: null,
    [N.anthropic]: null,
    [N.custom]: null,
  },
  Bs = xe({ key: 'endpointsConfig', default: nd }),
  o0 = xe({ key: 'endpointsQueryEnabled', default: !0 }),
  a0 = Pa({
    key: 'plugins',
    get: ({ get: e }) => {
      var o;
      const n = e(Bs) || {};
      return ((o = n == null ? void 0 : n.gptPlugins) == null ? void 0 : o.plugins) || {};
    },
  }),
  i0 = Pa({
    key: 'endpointsFilter',
    get: ({ get: e }) => {
      const n = e(Bs) || {},
        o = {};
      for (const a of Object.keys(n)) o[a] = !!n[a];
      return o;
    },
  }),
  s0 = {
    plugins: a0,
    endpointsConfig: Bs,
    endpointsFilter: i0,
    defaultConfig: nd,
    endpointsQueryEnabled: o0,
  },
  r0 = xe({ key: 'user', default: void 0 }),
  c0 = xe({ key: 'availableTools', default: {} }),
  l0 = { user: r0, availableTools: c0 },
  _0 = xe({ key: 'text', default: '' }),
  d0 = { text: _0 },
  $s = 'prompt-textarea',
  Ha = 'global-audio';
var qs = ((e) => (
    (e.landing = 'landing'), (e.menuItem = 'menu-item'), (e.nav = 'nav'), (e.message = 'message'), e
  ))(qs || {}),
  En = ((e) => ((e.builder = 'builder'), (e.actions = 'actions'), e))(En || {});
const od = 450;
var ce = ((e) => (
    (e.Top = 'top'), (e.Right = 'right'), (e.Bottom = 'bottom'), (e.Left = 'left'), e
  ))(ce || {}),
  ct = ((e) => (
    (e.INFO = 'info'), (e.SUCCESS = 'success'), (e.WARNING = 'warning'), (e.ERROR = 'error'), e
  ))(ct || {});
const m0 = xe({
    key: 'toastState',
    default: { open: !1, message: '', severity: ct.SUCCESS, showIcon: !0 },
  }),
  u0 = { toastState: m0 },
  p0 = xe({ key: 'submission', default: null }),
  h0 = xe({ key: 'isSubmitting', default: !1 }),
  g0 = { submission: p0, isSubmitting: h0 },
  f0 = xe({ key: 'isSearchEnabled', default: null }),
  x0 = xe({ key: 'searchQuery', default: '' }),
  v0 = { isSearchEnabled: f0, searchQuery: x0 },
  b0 = xe({ key: 'presets', default: [] }),
  y0 = xe({ key: 'preset', default: null }),
  k0 = xe({ key: 'defaultPreset', default: null }),
  w0 = xe({ key: 'presetModalVisible', default: !1 }),
  j0 = { preset: y0, presets: b0, defaultPreset: k0, presetModalVisible: w0 },
  C0 = navigator.language || navigator.languages[0],
  N0 = xe({ key: 'lang', default: localStorage.getItem('lang') || C0 }),
  S0 = { lang: N0 };
function je(e, n) {
  return xe({
    key: e,
    default: n,
    effects_UNSTABLE: [
      ({ setSelf: o, onSet: a }) => {
        const i = localStorage.getItem(e);
        if (i !== null)
          try {
            const s = JSON.parse(i);
            o(s);
          } catch (s) {
            console.error(
              `Error parsing localStorage key "${e}", \`savedValue\`: defaultValue, error:`,
              s,
            ),
              localStorage.setItem(e, JSON.stringify(n)),
              o(n);
          }
        a((s) => {
          localStorage.setItem(e, JSON.stringify(s));
        });
      },
    ],
  });
}
const A0 = {
    abortScroll: xe({ key: 'abortScroll', default: !1 }),
    showFiles: xe({ key: 'showFiles', default: !1 }),
    optionSettings: xe({ key: 'optionSettings', default: {} }),
    showPluginStoreDialog: xe({ key: 'showPluginStoreDialog', default: !1 }),
    showAgentSettings: xe({ key: 'showAgentSettings', default: !1 }),
    currentSettingsView: xe({ key: 'currentSettingsView', default: zt.default }),
    showBingToneSetting: xe({ key: 'showBingToneSetting', default: !1 }),
    showPopover: xe({ key: 'showPopover', default: !1 }),
  },
  T0 = {
    autoScroll: je('autoScroll', !1),
    showCode: je('showCode', !1),
    hideSidePanel: je('hideSidePanel', !1),
    modularChat: je('modularChat', !0),
    LaTeXParsing: je('LaTeXParsing', !0),
    UsernameDisplay: je('UsernameDisplay', !0),
    TextToSpeech: je('textToSpeech', !0),
    automaticPlayback: je('automaticPlayback', !1),
    enterToSend: je('enterToSend', !0),
    SpeechToText: je('speechToText', !0),
    conversationMode: je('conversationMode', !1),
    advancedMode: je('advancedMode', !1),
    autoSendText: je('autoSendText', !1),
    autoTranscribeAudio: je('autoTranscribeAudio', !1),
    decibelValue: je('decibelValue', -45),
    endpointSTT: je('endpointSTT', 'browser'),
    endpointTTS: je('endpointTTS', 'browser'),
    cacheTTS: je('cacheTTS', !0),
    voice: je('voice', ''),
    forkSetting: je('forkSetting', ''),
    splitAtTarget: je('splitAtTarget', !1),
    rememberForkOption: je('rememberForkOption', !0),
    playbackRate: je('playbackRate', null),
    saveDrafts: je('saveDrafts', !1),
  },
  I0 = { ...A0, ...T0 },
  O = { ...n0, ...Pg, ...Mg, ...s0, ...l0, ...d0, ...u0, ...g0, ...v0, ...j0, ...S0, ...I0 },
  z0 = () => {
    const e = X();
    return le((n) => se.genTitle(n), {
      onSuccess: (n, o) => {
        e.setQueryData([G.conversation, o.conversationId], (a) => a && { ...a, title: n.title }),
          e.setQueryData(
            [G.allConversations],
            (a) => a && rg(a, { conversationId: o.conversationId, title: n.title }),
          ),
          (document.title = n.title);
      },
    });
  },
  L0 = (e) => {
    const n = X();
    return le((o) => se.updateConversation(o), {
      onSuccess: (o) => {
        n.setQueryData([G.conversation, e], o),
          n.setQueryData([G.allConversations], (a) => a && Yi(a, o));
      },
    });
  },
  P0 = (e) => {
    const n = X(),
      { refetch: o } = Mo(),
      { refetch: a } = Mo({ pageNumber: '1', isArchived: !0 });
    return le((i) => se.archiveConversation(i), {
      onSuccess: (i, s) => {
        if (
          (s.isArchived
            ? n.setQueryData([G.conversation, e], null)
            : n.setQueryData([G.conversation, e], i),
          n.setQueryData([G.allConversations], (r) => {
            if (!r) return r;
            const c = r.pages[0].pageSize;
            return eo(s.isArchived ? Eo(r, e) : Po(r, i), 'conversations', c);
          }),
          s.isArchived)
        ) {
          const r = n.getQueryData([G.allConversations]);
          o({ refetchPage: (c, l) => l === ((r == null ? void 0 : r.pages.length) || 1) - 1 });
        }
        if (
          (n.setQueryData([G.archivedConversations], (r) => {
            if (!r) return r;
            const c = r.pages[0].pageSize;
            return eo(s.isArchived ? Po(r, i) : Eo(r, e), 'conversations', c);
          }),
          !s.isArchived)
        ) {
          const r = n.getQueryData([G.archivedConversations]);
          a({ refetchPage: (c, l) => l === ((r == null ? void 0 : r.pages.length) || 1) - 1 });
        }
      },
    });
  },
  E0 = (e) => {
    const n = X(),
      { refetch: o } = Ka(),
      { onSuccess: a, ...i } = e || {};
    return le((s) => se.createSharedLink(s), {
      onSuccess: (s, r, c) => {
        if (r.conversationId) {
          if (
            (n.setQueryData([G.sharedLinks], (l) => {
              if (!l) return l;
              const d = l.pages[0].pageSize;
              return eo(r.isPublic ? Q_(l, s) : Fs(l, s.shareId), 'sharedLinks', d);
            }),
            n.setQueryData([G.sharedLinks, s.shareId], s),
            !r.isPublic)
          ) {
            const l = n.getQueryData([G.sharedLinks]);
            o({ refetchPage: (d, _) => _ === ((l == null ? void 0 : l.pages.length) || 1) - 1 });
          }
          a == null || a(s, r, c);
        }
      },
      ...(i || {}),
    });
  },
  M0 = (e) => {
    const n = X(),
      { refetch: o } = Ka(),
      { onSuccess: a, ...i } = e || {};
    return le((s) => se.updateSharedLink(s), {
      onSuccess: (s, r, c) => {
        if (r.conversationId) {
          if (
            (n.setQueryData(
              [G.sharedLinks],
              (l) =>
                l &&
                eo(r.isPublic ? Q_(l, s) : Fs(l, s.shareId), 'sharedLinks', l.pages[0].pageSize),
            ),
            n.setQueryData([G.sharedLinks, s.shareId], s),
            !r.isPublic)
          ) {
            const l = n.getQueryData([G.sharedLinks]);
            o({ refetchPage: (d, _) => _ === ((l == null ? void 0 : l.pages.length) || 1) - 1 });
          }
          a == null || a(s, r, c);
        }
      },
      ...(i || {}),
    });
  },
  R0 = (e) => {
    const n = X(),
      { refetch: o } = Ka(),
      { onSuccess: a, ...i } = e || {};
    return le(({ shareId: s }) => se.deleteSharedLink(s), {
      onSuccess: (s, r, c) => {
        if (!r.shareId) return;
        n.setQueryData([G.sharedMessages, r.shareId], null),
          n.setQueryData(
            [G.sharedLinks],
            (d) => d && eo(Fs(d, r.shareId), 'sharedLinks', d.pages[0].pageSize),
          );
        const l = n.getQueryData([G.sharedLinks]);
        o({ refetchPage: (d, _) => _ === ((l == null ? void 0 : l.pages.length) || 1) - 1 }),
          a == null || a(s, r, c);
      },
      ...(i || {}),
    });
  },
  O0 = (e) => {
    const n = X(),
      { refetch: o } = Mo(),
      { onSuccess: a, ...i } = e || {};
    return le((s) => se.deleteConversation(s), {
      onSuccess: (s, r, c) => {
        if (!r.conversationId) return;
        const l = (_) => _ && eo(Eo(_, r.conversationId), 'conversations', _.pages[0].pageSize);
        n.setQueryData([G.conversation, r.conversationId], null),
          n.setQueryData([G.allConversations], l),
          n.setQueryData([G.archivedConversations], l);
        const d = n.getQueryData([G.allConversations]);
        o({ refetchPage: (_, m) => m === ((d == null ? void 0 : d.pages.length) || 1) - 1 }),
          a == null || a(s, r, c);
      },
      ...(i || {}),
    });
  },
  D0 = (e) => {
    const n = X(),
      { onSuccess: o, ...a } = e || {};
    return le((i) => se.forkConversation(i), {
      onSuccess: (i, s, r) => {
        s.conversationId &&
          (n.setQueryData([G.conversation, i.conversation.conversationId], i.conversation),
          n.setQueryData([G.allConversations], (c) => c && Po(c, i.conversation)),
          n.setQueryData([G.messages, i.conversation.conversationId], i.messages),
          o == null || o(i, s, r));
      },
      ...(a || {}),
    });
  },
  F0 = (e) => {
    const n = X(),
      { onSuccess: o, onError: a, onMutate: i } = e || {};
    return le({
      mutationFn: (s) => se.importConversationsFile(s),
      onSuccess: (s, r, c) => {
        n.invalidateQueries([G.allConversations]), o && o(s, r, c);
      },
      onError: (s, r, c) => {
        a && a(s, r, c);
      },
      onMutate: i,
    });
  },
  B0 = (e) => {
    const n = X(),
      { onSuccess: o, ...a } = e || {};
    return le([lt.fileUpload], {
      mutationFn: (i) => {
        const s = i.get('width'),
          r = i.get('height'),
          c = i.get('version');
        return r && s && (!c || c != 2) ? se.uploadImage(i) : se.uploadFile(i);
      },
      ...(a || {}),
      onSuccess: (i, s, r) => {
        n.setQueryData([G.files], (m) => [i, ...(m ?? [])]);
        const c = s.get('endpoint'),
          l = s.get('assistant_id'),
          d = s.get('message_file'),
          _ = s.get('tool_resource');
        if (!l || d === 'true') {
          o == null || o(i, s, r);
          return;
        }
        n.setQueryData(
          [G.assistants, c, ut],
          (m) =>
            m && {
              ...m,
              data:
                m == null
                  ? void 0
                  : m.data.map((f) => {
                      var h;
                      if (f.id !== l) return f;
                      const g = {};
                      if (
                        (_ || (g.file_ids = [...f.file_ids, i.file_id]), _ === xa.code_interpreter)
                      ) {
                        const v = f.tool_resources ?? {},
                          x = ((h = f.tool_resources) == null ? void 0 : h[_]) ?? { file_ids: [] };
                        x.file_ids.push(i.file_id), (g.tool_resources = { ...v, [_]: x });
                      }
                      return { ...f, ...g };
                    }),
            },
        ),
          o == null || o(i, s, r);
      },
    });
  },
  Wa = (e) => {
    const n = X(),
      { onSuccess: o, ...a } = e || {};
    return le([lt.fileDelete], {
      mutationFn: (i) => se.deleteFiles(i.files, i.assistant_id, i.tool_resource),
      ...(a || {}),
      onSuccess: (i, ...s) => {
        n.setQueryData([G.files], (r) => {
          const { files: c } = s[0],
            l = c.reduce((d, _) => (d.set(_.file_id, _), d), new Map());
          return (r ?? []).filter((d) => !l.has(d.file_id));
        }),
          o == null || o(i, ...s);
      },
    });
  },
  $0 = (e) => le([lt.updatePreset], { mutationFn: (n) => se.updatePreset(n), ...(e || {}) }),
  q0 = (e) => le([lt.deletePreset], { mutationFn: (n) => se.deletePreset(n), ...(e || {}) }),
  U0 = (e) => {
    const n = X(),
      o = ye(O.defaultPreset);
    return le([lt.logoutUser], {
      mutationFn: () => se.logout(),
      ...(e || {}),
      onSuccess: (...a) => {
        var i;
        (i = e == null ? void 0 : e.onSuccess) == null || i.call(e, ...a);
      },
      onMutate: (...a) => {
        var i;
        o(null),
          n.removeQueries(),
          localStorage.removeItem(te.LAST_CONVO_SETUP),
          localStorage.removeItem(te.LAST_MODEL),
          localStorage.removeItem(te.LAST_TOOLS),
          localStorage.removeItem(te.FILES_TO_DELETE),
          (i = e == null ? void 0 : e.onMutate) == null || i.call(e, ...a);
      },
    });
  },
  V0 = (e) => le([lt.avatarUpload], { mutationFn: (n) => se.uploadAvatar(n), ...(e || {}) }),
  G0 = (e) => {
    const n = X(),
      o = ye(O.defaultPreset);
    return le([lt.deleteUser], {
      mutationFn: () => se.deleteUser(),
      ...(e || {}),
      onSuccess: (...a) => {
        var i;
        (i = e == null ? void 0 : e.onSuccess) == null || i.call(e, ...a);
      },
      onMutate: (...a) => {
        var i;
        o(null),
          n.removeQueries(),
          localStorage.removeItem(te.LAST_CONVO_SETUP),
          localStorage.removeItem(te.LAST_MODEL),
          localStorage.removeItem(te.LAST_TOOLS),
          localStorage.removeItem(te.FILES_TO_DELETE),
          (i = e == null ? void 0 : e.onMutate) == null || i.call(e, ...a);
      },
    });
  },
  K0 = (e) => le([lt.speechToText], { mutationFn: (n) => se.speechToText(n), ...(e || {}) }),
  H0 = (e) => le([lt.textToSpeech], { mutationFn: (n) => se.textToSpeech(n), ...(e || {}) }),
  W0 = (e) => {
    const n = X();
    return le((o) => se.createAssistant(o), {
      onMutate: (o) => {
        var a;
        return (a = e == null ? void 0 : e.onMutate) == null ? void 0 : a.call(e, o);
      },
      onError: (o, a, i) => {
        var s;
        return (s = e == null ? void 0 : e.onError) == null ? void 0 : s.call(e, o, a, i);
      },
      onSuccess: (o, a, i) => {
        var c, l;
        const s = n.getQueryData([G.assistants, a.endpoint, ut]);
        if (!s) return (c = e == null ? void 0 : e.onSuccess) == null ? void 0 : c.call(e, o, a, i);
        const r = [o, ...JSON.parse(JSON.stringify(s.data))];
        return (
          n.setQueryData([G.assistants, a.endpoint, ut], { ...s, data: r }),
          (l = e == null ? void 0 : e.onSuccess) == null ? void 0 : l.call(e, o, a, i)
        );
      },
    });
  },
  J0 = (e) => {
    const n = X();
    return le(
      ({ assistant_id: o, data: a }) => {
        var c;
        const { endpoint: i } = a,
          s = n.getQueryData([G.endpoints]),
          r = ((c = s == null ? void 0 : s[i]) == null ? void 0 : c.version) ?? kn[i];
        return se.updateAssistant({ data: a, version: r, assistant_id: o });
      },
      {
        onMutate: (o) => {
          var a;
          return (a = e == null ? void 0 : e.onMutate) == null ? void 0 : a.call(e, o);
        },
        onError: (o, a, i) => {
          var s;
          return (s = e == null ? void 0 : e.onError) == null ? void 0 : s.call(e, o, a, i);
        },
        onSuccess: (o, a, i) => {
          var r, c;
          const s = n.getQueryData([G.assistants, a.data.endpoint, ut]);
          return s
            ? (n.setQueryData([G.assistants, a.data.endpoint, ut], {
                ...s,
                data: s.data.map((l) => (l.id === a.assistant_id ? o : l)),
              }),
              (c = e == null ? void 0 : e.onSuccess) == null ? void 0 : c.call(e, o, a, i))
            : (r = e == null ? void 0 : e.onSuccess) == null
            ? void 0
            : r.call(e, o, a, i);
        },
      },
    );
  },
  Q0 = (e) => {
    const n = X();
    return le(
      ({ assistant_id: o, model: a, endpoint: i }) => {
        var c;
        const s = n.getQueryData([G.endpoints]),
          r = ((c = s == null ? void 0 : s[i]) == null ? void 0 : c.version) ?? kn[i];
        return se.deleteAssistant({ assistant_id: o, model: a, version: r, endpoint: i });
      },
      {
        onMutate: (o) => {
          var a;
          return (a = e == null ? void 0 : e.onMutate) == null ? void 0 : a.call(e, o);
        },
        onError: (o, a, i) => {
          var s;
          return (s = e == null ? void 0 : e.onError) == null ? void 0 : s.call(e, o, a, i);
        },
        onSuccess: (o, a, i) => {
          var c, l;
          const s = n.getQueryData([G.assistants, a.endpoint, ut]);
          if (!s)
            return (c = e == null ? void 0 : e.onSuccess) == null ? void 0 : c.call(e, o, a, i);
          const r = s.data.filter((d) => d.id !== a.assistant_id);
          return (
            n.setQueryData([G.assistants, a.endpoint, ut], { ...s, data: r }),
            (l = e == null ? void 0 : e.onSuccess) == null ? void 0 : l.call(e, o, a, r)
          );
        },
      },
    );
  },
  Z0 = (e) =>
    le([lt.assistantAvatarUpload], {
      mutationFn: ({ postCreation: n, ...o }) => se.uploadAssistantAvatar(o),
      ...(e || {}),
    }),
  Y0 = (e) => {
    const n = X();
    return le([lt.updateAction], {
      mutationFn: (o) => se.updateAction(o),
      onMutate: (o) => {
        var a;
        return (a = e == null ? void 0 : e.onMutate) == null ? void 0 : a.call(e, o);
      },
      onError: (o, a, i) => {
        var s;
        return (s = e == null ? void 0 : e.onError) == null ? void 0 : s.call(e, o, a, i);
      },
      onSuccess: (o, a, i) => {
        var c, l;
        const s = n.getQueryData([G.assistants, a.endpoint, ut]);
        if (!s) return (c = e == null ? void 0 : e.onSuccess) == null ? void 0 : c.call(e, o, a, i);
        const r = o[1];
        return (
          n.setQueryData([G.assistants, a.endpoint, ut], {
            ...s,
            data: s.data.map((d) => (d.id === a.assistant_id ? r : d)),
          }),
          n.setQueryData([G.actions], (d) =>
            d == null
              ? void 0
              : d
                  .map((_) => (_.action_id === a.action_id ? o[2] : _))
                  .concat(a.action_id ? [] : [o[2]]),
          ),
          (l = e == null ? void 0 : e.onSuccess) == null ? void 0 : l.call(e, o, a, i)
        );
      },
    });
  },
  X0 = (e) => {
    const n = X();
    return le([lt.deleteAction], {
      mutationFn: (o) => {
        var r;
        const { endpoint: a } = o,
          i = n.getQueryData([G.endpoints]),
          s = ((r = i == null ? void 0 : i[a]) == null ? void 0 : r.version) ?? kn[a];
        return se.deleteAction({ ...o, version: s });
      },
      onMutate: (o) => {
        var a;
        return (a = e == null ? void 0 : e.onMutate) == null ? void 0 : a.call(e, o);
      },
      onError: (o, a, i) => {
        var s;
        return (s = e == null ? void 0 : e.onError) == null ? void 0 : s.call(e, o, a, i);
      },
      onSuccess: (o, a, i) => {
        var r;
        let s = '';
        return (
          n.setQueryData([G.actions], (c) =>
            c == null
              ? void 0
              : c.filter((l) => ((s = l.metadata.domain), l.action_id !== a.action_id)),
          ),
          n.setQueryData(
            [G.assistants, a.endpoint, ut],
            (c) =>
              c && {
                ...c,
                data:
                  c == null
                    ? void 0
                    : c.data.map((l) =>
                        l.id === a.assistant_id
                          ? {
                              ...l,
                              tools: l.tools.filter((d) => {
                                var _;
                                return !((_ = d.function) != null && _.name.includes(s ?? ''));
                              }),
                            }
                          : l,
                      ),
              },
          ),
          (r = e == null ? void 0 : e.onSuccess) == null ? void 0 : r.call(e, o, a, i)
        );
      },
    });
  },
  ef = (e) => le({ mutationFn: (n) => se.verifyEmail(n), ...(e || {}) }),
  ad = (e) => le({ mutationFn: (n) => se.resendVerificationEmail(n), ...(e || {}) });
function tf({ isAuthenticated: e }) {
  const { data: n = {} } = Ro(N.assistants, void 0, { select: (a) => ja(a.data), enabled: e }),
    { data: o = {} } = Ro(N.azureAssistants, void 0, { select: (a) => ja(a.data), enabled: e });
  return { [N.assistants]: n, [N.azureAssistants]: o };
}
var Na,
  gc,
  fc,
  xc,
  vc,
  bc,
  yc,
  kc,
  wc,
  jc,
  Cc,
  Nc,
  Sc,
  ae = function () {
    return (
      (ae =
        Object.assign ||
        function (e) {
          for (var n, o = 1, a = arguments.length; o < a; o++)
            for (var i in (n = arguments[o]))
              Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
          return e;
        }),
      ae.apply(this, arguments)
    );
  };
function At(e, n, o, a) {
  return new (o || (o = Promise))(function (i, s) {
    function r(d) {
      try {
        l(a.next(d));
      } catch (_) {
        s(_);
      }
    }
    function c(d) {
      try {
        l(a.throw(d));
      } catch (_) {
        s(_);
      }
    }
    function l(d) {
      var _;
      d.done
        ? i(d.value)
        : ((_ = d.value),
          _ instanceof o
            ? _
            : new o(function (m) {
                m(_);
              })).then(r, c);
    }
    l((a = a.apply(e, n || [])).next());
  });
}
function Tt(e, n) {
  var o,
    a,
    i,
    s,
    r = {
      label: 0,
      sent: function () {
        if (1 & i[0]) throw i[1];
        return i[1];
      },
      trys: [],
      ops: [],
    };
  return (
    (s = { next: c(0), throw: c(1), return: c(2) }),
    typeof Symbol == 'function' &&
      (s[Symbol.iterator] = function () {
        return this;
      }),
    s
  );
  function c(l) {
    return function (d) {
      return (function (_) {
        if (o) throw new TypeError('Generator is already executing.');
        for (; s && ((s = 0), _[0] && (r = 0)), r; )
          try {
            if (
              ((o = 1),
              a &&
                (i =
                  2 & _[0]
                    ? a.return
                    : _[0]
                    ? a.throw || ((i = a.return) && i.call(a), 0)
                    : a.next) &&
                !(i = i.call(a, _[1])).done)
            )
              return i;
            switch (((a = 0), i && (_ = [2 & _[0], i.value]), _[0])) {
              case 0:
              case 1:
                i = _;
                break;
              case 4:
                return r.label++, { value: _[1], done: !1 };
              case 5:
                r.label++, (a = _[1]), (_ = [0]);
                continue;
              case 7:
                (_ = r.ops.pop()), r.trys.pop();
                continue;
              default:
                if (
                  ((i = r.trys),
                  !((i = i.length > 0 && i[i.length - 1]) || (_[0] !== 6 && _[0] !== 2)))
                ) {
                  r = 0;
                  continue;
                }
                if (_[0] === 3 && (!i || (_[1] > i[0] && _[1] < i[3]))) {
                  r.label = _[1];
                  break;
                }
                if (_[0] === 6 && r.label < i[1]) {
                  (r.label = i[1]), (i = _);
                  break;
                }
                if (i && r.label < i[2]) {
                  (r.label = i[2]), r.ops.push(_);
                  break;
                }
                i[2] && r.ops.pop(), r.trys.pop();
                continue;
            }
            _ = n.call(e, r);
          } catch (m) {
            (_ = [6, m]), (a = 0);
          } finally {
            o = i = 0;
          }
        if (5 & _[0]) throw _[1];
        return { value: _[0] ? _[1] : void 0, done: !0 };
      })([l, d]);
    };
  }
}
function To(e, n, o) {
  if (o || arguments.length === 2)
    for (var a, i = 0, s = n.length; i < s; i++)
      (!a && i in n) || (a || (a = Array.prototype.slice.call(n, 0, i)), (a[i] = n[i]));
  return e.concat(a || Array.prototype.slice.call(n));
}
typeof SuppressedError == 'function' && SuppressedError,
  (function (e) {
    (e.code_interpreter = 'code_interpreter'),
      (e.file_search = 'file_search'),
      (e.retrieval = 'retrieval'),
      (e.function = 'function');
  })(Na || (Na = {})),
  (function (e) {
    (e.code_interpreter = 'code_interpreter'), (e.file_search = 'file_search');
  })(gc || (gc = {})),
  (function (e) {
    (e.FILE_CITATION = 'file_citation'), (e.FILE_PATH = 'file_path');
  })(fc || (fc = {})),
  (function (e) {
    (e.TEXT = 'text'),
      (e.TOOL_CALL = 'tool_call'),
      (e.IMAGE_FILE = 'image_file'),
      (e.ERROR = 'error');
  })(xc || (xc = {})),
  (function (e) {
    (e.TOOL_CALLS = 'tool_calls'), (e.MESSAGE_CREATION = 'message_creation');
  })(vc || (vc = {})),
  (function (e) {
    (e.FUNCTION = 'function'),
      (e.RETRIEVAL = 'retrieval'),
      (e.FILE_SEARCH = 'file_search'),
      (e.CODE_INTERPRETER = 'code_interpreter');
  })(bc || (bc = {})),
  (function (e) {
    (e.IN_PROGRESS = 'in_progress'),
      (e.CANCELLED = 'cancelled'),
      (e.FAILED = 'failed'),
      (e.COMPLETED = 'completed'),
      (e.EXPIRED = 'expired');
  })(yc || (yc = {})),
  (function (e) {
    (e.TEXT = 'text'), (e.IMAGE_FILE = 'image_file');
  })(kc || (kc = {})),
  (function (e) {
    (e.QUEUED = 'queued'),
      (e.IN_PROGRESS = 'in_progress'),
      (e.REQUIRES_ACTION = 'requires_action'),
      (e.CANCELLING = 'cancelling'),
      (e.CANCELLED = 'cancelled'),
      (e.FAILED = 'failed'),
      (e.COMPLETED = 'completed'),
      (e.EXPIRED = 'expired');
  })(wc || (wc = {})),
  (function (e) {
    (e.ServiceHttp = 'service_http'), (e.OAuth = 'oauth'), (e.None = 'none');
  })(jc || (jc = {})),
  (function (e) {
    (e.Bearer = 'bearer'), (e.Basic = 'basic'), (e.Custom = 'custom');
  })(Cc || (Cc = {})),
  (function (e) {
    (e.DefaultPost = 'default_post'), (e.BasicAuthHeader = 'basic_auth_header');
  })(Nc || (Nc = {})),
  (function (e) {
    (e.Vision = 'vision'),
      (e.FineTune = 'fine-tune'),
      (e.FineTuneResults = 'fine-tune-results'),
      (e.Assistants = 'assistants'),
      (e.AssistantsOutput = 'assistants_output');
  })(Sc || (Sc = {}));
var Ac,
  Si,
  Ai,
  ts,
  ns = { order: 'desc', limit: 100 };
(function (e) {
  (e.ThreadCreated = 'thread.created'),
    (e.ThreadRunCreated = 'thread.run.created'),
    (e.ThreadRunQueued = 'thread.run.queued'),
    (e.ThreadRunInProgress = 'thread.run.in_progress'),
    (e.ThreadRunRequiresAction = 'thread.run.requires_action'),
    (e.ThreadRunCompleted = 'thread.run.completed'),
    (e.ThreadRunFailed = 'thread.run.failed'),
    (e.ThreadRunCancelling = 'thread.run.cancelling'),
    (e.ThreadRunCancelled = 'thread.run.cancelled'),
    (e.ThreadRunExpired = 'thread.run.expired'),
    (e.ThreadRunStepCreated = 'thread.run.step.created'),
    (e.ThreadRunStepInProgress = 'thread.run.step.in_progress'),
    (e.ThreadRunStepCompleted = 'thread.run.step.completed'),
    (e.ThreadRunStepFailed = 'thread.run.step.failed'),
    (e.ThreadRunStepCancelled = 'thread.run.step.cancelled'),
    (e.ThreadRunStepExpired = 'thread.run.step.expired'),
    (e.ThreadRunStepDelta = 'thread.run.step.delta'),
    (e.ThreadMessageCreated = 'thread.message.created'),
    (e.ThreadMessageInProgress = 'thread.message.in_progress'),
    (e.ThreadMessageCompleted = 'thread.message.completed'),
    (e.ThreadMessageIncomplete = 'thread.message.incomplete'),
    (e.ThreadMessageDelta = 'thread.message.delta'),
    (e.ErrorEvent = 'error');
})(Ac || (Ac = {})),
  u.string().uuid(),
  (function (e) {
    (e.OVERRIDE_AUTH = 'override_auth'),
      (e.USER_PROVIDED = 'user_provided'),
      (e.SYSTEM_DEFINED = 'SYSTEM_DEFINED');
  })(ts || (ts = {}));
var K,
  nf = u.nativeEnum(ts);
(function (e) {
  (e.azureOpenAI = 'azureOpenAI'),
    (e.openAI = 'openAI'),
    (e.bingAI = 'bingAI'),
    (e.chatGPTBrowser = 'chatGPTBrowser'),
    (e.google = 'google'),
    (e.gptPlugins = 'gptPlugins'),
    (e.anthropic = 'anthropic'),
    (e.assistants = 'assistants'),
    (e.azureAssistants = 'azureAssistants'),
    (e.custom = 'custom');
})(K || (K = {}));
var It;
(function (e) {
  (e.low = 'low'), (e.auto = 'auto'), (e.high = 'high');
})(It || (It = {})),
  ((Si = {})[It.low] = 0),
  (Si[It.auto] = 1),
  (Si[It.high] = 2),
  It.low,
  It.auto,
  It.high;
var of = u.nativeEnum(It);
({ type: Na.function })[Na.function] = {
  name: 'image_vision',
  description: 'Get detailed text descriptions for all current image attachments.',
  parameters: { type: 'object', properties: {}, required: [] },
};
var Ut,
  qe = {
    model: { default: 'gpt-4o' },
    temperature: { min: 0, max: 1, step: 0.01, default: 1 },
    top_p: { min: 0, max: 1, step: 0.01, default: 1 },
    presence_penalty: { min: 0, max: 2, step: 0.01, default: 0 },
    frequency_penalty: { min: 0, max: 2, step: 0.01, default: 0 },
    resendFiles: { default: !0 },
    maxContextTokens: { default: void 0 },
    max_tokens: { default: void 0 },
    imageDetail: { default: It.auto },
  },
  at = (((Ai = {})[K.openAI] = qe),
  (Ai[K.google] = {
    model: { default: 'gemini-1.5-flash-latest' },
    maxOutputTokens: { min: 1, max: 8192, step: 1, default: 8192 },
    temperature: { min: 0, max: 2, step: 0.01, default: 1 },
    topP: { min: 0, max: 1, step: 0.01, default: 0.95 },
    topK: { min: 1, max: 40, step: 0.01, default: 40 },
  }),
  Ai)[K.google],
  Oo = u.nativeEnum(K),
  os = u.union([Oo, u.string()]),
  af = u.object({ authField: u.string(), label: u.string(), description: u.string() }),
  sf = u.object({
    name: u.string(),
    pluginKey: u.string(),
    description: u.string(),
    icon: u.string(),
    authConfig: u.array(af),
    authenticated: u.boolean().optional(),
    isButton: u.boolean().optional(),
  }),
  rf = u.object({
    input: u.object({ content: u.string() }),
    output: u.object({ content: u.string() }),
  });
(function (e) {
  (e.functions = 'functions'), (e.classic = 'classic');
})(Ut || (Ut = {}));
var cf = { min: 0, max: 1, step: 0.01, default: 0 },
  lf = (Ut.functions, Ut.functions, Ut.classic, { default: !0 });
u.nativeEnum(Ut);
var _f = u.object({
  agent: u.string().default(Ut.functions),
  skipCompletion: u.boolean().default(lf.default),
  model: u.string(),
  temperature: u.number().default(cf.default),
});
u.object({
  messageId: u.string(),
  endpoint: u.string().optional(),
  clientId: u.string().nullable().optional(),
  conversationId: u.string().nullable(),
  parentMessageId: u.string().nullable(),
  responseMessageId: u.string().nullable().optional(),
  overrideParentMessageId: u.string().nullable().optional(),
  bg: u.string().nullable().optional(),
  model: u.string().nullable().optional(),
  title: u.string().nullable().or(u.literal('New Chat')).default('New Chat'),
  sender: u.string(),
  text: u.string(),
  generation: u.string().nullable().optional(),
  isEdited: u.boolean().optional(),
  isCreatedByUser: u.boolean(),
  error: u.boolean(),
  createdAt: u
    .string()
    .optional()
    .default(function () {
      return new Date().toISOString();
    }),
  updatedAt: u
    .string()
    .optional()
    .default(function () {
      return new Date().toISOString();
    }),
  current: u.boolean().optional(),
  unfinished: u.boolean().optional(),
  searchResult: u.boolean().optional(),
  finish_reason: u.string().optional(),
  thread_id: u.string().optional(),
  iconURL: u.string().optional(),
});
var Tn,
  Ti,
  Tc = u.union([u.number(), u.string()]).transform(function (e) {
    return typeof e == 'string' ? (e.trim() === '' ? void 0 : parseFloat(e)) : e;
  }),
  We = u.object({
    conversationId: u.string().nullable(),
    title: u.string().nullable().or(u.literal('New Chat')).default('New Chat'),
    user: u.string().optional(),
    endpoint: Oo.nullable(),
    endpointType: Oo.optional(),
    suggestions: u.array(u.string()).optional(),
    messages: u.array(u.string()).optional(),
    tools: u.union([u.array(sf), u.array(u.string())]).optional(),
    createdAt: u.string(),
    updatedAt: u.string(),
    modelLabel: u.string().nullable().optional(),
    examples: u.array(rf).optional(),
    chatGptLabel: u.string().nullable().optional(),
    userLabel: u.string().optional(),
    model: u.string().nullable().optional(),
    promptPrefix: u.string().nullable().optional(),
    temperature: u.number().optional(),
    topP: u.number().optional(),
    topK: u.number().optional(),
    context: u.string().nullable().optional(),
    top_p: u.number().optional(),
    frequency_penalty: u.number().optional(),
    presence_penalty: u.number().optional(),
    parentMessageId: u.string().optional(),
    maxOutputTokens: u.number().optional(),
    agentOptions: _f.nullable().optional(),
    file_ids: u.array(u.string()).optional(),
    maxContextTokens: Tc.optional(),
    max_tokens: Tc.optional(),
    resendFiles: u.boolean().optional(),
    imageDetail: of.optional(),
    assistant_id: u.string().optional(),
    instructions: u.string().optional(),
    presetOverride: u.record(u.unknown()).optional(),
    stop: u.array(u.string()).optional(),
    iconURL: u.string().optional(),
    greeting: u.string().optional(),
    spec: u.string().optional(),
    systemMessage: u.string().nullable().optional(),
    jailbreak: u.boolean().optional(),
    jailbreakConversationId: u.string().nullable().optional(),
    conversationSignature: u.string().nullable().optional(),
    clientId: u.string().nullable().optional(),
    invocationId: u.number().nullable().optional(),
    toneStyle: u.string().nullable().optional(),
    resendImages: u.boolean().optional(),
  }),
  df = We.omit({ conversationId: !0, createdAt: !0, updatedAt: !0, title: !0 }).merge(
    u.object({
      conversationId: u.string().nullable().optional(),
      presetId: u.string().nullable().optional(),
      title: u.string().nullable().optional(),
      defaultPreset: u.boolean().optional(),
      order: u.number().optional(),
      endpoint: os.nullable(),
    }),
  );
function Vn(e) {
  var n = ae({}, e);
  return (
    Object.keys(n).forEach(function (o) {
      (n[o] !== void 0 && n[o] !== null && n[o] !== '') || delete n[o];
    }),
    n
  );
}
We.merge(u.object({ endpoint: os.nullable() })),
  We.merge(u.object({ endpoint: os.nullable() })),
  u.object({
    conversationId: u.string(),
    shareId: u.string(),
    messages: u.array(u.string()),
    isAnonymous: u.boolean(),
    isPublic: u.boolean(),
    isVisible: u.boolean(),
    title: u.string(),
    createdAt: u.string(),
    updatedAt: u.string(),
  }),
  We.pick({
    model: !0,
    modelLabel: !0,
    chatGptLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    top_p: !0,
    presence_penalty: !0,
    frequency_penalty: !0,
    resendFiles: !0,
    imageDetail: !0,
    stop: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
    max_tokens: !0,
  })
    .transform(function (e) {
      var n,
        o,
        a,
        i,
        s,
        r,
        c,
        l,
        d,
        _,
        m,
        f,
        g,
        h,
        v,
        x = ae(ae({}, e), {
          model: (n = e.model) !== null && n !== void 0 ? n : qe.model.default,
          chatGptLabel:
            (a = (o = e.chatGptLabel) !== null && o !== void 0 ? o : e.modelLabel) !== null &&
            a !== void 0
              ? a
              : null,
          promptPrefix: (i = e.promptPrefix) !== null && i !== void 0 ? i : null,
          temperature: (s = e.temperature) !== null && s !== void 0 ? s : qe.temperature.default,
          top_p: (r = e.top_p) !== null && r !== void 0 ? r : qe.top_p.default,
          presence_penalty:
            (c = e.presence_penalty) !== null && c !== void 0 ? c : qe.presence_penalty.default,
          frequency_penalty:
            (l = e.frequency_penalty) !== null && l !== void 0 ? l : qe.frequency_penalty.default,
          resendFiles: typeof e.resendFiles == 'boolean' ? e.resendFiles : qe.resendFiles.default,
          imageDetail: (d = e.imageDetail) !== null && d !== void 0 ? d : qe.imageDetail.default,
          stop: (_ = e.stop) !== null && _ !== void 0 ? _ : void 0,
          iconURL: (m = e.iconURL) !== null && m !== void 0 ? m : void 0,
          greeting: (f = e.greeting) !== null && f !== void 0 ? f : void 0,
          spec: (g = e.spec) !== null && g !== void 0 ? g : void 0,
          maxContextTokens: (h = e.maxContextTokens) !== null && h !== void 0 ? h : void 0,
          max_tokens: (v = e.max_tokens) !== null && v !== void 0 ? v : void 0,
        });
      return e.modelLabel && (x.modelLabel = null), x;
    })
    .catch(function () {
      return {
        model: qe.model.default,
        chatGptLabel: null,
        promptPrefix: null,
        temperature: qe.temperature.default,
        top_p: qe.top_p.default,
        presence_penalty: qe.presence_penalty.default,
        frequency_penalty: qe.frequency_penalty.default,
        resendFiles: qe.resendFiles.default,
        imageDetail: qe.imageDetail.default,
        stop: void 0,
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
        maxContextTokens: void 0,
        max_tokens: void 0,
      };
    }),
  We.pick({
    model: !0,
    modelLabel: !0,
    promptPrefix: !0,
    examples: !0,
    temperature: !0,
    maxOutputTokens: !0,
    topP: !0,
    topK: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n, o, a, i, s, r, c, l, d, _, m, f;
      return ae(ae({}, e), {
        model: (n = e.model) !== null && n !== void 0 ? n : at.model.default,
        modelLabel: (o = e.modelLabel) !== null && o !== void 0 ? o : null,
        promptPrefix: (a = e.promptPrefix) !== null && a !== void 0 ? a : null,
        examples:
          (i = e.examples) !== null && i !== void 0
            ? i
            : [{ input: { content: '' }, output: { content: '' } }],
        temperature: (s = e.temperature) !== null && s !== void 0 ? s : at.temperature.default,
        maxOutputTokens:
          (r = e.maxOutputTokens) !== null && r !== void 0 ? r : at.maxOutputTokens.default,
        topP: (c = e.topP) !== null && c !== void 0 ? c : at.topP.default,
        topK: (l = e.topK) !== null && l !== void 0 ? l : at.topK.default,
        iconURL: (d = e.iconURL) !== null && d !== void 0 ? d : void 0,
        greeting: (_ = e.greeting) !== null && _ !== void 0 ? _ : void 0,
        spec: (m = e.spec) !== null && m !== void 0 ? m : void 0,
        maxContextTokens: (f = e.maxContextTokens) !== null && f !== void 0 ? f : void 0,
      });
    })
    .catch(function () {
      return {
        model: at.model.default,
        modelLabel: null,
        promptPrefix: null,
        examples: [{ input: { content: '' }, output: { content: '' } }],
        temperature: at.temperature.default,
        maxOutputTokens: at.maxOutputTokens.default,
        topP: at.topP.default,
        topK: at.topK.default,
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
        maxContextTokens: void 0,
      };
    }),
  We.pick({
    jailbreak: !0,
    systemMessage: !0,
    context: !0,
    toneStyle: !0,
    jailbreakConversationId: !0,
    conversationSignature: !0,
    clientId: !0,
    invocationId: !0,
  })
    .transform(function (e) {
      var n, o, a, i, s, r, c, l;
      return ae(ae({}, e), {
        model: '',
        jailbreak: (n = e.jailbreak) !== null && n !== void 0 && n,
        systemMessage: (o = e.systemMessage) !== null && o !== void 0 ? o : null,
        context: (a = e.context) !== null && a !== void 0 ? a : null,
        toneStyle: (i = e.toneStyle) !== null && i !== void 0 ? i : 'creative',
        jailbreakConversationId:
          (s = e.jailbreakConversationId) !== null && s !== void 0 ? s : null,
        conversationSignature: (r = e.conversationSignature) !== null && r !== void 0 ? r : null,
        clientId: (c = e.clientId) !== null && c !== void 0 ? c : null,
        invocationId: (l = e.invocationId) !== null && l !== void 0 ? l : 1,
      });
    })
    .catch(function () {
      return {
        model: '',
        jailbreak: !1,
        systemMessage: null,
        context: null,
        toneStyle: 'creative',
        jailbreakConversationId: null,
        conversationSignature: null,
        clientId: null,
        invocationId: 1,
      };
    }),
  We.pick({
    model: !0,
    modelLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    maxOutputTokens: !0,
    topP: !0,
    topK: !0,
    resendFiles: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n, o, a, i, s, r, c, l, d, _, m;
      return ae(ae({}, e), {
        model: (n = e.model) !== null && n !== void 0 ? n : 'claude-1',
        modelLabel: (o = e.modelLabel) !== null && o !== void 0 ? o : null,
        promptPrefix: (a = e.promptPrefix) !== null && a !== void 0 ? a : null,
        temperature: (i = e.temperature) !== null && i !== void 0 ? i : 1,
        maxOutputTokens: (s = e.maxOutputTokens) !== null && s !== void 0 ? s : 4e3,
        topP: (r = e.topP) !== null && r !== void 0 ? r : 0.7,
        topK: (c = e.topK) !== null && c !== void 0 ? c : 5,
        resendFiles: typeof e.resendFiles != 'boolean' || e.resendFiles,
        iconURL: (l = e.iconURL) !== null && l !== void 0 ? l : void 0,
        greeting: (d = e.greeting) !== null && d !== void 0 ? d : void 0,
        spec: (_ = e.spec) !== null && _ !== void 0 ? _ : void 0,
        maxContextTokens: (m = e.maxContextTokens) !== null && m !== void 0 ? m : void 0,
      });
    })
    .catch(function () {
      return {
        model: 'claude-1',
        modelLabel: null,
        promptPrefix: null,
        temperature: 1,
        maxOutputTokens: 4e3,
        topP: 0.7,
        topK: 5,
        resendFiles: !0,
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
        maxContextTokens: void 0,
      };
    }),
  We.pick({ model: !0 })
    .transform(function (e) {
      var n;
      return ae(ae({}, e), {
        model: (n = e.model) !== null && n !== void 0 ? n : 'text-davinci-002-render-sha',
      });
    })
    .catch(function () {
      return { model: 'text-davinci-002-render-sha' };
    }),
  We.pick({
    model: !0,
    modelLabel: !0,
    chatGptLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    top_p: !0,
    presence_penalty: !0,
    frequency_penalty: !0,
    tools: !0,
    agentOptions: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n,
        o,
        a,
        i,
        s,
        r,
        c,
        l,
        d,
        _,
        m,
        f,
        g,
        h,
        v = ae(ae({}, e), {
          model: (n = e.model) !== null && n !== void 0 ? n : 'gpt-3.5-turbo',
          chatGptLabel:
            (a = (o = e.chatGptLabel) !== null && o !== void 0 ? o : e.modelLabel) !== null &&
            a !== void 0
              ? a
              : null,
          promptPrefix: (i = e.promptPrefix) !== null && i !== void 0 ? i : null,
          temperature: (s = e.temperature) !== null && s !== void 0 ? s : 0.8,
          top_p: (r = e.top_p) !== null && r !== void 0 ? r : 1,
          presence_penalty: (c = e.presence_penalty) !== null && c !== void 0 ? c : 0,
          frequency_penalty: (l = e.frequency_penalty) !== null && l !== void 0 ? l : 0,
          tools: (d = e.tools) !== null && d !== void 0 ? d : [],
          agentOptions:
            (_ = e.agentOptions) !== null && _ !== void 0
              ? _
              : { agent: Ut.functions, skipCompletion: !0, model: 'gpt-3.5-turbo', temperature: 0 },
          iconURL: (m = e.iconURL) !== null && m !== void 0 ? m : void 0,
          greeting: (f = e.greeting) !== null && f !== void 0 ? f : void 0,
          spec: (g = e.spec) !== null && g !== void 0 ? g : void 0,
          maxContextTokens: (h = e.maxContextTokens) !== null && h !== void 0 ? h : void 0,
        });
      return e.modelLabel && (v.modelLabel = null), v;
    })
    .catch(function () {
      return {
        model: 'gpt-3.5-turbo',
        chatGptLabel: null,
        promptPrefix: null,
        temperature: 0.8,
        top_p: 1,
        presence_penalty: 0,
        frequency_penalty: 0,
        tools: [],
        agentOptions: {
          agent: Ut.functions,
          skipCompletion: !0,
          model: 'gpt-3.5-turbo',
          temperature: 0,
        },
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
        maxContextTokens: void 0,
      };
    }),
  We.pick({
    model: !0,
    assistant_id: !0,
    instructions: !0,
    promptPrefix: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
  })
    .transform(function (e) {
      var n, o, a, i, s, r, c;
      return ae(ae({}, e), {
        model: (n = e.model) !== null && n !== void 0 ? n : qe.model.default,
        assistant_id: (o = e.assistant_id) !== null && o !== void 0 ? o : void 0,
        instructions: (a = e.instructions) !== null && a !== void 0 ? a : void 0,
        promptPrefix: (i = e.promptPrefix) !== null && i !== void 0 ? i : null,
        iconURL: (s = e.iconURL) !== null && s !== void 0 ? s : void 0,
        greeting: (r = e.greeting) !== null && r !== void 0 ? r : void 0,
        spec: (c = e.spec) !== null && c !== void 0 ? c : void 0,
      });
    })
    .catch(function () {
      return {
        model: qe.model.default,
        assistant_id: void 0,
        instructions: void 0,
        promptPrefix: null,
        iconURL: void 0,
        greeting: void 0,
        spec: void 0,
      };
    }),
  We.pick({
    model: !0,
    assistant_id: !0,
    instructions: !0,
    promptPrefix: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
  })
    .transform(Vn)
    .catch(function () {
      return {};
    }),
  We.pick({
    model: !0,
    chatGptLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    top_p: !0,
    presence_penalty: !0,
    frequency_penalty: !0,
    resendFiles: !0,
    imageDetail: !0,
    stop: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
    max_tokens: !0,
  })
    .transform(function (e) {
      var n = ae({}, e);
      return (
        n.temperature === 1 && delete n.temperature,
        n.top_p === 1 && delete n.top_p,
        n.presence_penalty === 0 && delete n.presence_penalty,
        n.frequency_penalty === 0 && delete n.frequency_penalty,
        n.resendFiles === !0 && delete n.resendFiles,
        n.imageDetail === It.auto && delete n.imageDetail,
        Vn(n)
      );
    })
    .catch(function () {
      return {};
    }),
  We.pick({
    model: !0,
    modelLabel: !0,
    promptPrefix: !0,
    examples: !0,
    temperature: !0,
    maxOutputTokens: !0,
    topP: !0,
    topK: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n = ae({}, e);
      return (
        n.temperature === at.temperature.default && delete n.temperature,
        n.maxOutputTokens === at.maxOutputTokens.default && delete n.maxOutputTokens,
        n.topP === at.topP.default && delete n.topP,
        n.topK === at.topK.default && delete n.topK,
        Vn(n)
      );
    })
    .catch(function () {
      return {};
    }),
  We.pick({
    model: !0,
    modelLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    maxOutputTokens: !0,
    topP: !0,
    topK: !0,
    resendFiles: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n = ae({}, e);
      return (
        n.temperature === 1 && delete n.temperature,
        n.maxOutputTokens === 4e3 && delete n.maxOutputTokens,
        n.topP === 0.7 && delete n.topP,
        n.topK === 5 && delete n.topK,
        n.resendFiles === !0 && delete n.resendFiles,
        Vn(n)
      );
    })
    .catch(function () {
      return {};
    }),
  We.pick({ model: !0 })
    .transform(function (e) {
      return Vn(ae({}, e));
    })
    .catch(function () {
      return {};
    }),
  We.pick({
    model: !0,
    chatGptLabel: !0,
    promptPrefix: !0,
    temperature: !0,
    top_p: !0,
    presence_penalty: !0,
    frequency_penalty: !0,
    tools: !0,
    agentOptions: !0,
    iconURL: !0,
    greeting: !0,
    spec: !0,
    maxContextTokens: !0,
  })
    .transform(function (e) {
      var n,
        o = ae({}, e);
      return (
        o.chatGptLabel === null && delete o.chatGptLabel,
        o.promptPrefix === null && delete o.promptPrefix,
        o.temperature === 0.8 && delete o.temperature,
        o.top_p === 1 && delete o.top_p,
        o.presence_penalty === 0 && delete o.presence_penalty,
        o.frequency_penalty === 0 && delete o.frequency_penalty,
        ((n = o.tools) === null || n === void 0 ? void 0 : n.length) === 0 && delete o.tools,
        o.agentOptions &&
          o.agentOptions.agent === Ut.functions &&
          o.agentOptions.skipCompletion === !0 &&
          o.agentOptions.model === 'gpt-3.5-turbo' &&
          o.agentOptions.temperature === 0 &&
          delete o.agentOptions,
        Vn(o)
      );
    })
    .catch(function () {
      return {};
    }),
  ((Tn = {})[K.openAI] = !0),
  (Tn[K.google] = !0),
  (Tn[K.assistants] = !0),
  (Tn[K.azureAssistants] = !0),
  (Tn[K.azureOpenAI] = !0),
  (Tn[K.anthropic] = !0),
  (Tn[K.custom] = !0);
var Ic = [
  'application/vnd.ms-excel',
  'application/msexcel',
  'application/x-msexcel',
  'application/x-ms-excel',
  'application/x-excel',
  'application/x-dos_ms_excel',
  'application/xls',
  'application/x-xls',
  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
];
To(
  [
    'text/x-c',
    'text/x-c++',
    'application/csv',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    'text/html',
    'text/x-java',
    'application/json',
    'text/markdown',
    'application/pdf',
    'text/x-php',
    'application/vnd.openxmlformats-officedocument.presentationml.presentation',
    'text/x-python',
    'text/x-script.python',
    'text/x-ruby',
    'text/x-tex',
    'text/plain',
    'text/css',
    'image/jpeg',
    'text/javascript',
    'image/gif',
    'image/png',
    'application/x-tar',
    'application/typescript',
    'application/xml',
    'application/zip',
  ],
  Ic,
  !0,
),
  To(
    [
      'text/x-c',
      'text/x-c++',
      'application/csv',
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
      'text/html',
      'text/x-java',
      'application/json',
      'text/markdown',
      'application/pdf',
      'text/x-php',
      'application/vnd.openxmlformats-officedocument.presentationml.presentation',
      'text/x-python',
      'text/x-script.python',
      'text/x-ruby',
      'text/x-tex',
      'text/plain',
      'text/css',
      'image/jpeg',
      'text/javascript',
      'image/gif',
      'image/png',
      'application/x-tar',
      'application/typescript',
      'application/xml',
      'application/zip',
    ],
    Ic,
    !0,
  );
var id = [
    /^(text\/(x-c|x-c\+\+|x-java|html|markdown|x-php|x-python|x-script\.python|x-ruby|x-tex|plain|css|javascript|csv))$/,
    /^application\/(vnd\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\.openxmlformats-officedocument\.spreadsheetml\.sheet)$/,
    /^(application\/(epub\+zip|csv|json|pdf|x-tar|typescript|vnd\.openxmlformats-officedocument\.(wordprocessingml\.document|presentationml\.presentation|spreadsheetml\.sheet)|xml|zip))$/,
    /^image\/(jpeg|gif|png|webp)$/,
  ],
  mf = function (e) {
    return 1048576 * e;
  },
  Sa = mf(512),
  zc = {
    fileLimit: 10,
    fileSizeLimit: Sa,
    totalSizeLimit: Sa,
    supportedMimeTypes: id,
    disabled: !1,
  };
((Ti = {})[K.assistants] = zc),
  (Ti[K.azureAssistants] = zc),
  (Ti.default = {
    fileLimit: 10,
    fileSizeLimit: Sa,
    totalSizeLimit: Sa,
    supportedMimeTypes: id,
    disabled: !1,
  });
var Aa,
  Lc,
  Pc,
  Gn,
  Rt,
  Kn,
  en,
  Ot,
  In,
  uf = u
    .array(u.any())
    .optional()
    .refine(
      function (e) {
        return (
          !e ||
          e.every(function (n) {
            return n instanceof RegExp || typeof n == 'string';
          })
        );
      },
      { message: 'Each mimeType must be a string or a RegExp object.' },
    ),
  pf = u.object({
    disabled: u.boolean().optional(),
    fileLimit: u.number().min(0).optional(),
    fileSizeLimit: u.number().min(0).optional(),
    totalSizeLimit: u.number().min(0).optional(),
    supportedMimeTypes: uf.optional(),
  }),
  hf = u.object({
    endpoints: u.record(pf).optional(),
    serverFileSizeLimit: u.number().min(0).optional(),
    avatarSizeLimit: u.number().min(0).optional(),
  }),
  gf = u.object({
    name: u.string(),
    label: u.string(),
    preset: df,
    order: u.number().optional(),
    default: u.boolean().optional(),
    description: u.string().optional(),
    showIconInMenu: u.boolean().optional(),
    showIconInHeader: u.boolean().optional(),
    iconURL: u.union([u.string(), Oo]).optional(),
    authType: nf.optional(),
  }),
  ff = u.object({
    enforce: u.boolean().default(!1),
    prioritize: u.boolean().default(!0),
    list: u.array(gf).optional(),
  });
(function (e) {
  (e.local = 'local'),
    (e.firebase = 'firebase'),
    (e.azure = 'azure'),
    (e.openai = 'openai'),
    (e.s3 = 's3'),
    (e.vectordb = 'vectordb');
})(Aa || (Aa = {})),
  (function (e) {
    (e.avatar = 'avatar'),
      (e.unknown = 'unknown'),
      (e.assistants = 'assistants'),
      (e.image_generation = 'image_generation'),
      (e.assistants_output = 'assistants_output'),
      (e.message_attachment = 'message_attachment'),
      (e.filename = 'filename'),
      (e.updatedAt = 'updatedAt'),
      (e.source = 'source'),
      (e.context = 'context'),
      (e.bytes = 'bytes');
  })(Lc || (Lc = {}));
var Ec;
(function (e) {
  (e.default = 'default'), (e.advanced = 'advanced');
})(Ec || (Ec = {}));
var hn,
  xf = u.nativeEnum(Aa),
  vf = u
    .object({
      deploymentName: u.string().optional(),
      version: u.string().optional(),
      assistants: u.boolean().optional(),
    })
    .or(u.boolean()),
  bf = u.object({
    apiKey: u.string(),
    serverless: u.boolean().optional(),
    instanceName: u.string().optional(),
    deploymentName: u.string().optional(),
    assistants: u.boolean().optional(),
    addParams: u.record(u.any()).optional(),
    dropParams: u.array(u.string()).optional(),
    forcePrompt: u.boolean().optional(),
    version: u.string().optional(),
    baseURL: u.string().optional(),
    additionalHeaders: u.record(u.any()).optional(),
  }),
  yf = u
    .object({ group: u.string(), models: u.record(u.string(), vf) })
    .required()
    .and(bf),
  kf = u.array(yf).min(1);
(function (e) {
  (e.code_interpreter = 'code_interpreter'),
    (e.image_vision = 'image_vision'),
    (e.retrieval = 'retrieval'),
    (e.actions = 'actions'),
    (e.tools = 'tools');
})(hn || (hn = {})),
  ((Pc = {})[K.assistants] = 2),
  (Pc[K.azureAssistants] = 1);
var Mc,
  Rc = u.object({
    disableBuilder: u.boolean().optional(),
    pollIntervalMs: u.number().optional(),
    timeoutMs: u.number().optional(),
    version: u.union([u.string(), u.number()]).default(2),
    supportedIds: u.array(u.string()).min(1).optional(),
    excludedIds: u.array(u.string()).min(1).optional(),
    privateAssistants: u.boolean().optional(),
    retrievalModels: u
      .array(u.string())
      .min(1)
      .optional()
      .default([
        'gpt-4o',
        'gpt-4o-2024-05-13',
        'gpt-4-turbo-preview',
        'gpt-3.5-turbo-0125',
        'gpt-4-0125-preview',
        'gpt-4-1106-preview',
        'gpt-3.5-turbo-1106',
        'gpt-3.5-turbo-0125',
        'gpt-4-turbo',
        'gpt-4-0125',
        'gpt-4-1106',
      ]),
    capabilities: u
      .array(u.nativeEnum(hn))
      .optional()
      .default([hn.code_interpreter, hn.image_vision, hn.retrieval, hn.actions, hn.tools]),
    apiKey: u.string().optional(),
    baseURL: u.string().optional(),
    models: u
      .object({
        default: u.array(u.string()).min(1),
        fetch: u.boolean().optional(),
        userIdQuery: u.boolean().optional(),
      })
      .optional(),
    titleConvo: u.boolean().optional(),
    titleMethod: u.union([u.literal('completion'), u.literal('functions')]).optional(),
    titleModel: u.string().optional(),
    headers: u.record(u.any()).optional(),
  }),
  sd = u.object({
    name: u.string().refine(
      function (e) {
        return !Oo.safeParse(e).success;
      },
      {
        message: 'Value cannot be one of the default endpoint (EModelEndpoint) values: '.concat(
          Object.values(K).join(', '),
        ),
      },
    ),
    apiKey: u.string(),
    baseURL: u.string(),
    models: u.object({
      default: u.array(u.string()).min(1),
      fetch: u.boolean().optional(),
      userIdQuery: u.boolean().optional(),
    }),
    titleConvo: u.boolean().optional(),
    titleMethod: u.union([u.literal('completion'), u.literal('functions')]).optional(),
    titleModel: u.string().optional(),
    summarize: u.boolean().optional(),
    summaryModel: u.string().optional(),
    forcePrompt: u.boolean().optional(),
    modelDisplayLabel: u.string().optional(),
    headers: u.record(u.any()).optional(),
    addParams: u.record(u.any()).optional(),
    dropParams: u.array(u.string()).optional(),
    customOrder: u.number().optional(),
    directEndpoint: u.boolean().optional(),
    titleMessageRole: u.string().optional(),
  }),
  wf = u
    .object({ groups: kf, plugins: u.boolean().optional(), assistants: u.boolean().optional() })
    .and(
      sd
        .pick({
          titleConvo: !0,
          titleMethod: !0,
          titleModel: !0,
          summarize: !0,
          summaryModel: !0,
          customOrder: !0,
        })
        .partial(),
    ),
  jf = u.object({
    url: u.string().optional(),
    apiKey: u.string(),
    model: u.string(),
    voices: u.array(u.string()),
  }),
  Cf = u.object({
    url: u.string().optional(),
    websocketUrl: u.string().optional(),
    apiKey: u.string(),
    model: u.string(),
    voices: u.array(u.string()),
    voice_settings: u
      .object({
        similarity_boost: u.number().optional(),
        stability: u.number().optional(),
        style: u.number().optional(),
        use_speaker_boost: u.boolean().optional(),
      })
      .optional(),
    pronunciation_dictionary_locators: u.array(u.string()).optional(),
  }),
  Nf = u.object({
    url: u.string(),
    apiKey: u.string().optional(),
    voices: u.array(u.string()),
    backend: u.string(),
  }),
  Sf = u.object({ openai: jf.optional(), elevenLabs: Cf.optional(), localai: Nf.optional() }),
  Af = u.object({
    openai: u
      .object({
        url: u.string().optional(),
        apiKey: u.string().optional(),
        model: u.string().optional(),
      })
      .optional(),
  });
(function (e) {
  (e.FILE_UPLOAD = 'FILE_UPLOAD'), (e.IMPORT = 'IMPORT'), (e.TTS = 'TTS'), (e.STT = 'STT');
})(Mc || (Mc = {}));
var _a,
  Oc,
  Dc,
  Tf = u.object({
    fileUploads: u
      .object({
        ipMax: u.number().optional(),
        ipWindowInMinutes: u.number().optional(),
        userMax: u.number().optional(),
        userWindowInMinutes: u.number().optional(),
      })
      .optional(),
    conversationsImport: u
      .object({
        ipMax: u.number().optional(),
        ipWindowInMinutes: u.number().optional(),
        userMax: u.number().optional(),
        userWindowInMinutes: u.number().optional(),
      })
      .optional(),
    tts: u
      .object({
        ipMax: u.number().optional(),
        ipWindowInMinutes: u.number().optional(),
        userMax: u.number().optional(),
        userWindowInMinutes: u.number().optional(),
      })
      .optional(),
    stt: u
      .object({
        ipMax: u.number().optional(),
        ipWindowInMinutes: u.number().optional(),
        userMax: u.number().optional(),
        userWindowInMinutes: u.number().optional(),
      })
      .optional(),
  });
(function (e) {
  (e.PNG = 'png'), (e.WEBP = 'webp'), (e.JPEG = 'jpeg');
})(_a || (_a = {})),
  u.object({
    version: u.string(),
    cache: u.boolean().default(!0),
    secureImageLinks: u.boolean().optional(),
    imageOutputType: u.nativeEnum(_a).default(_a.PNG),
    includedTools: u.array(u.string()).optional(),
    filteredTools: u.array(u.string()).optional(),
    interface: u
      .object({
        privacyPolicy: u
          .object({ externalUrl: u.string().optional(), openNewTab: u.boolean().optional() })
          .optional(),
        termsOfService: u
          .object({ externalUrl: u.string().optional(), openNewTab: u.boolean().optional() })
          .optional(),
        endpointsMenu: u.boolean().optional(),
        modelSelect: u.boolean().optional(),
        parameters: u.boolean().optional(),
        sidePanel: u.boolean().optional(),
        presets: u.boolean().optional(),
      })
      .default({ endpointsMenu: !0, modelSelect: !0, parameters: !0, sidePanel: !0, presets: !0 }),
    fileStrategy: xf.default(Aa.local),
    registration: u
      .object({
        socialLogins: u.array(u.string()).optional(),
        allowedDomains: u.array(u.string()).optional(),
      })
      .default({ socialLogins: ['google', 'facebook', 'openid', 'github', 'discord'] }),
    tts: Sf.optional(),
    stt: Af.optional(),
    rateLimits: Tf.optional(),
    fileConfig: hf.optional(),
    modelSpecs: ff.optional(),
    endpoints: u
      .object(
        ((Gn = {}),
        (Gn[K.azureOpenAI] = wf.optional()),
        (Gn[K.azureAssistants] = Rc.optional()),
        (Gn[K.assistants] = Rc.optional()),
        (Gn.custom = u.array(sd.partial()).optional()),
        Gn),
      )
      .strict()
      .refine(
        function (e) {
          return Object.keys(e).length > 0;
        },
        { message: 'At least one `endpoints` field must be provided.' },
      )
      .optional(),
  }),
  (function (e) {
    (e.anyscale = 'anyscale'),
      (e.apipie = 'apipie'),
      (e.cohere = 'cohere'),
      (e.fireworks = 'fireworks'),
      (e.groq = 'groq'),
      (e.huggingface = 'huggingface'),
      (e.mistral = 'mistral'),
      (e.mlx = 'mlx'),
      (e.ollama = 'ollama'),
      (e.openrouter = 'openrouter'),
      (e.perplexity = 'perplexity'),
      (e.shuttleai = 'shuttleai'),
      (e['together.ai'] = 'together.ai');
  })(Oc || (Oc = {})),
  (function (e) {
    e.openrouter = 'openrouter';
  })(Dc || (Dc = {})),
  K.openAI,
  K.assistants,
  K.azureAssistants,
  K.azureOpenAI,
  K.bingAI,
  K.chatGPTBrowser,
  K.gptPlugins,
  K.google,
  K.anthropic,
  K.custom,
  ((Rt = {})[K.openAI] = 'OpenAI'),
  (Rt[K.assistants] = 'Assistants'),
  (Rt[K.azureAssistants] = 'Azure Assistants'),
  (Rt[K.azureOpenAI] = 'Azure OpenAI'),
  (Rt[K.bingAI] = 'Bing'),
  (Rt[K.chatGPTBrowser] = 'ChatGPT'),
  (Rt[K.gptPlugins] = 'Plugins'),
  (Rt[K.google] = 'Google'),
  (Rt[K.anthropic] = 'Anthropic'),
  (Rt[K.custom] = 'Custom');
var Fc,
  Bc,
  $c,
  qc,
  Uc,
  Vc,
  Gc,
  Kc,
  Wn,
  Hc,
  Wc,
  Ii = [
    'gpt-3.5-turbo',
    'gpt-3.5-turbo-0125',
    'gpt-4-turbo',
    'gpt-4-turbo-2024-04-09',
    'gpt-4-0125-preview',
    'gpt-4-turbo-preview',
    'gpt-4-1106-preview',
    'gpt-3.5-turbo-1106',
    'gpt-3.5-turbo-16k-0613',
    'gpt-3.5-turbo-16k',
    'gpt-4',
    'gpt-4-0314',
    'gpt-4-32k-0314',
    'gpt-4-0613',
    'gpt-3.5-turbo-0613',
  ],
  as =
    (((Kn = {})[K.azureAssistants] = Ii),
    (Kn[K.assistants] = To(['gpt-4o'], Ii, !0)),
    (Kn[K.google] = [
      'gemini-pro',
      'gemini-pro-vision',
      'chat-bison',
      'chat-bison-32k',
      'codechat-bison',
      'codechat-bison-32k',
      'text-bison',
      'text-bison-32k',
      'text-unicorn',
      'code-gecko',
      'code-bison',
      'code-bison-32k',
    ]),
    (Kn[K.anthropic] = [
      'claude-3-opus-20240229',
      'claude-3-sonnet-20240229',
      'claude-3-haiku-20240307',
      'claude-2.1',
      'claude-2',
      'claude-1.2',
      'claude-1',
      'claude-1-100k',
      'claude-instant-1',
      'claude-instant-1-100k',
    ]),
    (Kn[K.openAI] = To(
      To(['gpt-4o'], Ii, !0),
      [
        'gpt-4-vision-preview',
        'gpt-3.5-turbo-instruct-0914',
        'gpt-3.5-turbo-0301',
        'gpt-3.5-turbo-instruct',
        'text-davinci-003',
      ],
      !1,
    )),
    Kn),
  da = as[K.openAI],
  If =
    (((en = { initial: [] })[K.openAI] = da),
    (en[K.assistants] = da.filter(function (e) {
      return /gpt-4|gpt-3\\.5/i.test(e) && !/vision|instruct/i.test(e);
    })),
    (en[K.gptPlugins] = da),
    (en[K.azureOpenAI] = da),
    (en[K.bingAI] = ['BingAI', 'Sydney']),
    (en[K.chatGPTBrowser] = ['text-davinci-002-render-sha']),
    (en[K.google] = as[K.google]),
    (en[K.anthropic] = as[K.anthropic]),
    en);
((Ot = {})[K.openAI] = '/api/ask/'.concat(K.openAI)),
  (Ot[K.bingAI] = '/api/ask/'.concat(K.bingAI)),
  (Ot[K.google] = '/api/ask/'.concat(K.google)),
  (Ot[K.custom] = '/api/ask/'.concat(K.custom)),
  (Ot[K.anthropic] = '/api/ask/'.concat(K.anthropic)),
  (Ot[K.gptPlugins] = '/api/ask/'.concat(K.gptPlugins)),
  (Ot[K.azureOpenAI] = '/api/ask/'.concat(K.azureOpenAI)),
  (Ot[K.chatGPTBrowser] = '/api/ask/'.concat(K.chatGPTBrowser)),
  (Ot[K.azureAssistants] = '/api/assistants/v1/chat'),
  (Ot[K.assistants] = '/api/assistants/v2/chat'),
  K.gptPlugins,
  K.anthropic,
  K.google,
  K.openAI,
  K.azureOpenAI,
  K.custom,
  ((In = {})[K.custom] = !0),
  (In[K.openAI] = !0),
  (In[K.anthropic] = !0),
  (In[K.gptPlugins] = !0),
  (In[K.assistants] = !0),
  (In[K.azureAssistants] = !0),
  (In[K.azureOpenAI] = !0),
  (function (e) {
    e.generative = 'generative';
  })(Fc || (Fc = {})),
  (function (e) {
    (e.CONFIG_STORE = 'configStore'),
      (e.PLUGINS = 'plugins'),
      (e.GEN_TITLE = 'genTitle'),
      (e.TOOLS = 'tools'),
      (e.MODELS_CONFIG = 'modelsConfig'),
      (e.MODEL_QUERIES = 'modelQueries'),
      (e.ENDPOINT_CONFIG = 'endpointsConfig'),
      (e.TOKEN_CONFIG = 'tokenConfig'),
      (e.CUSTOM_CONFIG = 'customConfig'),
      (e.ABORT_KEYS = 'abortKeys'),
      (e.OVERRIDE_CONFIG = 'overrideConfig'),
      (e.BANS = 'bans'),
      (e.ENCODED_DOMAINS = 'encoded_domains'),
      (e.AUDIO_RUNS = 'audioRuns');
  })(Bc || (Bc = {})),
  (function (e) {
    (e.FILE_UPLOAD_LIMIT = 'file_upload_limit'),
      (e.ILLEGAL_MODEL_REQUEST = 'illegal_model_request'),
      (e.TOKEN_BALANCE = 'token_balance'),
      (e.BAN = 'ban'),
      (e.TTS_LIMIT = 'tts_limit'),
      (e.STT_LIMIT = 'stt_limit'),
      (e.RESET_PASSWORD_LIMIT = 'reset_password_limit'),
      (e.VERIFY_EMAIL_LIMIT = 'verify_email_limit');
  })($c || ($c = {})),
  (function (e) {
    (e.NO_USER_KEY = 'no_user_key'),
      (e.EXPIRED_USER_KEY = 'expired_user_key'),
      (e.INVALID_USER_KEY = 'invalid_user_key'),
      (e.NO_BASE_URL = 'no_base_url'),
      (e.MODERATION = 'moderation');
  })(qc || (qc = {})),
  (function (e) {
    (e.GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY'), (e.GOOGLE_API_KEY = 'GOOGLE_API_KEY');
  })(Uc || (Uc = {})),
  (function (e) {
    (e[(e.LOW = 85)] = 'LOW'),
      (e[(e.HIGH = 170)] = 'HIGH'),
      (e[(e.ADDITIONAL = 85)] = 'ADDITIONAL');
  })(Vc || (Vc = {})),
  (function (e) {
    (e.GENERAL = 'general'),
      (e.MESSAGES = 'messages'),
      (e.SPEECH = 'speech'),
      (e.BETA = 'beta'),
      (e.DATA = 'data'),
      (e.ACCOUNT = 'account');
  })(Gc || (Gc = {})),
  (function (e) {
    (e.VERSION = 'v0.7.3'),
      (e.CONFIG_VERSION = '1.1.4'),
      (e.NO_PARENT = '00000000-0000-0000-0000-000000000000'),
      (e[(e.ENCODED_DOMAIN_LENGTH = 10)] = 'ENCODED_DOMAIN_LENGTH'),
      (e.CURRENT_MODEL = 'current_model');
  })(Kc || (Kc = {})),
  (function (e) {
    (e.APP_TITLE = 'appTitle'),
      (e.LAST_CONVO_SETUP = 'lastConversationSetup'),
      (e.LAST_BING = 'lastBingSettings'),
      (e.LAST_MODEL = 'lastSelectedModel'),
      (e.LAST_TOOLS = 'lastSelectedTools'),
      (e.LAST_SPEC = 'lastSelectedSpec'),
      (e.FILES_TO_DELETE = 'filesToDelete'),
      (e.ASST_ID_PREFIX = 'assistant_id__'),
      (e.FORK_SETTING = 'forkSetting'),
      (e.REMEMBER_FORK_OPTION = 'rememberForkOption'),
      (e.FORK_SPLIT_AT_TARGET = 'splitAtTarget'),
      (e.TEXT_DRAFT = 'textDraft_'),
      (e.FILES_DRAFT = 'filesDraft_');
  })(Wn || (Wn = {})),
  (function (e) {
    (e.DIRECT_PATH = 'directPath'), (e.INCLUDE_BRANCHES = 'includeBranches'), (e.TARGET_LEVEL = '');
  })(Hc || (Hc = {})),
  (function (e) {
    (e.API_URL = 'https://api.cohere.ai/v1'),
      (e.ROLE_USER = 'USER'),
      (e.ROLE_SYSTEM = 'SYSTEM'),
      (e.ROLE_CHATBOT = 'CHATBOT'),
      (e.TITLE_MESSAGE = 'TITLE:');
  })(Wc || (Wc = {}));
var rd = function (e, n) {
    return '/api/messages/'.concat(e).concat(n ? '/'.concat(n) : '');
  },
  Ja = '/api/keys',
  zf = '/api/convos';
function cd(e, n) {
  return At(this, void 0, void 0, function () {
    return Tt(this, function (o) {
      switch (o.label) {
        case 0:
          return [
            4,
            pe.post(e, JSON.stringify(n), { headers: { 'Content-Type': 'application/json' } }),
          ];
        case 1:
          return [2, o.sent().data];
      }
    });
  });
}
var zi = !1,
  is = [],
  ld = function (e) {
    return cd(
      (function (n) {
        return '/api/auth/refresh'.concat(n ? '?retry=true' : '');
      })(e),
    );
  },
  Jc = function (e, n) {
    n === void 0 && (n = null),
      is.forEach(function (o) {
        e ? o.reject(e) : o.resolve(n);
      }),
      (is = []);
  };
pe.interceptors.response.use(
  function (e) {
    return e;
  },
  function (e) {
    return At(void 0, void 0, void 0, function () {
      var n, o, a, i, s;
      return Tt(this, function (r) {
        switch (r.label) {
          case 0:
            if (((n = e.config), e.response.status !== 401 || n._retry)) return [3, 13];
            if (((n._retry = !0), !zi)) return [3, 5];
            r.label = 1;
          case 1:
            return (
              r.trys.push([1, 4, , 5]),
              [
                4,
                new Promise(function (c, l) {
                  is.push({ resolve: c, reject: l });
                }),
              ]
            );
          case 2:
            return (a = r.sent()), (n.headers.Authorization = 'Bearer ' + a), [4, pe(n)];
          case 3:
            return [2, r.sent()];
          case 4:
            return (o = r.sent()), [2, Promise.reject(o)];
          case 5:
            (zi = !0), (r.label = 6);
          case 6:
            return (
              r.trys.push([6, 11, 12, 13]),
              [4, ld(!!(!((s = n.url) === null || s === void 0) && s.includes('api/auth/refresh')))]
            );
          case 7:
            return (a = r.sent().token)
              ? ((n.headers.Authorization = 'Bearer ' + a),
                (function (c) {
                  pe.defaults.headers.common.Authorization = 'Bearer ' + c;
                })(a),
                window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: a })),
                Jc(null, a),
                [4, pe(n)])
              : [3, 9];
          case 8:
            return [2, r.sent()];
          case 9:
            (window.location.href = '/login'), (r.label = 10);
          case 10:
            return [3, 13];
          case 11:
            return (i = r.sent()), Jc(i, null), [2, Promise.reject(i)];
          case 12:
            return (zi = !1), [7];
          case 13:
            return [2, Promise.reject(e)];
        }
      });
    });
  },
);
var Te = {
  get: function (e, n) {
    return At(this, void 0, void 0, function () {
      return Tt(this, function (o) {
        switch (o.label) {
          case 0:
            return [4, pe.get(e, ae({}, n))];
          case 1:
            return [2, o.sent().data];
        }
      });
    });
  },
  getResponse: function (e, n) {
    return At(this, void 0, void 0, function () {
      return Tt(this, function (o) {
        switch (o.label) {
          case 0:
            return [4, pe.get(e, ae({}, n))];
          case 1:
            return [2, o.sent()];
        }
      });
    });
  },
  post: cd,
  postMultiPart: function (e, n, o) {
    return At(this, void 0, void 0, function () {
      return Tt(this, function (a) {
        switch (a.label) {
          case 0:
            return [
              4,
              pe.post(e, n, ae(ae({}, o), { headers: { 'Content-Type': 'multipart/form-data' } })),
            ];
          case 1:
            return [2, a.sent().data];
        }
      });
    });
  },
  postTTS: function (e, n, o) {
    return At(this, void 0, void 0, function () {
      return Tt(this, function (a) {
        switch (a.label) {
          case 0:
            return [
              4,
              pe.post(
                e,
                n,
                ae(ae({}, o), {
                  headers: { 'Content-Type': 'multipart/form-data' },
                  responseType: 'arraybuffer',
                }),
              ),
            ];
          case 1:
            return [2, a.sent().data];
        }
      });
    });
  },
  put: function (e, n) {
    return At(this, void 0, void 0, function () {
      return Tt(this, function (o) {
        switch (o.label) {
          case 0:
            return [
              4,
              pe.put(e, JSON.stringify(n), { headers: { 'Content-Type': 'application/json' } }),
            ];
          case 1:
            return [2, o.sent().data];
        }
      });
    });
  },
  delete: function (e) {
    return At(this, void 0, void 0, function () {
      return Tt(this, function (n) {
        switch (n.label) {
          case 0:
            return [4, pe.delete(e)];
          case 1:
            return [2, n.sent().data];
        }
      });
    });
  },
  deleteWithOptions: function (e, n) {
    return At(this, void 0, void 0, function () {
      return Tt(this, function (o) {
        switch (o.label) {
          case 0:
            return [4, pe.delete(e, ae({}, n))];
          case 1:
            return [2, o.sent().data];
        }
      });
    });
  },
  patch: function (e, n) {
    return At(this, void 0, void 0, function () {
      return Tt(this, function (o) {
        switch (o.label) {
          case 0:
            return [
              4,
              pe.patch(e, JSON.stringify(n), { headers: { 'Content-Type': 'application/json' } }),
            ];
          case 1:
            return [2, o.sent().data];
        }
      });
    });
  },
  refreshToken: ld,
};
function Lf(e) {
  return Te.delete(
    (function (n) {
      return ''.concat(Ja, '/').concat(n);
    })(e),
  );
}
function Pf() {
  return Te.delete(''.concat(Ja, '?all=true'));
}
function Ef(e) {
  if (!e.value) throw new Error('value is required');
  return Te.put(Ja, e);
}
var Mf = function (e) {
    return Te.get(
      (function (n) {
        return ''.concat(Ja, '?name=').concat(n);
      })(e),
    );
  },
  Rf = function () {
    return Te.get('/api/config');
  };
function Of() {
  return Te.post(''.concat(zf, '/clear'), { arg: {} });
}
var de, Qc;
(function (e) {
  (e.messages = 'messages'),
    (e.sharedMessages = 'sharedMessages'),
    (e.sharedLinks = 'sharedLinks'),
    (e.allConversations = 'allConversations'),
    (e.archivedConversations = 'archivedConversations'),
    (e.searchConversations = 'searchConversations'),
    (e.conversation = 'conversation'),
    (e.searchEnabled = 'searchEnabled'),
    (e.user = 'user'),
    (e.name = 'name'),
    (e.models = 'models'),
    (e.balance = 'balance'),
    (e.endpoints = 'endpoints'),
    (e.presets = 'presets'),
    (e.searchResults = 'searchResults'),
    (e.tokenCount = 'tokenCount'),
    (e.availablePlugins = 'availablePlugins'),
    (e.startupConfig = 'startupConfig'),
    (e.assistants = 'assistants'),
    (e.assistant = 'assistant'),
    (e.endpointsConfigOverride = 'endpointsConfigOverride'),
    (e.files = 'files'),
    (e.fileConfig = 'fileConfig'),
    (e.tools = 'tools'),
    (e.actions = 'actions'),
    (e.assistantDocs = 'assistantDocs'),
    (e.fileDownload = 'fileDownload'),
    (e.voices = 'voices');
})(de || (de = {})),
  (function (e) {
    (e.fileUpload = 'fileUpload'),
      (e.fileDelete = 'fileDelete'),
      (e.updatePreset = 'updatePreset'),
      (e.deletePreset = 'deletePreset'),
      (e.logoutUser = 'logoutUser'),
      (e.avatarUpload = 'avatarUpload'),
      (e.speechToText = 'speechToText'),
      (e.textToSpeech = 'textToSpeech'),
      (e.assistantAvatarUpload = 'assistantAvatarUpload'),
      (e.updateAction = 'updateAction'),
      (e.deleteAction = 'deleteAction'),
      (e.deleteUser = 'deleteUser');
  })(Qc || (Qc = {}));
var Df = function (e) {
    return Le(
      [de.user],
      function () {
        return Te.get('/api/user');
      },
      ae({ refetchOnWindowFocus: !1, refetchOnReconnect: !1, refetchOnMount: !1, retry: !1 }, e),
    );
  },
  _d = function (e, n) {
    return Le(
      [de.messages, e],
      function () {
        return (o = e) === 'new' ? Promise.resolve([]) : Te.get(rd(o));
        var o;
      },
      ae({ refetchOnWindowFocus: !1, refetchOnReconnect: !1, refetchOnMount: !1 }, n),
    );
  },
  Ff = function (e, n) {
    return Le(
      [de.sharedMessages, e],
      function () {
        return (function (o) {
          return Te.get(
            (function (a) {
              return ''.concat('/api/share', '/').concat(a);
            })(o),
          );
        })(e);
      },
      ae({ refetchOnWindowFocus: !1, refetchOnReconnect: !1, refetchOnMount: !1 }, n),
    );
  },
  dd = function (e) {
    return Le(
      [de.balance],
      function () {
        return Te.get('/api/balance');
      },
      ae({ refetchOnWindowFocus: !0, refetchOnReconnect: !0, refetchOnMount: !0 }, e),
    );
  },
  Bf = function (e) {
    var n = X();
    return le(
      function (o) {
        return (function (a) {
          var i = a.conversationId,
            s = a.messageId,
            r = a.text;
          if (!i) throw new Error('conversationId is required');
          return Te.put(rd(i, s), { text: r });
        })(o);
      },
      {
        onSuccess: function () {
          n.invalidateQueries([de.messages, e]);
        },
      },
    );
  },
  $f = function () {
    var e = X();
    return le(
      function (n) {
        return Ef(n);
      },
      {
        onSuccess: function (n, o) {
          e.invalidateQueries([de.name, o.name]);
        },
      },
    );
  },
  qf = function () {
    var e = X();
    return le(
      function () {
        return Of();
      },
      {
        onSuccess: function () {
          e.invalidateQueries([de.allConversations]);
        },
      },
    );
  },
  Uf = function (e) {
    var n = X();
    return le(
      function () {
        return Lf(e);
      },
      {
        onSuccess: function () {
          var o;
          n.invalidateQueries([de.name, e]),
            (o = e) &&
              o.toLowerCase().endsWith(K.assistants) &&
              (n.invalidateQueries([de.assistants, e, ns]),
              n.invalidateQueries([de.assistantDocs]),
              n.invalidateQueries([de.assistants]),
              n.invalidateQueries([de.assistant]),
              n.invalidateQueries([de.actions]),
              n.invalidateQueries([de.tools]));
        },
      },
    );
  },
  Vf = function () {
    var e = X();
    return le(
      function () {
        return Pf();
      },
      {
        onSuccess: function () {
          e.invalidateQueries([de.name]),
            e.invalidateQueries([de.assistants, K.assistants, ns]),
            e.invalidateQueries([de.assistants, K.azureAssistants, ns]),
            e.invalidateQueries([de.assistantDocs]),
            e.invalidateQueries([de.assistants]),
            e.invalidateQueries([de.assistant]),
            e.invalidateQueries([de.actions]),
            e.invalidateQueries([de.tools]);
        },
      },
    );
  },
  Gf = function (e) {
    return Le(
      [de.searchEnabled],
      function () {
        return Te.get('/api/search/enable');
      },
      ae({ refetchOnWindowFocus: !1, refetchOnReconnect: !1, refetchOnMount: !1 }, e),
    );
  },
  Se = function (e) {
    return Le(
      [de.endpoints],
      function () {
        return Te.get('/api/endpoints');
      },
      ae(
        { staleTime: 1 / 0, refetchOnWindowFocus: !1, refetchOnReconnect: !1, refetchOnMount: !1 },
        e,
      ),
    );
  },
  Qt = function (e) {
    return Le(
      [de.models],
      function () {
        return At(void 0, void 0, void 0, function () {
          return Tt(this, function (n) {
            return [2, Te.get('/api/models')];
          });
        });
      },
      ae(
        {
          initialData: If,
          refetchOnWindowFocus: !1,
          refetchOnReconnect: !1,
          refetchOnMount: !1,
          staleTime: 1 / 0,
        },
        e,
      ),
    );
  },
  md = function () {
    var e = X();
    return le(
      function (n) {
        return (function (o) {
          return Te.post('/api/presets', o);
        })(n);
      },
      {
        onSuccess: function () {
          e.invalidateQueries([de.presets]);
        },
      },
    );
  },
  Kf = function () {
    var e = X();
    return le(
      function (n) {
        return (function (o) {
          return Te.post('/api/tokenizer', { arg: o });
        })(n.text);
      },
      {
        onSuccess: function () {
          e.invalidateQueries([de.tokenCount]);
        },
      },
    );
  },
  Hf = function () {
    var e = X();
    return le(
      function (n) {
        return (function (o) {
          return Te.post('/api/auth/login', o);
        })(n);
      },
      {
        onMutate: function () {
          e.removeQueries(),
            localStorage.removeItem(Wn.LAST_CONVO_SETUP),
            localStorage.removeItem(Wn.LAST_MODEL),
            localStorage.removeItem(Wn.LAST_TOOLS),
            localStorage.removeItem(Wn.FILES_TO_DELETE);
        },
      },
    );
  },
  Wf = function (e) {
    var n = X();
    return le(
      function (o) {
        return (function (a) {
          return Te.post('/api/auth/register', a);
        })(o);
      },
      ae(ae({}, e), {
        onSuccess: function () {
          for (var o = [], a = 0; a < arguments.length; a++) o[a] = arguments[a];
          n.invalidateQueries([de.user]), e != null && e.onSuccess && e.onSuccess.apply(e, o);
        },
      }),
    );
  },
  Jf = function () {
    var e = X();
    return le(
      function () {
        return Te.refreshToken();
      },
      {
        onMutate: function () {
          e.removeQueries();
        },
      },
    );
  },
  ud = function (e, n) {
    return Le(
      [de.name, e],
      function () {
        return e ? Mf(e) : Promise.resolve({ expiresAt: '' });
      },
      ae({ refetchOnWindowFocus: !1, refetchOnReconnect: !1, refetchOnMount: !1, retry: !1 }, n),
    );
  },
  Qf = function () {
    return le(function (e) {
      return (function (n) {
        return Te.post('/api/auth/requestPasswordReset', n);
      })(e);
    });
  },
  Zf = function () {
    return le(function (e) {
      return (function (n) {
        return Te.post('/api/auth/resetPassword', n);
      })(e);
    });
  },
  Qa = function (e) {
    return Le(
      [de.availablePlugins],
      function () {
        return Te.get('/api/plugins');
      },
      ae({ refetchOnWindowFocus: !1, refetchOnReconnect: !1, refetchOnMount: !1 }, e),
    );
  },
  pd = function () {
    var e = X();
    return le(
      function (n) {
        return (function (o) {
          return Te.post('/api/user/plugins', o);
        })(n);
      },
      {
        onSuccess: function () {
          e.invalidateQueries([de.user]);
        },
      },
    );
  },
  bt = function (e) {
    return Le(
      [de.startupConfig],
      function () {
        return Rf();
      },
      ae({ refetchOnWindowFocus: !1, refetchOnReconnect: !1, refetchOnMount: !1 }, e),
    );
  };
const Ho = () => {
    const { data: e = {} } = Se(),
      { data: n = {} } = Qt();
    return ({ conversation: a, preset: i }) => {
      const s = Va({ convoSetup: i, endpointsConfig: e }),
        r = n[s] || [];
      return Ua({ conversation: a, endpoint: s, lastConversationSetup: i, models: r });
    };
  },
  hd = p.createContext({}),
  me = () => p.useContext(hd),
  Yf = (e) =>
    e.data.map(({ id: n, name: o, metadata: a, model: i }) => ({
      id: n,
      name: o ?? '',
      metadata: a,
      model: i,
    }));
function so(e = Yf) {
  const { data: n = null } = Ro(N.assistants, void 0, { select: e }),
    { data: o = null } = Ro(N.azureAssistants, void 0, { select: e });
  return p.useMemo(() => ({ [N.assistants]: n, [N.azureAssistants]: o }), [n, o]);
}
function gd(e) {
  const n = Ho(),
    { conversation: o, newConversation: a } = me(),
    i = so((r) => ja(r.data));
  return {
    onSelect: p.useCallback(
      (r) => {
        var d;
        const c = (d = i == null ? void 0 : i[e]) == null ? void 0 : d[r];
        if (!c) return;
        const l = { endpoint: e, assistant_id: c.id, model: c.model, conversationId: 'new' };
        if (he(o == null ? void 0 : o.endpoint)) {
          const _ = n({ conversation: { ...(o ?? {}) }, preset: l });
          a({ template: _, preset: l, keepLatestMessage: !0 });
          return;
        }
        a({ template: { ...l }, preset: l });
      },
      [e, i, o, n, a],
    ),
  };
}
const Li = [
  {
    name: 'commander_01',
    label: 'Commander in Chief',
    description:
      'Salute your president, soldier! Salute your president, soldier! Salute your president, soldier!',
    iconURL: 'https://i.kym-cdn.com/entries/icons/facebook/000/017/252/2f0.jpg',
    preset: {
      endpoint: 'Ollama',
      greeting: 'My fellow Americans,',
      frequency_penalty: 0,
      model: 'command-r',
      presence_penalty: 0,
      promptPrefix: null,
      resendFiles: !1,
      temperature: 0.8,
      top_p: 0.5,
    },
    authType: Xn.SYSTEM_DEFINED,
  },
  {
    name: 'vision_pro',
    label: 'Vision Pro',
    description:
      'Salute your president, soldier! Salute your president, soldier! Salute your president, soldier!',
    iconURL: N.openAI,
    preset: {
      chatGptLabel: 'Vision Helper',
      greeting: "What's up!!",
      endpoint: N.openAI,
      model: 'gpt-4-turbo',
      promptPrefix: `Examine images closely to understand its style, colors, composition, and other elements. Then, craft a detailed prompt to that closely resemble the original. Your focus is on accuracy in replicating the style, colors, techniques, and details of the original image in written form. Your prompt must be excruciatingly detailed as it will be given to an image generating AI for image generation. 
`,
      temperature: 0.8,
      top_p: 1,
    },
    authType: Xn.SYSTEM_DEFINED,
  },
];
function Xf() {
  const e = ye(O.endpointsQueryEnabled),
    n = kg({ staleTime: 1 / 0 }),
    o = X(),
    a = p.useCallback(
      async (i) => {
        const { endpointsConfig: s, modelsConfig: r } = i;
        s && (e(!1), await o.cancelQueries([G.endpoints]), o.setQueryData([G.endpoints], s)),
          r && (await o.cancelQueries([G.models]), o.setQueryData([G.models], r));
      },
      [o, e],
    );
  p.useEffect(() => {
    n.data && a(n.data);
  }, [n.data, a]);
}
const Pi = {
  name: 'Plugin store',
  pluginKey: 'pluginStore',
  isButton: !0,
  description: '',
  icon: '',
  authConfig: [],
  authenticated: !1,
};
function e1({ startupConfig: e, user: n }) {
  Xf();
  const o = ye(O.availableTools),
    [a, i] = W(O.defaultPreset),
    { data: s } = Qa({ enabled: !!(n != null && n.plugins), select: Es });
  if (
    (p.useEffect(() => {
      e != null &&
        e.appTitle &&
        ((document.title = e.appTitle), localStorage.setItem(te.APP_TITLE, e.appTitle));
    }, [e]),
    p.useEffect(() => {
      if ((a && a.spec) || !Li || !Li.length) return;
      const r = Li.find((c) => c.default);
      r && i({ ...r.preset, iconURL: r.iconURL, spec: r.name });
    }, [a, i]),
    p.useEffect(() => {
      if (!n || !s) return;
      if (!n.plugins || n.plugins.length === 0) {
        o({ pluginStore: Pi });
        return;
      }
      const r = [...n.plugins].map((_) => s.map[_]).filter((_) => _ !== void 0),
        c = localStorage.getItem(te.LAST_TOOLS);
      if (!c) return o({ pluginStore: Pi, ...Qi(r) });
      const d = Ms(JSON.parse(c) ?? [], s.map)
        .filter((_) => r.some((m) => m.pluginKey === _.pluginKey))
        .filter((_) => !!_);
      localStorage.setItem(te.LAST_TOOLS, JSON.stringify(d)), o({ pluginStore: Pi, ...Qi(r) });
    }, [s, n, o]),
    e != null && e.analyticsGtmId)
  ) {
    const r = { gtmId: e == null ? void 0 : e.analyticsGtmId };
    kl.initialize(r);
  }
}
const Us = () => {
  const e = _t(),
    n = ye(O.conversation),
    o = Ma(O.latestMessage),
    a = ye(O.messages),
    i = ye(O.submission),
    { data: s = {} } = Se(),
    r = Qt(),
    c = Ea(
      () =>
        async (_, m = null, f = null, g) => {
          const h = g ?? r.data,
            { endpoint: v = null } = _;
          if (v === null) {
            const x = Va({ convoSetup: f ?? _, endpointsConfig: s }),
              y = Ce(s, x, 'type');
            !_.endpointType && y && (_.endpointType = y);
            const k = (h == null ? void 0 : h[x]) ?? [];
            _ = Ua({ conversation: _, lastConversationSetup: f, endpoint: x, models: k });
          }
          n(_), a(m), i({}), o(), _.conversationId === 'new' && !g && e('/c/new');
        },
      [s, r.data],
    ),
    l = p.useCallback(
      (_ = {}, m, f) => {
        c(
          {
            conversationId: 'new',
            title: 'New Chat',
            ..._,
            endpoint: null,
            createdAt: '',
            updatedAt: '',
          },
          [],
          m,
          f,
        );
      },
      [c],
    ),
    d = p.useCallback(() => {
      c(
        { conversationId: 'search', title: 'Search', endpoint: null, createdAt: '', updatedAt: '' },
        [],
      );
    }, [c]);
  return { switchToConversation: c, newConversation: l, searchPlaceholderConversation: d };
};
function t1({ isAuthenticated: e }) {
  const n = _t(),
    o = wl(),
    [a, i] = p.useState(1),
    { searchPlaceholderConversation: s } = Us(),
    r = Y(O.searchQuery),
    c = ye(O.isSearchEnabled),
    l = Gf({ enabled: e }),
    d = jg(
      { pageNumber: a.toString(), searchQuery: r, isArchived: !1 },
      { enabled: e && !!r.length },
    );
  p.useEffect(() => {
    if (r && r.length > 0) {
      n('/search', { replace: !0 });
      return;
    }
    (o.pathname && o.pathname.includes('/c/')) || n('/c/new', { replace: !0 });
  }, [n, r]),
    p.useEffect(() => {
      l.data ? c(l.data) : l.isError && console.error('Failed to get search enabled', l.error);
    }, [l.data, l.error, l.isError, c]);
  const _ = p.useCallback(() => s(), [s]);
  return (
    p.useEffect(() => {
      d.data && _();
    }, [d.data, d.isInitialLoading, _]),
    { pageNumber: a, searchQuery: r, setPageNumber: i, searchQueryRes: d }
  );
}
function fd(e = 100) {
  const [n, o] = W(O.toastState),
    a = p.useRef(null),
    i = p.useRef(null);
  return (
    p.useEffect(
      () => () => {
        a.current !== null && clearTimeout(a.current),
          i.current !== null && clearTimeout(i.current);
      },
      [],
    ),
    {
      toast: n,
      onOpenChange: (r) => o({ ...n, open: r }),
      showToast: ({
        message: r,
        severity: c = ct.SUCCESS,
        showIcon: l = !0,
        duration: d = 3e3,
        status: _,
      }) => {
        a.current !== null && clearTimeout(a.current),
          i.current !== null && clearTimeout(i.current),
          (a.current = window.setTimeout(() => {
            o({ open: !0, message: r, severity: _ ?? c, showIcon: l }),
              (i.current = window.setTimeout(() => {
                o((m) => ({ ...m, open: !1 }));
              }, d));
          }, e));
      },
    }
  );
}
const xd = p.createContext({ showToast: () => ({}) });
function Ie() {
  return p.useContext(xd);
}
function n1({ children: e }) {
  const { showToast: n } = fd();
  return t.jsx(xd.Provider, { value: { showToast: n }, children: e });
}
p.createContext({});
const vd = p.createContext({}),
  o1 = () => p.useContext(vd),
  bd = p.createContext({}),
  Vs = () => p.useContext(bd),
  yd = p.createContext({}),
  Za = () => p.useContext(yd),
  kd = p.createContext({}),
  Mt = () => p.useContext(kd);
function a1({ callback: e, delay: n = 400 }) {
  const o = p.useRef(null),
    a = (i) => {
      o.current !== null && clearTimeout(o.current),
        i &&
          (console.log(i),
          (o.current = setTimeout(() => {
            e(i);
          }, n)));
    };
  return (
    p.useEffect(
      () => () => {
        o.current !== null && clearTimeout(o.current);
      },
      [],
    ),
    a
  );
}
const wd = p.createContext(void 0),
  i1 = ({ authConfig: e, children: n }) => {
    const [o, a] = W(O.user),
      [i, s] = p.useState(void 0),
      [r, c] = p.useState(void 0),
      [l, d] = p.useState(!1),
      _ = _t(),
      m = p.useCallback(
        (w) => {
          const { token: T, isAuthenticated: S, user: I, redirect: P } = w;
          I && a(I), s(T), Ps(T), d(S), P && _(P, { replace: !0 });
        },
        [_, a],
      ),
      f = a1({ callback: (w) => c(w) }),
      g = Hf(),
      h = U0({
        onSuccess: () => {
          m({ token: void 0, isAuthenticated: !1, user: void 0, redirect: '/login' });
        },
        onError: (w) => {
          f(w.message), m({ token: void 0, isAuthenticated: !1, user: void 0, redirect: '/login' });
        },
      }),
      v = p.useCallback(() => h.mutate(void 0), [h]),
      x = Df({ enabled: !!i }),
      y = Jf(),
      k = (w) => {
        g.mutate(w, {
          onSuccess: (T) => {
            const { user: S, token: I } = T;
            c(void 0), m({ token: I, isAuthenticated: !0, user: S, redirect: '/c/new' });
          },
          onError: (T) => {
            f(T.message), _('/login', { replace: !0 });
          },
        });
      },
      C = p.useCallback(() => {
        if (e != null && e.test) {
          console.log('Test mode. Skipping silent refresh.');
          return;
        }
        y.mutate(void 0, {
          onSuccess: (w) => {
            const { user: T, token: S } = w;
            if (S) m({ token: S, isAuthenticated: !0, user: T });
            else {
              if (
                (console.log('Token is not present. User is not authenticated.'),
                e != null && e.test)
              )
                return;
              _('/login');
            }
          },
          onError: (w) => {
            console.log('refreshToken mutation error:', w), !(e != null && e.test) && _('/login');
          },
        });
      }, []);
    p.useEffect(() => {
      x.data
        ? a(x.data)
        : x.isError && (f((x == null ? void 0 : x.error).message), _('/login', { replace: !0 })),
        r && l && f(void 0),
        (!i || !l) && C();
    }, [i, l, x.data, x.isError, x.error, r, _, m]),
      p.useEffect(() => {
        const w = (T) => {
          console.log('tokenUpdated event received event');
          const S = T.detail;
          m({ token: S, isAuthenticated: !0, user: o });
        };
        return (
          window.addEventListener('tokenUpdated', w),
          () => {
            window.removeEventListener('tokenUpdated', w);
          }
        );
      }, [m, o]);
    const j = p.useMemo(
      () => ({ user: o, token: i, error: r, login: k, logout: v, setError: c, isAuthenticated: l }),
      [o, r, l, i],
    );
    return t.jsx(wd.Provider, { value: j, children: n });
  },
  Re = () => {
    const e = p.useContext(wd);
    if (e === void 0) throw new Error('useAuthContext should be used inside AuthProvider');
    return e;
  },
  Gs = {
    com_error_moderation:
      "It appears that the content submitted has been flagged by our moderation system for not aligning with our community guidelines. We're unable to proceed with this specific topic. If you have any other questions or topics you'd like to explore, please edit your message, or create a new conversation.",
    com_error_no_user_key: 'No key found. Please provide a key and try again.',
    com_error_no_base_url: 'No base URL found. Please provide one and try again.',
    com_error_invalid_user_key: 'Invalid key provided. Please provide a key and try again.',
    com_error_expired_user_key:
      'Provided key for {0} expired at {1}. Please provide a key and try again.',
    com_files_no_results: 'No results.',
    com_files_filter: 'Filter files...',
    com_files_number_selected: '{0} of {1} file(s) selected',
    com_sidepanel_select_assistant: 'Select an Assistant',
    com_sidepanel_parameters: 'Parameters',
    com_sidepanel_assistant_builder: 'Assistant Builder',
    com_sidepanel_hide_panel: 'Hide Panel',
    com_sidepanel_attach_files: 'Attach Files',
    com_sidepanel_manage_files: 'Manage Files',
    com_assistants_capabilities: 'Capabilities',
    com_assistants_file_search: 'File Search',
    com_assistants_file_search_info:
      'Attaching vector stores for File Search is not yet supported. You can attach them from the Provider Playground or attach files to messages for file search on a thread basis.',
    com_assistants_knowledge: 'Knowledge',
    com_assistants_knowledge_info:
      'If you upload files under Knowledge, conversations with your Assistant may include file contents.',
    com_assistants_knowledge_disabled:
      'Assistant must be created, and Code Interpreter or Retrieval must be enabled and saved before uploading files as Knowledge.',
    com_assistants_image_vision: 'Image Vision',
    com_assistants_code_interpreter: 'Code Interpreter',
    com_assistants_code_interpreter_files:
      'The following files are only available for Code Interpreter:',
    com_assistants_retrieval: 'Retrieval',
    com_assistants_search_name: 'Search assistants by name',
    com_assistants_tools: 'Tools',
    com_assistants_actions: 'Actions',
    com_assistants_add_tools: 'Add Tools',
    com_assistants_add_actions: 'Add Actions',
    com_assistants_non_retrieval_model:
      'File search is not enabled on this model. Please select another model.',
    com_assistants_available_actions: 'Available Actions',
    com_assistants_running_action: 'Running action',
    com_assistants_completed_action: 'Talked to {0}',
    com_assistants_completed_function: 'Ran {0}',
    com_assistants_function_use: 'Assistant used {0}',
    com_assistants_domain_info: 'Assistant sent this info to {0}',
    com_assistants_delete_actions_success: 'Successfully deleted Action from Assistant',
    com_assistants_update_actions_success: 'Successfully created or updated Action',
    com_assistants_update_actions_error: 'There was an error creating or updating the action.',
    com_assistants_delete_actions_error: 'There was an error deleting the action.',
    com_assistants_actions_info:
      "Let your Assistant retrieve information or take actions via API's",
    com_assistants_name_placeholder: 'Optional: The name of the assistant',
    com_assistants_instructions_placeholder: 'The system instructions that the assistant uses',
    com_assistants_description_placeholder: 'Optional: Describe your Assistant here',
    com_assistants_actions_disabled: 'You need to create an assistant before adding actions.',
    com_assistants_update_success: 'Successfully updated',
    com_assistants_update_error: 'There was an error updating your assistant.',
    com_assistants_create_success: 'Successfully created',
    com_assistants_create_error: 'There was an error creating your assistant.',
    com_ui_date_today: 'Today',
    com_ui_date_yesterday: 'Yesterday',
    com_ui_date_previous_7_days: 'Previous 7 days',
    com_ui_date_previous_30_days: 'Previous 30 days',
    com_ui_date_january: 'January',
    com_ui_date_february: 'February',
    com_ui_date_march: 'March',
    com_ui_date_april: 'April',
    com_ui_date_may: 'May',
    com_ui_date_june: 'June',
    com_ui_date_july: 'July',
    com_ui_date_august: 'August',
    com_ui_date_september: 'September',
    com_ui_date_october: 'October',
    com_ui_date_november: 'November',
    com_ui_date_december: 'December',
    com_ui_field_required: 'This field is required',
    com_ui_download_error: 'Error downloading file. The file may have been deleted.',
    com_ui_attach_error_type: 'Unsupported file type for endpoint:',
    com_ui_attach_error_openai: 'Cannot attach Assistant files to other endpoints',
    com_ui_attach_warn_endpoint: 'Non-Assistant files may be ignored without a compatible tool',
    com_ui_attach_error_size: 'File size limit exceeded for endpoint:',
    com_ui_attach_error:
      'Cannot attach file. Create or select a conversation, or try refreshing the page.',
    com_ui_examples: 'Examples',
    com_ui_new_chat: 'New chat',
    com_ui_happy_birthday: "It's my 1st birthday!",
    com_ui_example_quantum_computing: 'Explain quantum computing in simple terms',
    com_ui_example_10_year_old_b_day: "Got any creative ideas for a 10 year old's birthday?",
    com_ui_example_http_in_js: 'How do I make an HTTP request in Javascript?',
    com_ui_capabilities: 'Capabilities',
    com_ui_capability_remember: 'Remembers what user said earlier in the conversation',
    com_ui_capability_correction: 'Allows user to provide follow-up corrections',
    com_ui_capability_decline_requests: 'Trained to decline inappropriate requests',
    com_ui_limitations: 'Limitations',
    com_ui_limitation_incorrect_info: 'May occasionally generate incorrect information',
    com_ui_limitation_harmful_biased:
      'May occasionally produce harmful instructions or biased content',
    com_ui_limitation_limited_2021: 'Limited knowledge of world and events after 2021',
    com_ui_experimental: 'Experimental Features',
    com_ui_on: 'On',
    com_ui_off: 'Off',
    com_ui_yes: 'Yes',
    com_ui_no: 'No',
    com_ui_ascending: 'Asc',
    com_ui_descending: 'Desc',
    com_ui_show_all: 'Show All',
    com_ui_name: 'Name',
    com_ui_date: 'Date',
    com_ui_storage: 'Storage',
    com_ui_context: 'Context',
    com_ui_size: 'Size',
    com_ui_host: 'Host',
    com_ui_update: 'Update',
    com_ui_authentication: 'Authentication',
    com_ui_instructions: 'Instructions',
    com_ui_description: 'Description',
    com_ui_error: 'Error',
    com_ui_select: 'Select',
    com_ui_input: 'Input',
    com_ui_close: 'Close',
    com_ui_model: 'Model',
    com_ui_select_model: 'Select a model',
    com_ui_select_search_model: 'Search model by name',
    com_ui_select_search_plugin: 'Search plugin by name',
    com_ui_use_prompt: 'Use prompt',
    com_ui_prev: 'Prev',
    com_ui_next: 'Next',
    com_ui_stop: 'Stop',
    com_ui_upload_files: 'Upload files',
    com_ui_prompt_templates: 'Prompt Templates',
    com_ui_hide_prompt_templates: 'Hide Prompt Templates',
    com_ui_showing: 'Showing',
    com_ui_of: 'of',
    com_ui_entries: 'Entries',
    com_ui_pay_per_call: 'All AI conversations in one place. Pay per call and not per month',
    com_ui_new_footer: 'All AI conversations in one place.',
    com_ui_enter: 'Enter',
    com_ui_submit: 'Submit',
    com_ui_none_selected: 'None selected',
    com_ui_upload_success: 'Successfully uploaded file',
    com_ui_upload_error: 'There was an error uploading your file',
    com_ui_upload_invalid: 'Invalid file for upload. Must be an image not exceeding 2 MB',
    com_ui_cancel: 'Cancel',
    com_ui_save: 'Save',
    com_ui_save_submit: 'Save & Submit',
    com_user_message: 'You',
    com_ui_read_aloud: 'Read aloud',
    com_ui_copied: 'Copied!',
    com_ui_copy_code: 'Copy code',
    com_ui_copy_to_clipboard: 'Copy to clipboard',
    com_ui_copied_to_clipboard: 'Copied to clipboard',
    com_ui_fork: 'Fork',
    com_ui_fork_info_1: 'Use this setting to fork messages with the desired behavior.',
    com_ui_fork_info_2:
      '"Forking" refers to creating a new conversation that start/end from specific messages in the current conversation, creating a copy according to the options selected.',
    com_ui_fork_info_3:
      'The "target message" refers to either the message this popup was opened from, or, if you check "{0}", the latest message in the conversation.',
    com_ui_fork_info_visible:
      'This option forks only the visible messages; in other words, the direct path to the target message, without any branches.',
    com_ui_fork_info_branches:
      'This option forks the visible messages, along with related branches; in other words, the direct path to the target message, including branches along the path.',
    com_ui_fork_info_target:
      'This option forks all messages leading up to the target message, including its neighbors; in other words, all message branches, whether or not they are visible or along the same path, are included.',
    com_ui_fork_info_start:
      'If checked, forking will commence from this message to the latest message in the conversation, according to the behavior selected above.',
    com_ui_fork_info_remember:
      'Check this to remember the options you select for future usage, making it quicker to fork conversations as preferred.',
    com_ui_fork_success: 'Successfully forked conversation',
    com_ui_fork_processing: 'Forking conversation...',
    com_ui_fork_error: 'There was an error forking the conversation',
    com_ui_fork_change_default: 'Default fork option',
    com_ui_fork_default: 'Use default fork option',
    com_ui_fork_remember: 'Remember',
    com_ui_fork_split_target_setting: 'Start fork from target message by default',
    com_ui_fork_split_target: 'Start fork here',
    com_ui_fork_remember_checked:
      'Your selection will be remembered after usage. Change this at any time in the settings.',
    com_ui_fork_all_target: 'Include all to/from here',
    com_ui_fork_branches: 'Include related branches',
    com_ui_fork_visible: 'Visible messages only',
    com_ui_fork_from_message: 'Select a fork option',
    com_ui_mention: 'Mention an endpoint, assistant, or preset to quickly switch to it',
    com_ui_regenerate: 'Regenerate',
    com_ui_continue: 'Continue',
    com_ui_edit: 'Edit',
    com_ui_success: 'Success',
    com_ui_all: 'all',
    com_ui_clear: 'Clear',
    com_ui_revoke: 'Revoke',
    com_ui_revoke_info: 'Revoke all user provided credentials',
    com_ui_import_conversation: 'Import',
    com_ui_nothing_found: 'Nothing found',
    com_ui_go_to_conversation: 'Go to conversation',
    com_ui_import_conversation_info: 'Import conversations from a JSON file',
    com_ui_import_conversation_success: 'Conversations imported successfully',
    com_ui_import_conversation_error: 'There was an error importing your conversations',
    com_ui_import_conversation_file_type_error: 'Unsupported import type',
    com_ui_confirm_action: 'Confirm Action',
    com_ui_chats: 'chats',
    com_ui_avatar: 'Avatar',
    com_ui_unknown: 'Unknown',
    com_ui_result: 'Result',
    com_ui_image_gen: 'Image Gen',
    com_ui_assistant: 'Assistant',
    com_ui_assistant_deleted: 'Successfully deleted assistant',
    com_ui_assistant_delete_error: 'There was an error deleting the assistant',
    com_ui_assistants: 'Assistants',
    com_ui_attachment: 'Attachment',
    com_ui_assistants_output: 'Assistants Output',
    com_ui_delete: 'Delete',
    com_ui_create: 'Create',
    com_ui_share: 'Share',
    com_ui_copy_link: 'Copy link',
    com_ui_update_link: 'Update link',
    com_ui_create_link: 'Create link',
    com_ui_share_link_to_chat: 'Share link to chat',
    com_ui_share_error: 'There was an error sharing the chat link',
    com_ui_share_create_message: 'Your name and any messages you add after sharing stay private.',
    com_ui_share_created_message:
      'A shared link to your chat has been created. Manage previously shared chats at any time via Settings.',
    com_ui_share_update_message:
      'Your name, custom instructions, and any messages you add after sharing stay private.',
    com_ui_share_updated_message:
      'A shared link to your chat has been updated. Manage previously shared chats at any time via Settings.',
    com_ui_shared_link_not_found: 'Shared link not found',
    com_ui_delete_conversation: 'Delete chat?',
    com_ui_delete_conversation_confirm: 'This will delete',
    com_ui_delete_assistant_confirm:
      'Are you sure you want to delete this Assistant? This cannot be undone.',
    com_ui_rename: 'Rename',
    com_ui_archive: 'Archive',
    com_ui_archive_error: 'Failed to archive conversation',
    com_ui_unarchive: 'Unarchive',
    com_ui_unarchive_error: 'Failed to unarchive conversation',
    com_ui_more_options: 'More',
    com_ui_preview: 'Preview',
    com_ui_upload: 'Upload',
    com_ui_connect: 'Connect',
    com_ui_locked: 'Locked',
    com_ui_upload_delay:
      'Uploading "{0}" is taking more time than anticipated. Please wait while the file finishes indexing for retrieval.',
    com_ui_privacy_policy: 'Privacy policy',
    com_ui_terms_of_service: 'Terms of service',
    com_ui_use_micrphone: 'Use microphone',
    com_ui_min_tags: 'Cannot remove more values, a minimum of {0} are required.',
    com_ui_max_tags: 'Maximum number allowed is {0}, using latest values.',
    com_auth_error_login:
      'Unable to login with the information provided. Please check your credentials and try again.',
    com_auth_error_login_rl:
      'Too many login attempts in a short amount of time. Please try again later.',
    com_auth_error_login_ban:
      'Your account has been temporarily banned due to violations of our service.',
    com_auth_error_login_server:
      'There was an internal server error. Please wait a few moments and try again.',
    com_auth_error_login_unverified:
      'Your account has not been verified. Please check your email for a verification link.',
    com_auth_no_account: "Don't have an account?",
    com_auth_sign_up: 'Sign up',
    com_auth_sign_in: 'Sign in',
    com_auth_google_login: 'Continue with Google',
    com_auth_facebook_login: 'Continue with Facebook',
    com_auth_github_login: 'Continue with Github',
    com_auth_discord_login: 'Continue with Discord',
    com_auth_email: 'Email',
    com_auth_email_required: 'Email is required',
    com_auth_email_min_length: 'Email must be at least 6 characters',
    com_auth_email_max_length: 'Email should not be longer than 120 characters',
    com_auth_email_pattern: 'You must enter a valid email address',
    com_auth_email_address: 'Email address',
    com_auth_password: 'Password',
    com_auth_password_required: 'Password is required',
    com_auth_password_min_length: 'Password must be at least 8 characters',
    com_auth_password_max_length: 'Password must be less than 128 characters',
    com_auth_password_forgot: 'Forgot Password?',
    com_auth_password_confirm: 'Confirm password',
    com_auth_password_not_match: 'Passwords do not match',
    com_auth_continue: 'Continue',
    com_auth_create_account: 'Create your account',
    com_auth_error_create:
      'There was an error attempting to register your account. Please try again.',
    com_auth_full_name: 'Full name',
    com_auth_name_required: 'Name is required',
    com_auth_name_min_length: 'Name must be at least 3 characters',
    com_auth_name_max_length: 'Name must be less than 80 characters',
    com_auth_username: 'Username (optional)',
    com_auth_username_required: 'Username is required',
    com_auth_username_min_length: 'Username must be at least 2 characters',
    com_auth_username_max_length: 'Username must be less than 20 characters',
    com_auth_already_have_account: 'Already have an account?',
    com_auth_login: 'Login',
    com_auth_registration_success_insecure: 'Registration successful.',
    com_auth_registration_success_generic: 'Please check your email to verify your email address.',
    com_auth_reset_password: 'Reset your password',
    com_auth_click: 'Click',
    com_auth_here: 'HERE',
    com_auth_to_reset_your_password: 'to reset your password.',
    com_auth_reset_password_link_sent: 'Email Sent',
    com_auth_reset_password_if_email_exists:
      'If an account with that email exists, an email with password reset instructions has been sent. Please make sure to check your spam folder.',
    com_auth_reset_password_email_sent:
      'If the user is registered, an email will be sent to the inbox.',
    com_auth_reset_password_success: 'Password Reset Success',
    com_auth_login_with_new_password: 'You may now login with your new password.',
    com_auth_error_invalid_reset_token: 'This password reset token is no longer valid.',
    com_auth_click_here: 'Click here',
    com_auth_to_try_again: 'to try again.',
    com_auth_submit_registration: 'Submit registration',
    com_auth_welcome_back: 'Welcome back',
    com_auth_back_to_login: 'Back to Login',
    com_auth_email_verification_failed: 'Email verification failed',
    com_auth_email_verification_rate_limited: 'Too many requests. Please try again later',
    com_auth_email_verification_success: 'Email verified successfully',
    com_auth_email_resent_success: 'Verification email resent successfully',
    com_auth_email_resent_failed: 'Failed to resend verification email',
    com_auth_email_verification_failed_token_missing: 'Verification failed, token missing',
    com_auth_email_verification_invalid: 'Invalid email verification',
    com_auth_email_verification_in_progress: 'Verifying your email, please wait',
    com_auth_email_verification_resend_prompt: "Didn't receive the email?",
    com_auth_email_resend_link: 'Resend Email',
    com_auth_email_verification_redirecting: 'Redirecting in {0} seconds...',
    com_endpoint_open_menu: 'Open Menu',
    com_endpoint_bing_enable_sydney: 'Enable Sydney',
    com_endpoint_bing_to_enable_sydney: 'To enable Sydney',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      "Bing can use up to 7k tokens for 'context', which it can reference for the conversation. The specific limit is not known but may run into errors exceeding 7k tokens",
    com_endpoint_bing_system_message_placeholder:
      "WARNING: Misuse of this feature can get you BANNED from using Bing! Click on 'System Message' for full instructions and the default message if omitted, which is the 'Sydney' preset that is considered safe.",
    com_endpoint_system_message: 'System Message',
    com_endpoint_message: 'Message',
    com_endpoint_messages: 'Messages',
    com_endpoint_message_not_appendable: 'Edit your message or Regenerate.',
    com_endpoint_default_blank: 'default: blank',
    com_endpoint_default_false: 'default: false',
    com_endpoint_default_creative: 'default: creative',
    com_endpoint_default_empty: 'default: empty',
    com_endpoint_default_with_num: 'default: {0}',
    com_endpoint_context: 'Context',
    com_endpoint_tone_style: 'Tone Style',
    com_endpoint_token_count: 'Token count',
    com_endpoint_output: 'Output',
    com_endpoint_context_tokens: 'Max Context Tokens',
    com_endpoint_context_info: `The maximum number of tokens that can be used for context. Use this for control of how many tokens are sent per request.
  If unspecified, will use system defaults based on known models' context size. Setting higher values may result in errors and/or higher token cost.`,
    com_endpoint_google_temp:
      'Higher values = more random, while lower values = more focused and deterministic. We recommend altering this or Top P but not both.',
    com_endpoint_google_topp:
      'Top-p changes how the model selects tokens for output. Tokens are selected from most K (see topK parameter) probable to least until the sum of their probabilities equals the top-p value.',
    com_endpoint_google_topk:
      "Top-k changes how the model selects tokens for output. A top-k of 1 means the selected token is the most probable among all tokens in the model's vocabulary (also called greedy decoding), while a top-k of 3 means that the next token is selected from among the 3 most probable tokens (using temperature).",
    com_endpoint_google_maxoutputtokens:
      ' 	Maximum number of tokens that can be generated in the response. Specify a lower value for shorter responses and a higher value for longer responses.',
    com_endpoint_google_custom_name_placeholder: 'Set a custom name for Google',
    com_endpoint_prompt_prefix_placeholder: 'Set custom instructions or context. Ignored if empty.',
    com_endpoint_instructions_assistants_placeholder:
      'Overrides the instructions of the assistant. This is useful for modifying the behavior on a per-run basis.',
    com_endpoint_prompt_prefix_assistants_placeholder:
      "Set additional instructions or context on top of the Assistant's main instructions. Ignored if empty.",
    com_endpoint_custom_name: 'Custom Name',
    com_endpoint_prompt_prefix: 'Custom Instructions',
    com_endpoint_prompt_prefix_assistants: 'Additional Instructions',
    com_endpoint_instructions_assistants: 'Override Instructions',
    com_endpoint_temperature: 'Temperature',
    com_endpoint_default: 'default',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Max Output Tokens',
    com_endpoint_stop: 'Stop Sequences',
    com_endpoint_stop_placeholder: 'Separate values by pressing `Enter`',
    com_endpoint_openai_max_tokens:
      'Optional `max_tokens` field, representing the maximum number of tokens that can be generated in the chat completion.\n\n    The total length of input tokens and generated tokens is limited by the models context length. You may experience errors if this number exceeds the max context tokens.',
    com_endpoint_openai_temp:
      'Higher values = more random, while lower values = more focused and deterministic. We recommend altering this or Top P but not both.',
    com_endpoint_openai_max:
      "The max tokens to generate. The total length of input tokens and generated tokens is limited by the model's context length.",
    com_endpoint_openai_topp:
      'An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We recommend altering this or temperature but not both.',
    com_endpoint_openai_freq:
      "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
    com_endpoint_openai_pres:
      "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
    com_endpoint_openai_resend:
      'Resend all previously attached images. Note: this can significantly increase token cost and you may experience errors with many image attachments.',
    com_endpoint_openai_resend_files:
      'Resend all previously attached files. Note: this will increase token cost and you may experience errors with many attachments.',
    com_endpoint_openai_detail:
      'The resolution for Vision requests. "Low" is cheaper and faster, "High" is more detailed and expensive, and "Auto" will automatically choose between the two based on the image resolution.',
    com_endpoint_openai_stop:
      'Up to 4 sequences where the API will stop generating further tokens.',
    com_endpoint_openai_custom_name_placeholder: 'Set a custom name for the AI',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Set custom instructions to include in System Message. Default: none',
    com_endpoint_anthropic_temp:
      'Ranges from 0 to 1. Use temp closer to 0 for analytical / multiple choice, and closer to 1 for creative and generative tasks. We recommend altering this or Top P but not both.',
    com_endpoint_anthropic_topp:
      'Top-p changes how the model selects tokens for output. Tokens are selected from most K (see topK parameter) probable to least until the sum of their probabilities equals the top-p value.',
    com_endpoint_anthropic_topk:
      "Top-k changes how the model selects tokens for output. A top-k of 1 means the selected token is the most probable among all tokens in the model's vocabulary (also called greedy decoding), while a top-k of 3 means that the next token is selected from among the 3 most probable tokens (using temperature).",
    com_endpoint_anthropic_maxoutputtokens:
      'Maximum number of tokens that can be generated in the response. Specify a lower value for shorter responses and a higher value for longer responses.',
    com_endpoint_anthropic_custom_name_placeholder: 'Set a custom name for Anthropic',
    com_endpoint_frequency_penalty: 'Frequency Penalty',
    com_endpoint_presence_penalty: 'Presence Penalty',
    com_endpoint_plug_use_functions: 'Use Functions',
    com_endpoint_plug_resend_files: 'Resend Files',
    com_endpoint_plug_resend_images: 'Resend Images',
    com_endpoint_plug_image_detail: 'Image Detail',
    com_endpoint_plug_skip_completion: 'Skip Completion',
    com_endpoint_disabled_with_tools: 'disabled with tools',
    com_endpoint_disabled_with_tools_placeholder: 'Disabled with Tools Selected',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Set custom instructions to include in System Message. Default: none',
    com_endpoint_import: 'Import',
    com_endpoint_set_custom_name: 'Set a custom name, in case you can find this preset',
    com_endpoint_preset_delete_confirm: 'Are you sure you want to delete this preset?',
    com_endpoint_preset_clear_all_confirm: 'Are you sure you want to delete all of your presets?',
    com_endpoint_preset_import: 'Preset Imported!',
    com_endpoint_preset_import_error: 'There was an error importing your preset. Please try again.',
    com_endpoint_preset_save_error: 'There was an error saving your preset. Please try again.',
    com_endpoint_preset_delete_error: 'There was an error deleting your preset. Please try again.',
    com_endpoint_preset_default_removed: 'is no longer the default preset.',
    com_endpoint_preset_default_item: 'Default:',
    com_endpoint_preset_default_none: 'No default preset active.',
    com_endpoint_preset_title: 'Preset',
    com_endpoint_preset_saved: 'Saved!',
    com_endpoint_preset_default: 'is now the default preset.',
    com_endpoint_preset: 'preset',
    com_endpoint_presets: 'presets',
    com_endpoint_preset_selected: 'Preset Active!',
    com_endpoint_preset_selected_title: 'Active!',
    com_endpoint_preset_name: 'Preset Name',
    com_endpoint_new_topic: 'New Topic',
    com_endpoint: 'Endpoint',
    com_endpoint_hide: 'Hide',
    com_endpoint_show: 'Show',
    com_endpoint_examples: ' Presets',
    com_endpoint_completion: 'Completion',
    com_endpoint_agent: 'Agent',
    com_endpoint_show_what_settings: 'Show {0} Settings',
    com_endpoint_export: 'Export',
    com_endpoint_export_share: 'Export/Share',
    com_endpoint_assistant: 'Assistant',
    com_endpoint_use_active_assistant: 'Use Active Assistant',
    com_endpoint_assistant_model: 'Assistant Model',
    com_endpoint_save_as_preset: 'Save As Preset',
    com_endpoint_presets_clear_warning:
      'Are you sure you want to clear all presets? This is irreversible.',
    com_endpoint_not_implemented: 'Not implemented',
    com_endpoint_no_presets: 'No presets yet, use the settings button to create one',
    com_endpoint_not_available: 'No endpoint available',
    com_endpoint_view_options: 'View Options',
    com_endpoint_save_convo_as_preset: 'Save Conversation as Preset',
    com_endpoint_my_preset: 'My Preset',
    com_endpoint_agent_model: 'Agent Model (Recommended: GPT-3.5)',
    com_endpoint_completion_model: 'Completion Model (Recommended: GPT-4)',
    com_endpoint_func_hover: 'Enable use of Plugins as OpenAI Functions',
    com_endpoint_skip_hover:
      'Enable skipping the completion step, which reviews the final answer and generated steps',
    com_endpoint_config_key: 'Set API Key',
    com_endpoint_assistant_placeholder: 'Please select an Assistant from the right-hand Side Panel',
    com_endpoint_config_placeholder: 'Set your Key in the Header menu to chat.',
    com_endpoint_config_key_for: 'Set API Key for',
    com_endpoint_config_key_name: 'Key',
    com_endpoint_config_value: 'Enter value for',
    com_endpoint_config_key_name_placeholder: 'Set API key first',
    com_endpoint_config_key_encryption: 'Your key will be encrypted and deleted at',
    com_endpoint_config_key_expiry: 'the expiry time',
    com_endpoint_config_click_here: 'Click Here',
    com_endpoint_config_google_service_key: 'Google Service Account Key',
    com_endpoint_config_google_cloud_platform: '(from Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'Google API Key',
    com_endpoint_config_google_gemini_api: '(Gemini API)',
    com_endpoint_config_google_api_info: 'To get your Generative Language API key (for Gemini),',
    com_endpoint_config_key_import_json_key: 'Import Service Account JSON Key.',
    com_endpoint_config_key_import_json_key_success:
      'Successfully Imported Service Account JSON Key',
    com_endpoint_config_key_import_json_key_invalid:
      'Invalid Service Account JSON Key, Did you import the correct file?',
    com_endpoint_config_key_get_edge_key: 'To get your Access token for Bing, login to',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Use dev tools or an extension while logged into the site to copy the content of the _U cookie. If this fails, follow these',
    com_endpoint_config_key_edge_instructions: 'instructions',
    com_endpoint_config_key_edge_full_key_string: 'to provide the full cookie strings.',
    com_endpoint_config_key_chatgpt:
      "To get your Access token For ChatGPT 'Free Version', login to",
    com_endpoint_config_key_chatgpt_then_visit: 'then visit',
    com_endpoint_config_key_chatgpt_copy_token: 'Copy access token.',
    com_endpoint_config_key_google_need_to: 'You need to',
    com_endpoint_config_key_google_vertex_ai: 'Enable Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API on Google Cloud, then',
    com_endpoint_config_key_google_service_account: 'Create a Service Account',
    com_endpoint_config_key_google_vertex_api_role:
      "Make sure to click 'Create and Continue' to give at least the 'Vertex AI User' role. Lastly, create a JSON key to import here.",
    com_nav_welcome_assistant: 'Please Select an Assistant',
    com_nav_welcome_message: 'How can I help you today?',
    com_nav_auto_scroll: 'Auto-Scroll to latest message on chat open',
    com_nav_hide_panel: 'Hide right-most side panel',
    com_nav_modular_chat: 'Enable switching Endpoints mid-conversation',
    com_nav_latex_parsing: 'Parsing LaTeX in messages (may affect performance)',
    com_nav_text_to_speech: 'Text to Speech',
    com_nav_automatic_playback: 'Autoplay Latest Message (external only)',
    com_nav_speech_to_text: 'Speech to Text',
    com_nav_profile_picture: 'Profile Picture',
    com_nav_change_picture: 'Change picture',
    com_nav_plugin_store: 'Plugin store',
    com_nav_plugin_install: 'Install',
    com_nav_plugin_uninstall: 'Uninstall',
    com_nav_tool_add: 'Add',
    com_nav_tool_remove: 'Remove',
    com_nav_tool_dialog: 'Assistant Tools',
    com_nav_tool_dialog_description: 'Assistant must be saved to persist tool selections.',
    com_show_agent_settings: 'Show Agent Settings',
    com_show_completion_settings: 'Show Completion Settings',
    com_hide_examples: 'Hide Examples',
    com_show_examples: 'Show Examples',
    com_nav_plugin_search: 'Search plugins',
    com_nav_tool_search: 'Search tools',
    com_nav_plugin_auth_error:
      'There was an error attempting to authenticate this plugin. Please try again.',
    com_nav_export_filename: 'Filename',
    com_nav_export_filename_placeholder: 'Set the filename',
    com_nav_export_type: 'Type',
    com_nav_export_include_endpoint_options: 'Include endpoint options',
    com_nav_enabled: 'Enabled',
    com_nav_not_supported: 'Not Supported',
    com_nav_export_all_message_branches: 'Export all message branches',
    com_nav_export_recursive_or_sequential: 'Recursive or sequential?',
    com_nav_export_recursive: 'Recursive',
    com_nav_export_conversation: 'Export conversation',
    com_nav_export: 'Export',
    com_nav_shared_links: 'Shared links',
    com_nav_shared_links_manage: 'Manage',
    com_nav_shared_links_empty: 'You have no shared links.',
    com_nav_shared_links_name: 'Name',
    com_nav_shared_links_date_shared: 'Date shared',
    com_nav_source_chat: 'View source chat',
    com_nav_my_files: 'My Files',
    com_nav_theme: 'Theme',
    com_nav_theme_system: 'System',
    com_nav_theme_dark: 'Dark',
    com_nav_theme_light: 'Light',
    com_nav_enter_to_send: 'Press Enter to send messages',
    com_nav_user_name_display: 'Display username in messages',
    com_nav_save_drafts: 'Save drafts locally',
    com_nav_show_code: 'Always show code when using code interpreter',
    com_nav_clear_all_chats: 'Clear all chats',
    com_nav_confirm_clear: 'Confirm Clear',
    com_nav_close_sidebar: 'Close sidebar',
    com_nav_open_sidebar: 'Open sidebar',
    com_nav_send_message: 'Send message',
    com_nav_log_out: 'Log out',
    com_nav_user: 'USER',
    com_nav_archived_chats: 'Archived chats',
    com_nav_archived_chats_manage: 'Manage',
    com_nav_archived_chats_empty: 'You have no archived conversations.',
    com_nav_archive_all_chats: 'Archive all chats',
    com_nav_archive_all: 'Archive all',
    com_nav_archive_name: 'Name',
    com_nav_archive_created_at: 'DateCreated',
    com_nav_clear_conversation: 'Clear conversations',
    com_nav_clear_conversation_confirm_message:
      'Are you sure you want to clear all conversations? This is irreversible.',
    com_nav_help_faq: 'Help & FAQ',
    com_nav_settings: 'Settings',
    com_nav_search_placeholder: 'Search messages',
    com_nav_delete_account: 'Delete account',
    com_nav_delete_account_confirm: 'Delete account - are you sure?',
    com_nav_delete_account_button: 'Permanently delete my account',
    com_nav_delete_account_email_placeholder: 'Please enter your account email',
    com_nav_delete_account_confirm_placeholder:
      'To proceed, type "DELETE" in the input field below',
    com_nav_delete_warning: 'WARNING: This will permanently delete your account.',
    com_nav_delete_data_info: 'All your data will be deleted.',
    com_nav_conversation_mode: 'Conversation Mode',
    com_nav_auto_send_text: 'Auto send text (after 3 sec)',
    com_nav_auto_transcribe_audio: 'Auto transcribe audio',
    com_nav_db_sensitivity: 'Decibel sensitivity',
    com_nav_playback_rate: 'Audio Playback Rate',
    com_nav_audio_play_error: 'Error playing audio: {0}',
    com_nav_audio_process_error: 'Error processing audio: {0}',
    com_nav_long_audio_warning: 'Longer texts will take longer to process.',
    com_nav_engine: 'Engine',
    com_nav_browser: 'Browser',
    com_nav_external: 'External',
    com_nav_delete_cache_storage: 'Delete cache storage',
    com_nav_enable_cache_tts: 'Enable cache TTS',
    com_nav_voice_select: 'Voice',
    com_nav_setting_general: 'General',
    com_nav_setting_beta: 'Beta features',
    com_nav_setting_data: 'Data controls',
    com_nav_setting_account: 'Account',
    com_nav_setting_speech: 'Speech',
    com_nav_language: 'Language',
    com_nav_lang_auto: 'Auto detect',
    com_nav_lang_english: 'English',
    com_nav_lang_chinese: '中文',
    com_nav_lang_german: 'Deutsch',
    com_nav_lang_spanish: 'Español',
    com_nav_lang_french: 'Français ',
    com_nav_lang_italian: 'Italiano',
    com_nav_lang_polish: 'Polski',
    com_nav_lang_brazilian_portuguese: 'Português Brasileiro',
    com_nav_lang_russian: 'Русский',
    com_nav_lang_japanese: '日本語',
    com_nav_lang_swedish: 'Svenska',
    com_nav_lang_korean: '한국어',
    com_nav_lang_vietnamese: 'Tiếng Việt',
    com_nav_lang_traditionalchinese: '繁體中文',
    com_nav_lang_arabic: 'العربية',
    com_nav_lang_turkish: 'Türkçe',
    com_nav_lang_dutch: 'Nederlands',
    com_nav_lang_indonesia: 'Indonesia',
    com_nav_lang_hebrew: 'עברית',
  },
  s1 = {
    com_ui_examples: 'أمثلة',
    com_ui_happy_birthday: 'إنه عيد ميلادي الأول!',
    com_ui_new_chat: 'دردشة جديدة',
    com_ui_example_quantum_computing: 'شرح الحوسبة الكمومية ببساطة',
    com_ui_example_10_year_old_b_day: 'هل لديك أفكار إبداعية لعيد ميلاد طفل عمره 10 سنوات؟',
    com_ui_example_http_in_js: 'كيف أقوم بإجراء طلب HTTP في Javascript؟',
    com_ui_capabilities: 'القدرات',
    com_ui_capability_remember: 'يتذكر ما قاله المستخدم في وقت سابق من المحادثة',
    com_ui_capability_correction: 'يسمح للمستخدم بتقديم تصحيحات لاحقة',
    com_ui_capability_decline_requests: 'تم تدريبه على رفض الطلبات غير المناسبة',
    com_ui_limitations: 'القيود',
    com_ui_limitation_incorrect_info: 'قد يولد معلومات غير صحيحة أحيانًا',
    com_ui_limitation_harmful_biased: 'قد ينتج تعليمات ضارة أو محتوى متحيز أحيانًا',
    com_ui_limitation_limited_2021: 'معرفة محدودة بالعالم والأحداث بعد عام 2021',
    com_ui_input: 'إدخال',
    com_ui_close: 'إغلاق',
    com_ui_model: 'النموذج',
    com_ui_select_model: 'اختر نموذجًا',
    com_ui_use_prompt: 'استخدم الأمر',
    com_ui_prev: 'السابق',
    com_ui_next: 'التالي',
    com_ui_prompt_templates: 'قوالب الأوامر',
    com_ui_hide_prompt_templates: 'إخفاء قوالب الأوامر',
    com_ui_showing: 'عرض',
    com_ui_of: 'من',
    com_ui_entries: 'الإدخالات',
    com_ui_pay_per_call:
      'الذكاء الاصطناعي يمكن ان ينتج اخطاء الرجاء التاكد بنفسك من المعلومات المهمه.',
    com_ui_enter: 'أدخل',
    com_ui_submit: 'إرسال',
    com_ui_upload_success: 'تم تحميل الملف بنجاح',
    com_ui_upload_invalid: 'ملف غير صالح للتحميل',
    com_ui_cancel: 'إلغاء',
    com_ui_save: 'حفظ',
    com_ui_copy_to_clipboard: 'نسخ إلى الحافظة',
    com_ui_copied_to_clipboard: 'تم النسخ إلى الحافظة',
    com_ui_regenerate: 'إعادة توليد',
    com_ui_continue: 'استمر',
    com_ui_edit: 'تعديل',
    com_ui_success: 'نجاح',
    com_ui_all: 'الكل',
    com_ui_clear: 'مسح',
    com_ui_revoke: 'إلغاء',
    com_ui_revoke_info: 'إلغاء جميع بيانات الاعتماد المقدمة من المستخدم.',
    com_ui_import_conversation: 'استيراد',
    com_ui_import_conversation_info: 'استيراد محادثات من ملف JSON',
    com_ui_import_conversation_success: 'تم استيراد المحادثات بنجاح',
    com_ui_import_conversation_error: 'حدث خطأ أثناء استيراد محادثاتك',
    com_ui_confirm_action: 'تأكيد الإجراء',
    com_ui_chats: 'الدردشات',
    com_ui_share: 'مشاركة',
    com_ui_copy_link: 'نسخ الرابط',
    com_ui_update_link: 'رابط التحديث',
    com_ui_create_link: 'إنشاء رابط',
    com_ui_share_link_to_chat: 'شارك الرابط في الدردشة',
    com_ui_share_error: 'حدث خطأ أثناء مشاركة رابط الدردشة',
    com_ui_share_create_message: 'سيظل اسمك وأي رسائل تضيفها بعد المشاركة خاصة.',
    com_ui_share_created_message:
      'تم إنشاء رابط مشترك للدردشة الخاصة بك. يمكنك إدارة الدردشات المشتركة مسبقًا في أي وقت عبر الإعدادات.',
    com_ui_share_update_message: 'سيظل اسمك والتعليمات المخصصة وأي رسائل تضيفها بعد المشاركة خاصة.',
    com_ui_share_updated_message:
      'تم تحديث رابط مشترك للدردشة الخاصة بك. يمكنك إدارة الدردشات المشتركة مسبقًا في أي وقت عبر الإعدادات.',
    com_ui_shared_link_not_found: 'الرابط المشترك غير موجود',
    com_ui_delete: 'حذف',
    com_ui_delete_conversation: 'حذف الدردشة؟',
    com_ui_delete_conversation_confirm: 'سيتم حذف هذا',
    com_ui_rename: 'إعادة تسمية',
    com_ui_archive: 'أرشفة',
    com_ui_archive_error: 'فشل في أرشفة المحادثة',
    com_ui_unarchive: 'إلغاء الأرشفة',
    com_ui_unarchive_error: 'فشل في إلغاء الأرشفة',
    com_ui_more_options: 'المزيد',
    com_auth_error_login:
      'تعذر تسجيل الدخول باستخدام المعلومات المقدمة. يرجى التحقق من بيانات الاعتماد الخاصة بك والمحاولة مرة أخرى.',
    com_auth_error_login_rl:
      'محاولات تسجيل الدخول الكثيرة في فترة زمنية قصيرة. يرجى المحاولة مرة أخرى لاحقًا.',
    com_auth_error_login_ban: 'تم حظر حسابك مؤقتًا بسبب انتهاكات لخدمتنا.',
    com_auth_error_login_server:
      'كان هناك خطأ في الخادم الداخلي. يرجى الانتظار بضع لحظات وحاول مرة أخرى.',
    com_auth_no_account: 'ليس لديك حساب؟',
    com_auth_sign_up: 'سجل الان',
    com_auth_sign_in: 'تسجيل الدخول',
    com_auth_google_login: 'تسجيل الدخول بواسطة Google',
    com_auth_facebook_login: 'تسجيل الدخول بواسطة Facebook',
    com_auth_github_login: 'تسجيل الدخول بواسطة Github',
    com_auth_discord_login: 'تسجيل الدخول بواسطة Discord',
    com_auth_email: 'البريد الإلكتروني',
    com_auth_email_required: 'البريد الإلكتروني مطلوب',
    com_auth_email_min_length: 'يجب أن يكون البريد الإلكتروني على الأقل 6 أحرف',
    com_auth_email_max_length: 'يجب ألا يزيد البريد الإلكتروني عن 120 حرفًا',
    com_auth_email_pattern: 'يجب أن تدخل عنوان بريد إلكتروني صالح',
    com_auth_email_address: 'عنوان البريد الإلكتروني',
    com_auth_password: 'كلمة المرور',
    com_auth_password_required: 'كلمة المرور مطلوبة',
    com_auth_password_min_length: 'يجب أن تكون كلمة المرور على الأقل 8 أحرف',
    com_auth_password_max_length: 'يجب أن تكون كلمة المرور أقل من 128 حرفًا',
    com_auth_password_forgot: 'نسيت كلمة المرور؟',
    com_auth_password_confirm: 'تأكيد كلمة المرور',
    com_auth_password_not_match: 'كلمات المرور لا تتطابق',
    com_auth_continue: 'استمر',
    com_auth_create_account: 'أنشئ حسابك',
    com_auth_error_create: 'كان هناك خطأ في محاولة تسجيل حسابك. يرجى المحاولة مرة أخرى.',
    com_auth_full_name: 'الاسم الكامل',
    com_auth_name_required: 'الاسم مطلوب',
    com_auth_name_min_length: 'يجب أن يكون الاسم على الأقل 3 أحرف',
    com_auth_name_max_length: 'يجب أن يكون الاسم أقل من 80 حرفًا',
    com_auth_username: 'اسم المستخدم (اختياري)',
    com_auth_username_required: 'اسم المستخدم مطلوب',
    com_auth_username_min_length: 'يجب أن يكون اسم المستخدم على الأقل 2 أحرف',
    com_auth_username_max_length: 'يجب أن يكون اسم المستخدم أقل من 20 حرفًا',
    com_auth_already_have_account: 'هل لديك حساب بالفعل؟',
    com_auth_login: 'تسجيل الدخول',
    com_auth_reset_password: 'إعادة تعيين كلمة المرور',
    com_auth_click: 'انقر',
    com_auth_here: 'هنا',
    com_auth_to_reset_your_password: 'لإعادة تعيين كلمة المرور الخاصة بك.',
    com_auth_reset_password_link_sent: 'تم إرسال البريد الإلكتروني',
    com_auth_reset_password_email_sent:
      'تم إرسال بريد إلكتروني إليك مع مزيد من التعليمات لإعادة تعيين كلمة المرور الخاصة بك.',
    com_auth_error_reset_password:
      'كانت هناك مشكلة في إعادة تعيين كلمة المرور الخاصة بك. لم يتم العثور على مستخدم بالعنوان البريدي الذي تم تقديمه. يرجى المحاولة مرة أخرى.',
    com_auth_reset_password_success: 'نجاح إعادة تعيين كلمة المرور',
    com_auth_login_with_new_password:
      'يمكنك الآن تسجيل الدخول باستخدام كلمة المرور الجديدة الخاصة بك.',
    com_auth_error_invalid_reset_token: 'رمز إعادة تعيين كلمة المرور هذا لم يعد صالحًا.',
    com_auth_click_here: 'انقر هنا',
    com_auth_to_try_again: 'للمحاولة مرة أخرى.',
    com_auth_submit_registration: 'إرسال التسجيل',
    com_auth_welcome_back: 'مرحبا بك مرة أخرى',
    com_endpoint_open_menu: 'افتح القائمة',
    com_endpoint_bing_enable_sydney: 'تمكين سيدني',
    com_endpoint_bing_to_enable_sydney: 'لتمكين سيدني',
    com_endpoint_bing_jailbreak: 'الهروب من السجن',
    com_endpoint_bing_context_placeholder:
      "يمكن أن يستخدم بينغ ما يصل إلى 7 آلاف رمز لـ 'السياق'، والذي يمكنه الرجوع إليه للمحادثة. الحد الخاص ليس معروفًا ولكن قد يواجه أخطاء تجاوز 7 آلاف رمز",
    com_endpoint_bing_system_message_placeholder:
      "تحذير: يمكن أن يؤدي سوء استخدام هذه الميزة إلى حظرك من استخدام Bing! انقر على 'رسالة النظام' للحصول على التعليمات الكاملة والرسالة الافتراضية إذا تم حذفها، والتي هي الإعداد المسبق 'سيدني' الذي يعتبر آمنًا.",
    com_endpoint_system_message: 'رسالة النظام',
    com_endpoint_default_blank: 'الافتراضي: فارغ',
    com_endpoint_default_false: 'الافتراضي: خاطئ',
    com_endpoint_default_creative: 'الافتراضي: إبداعي',
    com_endpoint_default_empty: 'الافتراضي: فارغ',
    com_endpoint_default_with_num: 'الافتراضي: {0}',
    com_endpoint_context: 'السياق',
    com_endpoint_tone_style: 'نمط النبرة',
    com_endpoint_token_count: 'عدد الرموز',
    com_endpoint_output: 'الإخراج',
    com_endpoint_google_temp:
      'القيم الأعلى = أكثر عشوائية، بينما القيم الأقل = أكثر تركيزًا وحتمية. نوصي بتغيير هذا أو Top P ولكن ليس كلاهما.',
    com_endpoint_google_topp:
      'Top-p يغير كيفية اختيار النموذج للرموز للإخراج. يتم اختيار الرموز من الأكثر K (انظر معلمة topK) احتمالًا إلى   الأقل حتى يصبح مجموع احتمالاتهم يساوي قيمة top-p.',
    com_endpoint_google_topk:
      'Top-k يغير كيفية اختيار النموذج للرموز للإخراج. top-k من 1 يعني أن الرمز المحدد هو الأكثر احتمالية بين جميع   الرموز في مفردات النموذج (يسمى أيضًا الترميز الجشعي)، بينما top-k من 3 يعني أن الرمز التالي يتم اختياره من بين الرموز الثلاثة الأكثر احتمالية (باستخدام الحرارة).',
    com_endpoint_google_maxoutputtokens:
      'الحد الأقصى لعدد الرموز التي يمكن إنشاؤها في الرد. حدد قيمة أقل للردود الأقصر وقيمة أعلى للردود الأطول.',
    com_endpoint_google_custom_name_placeholder: 'قم بتعيين اسم مخصص لـ Google',
    com_endpoint_prompt_prefix_placeholder:
      'قم بتعيين تعليمات مخصصة أو سياق. يتم تجاهله إذا كان فارغًا.',
    com_endpoint_custom_name: 'اسم مخصص',
    com_endpoint_prompt_prefix: 'بادئة الأمر',
    com_endpoint_temperature: 'درجة الحرارة',
    com_endpoint_default: 'الافتراضي',
    com_endpoint_top_p: 'أعلى P',
    com_endpoint_top_k: 'أعلى K',
    com_endpoint_max_output_tokens: 'الحد الأقصى لعدد الرموز المنتجة',
    com_endpoint_openai_temp:
      'القيم الأعلى = أكثر عشوائية ، بينما القيم الأقل = أكثر تركيزًا وتحديدًا. نوصي بتغيير هذا أو Top P ولكن ليس كلاهما.',
    com_endpoint_openai_max:
      'الحد الأقصى للرموز لتوليد. إجمالي طول الرموز المدخلة والرموز المولدة محدود بطول سياق النموذج.',
    com_endpoint_openai_topp:
      'بديل للعينة مع درجة الحرارة، يسمى العينة النووية، حيث ينظر النموذج في نتائج الرموز مع كتلة احتمال top_p. لذا 0.1 يعني أن الرموز التي تشكل فقط 10% من كتلة الاحتمال تعتبر. نوصي بتغيير هذا أو درجة الحرارة ولكن ليس كلاهما.',
    com_endpoint_openai_freq:
      'رقم بين -2.0 و 2.0. القيم الموجبة تعاقب الرموز الجديدة بناءً على تكرارها الحالي في النص حتى الآن، مما يقلل من احتمالية تكرار النموذج لنفس السطر حرفيًا.',
    com_endpoint_openai_pres:
      'رقم بين -2.0 و 2.0. القيم الموجبة تعاقب الرموز الجديدة بناءً على ما إذا كانت تظهر في النص حتى الآن، مما يزيد احتمالية النموذج للحديث عن مواضيع جديدة.',
    com_endpoint_openai_custom_name_placeholder: 'قم بتعيين اسم مخصص لـ ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'قم بتعيين تعليمات مخصصة لتضمينها في رسالة النظام. الافتراضي: لا شيء',
    com_endpoint_anthropic_temp:
      'المدى من 0 إلى 1. استخدم درجة الحرارة الأقرب إلى 0 للمهام التحليلية / اختيارية متعددة، وأقرب إلى 1 للمهام الإبداعية والإنشائية. نوصي بتغيير هذا أو Top P ولكن ليس كلاهما.',
    com_endpoint_anthropic_topp:
      'Top-p يغير الطريقة التي يختار فيها النموذج الرموز للإخراج. يتم اختيار الرموز من الأكثر احتمالية k (انظر المعلمة topK) إلى الأقل حتى يساوي مجموع احتمالاتهم قيمة top-p.',
    com_endpoint_anthropic_topk:
      'يغير top-k الطريقة التي يختار فيها النموذج الرموز للإخراج. يعني top-k 1 أن الرمز المحدد هو الأكثر احتمالية من بين جميع الرموز في المفردات النموذجية (يسمى أيضا الترميز الطمع)، بينما يعني top-k من 3 أن الرمز القادم محدد من بين الرموز الثلاثة الأكثر احتمالية (باستخدام درجة الحرارة).',
    com_endpoint_anthropic_maxoutputtokens:
      'العدد الأقصى من الرموز التي يمكن إنشاؤها في الرد. حدد قيمة أقل للحصول على ردود أقصر وقيمة أعلى للحصول على ردود أطول.',
    com_endpoint_anthropic_custom_name_placeholder: 'قم بتعيين اسم مخصص لـ Anthropic',
    com_endpoint_frequency_penalty: 'عقوبة التكرار',
    com_endpoint_presence_penalty: 'عقوبة الوجود',
    com_endpoint_plug_use_functions: 'استخدام الوظائف',
    com_endpoint_plug_skip_completion: 'تجاوز الإكمال',
    com_endpoint_disabled_with_tools: 'معطل بواسطة الأدوات',
    com_endpoint_disabled_with_tools_placeholder: 'تم التعطيل باختيار الأدوات',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'قم بتعيين تعليمات مخصصة لتضمينها في رسالة النظام. الافتراضي: لا شيء',
    com_endpoint_import: 'استيراد',
    com_endpoint_set_custom_name:
      'قم بتعيين اسم مخصص، في حالة إمكانية العثور على هذا الإعداد المسبق',
    com_endpoint_preset: 'إعداد مسبق',
    com_endpoint_presets: 'إعدادات مسبقة',
    com_endpoint_preset_name: 'اسم الإعداد المسبق',
    com_endpoint_new_topic: 'موضوع جديد',
    com_endpoint: 'نقطة النهاية',
    com_endpoint_hide: 'إخفاء',
    com_endpoint_show: 'إظهار',
    com_endpoint_examples: 'الإعدادات المسبقة ',
    com_endpoint_completion: 'إكمال',
    com_endpoint_agent: 'الوكيل',
    com_endpoint_show_what_settings: 'إظهار {0} الإعدادات',
    com_endpoint_save: 'حفظ',
    com_endpoint_export: 'تصدير',
    com_endpoint_save_as_preset: 'حفظ كإعداد مسبق',
    com_endpoint_presets_clear_warning:
      'هل أنت متأكد أنك تريد مسح جميع الإعدادات المسبقة؟ هذا لا يمكن التراجع عنه.',
    com_endpoint_not_implemented: 'لم يتم تنفيذه',
    com_endpoint_no_presets: 'لا يوجد إعداد مسبق بعد',
    com_endpoint_not_available: 'لا توجد نقطة نهاية متاحة',
    com_endpoint_view_options: 'عرض الخيارات',
    com_endpoint_save_convo_as_preset: 'حفظ المحادثة كإعداد مسبق',
    com_endpoint_my_preset: 'الإعداد المسبق الخاص بي',
    com_endpoint_agent_model: 'نموذج الوكيل (موصى به: GPT-3.5)',
    com_endpoint_completion_model: 'نموذج الإكمال (موصى به: GPT-4)',
    com_endpoint_func_hover: 'تمكين استخدام الإضافات كوظائف OpenAI',
    com_endpoint_skip_hover:
      'تمكين تجاوز خطوة الإكمال التي تقوم بمراجعة الإجابة النهائية والخطوات المولدة',
    com_endpoint_config_key: 'تعيين مفتاح API',
    com_endpoint_config_key_for: 'ضع API Key لـ',
    com_endpoint_config_key_name: 'مفتـاح',
    com_endpoint_config_value: 'أدخل القيمة لـ',
    com_endpoint_config_key_name_placeholder: 'قم بتعيين مفتاح API أولاً',
    com_endpoint_config_key_encryption: 'سيتم تشفير مفتاحك وحذفه في',
    com_endpoint_config_key_expiry: 'وقت الانتهاء',
    com_endpoint_config_key_import_json_key: 'استيراد مفتاح حساب الخدمة JSON.',
    com_endpoint_config_key_import_json_key_success: 'تم استيراد مفتاح حساب الخدمة JSON بنجاح',
    com_endpoint_config_key_import_json_key_invalid:
      'مفتاح حساب الخدمة JSON غير صالح، هل قمت باستيراد الملف الصحيح؟',
    com_endpoint_config_key_get_edge_key:
      'للحصول على رمز الوصول الخاص بك لـ Bing، قم بتسجيل الدخول إلى',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'استخدم أدوات المطور أو ملحق أثناء تسجيل الدخول إلى الموقع لنسخ محتوى ألـ_U cookie. إذا فشل هذا، اتبع هذه',
    com_endpoint_config_key_edge_instructions: 'التعليمات',
    com_endpoint_config_key_edge_full_key_string: ' لتقديم سلاسل كاملة للكوكيز.',
    com_endpoint_config_key_chatgpt:
      'للحصول على رمز الوصول الخاص بـ ChatGPT إصدار مجاني، قم بتسجيل الدخول إلى',
    com_endpoint_config_key_chatgpt_then_visit: 'ثم قم بزيارة',
    com_endpoint_config_key_chatgpt_copy_token: 'نسخ رمز الوصول.',
    com_endpoint_config_key_google_need_to: 'أنت بحاجة إلى',
    com_endpoint_config_key_google_vertex_ai: 'تمكين Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API على Google Cloud، ثم',
    com_endpoint_config_key_google_service_account: 'أنشئ حساب خدمة',
    com_endpoint_config_key_google_vertex_api_role:
      'تأكد من النقر على إنشاء ومتابعة" لمنح الدور "Vertex AI User" على الأقل. أخيرًا، قم بإنشاء مفتاح JSON للعمل على استيراده هنا.',
    com_nav_auto_scroll: 'التمرير التلقائي إلى أحدث عند الفتح',
    com_nav_plugin_store: 'متجر الإضافات',
    com_nav_plugin_search: 'ابحث عن الإضافات',
    com_nav_plugin_auth_error:
      'حدث خطأ أثناء محاولة المصادقة على هذا البرنامج المساعد. يرجى المحاولة مرة أخرى.',
    com_nav_export_filename: 'اسم الملف',
    com_nav_export_filename_placeholder: 'قم بتعيين اسم الملف',
    com_nav_export_type: 'النوع',
    com_nav_export_include_endpoint_options: 'تضمين خيارات النقاط النهائية',
    com_nav_enabled: 'تم التمكين',
    com_nav_not_supported: 'غير مدعوم',
    com_nav_export_all_message_branches: 'تصدير كل فروع الرسائل',
    com_nav_export_recursive_or_sequential: 'التراجع أو التسلسل؟',
    com_nav_export_recursive: 'تكراري',
    com_nav_export_conversation: 'تصدير المحادثة',
    com_nav_export: 'تصدير',
    com_nav_shared_links: 'روابط مشتركة',
    com_nav_shared_links_manage: 'الإدارة',
    com_nav_shared_links_empty: 'ليس لديك أي روابط مشتركة.',
    com_nav_shared_links_name: 'الاسم',
    com_nav_shared_links_date_shared: 'تاريخ المشترك',
    com_nav_theme: 'المظهر',
    com_nav_theme_system: 'النظام',
    com_nav_theme_dark: 'داكن',
    com_nav_theme_light: 'فاتح',
    com_nav_clear_all_chats: 'مسح كل الدردشات',
    com_nav_confirm_clear: 'تأكيد المسح',
    com_nav_close_sidebar: 'إغلاق القائمة الجانبية',
    com_nav_open_sidebar: 'افتح القائمة الجانبية',
    com_nav_log_out: 'تسجيل الخروج',
    com_nav_user: 'المستخدم',
    com_nav_archived_chats: 'الدردشات المؤرشفة',
    com_nav_archived_chats_manage: 'إدارة',
    com_nav_archived_chats_empty: 'ليس لديك أي دردشات مؤرشفة.',
    com_nav_archive_all_chats: 'الأرشفة على كل الدردشات',
    com_nav_archive_all: 'الأرشفة على كل الدردشات',
    com_nav_archive_name: 'الاسم',
    com_nav_archive_created_at: 'تاريخ الإنشاء',
    com_nav_clear_conversation: 'مسح المحادثات',
    com_nav_clear_conversation_confirm_message:
      'هل أنت متأكد أنك تريد مسح جميع المحادثات؟ هذا لا يمكن التراجع عنه.',
    com_nav_help_faq: 'مساعدة & الأسئلة الشائعة',
    com_nav_settings: 'الإعدادات',
    com_nav_search_placeholder: 'بحث في الرسائل',
    com_nav_setting_general: 'عام',
    com_nav_setting_data: 'تحكم في البيانات',
    com_assistants_file_search: 'بحث الملفات',
    com_assistants_file_search_info:
      'لا يتم دعم إرفاق مخازن الكتل الرقمية لميزة البحث في الملفات بعد. يمكنك إرفاقها من ملعب المزود أو إرفاق ملفات إلى الرسائل للبحث في الملفات على أساس المحادثة.',
    com_assistants_non_retrieval_model:
      'البحث في الملفات غير مُمكّن على هذا النموذج. يرجى تحديد نموذج آخر.',
    com_ui_attach_error_openai: 'لا يمكن إرفاق ملفات المساعد إلى نقاط نهائية أخرى',
    com_ui_attach_warn_endpoint: 'قد يتم تجاهل الملفات غير المساعدة دون وجود أداة متوافقة',
    com_ui_assistant_deleted: 'تم حذف المساعد بنجاح',
    com_ui_assistant_delete_error: 'حدث خطأ أثناء حذف المساعد',
    com_ui_copied: 'تم النسخ',
    com_ui_copy_code: 'نسخ الكود',
    com_nav_source_chat: 'عرض محادثة المصدر',
    com_ui_date_today: 'اليوم',
    com_ui_date_yesterday: 'أمس',
    com_ui_date_previous_7_days: 'الأيام السبعة السابقة',
    com_ui_date_previous_30_days: 'الـ 30 يومًا السابقة',
    com_ui_date_january: 'يناير',
    com_ui_date_february: 'فبراير',
    com_ui_date_march: 'مارس',
    com_ui_date_april: 'أبريل',
    com_ui_date_may: 'مايو',
    com_ui_date_june: 'يونيو',
    com_ui_date_july: 'يوليو',
    com_ui_date_august: 'أغسطس',
    com_ui_date_september: 'سبتمبر',
    com_ui_date_october: 'أكتوبر',
    com_ui_date_november: 'نوفمبر',
    com_ui_date_december: 'ديسمبر',
    com_ui_nothing_found: 'لم يتم العثور على أي شيء',
    com_ui_go_to_conversation: 'انتقل إلى المحادثة',
    com_error_moderation:
      'يبدو أن المحتوى المقدم قد تم وضع علامة عليه من قبل نظام الرقابة لدينا لعدم توافقه مع إرشادات مجتمعنا. لا نستطيع المضي قدمًا في هذا الموضوع المحدد. إذا كانت لديك أسئلة أخرى أو مواضيع ترغب في استكشافها، يرجى تحرير رسالتك، أو إنشاء محادثة جديدة.',
    com_error_no_user_key: 'لم يتم العثور على مفتاح. يرجى تقديم مفتاح والمحاولة مرة أخرى.',
    com_error_no_base_url: 'لم يتم العثور على رابط أساسي. يرجى تقديم واحد والمحاولة مرة أخرى.',
    com_error_invalid_user_key: 'مفتاح غير صالح. يرجى تقديم مفتاح صالح والمحاولة مرة أخرى.',
    com_error_expired_user_key:
      'انتهت صلاحية المفتاح المقدم لـ {0} في {1}. يرجى تقديم مفتاح وحاول مرة أخرى.',
    com_files_no_results: 'لا توجد نتائج.',
    com_files_filter: 'فلترة الملفات...',
    com_files_number_selected: 'تم اختيار {0} من أصل {1} ملف(ملفات)',
    com_sidepanel_select_assistant: 'اختر مساعدًا',
    com_sidepanel_parameters: 'معلمات',
    com_sidepanel_assistant_builder: 'بانٍ المساعد',
    com_sidepanel_hide_panel: 'إخفاء اللوحة',
    com_sidepanel_attach_files: 'إرفاق الملفات',
    com_sidepanel_manage_files: 'إدارة الملفات',
    com_assistants_capabilities: 'قدرات',
    com_assistants_knowledge: 'المعرفة',
    com_assistants_completed_function: 'تم تشغيل {0}',
    com_assistants_knowledge_info:
      'إذا قمت بتحميل ملفات تحت معلومات، فقد تتضمن المحادثات مع المساعد الخاص بك محتويات الملف.',
    com_assistants_knowledge_disabled:
      'يجب إنشاء المساعد وتمكين المفسر البرمجي أو الاسترجاع وحفظهما قبل تحميل الملفات كمعرفة.',
    com_assistants_image_vision: 'رؤية الصورة',
    com_assistants_code_interpreter: 'مُفسِّر الشفرة',
    com_assistants_code_interpreter_files: 'الملفات التالية متاحة فقط لمفسر الشفرة:',
    com_assistants_retrieval: 'استرداد',
    com_assistants_search_name: 'البحث عن المساعدين بالاسم',
    com_assistants_tools: 'أدوات المساعدين',
    com_assistants_actions: 'إجراءات',
    com_assistants_add_tools: 'إضافة أدوات',
    com_assistants_add_actions: 'إضافة إجراءات',
    com_assistants_available_actions: 'الإجراءات المتاحة',
    com_assistants_running_action: 'جارٍ تنفيذ الإجراء',
    com_assistants_completed_action: 'تحدث إلى {0}',
    com_assistants_function_use: 'المساعد استخدم {0}',
    com_assistants_domain_info: 'أرسل المساعد هذه المعلومات إلى {0}',
    com_assistants_delete_actions_success: 'تم حذف الإجراء من المساعد بنجاح',
    com_assistants_update_actions_success: 'تم إنشاء أو تحديث الإجراء بنجاح',
    com_assistants_update_actions_error: 'حدث خطأ أثناء إنشاء أو تحديث الإجراء.',
    com_assistants_delete_actions_error: 'حدث خطأ أثناء حذف الإجراء.',
    com_assistants_actions_info:
      'اسمح لمساعدك باسترداد المعلومات أو اتخاذ إجراءات عبر واجهات برمجة التطبيقات',
    com_assistants_name_placeholder: 'اختياري: اسم المساعد',
    com_assistants_instructions_placeholder: 'التعليمات النظامية التي يستخدمها المساعد',
    com_assistants_description_placeholder: 'اختياري: اشرح مساعدك هنا',
    com_assistants_actions_disabled: 'يجب عليك إنشاء مساعد قبل إضافة إجراءات.',
    com_assistants_update_success: 'تم التحديث بنجاح',
    com_assistants_update_error: 'حدث خطأ أثناء تحديث المساعد الافتراضي الخاص بك.',
    com_assistants_create_success: 'تم إنشاؤه بنجاح',
    com_assistants_create_error: 'حدث خطأ أثناء إنشاء المساعد الخاص بك.',
    com_ui_field_required: 'هذا الحقل مطلوب',
    com_ui_download_error: 'حدث خطأ أثناء تنزيل الملف. قد يكون الملف قد تم حذفه.',
    com_ui_attach_error_type: 'نوع ملف غير مدعوم للنقطة النهائية:',
    com_ui_attach_error_size: 'تم تجاوز حد حجم الملف للنقطة النهائية',
    com_ui_attach_error: 'تعذر إرفاق الملف. يرجى إنشاء أو تحديد محادثة، أو حاول تحديث الصفحة.',
    com_ui_experimental: 'ميزات تجريبية',
    com_ui_on: 'مفعل',
    com_ui_off: 'إيقاف',
    com_ui_yes: 'نعم',
    com_ui_no: 'لا',
    com_ui_ascending: 'تصاعدي',
    com_ui_descending: 'تنازلي',
    com_ui_show_all: 'عرض الكل',
    com_ui_name: 'اسم',
    com_ui_date: 'تاريخ',
    com_ui_storage: 'التخزين',
    com_ui_context: 'سياق',
    com_ui_size: 'الحجم',
    com_ui_host: 'مُضيف',
    com_ui_update: 'تحديث',
    com_ui_authentication: 'المصادقة',
    com_ui_instructions: 'تعليمات',
    com_ui_description: 'وصف',
    com_ui_error: 'خطأ',
    com_ui_select: 'اختر',
    com_ui_select_search_model: 'ابحث عن نموذج باسمه',
    com_ui_select_search_plugin: 'إضافة البحث عن الإضافات حسب الاسم',
    com_ui_stop: 'توقف',
    com_ui_upload_files: 'تحميل الملفات',
    com_ui_new_footer: 'جميع محادثات الذكاء الاصطناعي في مكان واحد.',
    com_ui_none_selected: 'لم يتم اختيار أي شيء',
    com_ui_upload_error: 'حدث خطأ أثناء تحميل ملفك',
    com_ui_save_submit: 'حفظ وإرسال',
    com_user_message: 'أنت',
    com_ui_fork: 'تفرع',
    com_ui_fork_info_1: 'استخدم هذا الإعداد لتفريع الرسائل بالسلوك المرغوب.',
    com_ui_fork_info_2:
      '"التفريع" يشير إلى إنشاء محادثة جديدة تبدأ/تنتهي من رسائل محددة في المحادثة الحالية، وإنشاء نسخة وفقًا للخيارات المحددة.',
    com_ui_fork_info_3:
      '"الرسالة المستهدفة" تشير إما إلى الرسالة التي تم فتح هذه النافذة المنبثقة منها، أو إذا قمت بتحديد "{0}"، آخر رسالة في المحادثة.',
    com_ui_fork_info_visible:
      'هذا الخيار يقوم بتفريع الرسائل المرئية فقط؛ بمعنى آخر، المسار المباشر إلى الرسالة المستهدفة، دون أي فروع.',
    com_ui_fork_info_branches:
      'هذا الخيار يقسم الرسائل المرئية، جنبًا إلى جنب مع الفروع ذات الصلة؛ بمعنى آخر، المسار المباشر إلى الرسالة المستهدفة، بما في ذلك الفروع على طول المسار.',
    com_ui_fork_info_target:
      'هذا الخيار يؤدي إلى تفريع جميع الرسائل التي تؤدي إلى الرسالة المستهدفة، بما في ذلك جيرانها؛ بعبارة أخرى، يتم تضمين جميع فروع الرسائل، سواء كانت مرئية أم لا أو على نفس المسار.',
    com_ui_fork_info_start:
      'إذا تم تحديده، فسيبدأ التفريع من هذه الرسالة إلى آخر رسالة في المحادثة، وفقًا للسلوك المحدد أعلاه.',
    com_ui_fork_info_remember:
      'حدد هذا الخيار لتذكر الإعدادات التي اخترتها لاستخدامها مستقبلاً، مما يجعل عملية تفريع المحادثات أسرع وفقًا لتفضيلاتك.',
    com_ui_fork_success: 'تم تفريع المحادثة بنجاح',
    com_ui_fork_processing: 'تجزئة المحادثة...',
    com_ui_fork_error: 'حدث خطأ أثناء تفريع المحادثة',
    com_ui_fork_change_default: 'خيار التفرع الافتراضي',
    com_ui_fork_default: 'استخدم خيار التفريع الافتراضي',
    com_ui_fork_remember: 'تذكر',
    com_ui_fork_split_target_setting: 'ابدأ التفرع من رسالة الهدف افتراضيًا',
    com_ui_fork_split_target: 'ابدأ التفرع هنا',
    com_ui_fork_remember_checked:
      'سيتم تذكر اختيارك بعد الاستخدام. يمكنك تغيير هذا في أي وقت من إعدادات البرنامج.',
    com_ui_fork_all_target: 'تضمين الكل إلى/من هنا',
    com_ui_fork_branches: 'تضمين الفروع ذات الصلة',
    com_ui_fork_visible: 'الرسائل المرئية فقط',
    com_ui_fork_from_message: 'اختر خيار التفرع',
    com_ui_mention: 'اذكر نقطة نهاية أو مساعدًا أو إعدادًا مسبقًا للتبديل إليه بسرعة',
    com_ui_import_conversation_file_type_error: 'نوع الملف غير مدعوم للاستيراد',
    com_ui_avatar: 'الصورة الرمزية',
    com_ui_unknown: 'غير معروف',
    com_ui_result: 'النتيجة',
    com_ui_image_gen: 'توليد الصور',
    com_ui_assistant: 'المساعد',
    com_ui_assistants: 'المساعدون',
    com_ui_attachment: 'مرفق',
    com_ui_assistants_output: 'إخراج المساعدين',
    com_ui_create: 'إنشاء',
    com_ui_delete_assistant_confirm:
      'هل أنت متأكد من رغبتك في حذف هذا المساعد؟ لا يمكن التراجع عن هذا الإجراء.',
    com_ui_preview: 'معاينة',
    com_ui_upload: 'تحميل',
    com_ui_connect: 'اتصال',
    com_ui_upload_delay:
      'تحميل "{0}" يستغرق وقتًا أطول من المتوقع. يرجى الانتظار حتى ينتهي فهرسة الملف للاسترجاع.',
    com_ui_privacy_policy: 'سياسة الخصوصية',
    com_ui_terms_of_service: 'شروط الخدمة',
    com_ui_min_tags: 'لا يمكن إزالة المزيد من القيم، الحد الأدنى المطلوب هو {0}.',
    com_ui_max_tags: 'الحد الأقصى المسموح به هو {0}، باستخدام أحدث القيم.',
    com_auth_back_to_login: 'العودة إلى تسجيل الدخول',
    com_endpoint_message: 'رسالة',
    com_endpoint_messages: 'رسائل',
    com_endpoint_message_not_appendable: 'عدّل رسالتك أو أعد إنشاءها.',
    com_endpoint_context_tokens: 'الحد الأقصى لرموز السياق',
    com_endpoint_context_info:
      'الحد الأقصى لعدد الرموز التي يمكن استخدامها للسياق. استخدم هذا للتحكم في عدد الرموز المرسلة لكل طلب. إذا لم يتم تحديده، سيتم استخدام الإعدادات الافتراضية للنظام بناءً على حجم سياق نماذج معروفة. قد يؤدي تعيين قيم أعلى إلى حدوث أخطاء و/أو تكلفة رموز أعلى.',
    com_endpoint_instructions_assistants_placeholder:
      'يتجاوز التعليمات الخاصة بالمساعد. هذا مفيد لتعديل السلوك على أساس كل مرة.',
    com_endpoint_prompt_prefix_assistants_placeholder:
      'ضع تعليمات أو سياق إضافي فوق التعليمات الرئيسية للمساعد. يتم تجاهله إذا كان فارغًا.',
    com_endpoint_prompt_prefix_assistants: 'التعليمات الإضافية',
    com_endpoint_instructions_assistants: 'تعليمات التجاوز',
    com_endpoint_stop: 'توقف التسلسلات',
    com_endpoint_stop_placeholder: "اضغط على 'Enter' لفصل القيم",
    com_endpoint_openai_max_tokens:
      'حقل `max_tokens` الاختياري، يمثل الحد الأقصى لعدد الرموز التي يمكن توليدها في إكمال المحادثة.\n\nإجمالي طول رموز الإدخال والرموز المولدة محدود بطول سياق النموذج. قد تواجه أخطاء إذا تجاوز هذا العدد الحد الأقصى لرموز السياق.',
    com_endpoint_openai_resend:
      'إعادة إرسال جميع الصور المرفقة مسبقًا. ملاحظة: قد يؤدي هذا إلى زيادة كبيرة في تكلفة الرموز وقد تواجه أخطاء مع العديد من مرفقات الصور.',
    com_endpoint_openai_resend_files:
      'إعادة إرسال جميع الملفات المرفقة مسبقًا. ملاحظة: سيؤدي هذا إلى زيادة تكلفة الرموز وقد تواجه أخطاء مع العديد من المرفقات.',
    com_endpoint_openai_detail:
      'دقة الطلبات للرؤية. "منخفضة" أرخص وأسرع، "عالية" أكثر تفصيلاً وتكلفة، و"تلقائي" سيختار تلقائيًا بين الاثنين بناءً على دقة الصورة.',
    com_endpoint_openai_stop:
      'حتى 4 تسلسلات حيث ستتوقف الواجهة البرمجية عن توليد المزيد من الرموز.',
    com_endpoint_plug_resend_files: 'إعادة إرسال الملفات',
    com_endpoint_plug_resend_images: 'إعادة إرسال الصور',
    com_endpoint_plug_image_detail: 'تفاصيل الصورة',
    com_endpoint_preset_delete_confirm: 'هل أنت متأكد من أنك تريد حذف هذا الإعداد المسبق؟',
    com_endpoint_preset_clear_all_confirm: 'هل أنت متأكد أنك تريد حذف جميع إعداداتك المسبقة؟',
    com_endpoint_preset_import: 'تم استيراد الإعداد المسبق!',
    com_endpoint_preset_import_error:
      'حدث خطأ أثناء استيراد الإعداد المسبق الخاص بك. يرجى المحاولة مرة أخرى.',
    com_endpoint_preset_save_error:
      'حدث خطأ أثناء حفظ الإعداد المسبق الخاص بك. يرجى المحاولة مرة أخرى.',
    com_endpoint_preset_delete_error:
      'حدث خطأ أثناء حذف الإعداد المسبق الخاص بك. يرجى المحاولة مرة أخرى.',
    com_endpoint_preset_default_removed: 'لم يعد الإعداد المسبق الافتراضي',
    com_endpoint_preset_default_item: 'الافتراضي:',
    com_endpoint_preset_default_none: 'لا يوجد إعداد مسبق افتراضي نشط.',
    com_endpoint_preset_title: 'إعداد مسبق',
    com_endpoint_preset_saved: 'تم الحفظ!',
    com_endpoint_preset_default: 'أصبح الإعداد المسبق الافتراضي الآن.',
    com_endpoint_preset_selected: 'الإعداد المسبق نشط!',
    com_endpoint_preset_selected_title: 'مُحدَّد!',
    com_endpoint_assistant: 'المساعد',
    com_endpoint_use_active_assistant: 'استخدام المساعد النشط',
    com_endpoint_assistant_model: 'نموذج المساعد',
    com_endpoint_assistant_placeholder: 'يرجى تحديد مساعد من اللوحة الجانبية اليمنى',
    com_endpoint_config_placeholder: 'اضبط مفتاحك في قائمة الرأس للدردشة.',
    com_endpoint_config_click_here: 'انقر هنا',
    com_endpoint_config_google_service_key: 'مفتاح حساب خدمة Google',
    com_endpoint_config_google_cloud_platform: 'تكوين نقطة نهاية Google Cloud Platform',
    com_endpoint_config_google_api_key: 'مفتاح Google API',
    com_endpoint_config_google_gemini_api: 'تكوين نقطة نهاية Gemini API',
    com_endpoint_config_google_api_info:
      'للحصول على مفتاح Generative Language API الخاص بك (لـ Gemini)،',
    com_nav_welcome_assistant: 'يرجى اختيار مساعد',
    com_nav_welcome_message: 'كيف يمكنني مساعدتك اليوم؟',
    com_nav_hide_panel: 'إخفاء اللوحة الجانبية اليمنى',
    com_nav_modular_chat: 'تمكين تبديل النقاط النهائية أثناء المحادثة',
    com_nav_latex_parsing: 'تحليل LaTeX في الرسائل (قد يؤثر على الأداء)',
    com_nav_profile_picture: 'صورة الملف الشخصي',
    com_nav_change_picture: 'تغيير الصورة',
    com_nav_plugin_install: 'تثبيت',
    com_nav_plugin_uninstall: 'إلغاء تثبيت',
    com_nav_tool_add: 'إضافة',
    com_nav_tool_remove: 'إزالة',
    com_nav_tool_dialog: 'أدوات المساعد',
    com_nav_tool_dialog_description: 'يجب حفظ المساعد لإبقاء اختيارات الأدوات.',
    com_show_agent_settings: 'إظهار إعدادات الوكيل',
    com_show_completion_settings: 'إظهار إعدادات الإكمال',
    com_hide_examples: 'إخفاء الأمثلة',
    com_show_examples: 'عرض أمثلة',
    com_nav_tool_search: 'أدوات البحث',
    com_nav_my_files: 'ملفاتي',
    com_nav_enter_to_send: 'اضغط على مفتاح الإدخال لإرسال الرسائل',
    com_nav_user_name_display: 'عرض اسم المستخدم في الرسائل',
    com_nav_save_drafts: 'حفظ المستخدمين',
    com_nav_show_code: 'إظهار الشفرة دائمًا عند استخدام مفسر الشفرة',
    com_nav_send_message: 'إرسال رسالة',
    com_nav_setting_beta: 'ميزات تجريبية',
    com_nav_setting_account: 'الحساب',
    com_nav_language: 'اللغة',
    com_nav_lang_auto: 'اكتشاف تلقائي',
    com_nav_lang_english: 'الإنجليزية',
    com_nav_lang_chinese: 'الصينية',
    com_nav_lang_german: 'ألمانية',
    com_nav_lang_spanish: 'اللغة الإسبانية',
    com_nav_lang_french: 'الفرنسية',
    com_nav_lang_italian: 'إيطالي',
    com_nav_lang_polish: 'اللغة البولندية',
    com_nav_lang_brazilian_portuguese: 'البرتغالية البرازيلية',
    com_nav_lang_russian: 'الروسية',
    com_nav_lang_japanese: 'اللغة اليابانية',
    com_nav_lang_swedish: 'السويدية',
    com_nav_lang_korean: 'كوري',
    com_nav_lang_vietnamese: 'اللغة الفيتنامية',
    com_nav_lang_traditionalchinese: 'الصينية التقليدية',
    com_nav_lang_arabic: 'اللغة العربية',
    com_nav_lang_turkish: 'التركية',
    com_nav_lang_dutch: 'هولندي',
    com_nav_lang_indonesia: 'إندونيسيا',
    com_nav_lang_hebrew: 'عبرية',
  },
  r1 = {
    com_files_no_results: '无结果。',
    com_files_filter: '筛选文件...',
    com_files_number_selected: '已选择 {0} 个文件（共 {1} 个文件）',
    com_sidepanel_select_assistant: '选择助手',
    com_sidepanel_assistant_builder: '助手生成器',
    com_sidepanel_hide_panel: '隐藏侧边栏',
    com_sidepanel_attach_files: '附加文件',
    com_sidepanel_manage_files: '管理文件',
    com_assistants_capabilities: '功能',
    com_assistants_knowledge: '知识',
    com_assistants_knowledge_info: '如果您在“知识”中上传文件，与助手的对话可能包括文件内容。',
    com_assistants_knowledge_disabled:
      '必须创建助手，且启用并保存代码解释器或检索，才能将文件作为知识上传。',
    com_assistants_image_vision: '识图',
    com_assistants_code_interpreter: '代码解释器',
    com_assistants_code_interpreter_files: '以下文件仅适用于代码解释器：',
    com_assistants_retrieval: '检索',
    com_assistants_search_name: '按名称搜索助手',
    com_assistants_tools: '工具',
    com_assistants_actions: '操作',
    com_assistants_add_tools: '添加工具',
    com_assistants_add_actions: '添加操作',
    com_assistants_available_actions: '可用操作',
    com_assistants_running_action: '正在运行操作',
    com_assistants_completed_action: '与 {0} 聊天',
    com_assistants_completed_function: '运行 {0}',
    com_assistants_function_use: '助手使用了 {0}',
    com_assistants_domain_info: '助手将此信息发送到了 {0}',
    com_assistants_delete_actions_success: '已成功从助手删除操作',
    com_assistants_update_actions_success: '已成功创建或更新操作',
    com_assistants_update_actions_error: '创建或更新操作时出错。',
    com_assistants_delete_actions_error: '删除操作时出错。',
    com_assistants_actions_info: '让您的助手通过 API 检索信息或执行操作',
    com_assistants_name_placeholder: '（选填）助手的名称',
    com_assistants_instructions_placeholder: '助手使用的系统指令',
    com_assistants_description_placeholder: '（选填）在此处描述您的助手',
    com_assistants_actions_disabled: '您需要先创建助手，然后才能添加操作。',
    com_assistants_update_success: '更新成功',
    com_assistants_update_error: '更新助手时出错。',
    com_assistants_create_success: '已成功创建',
    com_assistants_create_error: '创建助手时出错。',
    com_ui_field_required: '此字段为必填项',
    com_ui_download_error: '下载文件时出错，该文件可能已被删除。',
    com_ui_attach_error_type: '渠道不支持的文件类型:',
    com_ui_attach_error_size: '超出渠道规定的文件大小:',
    com_ui_attach_error: '无法附加文件，请创建或选择一个对话，或尝试刷新页面。',
    com_ui_examples: '示例',
    com_ui_new_chat: '创建新对话',
    com_ui_happy_birthday: '这是我的第一个生日！',
    com_ui_example_quantum_computing: '如何给7岁小孩讲解量子计算？',
    com_ui_example_10_year_old_b_day: '如何举办生日宴才能耳目一新？',
    com_ui_example_http_in_js: '如何在Python中实现HTTP请求？',
    com_ui_capabilities: '功能',
    com_ui_capability_remember: '记忆历史对话',
    com_ui_capability_correction: '允许更正内容',
    com_ui_capability_decline_requests: '限制不当信息',
    com_ui_limitations: '局限性',
    com_ui_limitation_incorrect_info: '可能会不时出现错误信息',
    com_ui_limitation_harmful_biased: '可能会提供有害指示或者偏见',
    com_ui_limitation_limited_2021: '基于2021年以前信息训练',
    com_ui_experimental: '实验性',
    com_ui_ascending: '升序',
    com_ui_descending: '降序',
    com_ui_show_all: '展开全部',
    com_ui_name: '名称',
    com_ui_date: '日期',
    com_ui_storage: '存储',
    com_ui_context: '上下文',
    com_ui_size: '大小',
    com_ui_host: '主机',
    com_ui_update: '更新',
    com_ui_authentication: '认证',
    com_ui_instructions: '指令',
    com_ui_description: '描述',
    com_ui_error: '错误',
    com_ui_select: '选择',
    com_ui_input: '输入',
    com_ui_close: '关闭',
    com_ui_model: '模型',
    com_ui_select_model: '模型选择',
    com_ui_select_search_model: '以名称搜索模型',
    com_ui_select_search_plugin: '以名称搜索插件',
    com_ui_use_prompt: '使用提示词',
    com_ui_prev: '上一页',
    com_ui_next: '下一页',
    com_ui_stop: '停止',
    com_ui_upload_files: '上传文件',
    com_ui_prompt_templates: '对话模板',
    com_ui_hide_prompt_templates: '隐藏对话模板',
    com_ui_showing: '显示',
    com_ui_of: '/',
    com_ui_entries: '项',
    com_ui_pay_per_call: '所有对话都将集中在一处。按会话次数计费，而不是按月付费',
    com_ui_new_footer: '所有对话都将集中在一处。',
    com_ui_enter: '进入',
    com_ui_submit: '提交',
    com_ui_upload_success: '上传文件成功',
    com_ui_upload_error: '上传文件错误',
    com_ui_upload_invalid: '无效的上传文件，请上传不超过2M大小的图片',
    com_ui_cancel: '取消',
    com_ui_save: '保存',
    com_ui_save_submit: '保存并提交',
    com_user_message: 'You',
    com_ui_copy_to_clipboard: '复制到剪贴板',
    com_ui_copied_to_clipboard: '已复制到剪贴板',
    com_ui_regenerate: '重新生成',
    com_ui_continue: '继续',
    com_ui_edit: '编辑',
    com_ui_success: '成功',
    com_ui_all: '所有',
    com_ui_clear: '清除',
    com_ui_revoke: '撤销',
    com_ui_revoke_info: '撤销所有用户提供的凭据',
    com_ui_import_conversation: '导入',
    com_ui_import_conversation_info: '从JSON文件导入对话',
    com_ui_import_conversation_success: '对话导入成功',
    com_ui_import_conversation_error: '导入对话时发生错误',
    com_ui_confirm_action: '确认执行',
    com_ui_chats: '聊天',
    com_ui_avatar: '头像',
    com_ui_unknown: '未知',
    com_ui_result: '结果',
    com_ui_image_gen: '图片生成',
    com_ui_assistant: '助手',
    com_ui_assistants: '助手',
    com_ui_attachment: '附件',
    com_ui_assistants_output: '助手输出',
    com_ui_delete: '删除',
    com_ui_create: '创建',
    com_ui_share: '分享',
    com_ui_copy_link: '复制链接',
    com_ui_update_link: '更新链接',
    com_ui_create_link: '创建链接',
    com_ui_share_link_to_chat: '分享链接到聊天',
    com_ui_share_error: '分享聊天链接时发生错误',
    com_ui_share_create_message: '您的名字及您在分享后添加的任何消息将保持私密。',
    com_ui_share_created_message: '已创建到您聊天的共享链接。可以通过设置随时管理以前共享的聊天。',
    com_ui_share_update_message: '您的名字、定制指令及您在分享后添加的任何消息将保持私密。',
    com_ui_share_updated_message: '已更新到您聊天的共享链接。可以通过设置随时管理以前共享的聊天。',
    com_ui_shared_link_not_found: '未找到共享链接',
    com_ui_delete_conversation: '删除对话？',
    com_ui_delete_conversation_confirm: '这将删除',
    com_ui_delete_assistant_confirm: '确定要删除此助手吗？该操作无法撤销。',
    com_ui_rename: '重命名',
    com_ui_archive: '归档',
    com_ui_archive_error: '归档对话失败',
    com_ui_unarchive: '取消归档',
    com_ui_unarchive_error: '取消归档对话失败',
    com_ui_more_options: '更多',
    com_ui_preview: '预览',
    com_ui_upload: '上传',
    com_ui_connect: '连接',
    com_ui_upload_delay: '上传 "{0}" 时比预期花了更长时间。 文件正在进行检索索引，请稍候。',
    com_ui_privacy_policy: '隐私政策',
    com_ui_terms_of_service: '服务政策',
    com_auth_error_login: '无法登录，请确认提供的账户密码正确，并重新尝试。',
    com_auth_error_login_rl: '尝试登录次数过多，请稍后再试。',
    com_auth_error_login_ban: '根据我们的服务规则，您的帐号被暂时禁用。',
    com_auth_error_login_server: '内部服务器错误，请稍后再试。',
    com_auth_no_account: '新用户注册',
    com_auth_sign_up: '注册',
    com_auth_sign_in: '登录',
    com_auth_google_login: '使用 Google 登录',
    com_auth_facebook_login: '使用 Facebook 登录',
    com_auth_github_login: '使用 GitHub 登录',
    com_auth_discord_login: '使用 Discord 登录',
    com_auth_email: '电子邮箱',
    com_auth_email_required: '邮箱为必填项',
    com_auth_email_min_length: '邮箱地址至少6个字符',
    com_auth_email_max_length: '邮箱地址最多120个字符',
    com_auth_email_pattern: '请输入正确的电子邮箱格式',
    com_auth_email_address: '电子邮箱地址',
    com_auth_password: '密码',
    com_auth_password_required: '密码为必填项',
    com_auth_password_min_length: '密码至少8个字符',
    com_auth_password_max_length: '密码最多128个字符',
    com_auth_password_forgot: '忘记密码?',
    com_auth_password_confirm: '确认密码',
    com_auth_password_not_match: '密码不一致',
    com_auth_continue: '继续',
    com_auth_create_account: '创建账号',
    com_auth_error_create: '注册账户过程中出现错误，请重试。',
    com_auth_full_name: '姓名',
    com_auth_name_required: '姓名为必填项',
    com_auth_name_min_length: '姓名至少3个字符',
    com_auth_name_max_length: '姓名最多80个字符',
    com_auth_username: '用户名（可选）',
    com_auth_username_required: '用户名为必填项',
    com_auth_username_min_length: '用户名至少3个字符',
    com_auth_username_max_length: '用户名最多20个字符',
    com_auth_already_have_account: '已有账号',
    com_auth_login: '登录',
    com_auth_reset_password: '重置密码',
    com_auth_click: '点击',
    com_auth_here: '这里',
    com_auth_to_reset_your_password: '重置密码。',
    com_auth_reset_password_link_sent: '重置密码链接已发送至邮箱',
    com_auth_reset_password_email_sent: '重置密码邮件已发送至邮箱',
    com_auth_error_reset_password: '重置密码出现错误，未找到对应的邮箱地址，请重新输入。',
    com_auth_reset_password_success: '密码重置成功',
    com_auth_login_with_new_password: '现在你可以使用你的新密码登录。',
    com_auth_error_invalid_reset_token: '重置密码的密钥已失效。',
    com_auth_click_here: '点击这里',
    com_auth_to_try_again: '再试一次。',
    com_auth_submit_registration: '注册提交',
    com_auth_welcome_back: '欢迎',
    com_auth_back_to_login: '返回登录',
    com_endpoint_open_menu: '打开菜单',
    com_endpoint_bing_enable_sydney: '启用 Sydney',
    com_endpoint_bing_to_enable_sydney: '启用 Sydney',
    com_endpoint_bing_jailbreak: '越狱',
    com_endpoint_bing_context_placeholder:
      '必应可以使用多达7000个词元作为“上下文（context）”，参照这些内容进行对话。其具体限制并不清楚，但可能会在超过7000个词元时出现错误',
    com_endpoint_bing_system_message_placeholder:
      '警告：滥用此功能可能导致你被禁止使用必应！点击“系统消息”查看完整的使用指南，如果你忽略了默认消息，那么将会使用被视为安全的“Sydney”预设。',
    com_endpoint_system_message: '系统消息',
    com_endpoint_message: '发送消息给',
    com_endpoint_message_not_appendable: '编辑您的消息内容或重新生成',
    com_endpoint_default_blank: '初始值: 空白',
    com_endpoint_default_false: '初始值: 否',
    com_endpoint_default_creative: '初始值: 创意',
    com_endpoint_default_empty: '初始值: 空',
    com_endpoint_default_with_num: '初始值: {0}',
    com_endpoint_context: '上下文',
    com_endpoint_tone_style: '语气',
    com_endpoint_token_count: '词元数',
    com_endpoint_output: '输出',
    com_endpoint_google_temp:
      '值越高表示输出越随机，值越低表示输出越确定。建议不要同时改变此值和Top-p。',
    com_endpoint_google_topp:
      'Top-p（核采样）会改变模型选择输出词的方式。从概率最大的K（参见topK参数）向最小的K选择，直到它们的概率之和等于top-p值',
    com_endpoint_google_topk:
      'Top-k 会改变模型选择输出词的方式。top-k为1意味着所选词是模型词汇中概率最大的（也称为贪心解码），而top-k为3意味着下一个词是从3个概率最大的词中选出的（使用随机性）。',
    com_endpoint_google_maxoutputtokens:
      ' 	响应生成中可以使用的最大词元数。指定较低的值会得到更短的响应，而指定较高的值则会得到更长的响应。',
    com_endpoint_google_custom_name_placeholder: '为Google设置一个名称',
    com_endpoint_prompt_prefix_placeholder: '自定义提示词和上下文，默认为空',
    com_endpoint_instructions_assistants_placeholder:
      '覆盖助手的指令。这对于需要逐次修改行为非常有用。',
    com_endpoint_prompt_prefix_assistants_placeholder:
      '在助手的主要指令之上设置额外的指令或上下文。如果为空，则忽略。',
    com_endpoint_custom_name: '自定义名称',
    com_endpoint_prompt_prefix: '自定义指令',
    com_endpoint_prompt_prefix_assistants: '额外命令',
    com_endpoint_instructions_assistants: '覆写命令',
    com_endpoint_temperature: '温度',
    com_endpoint_default: '初始值',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: '最大输出词元数',
    com_endpoint_openai_temp:
      '值越高表示输出越随机，值越低表示输出越确定。建议不要同时改变此值和Top P。',
    com_endpoint_openai_max: '最大生成词元数。输入词元长度由模型的上下文长度决定。',
    com_endpoint_openai_topp:
      '相较于随机性的另一个取样方法，称为核采样，模型选取输出词元中大于P值（概率密度在整个概率分布中的比例）的结果。比如 top_p=0.1 表示只有概率占比为前10%的词元才会被考虑作为输出。建议不要同时改变此值和随机性。',
    com_endpoint_openai_freq:
      '值介于-2.0到2.0之间。正值将惩罚当前已频繁使用的词元，从而降低重复用词的可能性。',
    com_endpoint_openai_pres:
      '值介于-2.0到2.0之间。正值将惩罚当前已经使用的词元，从而增加讨论新话题的可能性。',
    com_endpoint_openai_resend:
      '重新发送所有先前附加的图像。(注意：这会显着增加Token成本，并且可能会遇到很多关于图像附件的错误。)',
    com_endpoint_openai_resend_files:
      '重新发送所有先前附加的文件。(注意：这会显着增加Token成本，并且可能会遇到很多关于图像附件的错误。)',
    com_endpoint_openai_detail:
      '发送给Vision的图像分辨率。 “Low”更便宜且更快，“High”更详细但更昂贵，“Auto”将基于图像分辨率自动在两者之间进行选择。',
    com_endpoint_openai_custom_name_placeholder: '为ChatGPT设置一个名称',
    com_endpoint_openai_prompt_prefix_placeholder: '在消息开头添加系统级提示词，默认为空',
    com_endpoint_anthropic_temp:
      '值介于0到1之间。 对于分析性/选择性任务，值应更接近0；对于创造性和生成性任务，值应更接近1。我们建议更改该参数或Top-p，但不要同时更改这两个参数。',
    com_endpoint_anthropic_topp:
      'Top-p（核采样）会改变模型选择输出词元的方式。从概率最大的K（参见topK参数）向最小的K选择，直到它们的概率之和等于top-p值。',
    com_endpoint_anthropic_topk:
      'Top-k 会改变模型选择输出词元的方式。top-k为1意味着所选词是模型词汇中概率最大的（也称为贪心解码），而top-k为3意味着下一个词是从3个概率最大的词中选出的（使用随机性）。',
    com_endpoint_anthropic_maxoutputtokens:
      '响应中可生成的最大词元数。指定较低的值会得到更短的响应，而指定较高的值则会得到更长的响应。',
    com_endpoint_anthropic_custom_name_placeholder: '为Anthropic设置一个名称',
    com_endpoint_frequency_penalty: '频率惩罚度',
    com_endpoint_presence_penalty: '话题新鲜度',
    com_endpoint_plug_use_functions: '使用函数',
    com_endpoint_plug_resend_files: '重发文件',
    com_endpoint_plug_resend_images: '重发图片',
    com_endpoint_plug_image_detail: '图片细节',
    com_endpoint_plug_skip_completion: '跳过补全',
    com_endpoint_disabled_with_tools: '系统禁用',
    com_endpoint_disabled_with_tools_placeholder: '系统禁用',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      '在消息开头添加系统级提示词，默认为空',
    com_endpoint_import: '导入',
    com_endpoint_set_custom_name: '设置一个自定义名，以便您检索此预设',
    com_endpoint_preset_delete_confirm: '确定删除此预设？',
    com_endpoint_preset_clear_all_confirm: '确定删除所有预设？',
    com_endpoint_preset_import: '成功导入预设！',
    com_endpoint_preset_import_error: '导入预设时发生错误，请重试。',
    com_endpoint_preset_save_error: '保存预设时发生错误，请重试。',
    com_endpoint_preset_delete_error: '删除预设时发生错误，请重试。',
    com_endpoint_preset_default_removed: '不再是默认预设。',
    com_endpoint_preset_default_item: '默认：',
    com_endpoint_preset_default_none: '无默认预设可用。',
    com_endpoint_preset_title: '预设',
    com_endpoint_preset_saved: '保存成功！',
    com_endpoint_preset_default: '现在是默认预设。',
    com_endpoint_preset: '预设',
    com_endpoint_presets: '预设',
    com_endpoint_preset_selected: '预设可用！',
    com_endpoint_preset_selected_title: '可用！',
    com_endpoint_preset_name: '预设名',
    com_endpoint_new_topic: '新主题',
    com_endpoint: '渠道',
    com_endpoint_hide: '隐藏',
    com_endpoint_show: '显示',
    com_endpoint_examples: ' 预设',
    com_endpoint_completion: '补全',
    com_endpoint_agent: '代理',
    com_endpoint_show_what_settings: '显示{0}设置',
    com_endpoint_export: '导出',
    com_endpoint_assistant: '助手',
    com_endpoint_use_active_assistant: '使用激活的助手',
    com_endpoint_assistant_model: '助手模型',
    com_endpoint_save_as_preset: '保存为预设',
    com_endpoint_presets_clear_warning: '确定要清除所有预设吗？此操作不可逆。',
    com_endpoint_not_implemented: '未实现功能',
    com_endpoint_no_presets: '暂无预设，使用设置按钮创建一个。',
    com_endpoint_not_available: '无可用渠道',
    com_endpoint_view_options: '查看选项',
    com_endpoint_save_convo_as_preset: '保存对话为预设',
    com_endpoint_my_preset: '我的预设',
    com_endpoint_agent_model: '代理模型 (推荐: GPT-3.5)',
    com_endpoint_completion_model: '补全模型 (推荐: GPT-4)',
    com_endpoint_func_hover: '将插件作为OpenAI函数使用',
    com_endpoint_skip_hover: '跳过补全步骤， 检查最终答案和生成步骤',
    com_endpoint_config_key: '设置API Key',
    com_endpoint_assistant_placeholder: '请从右侧面板中选择助手',
    com_endpoint_config_placeholder: '在顶部菜单设置API KEY',
    com_endpoint_config_key_for: '设置API Key：',
    com_endpoint_config_key_name: '密钥',
    com_endpoint_config_value: '输入值：',
    com_endpoint_config_key_name_placeholder: '请先设置API key',
    com_endpoint_config_key_encryption: '您的密钥将被加密并删除于：',
    com_endpoint_config_key_expiry: '过期时间',
    com_endpoint_config_click_here: '点击此处',
    com_endpoint_config_google_service_key: 'Google服务账号密钥',
    com_endpoint_config_google_cloud_platform: '（从谷歌云平台）',
    com_endpoint_config_google_api_key: 'Google API密钥',
    com_endpoint_config_google_gemini_api: '(Gemini API)',
    com_endpoint_config_google_api_info: '获取您的生成式语言API密钥(Gemini),',
    com_endpoint_config_key_import_json_key: '导入服务账号JSON密钥',
    com_endpoint_config_key_import_json_key_success: '成功导入服务账号JSON密钥',
    com_endpoint_config_key_import_json_key_invalid:
      '无效的服务账号JSON密钥，您是否导入正确的文件？',
    com_endpoint_config_key_get_edge_key: '为获得Bing访问凭证（Access token），请登录：',
    com_endpoint_config_key_get_edge_key_dev_tool:
      '登录网站后，使用开发工具或扩展程序复制 _U cookie 的内容。如果失败，请按照以下步骤操作：',
    com_endpoint_config_key_edge_instructions: '说明',
    com_endpoint_config_key_edge_full_key_string: '提供完整的cookie字符串。',
    com_endpoint_config_key_chatgpt: '为获得ChatGPT的访问凭证（Access token）, 请登录：',
    com_endpoint_config_key_chatgpt_then_visit: '然后访问',
    com_endpoint_config_key_chatgpt_copy_token: '复制access token。',
    com_endpoint_config_key_google_need_to: '您需要',
    com_endpoint_config_key_google_vertex_ai: '在Google Cloud上启用Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API，然后',
    com_endpoint_config_key_google_service_account: '创建一个服务账号',
    com_endpoint_config_key_google_vertex_api_role:
      '确保单击“创建并继续”以至少授予“Vertex AI 用户”角色。最后，创建一个要在此处导入的JSON密钥。',
    com_nav_welcome_assistant: '请选择助手',
    com_nav_welcome_message: '我今天能帮你做什么？',
    com_nav_auto_scroll: '打开时自动滚动到最新内容',
    com_nav_hide_panel: '隐藏最右侧面板',
    com_nav_modular_chat: '启用对话中切换渠道',
    com_nav_latex_parsing: '解析消息中的 LaTeX（可能会影响性能）',
    com_nav_profile_picture: '个人资料头像',
    com_nav_change_picture: '修改头像',
    com_nav_plugin_store: '插件商店',
    com_nav_plugin_install: '安装',
    com_nav_plugin_uninstall: '卸载',
    com_nav_tool_add: '添加',
    com_nav_tool_remove: '移除',
    com_nav_tool_dialog: '助手工具',
    com_nav_tool_dialog_description: '必须保存助手才能保留工具选择。',
    com_show_agent_settings: '显示Agent设置',
    com_show_completion_settings: '显示Completion设置',
    com_hide_examples: '隐藏样例',
    com_show_examples: '显示样例',
    com_nav_plugin_search: '搜索插件',
    com_nav_tool_search: '搜索工具',
    com_nav_plugin_auth_error: '尝试验证此插件时出错。请重试。',
    com_nav_export_filename: '文件名',
    com_nav_export_filename_placeholder: '设置文件名',
    com_nav_export_type: '类型',
    com_nav_export_include_endpoint_options: '包含配置信息',
    com_nav_enabled: '启用',
    com_nav_not_supported: '未支持',
    com_nav_export_all_message_branches: '导出所有对话',
    com_nav_export_recursive_or_sequential: '递归或顺序？',
    com_nav_export_recursive: '递归',
    com_nav_export_conversation: '导出对话',
    com_nav_export: '导出',
    com_nav_shared_links: '共享链接',
    com_nav_shared_links_manage: '管理',
    com_nav_shared_links_empty: '您没有共享链接。',
    com_nav_shared_links_name: '名称',
    com_nav_shared_links_date_shared: '共享日期',
    com_nav_my_files: '我的文件',
    com_nav_theme: '主题',
    com_nav_theme_system: '跟随系统设置',
    com_nav_theme_dark: '暗色主题',
    com_nav_theme_light: '亮色主题',
    com_nav_user_name_display: '在消息中显示用户名',
    com_nav_save_drafts: '保存草稿本地',
    com_nav_show_code: '使用代码解释器时始终显示代码',
    com_nav_clear_all_chats: '清空所有对话',
    com_nav_confirm_clear: '确认清空',
    com_nav_close_sidebar: '关闭侧边栏',
    com_nav_open_sidebar: '打开侧边栏',
    com_nav_send_message: '发送消息',
    com_nav_log_out: '注销',
    com_nav_user: '默认用户',
    com_nav_archived_chats: '归档的对话',
    com_nav_archived_chats_manage: '管理',
    com_nav_archived_chats_empty: '您没有归档的对话。',
    com_nav_archive_all_chats: '归档所有对话',
    com_nav_archive_all: '归档所有',
    com_nav_archive_name: '名称',
    com_nav_archive_created_at: '创建时间',
    com_nav_clear_conversation: '清空对话',
    com_nav_clear_conversation_confirm_message: '请是否清空所有对话？该操作无法撤销',
    com_nav_help_faq: '帮助',
    com_nav_settings: '设置',
    com_nav_search_placeholder: '搜索对话及对话内容',
    com_nav_setting_general: '通用',
    com_nav_setting_beta: '实验特性',
    com_nav_setting_data: '数据管理',
    com_nav_setting_account: '账户',
    com_assistants_file_search: '文件搜索',
    com_assistants_file_search_info:
      '暂不支持为文件搜索附加向量存储。您可以从提供程序游乐场附加它们,或者在线程基础上为文件搜索附加文件。',
    com_assistants_non_retrieval_model: '此模型未启用文件搜索功能。请选择其他模型。',
    com_ui_attach_error_openai: '无法将助手文件附加到其他渠道',
    com_ui_attach_warn_endpoint: '不兼容的工具可能会忽略非助手文件',
    com_ui_assistant_deleted: '助手已成功删除',
    com_ui_assistant_delete_error: '删除助手时出错。',
    com_ui_date_october: '十月',
    com_ui_date_november: '十一月',
    com_ui_date_december: '十二月',
    com_ui_copied: '已复制！',
    com_ui_copy_code: '复制代码',
    com_nav_source_chat: '查看源代码对话',
    com_ui_date_today: '今天',
    com_ui_date_yesterday: '昨天',
    com_ui_date_previous_7_days: '过去7天',
    com_ui_date_previous_30_days: '过去30天',
    com_ui_date_january: '一月',
    com_ui_date_february: '二月',
    com_ui_date_march: '三月',
    com_ui_date_april: '四月',
    com_ui_date_may: '五月',
    com_ui_date_june: '六月',
    com_ui_date_july: '七月',
    com_ui_date_august: '八月',
    com_ui_date_september: '九月',
    com_ui_nothing_found: '未找到任何内容',
    com_ui_go_to_conversation: '转到对话',
    com_error_moderation:
      '很抱歉,您提交的内容被我们的审核系统标记为不符合社区指引。我们无法就此特定主题继续交流。如果您有任何其他问题或想探讨的话题,请编辑您的消息或开启新的对话。',
    com_error_no_user_key: '没有找到密钥。请提供密钥后重试。',
    com_error_no_base_url: '未找到基础URL,请提供一个后重试。',
    com_error_invalid_user_key: '提供的密钥无效。请提供有效的密钥后重试。',
    com_error_expired_user_key: '您提供的 {0} 密钥已于 {1} 过期。请提供新的密钥并重试。',
    com_sidepanel_parameters: '参数',
    com_ui_on: '开启',
    com_ui_off: '关闭',
    com_ui_yes: '是的',
    com_ui_no: '否',
    com_ui_none_selected: '未选择任何项目',
    com_ui_fork: '分支',
    com_ui_fork_info_1: '使用此设置可以分叉消息,以获得所需的行为。',
    com_ui_fork_info_2:
      '"分叉"是指从当前对话中选择特定消息作为起点/终点,根据所选选项创建一个新的对话副本。',
    com_ui_fork_info_3:
      '"目标消息"是指此弹出窗口所打开的消息,或者如果您选中"{0}",则是对话中最新的消息。',
    com_ui_fork_info_visible: '此选项仅分叉可见的消息;换句话说,是直接路径到目标消息,没有任何分支。',
    com_ui_fork_info_branches:
      '此选项会分叉可见消息及相关分支;换言之,包括沿路径的直接路线到目标消息,以及路径上的分支。',
    com_ui_fork_info_target:
      '此选项会分叉所有导向目标消息的消息分支,包括其相邻消息;换句话说,无论是否可见或在同一路径上,所有消息分支都会被包含在内。',
    com_ui_fork_info_start:
      '如果勾选,则根据上述选择的行为,从此消息开始到对话中最新的消息将被分叉。',
    com_ui_fork_info_remember:
      '选中此项可记住您的选择,以便下次分支对话时更快捷地使用您偏好的选项。',
    com_ui_fork_success: '对话分支成功',
    com_ui_fork_processing: '正在分叉对话...',
    com_ui_fork_error: '分叉对话时出现错误',
    com_ui_fork_change_default: '默认分支选项',
    com_ui_fork_default: '使用默认分支选项',
    com_ui_fork_remember: '记住',
    com_ui_fork_split_target_setting: '默认以目标消息开始分支',
    com_ui_fork_split_target: '在此分叉',
    com_ui_fork_remember_checked: '您的选择将在使用后被记住。您可以随时在设置中更改。',
    com_ui_fork_all_target: '包含所有目标',
    com_ui_fork_branches: '包含相关分支',
    com_ui_fork_visible: '仅显示可见消息',
    com_ui_fork_from_message: '选择分支选项',
    com_ui_mention: '提及一个端点、助手或预设以快速切换到它',
    com_ui_import_conversation_file_type_error: '不支持的导入类型',
    com_ui_min_tags: '无法再移除更多值,至少需要保留{0}个。',
    com_ui_max_tags: '最多允许{0}个,使用最新值。',
    com_endpoint_messages: '消息',
    com_endpoint_context_tokens: '最大上下文词元数',
    com_endpoint_context_info:
      '可用于上下文的最大词元数。用于控制每个请求发送的词元数量。如果未指定,将根据已知模型的上下文大小使用系统默认值。设置较高的值可能会导致错误和/或更高的词元成本。',
    com_endpoint_stop: '停止序列',
    com_endpoint_stop_placeholder: '按Enter键分隔多个值',
    com_endpoint_openai_max_tokens:
      '可选的`max_tokens`字段,表示在聊天补全中可生成的最大token数量。\n\n输入token和生成token的总长度受模型上下文长度的限制。如果该数值超过最大上下文token数,您可能会遇到错误。',
    com_endpoint_openai_stop: '最多4个序列,API将停止生成更多词元。',
    com_nav_enter_to_send: '请按Enter键发送消息',
    com_nav_language: '语言',
    com_nav_lang_auto: '自动检测语言',
    com_nav_lang_english: '英语',
    com_nav_lang_chinese: '中文',
    com_nav_lang_german: '德语',
    com_nav_lang_spanish: '西班牙语',
    com_nav_lang_french: '法语',
    com_nav_lang_italian: '语言',
    com_nav_lang_polish: '语言',
    com_nav_lang_brazilian_portuguese: '葡萄牙语(巴西)',
    com_nav_lang_russian: '俄语',
    com_nav_lang_japanese: '日语',
    com_nav_lang_swedish: '语言',
    com_nav_lang_korean: '韩语',
    com_nav_lang_vietnamese: '越南语',
    com_nav_lang_traditionalchinese: '繁體中文',
    com_nav_lang_arabic: 'العربية',
    com_nav_lang_turkish: '土耳其语',
    com_nav_lang_dutch: '荷兰语',
    com_nav_lang_indonesia: '印度尼西亚语',
    com_nav_lang_hebrew: '希伯来语',
  },
  c1 = {
    com_files_no_results: 'Keine Ergebnisse.',
    com_files_filter: 'Dateien filtern...',
    com_files_number_selected: '{0} von {1} Datei(en) ausgewählt',
    com_sidepanel_select_assistant: 'Wähle einen Assistenten',
    com_sidepanel_parameters: 'Parameter',
    com_sidepanel_assistant_builder: 'Assistenten Ersteller',
    com_sidepanel_hide_panel: 'Seitenleiste ausblenden',
    com_sidepanel_attach_files: 'Dateien anhängen',
    com_sidepanel_manage_files: 'Dateien verwalten',
    com_assistants_capabilities: 'Fähigkeiten',
    com_assistants_knowledge: 'Wissen',
    com_assistants_knowledge_info:
      'Wenn du unter Wissen Dateien hochlädst, können die Gespräche mit deinem Assistenten den Inhalt der Dateien beinhalten.',
    com_assistants_knowledge_disabled:
      'Der Assistent muss erstellt und Code-Interpreter oder Wissenabruf müssen aktiviert und gespeichert sein, bevor du Dateien als Wissen hochlädst.',
    com_assistants_image_vision: 'Bilderkennung',
    com_assistants_code_interpreter: 'Code Interpreter',
    com_assistants_code_interpreter_files:
      'Die folgenden Dateien sind nur für Code Interpreter verfügbar:',
    com_assistants_retrieval: 'Wissensabruf',
    com_assistants_search_name: 'Assistenten nach Namen suchen',
    com_assistants_tools: 'Werkzeuge',
    com_assistants_actions: 'Aktionen',
    com_assistants_add_tools: 'Werkzeuge hinzufügen',
    com_assistants_add_actions: 'Aktionen hinzufügen',
    com_assistants_available_actions: 'Verfügbare Aktionen',
    com_assistants_running_action: 'Laufende Aktion',
    com_assistants_completed_action: 'Habe mit {0} gesprochen',
    com_assistants_completed_function: '{0} ausgeführt',
    com_assistants_function_use: 'Assistent hat {0} benutzt',
    com_assistants_domain_info: 'Assistent hat diese Info an {0} gesendet',
    com_assistants_delete_actions_success: 'Aktion vom Assistant erfolgreich gelöscht',
    com_assistants_update_actions_success: 'Erfolgreich erstellte oder aktualisierte Aktion',
    com_assistants_update_actions_error:
      'Beim Erstellen oder Aktualisieren der Aktion ist ein Fehler aufgetreten.',
    com_assistants_delete_actions_error: 'Beim Löschen der Aktion ist ein Fehler aufgetreten.',
    com_assistants_actions_info:
      "Lass deinen Assistenten Informationen abrufen oder Aktionen über API's ausführen",
    com_assistants_name_placeholder: 'Optional: Der Name des Assistenten',
    com_assistants_instructions_placeholder: 'Die Systemanweisungen, die der Assistent verwendet',
    com_assistants_description_placeholder: 'Optional: Beschreibe hier deinen Assistenten',
    com_assistants_actions_disabled:
      'Du musst einen Assistenten erstellen, bevor du Aktionen hinzufügen kannst.',
    com_assistants_update_success: 'Erfolgreich aktualisiert',
    com_assistants_update_error:
      'Beim Aktualisieren deines Assistenten ist ein Fehler aufgetreten.',
    com_assistants_create_success: 'Erfolgreich erstellt',
    com_assistants_create_error:
      'Bei der Erstellung deines Assistenten ist ein Fehler aufgetreten.',
    com_ui_field_required: 'Dieses Feld ist erforderlich',
    com_ui_download_error:
      'Fehler beim Herunterladen der Datei. Die Datei wurde möglicherweise gelöscht.',
    com_ui_attach_error_type: 'Nicht unterstützter Dateityp für Endpunkt:',
    com_ui_attach_error_size: 'Dateigrößenlimit für den Endpunkt überschritten:',
    com_ui_attach_error:
      'Datei kann nicht angehängt werden. Erstelle oder wähle eine Konversation oder versuche, die Seite zu aktualisieren.',
    com_ui_examples: 'Beispiele',
    com_ui_new_chat: 'Neuer Chat',
    com_ui_happy_birthday: 'Es ist mein 1. Geburtstag!',
    com_ui_example_quantum_computing: 'Erkläre Quantencomputing in einfachen Worten',
    com_ui_example_10_year_old_b_day:
      'Hast du eine kreative Idee für den Geburtstag eines 10-Jährigen?',
    com_ui_example_http_in_js: 'Wie stelle ich eine HTTP-Anfrage in Javascript?',
    com_ui_capabilities: 'Funktionen',
    com_ui_capability_remember:
      'Erinnert sich daran, was der Benutzer zu einem früheren Zeitpunkt in der Konversation gesagt hat',
    com_ui_capability_correction:
      'Ermöglicht es dem Benutzer, nachträgliche Korrekturen vorzunehmen',
    com_ui_capability_decline_requests: 'Ermöglicht es, unangemessene Anfragen abzulehnen',
    com_ui_limitations: 'Limitationen',
    com_ui_limitation_incorrect_info: 'Kann gelegentlich falsche Informationen erzeugen',
    com_ui_limitation_harmful_biased:
      'Kann gelegentlich schädliche Anweisungen oder verzerrte Inhalte erzeugen',
    com_ui_limitation_limited_2021: 'Begrenztes Wissen über die Welt und Ereignisse nach 2021',
    com_ui_experimental: 'Experimentelle Funktionen',
    com_ui_on: 'An',
    com_ui_off: 'Aus',
    com_ui_yes: 'Ja',
    com_ui_no: 'Nein',
    com_ui_ascending: 'Aufsteigend',
    com_ui_descending: 'Absteigend',
    com_ui_show_all: 'Alle anzeigen',
    com_ui_name: 'Name',
    com_ui_date: 'Datum',
    com_ui_storage: 'Speicher',
    com_ui_context: 'Kontext',
    com_ui_size: 'Größe',
    com_ui_host: 'Host',
    com_ui_update: 'Aktualisierung',
    com_ui_authentication: 'Authentifizierung',
    com_ui_instructions: 'Anweisungen',
    com_ui_description: 'Beschreibung',
    com_ui_error: 'Fehler',
    com_ui_select: 'Auswählen',
    com_ui_input: 'Eingabe',
    com_ui_close: 'Schließen',
    com_ui_model: 'KI-Modell',
    com_ui_select_model: 'Wähle ein KI-Modell',
    com_ui_select_search_model: 'KI-Modell nach Name suchen',
    com_ui_select_search_plugin: 'Plugin nach Name suchen',
    com_ui_use_prompt: 'Eingabeaufforderung verwenden',
    com_ui_prev: 'Vorherig',
    com_ui_next: 'Nächste',
    com_ui_stop: 'Anhalten',
    com_ui_upload_files: 'Dateien hochladen',
    com_ui_prompt_templates: 'Prompt-Vorlagen',
    com_ui_hide_prompt_templates: 'Prompt-Vorlagen ausblenden',
    com_ui_showing: 'Zeigen',
    com_ui_of: 'von',
    com_ui_entries: 'Einträge',
    com_ui_pay_per_call: 'Alle KI-Chats an einem Ort. Bezahle pro Anruf und nicht pro Monat',
    com_ui_new_footer: 'Alle KI-Chats an einem Ort.',
    com_ui_enter: 'Eingabe',
    com_ui_submit: 'Abschicken',
    com_ui_upload_success: 'Erfolgreich hochgeladene Datei',
    com_ui_upload_error: 'Beim Hochladen deiner Datei ist ein Fehler aufgetreten',
    com_ui_upload_invalid:
      'Ungültige Datei zum Hochladen. Muss ein Bild sein, das nicht größer als 2 MB ist',
    com_ui_cancel: 'Abbrechen',
    com_ui_save: 'Speichern',
    com_ui_save_submit: 'Speichern & Absenden',
    com_user_message: 'Du',
    com_ui_copy_to_clipboard: 'In die Zwischenablage kopieren',
    com_ui_copied_to_clipboard: 'In die Zwischenablage kopiert',
    com_ui_regenerate: 'Neu generieren',
    com_ui_continue: 'Fortsetzen',
    com_ui_edit: 'Bearbeiten',
    com_ui_success: 'Erfolg',
    com_ui_all: 'Alle',
    com_ui_clear: 'Löschen',
    com_ui_revoke: 'Widerrufen',
    com_ui_revoke_info: 'Widerrufe alle vom Benutzer angegebenen Anmeldeinformationen',
    com_ui_import_conversation: 'Importieren',
    com_ui_import_conversation_info: 'Chats aus einer JSON-Datei importieren',
    com_ui_import_conversation_success: 'Chats erfolgreich importiert',
    com_ui_import_conversation_error: 'Beim Importieren Ihrer Chats ist ein Fehler aufgetreten',
    com_ui_confirm_action: 'Bestätige Aktion',
    com_ui_chats: 'Chats',
    com_ui_avatar: 'Avatar',
    com_ui_unknown: 'Unbekannt',
    com_ui_result: 'Ergebnis',
    com_ui_image_gen: 'Image Gen',
    com_ui_assistant: 'Assistent',
    com_ui_assistants: 'Assistenten',
    com_ui_attachment: 'Anhang',
    com_ui_assistants_output: 'Assistenten Ausgabe',
    com_ui_delete: 'Löschen',
    com_ui_create: 'Erstellen',
    com_ui_share: 'Teilen',
    com_ui_copy_link: 'Link kopieren',
    com_ui_update_link: 'Link aktualisieren',
    com_ui_create_link: 'Link erstellen',
    com_ui_share_link_to_chat: 'Link zum Chat teilen',
    com_ui_share_error: 'Beim Teilen des Chat-Links ist ein Fehler aufgetreten',
    com_ui_share_create_message:
      'Ihr Name und alle Nachrichten, die Sie nach dem Teilen hinzufügen, bleiben privat.',
    com_ui_share_created_message:
      'Ein geteiltes Link zu Ihrem Chat wurde erstellt. Verwalten Sie zuvor geteilte Chats jederzeit über die Einstellungen.',
    com_ui_share_update_message:
      'Ihr Name, benutzerdefinierte Anweisungen und alle Nachrichten, die Sie nach dem Teilen hinzufügen, bleiben privat.',
    com_ui_share_updated_message:
      'Ein geteiltes Link zu Ihrem Chat wurde aktualisiert. Verwalten Sie zuvor geteilte Chats jederzeit über die Einstellungen.',
    com_ui_shared_link_not_found: 'Geteilter Link nicht gefunden',
    com_ui_delete_conversation: 'Chat löschen?',
    com_ui_delete_conversation_confirm: 'Damit wird gelöscht',
    com_ui_delete_assistant_confirm:
      'Bist du sicher, dass du diesen Assistenten löschen willst? Dies kann nicht rückgängig gemacht werden.',
    com_ui_rename: 'Umbenennen',
    com_ui_archive: 'Archiv',
    com_ui_archive_error: 'Fehler beim Archivieren der Konversation',
    com_ui_unarchive: 'Entarchivieren',
    com_ui_unarchive_error: 'Fehler beim Entarchivieren der Konversation',
    com_ui_more_options: 'Mehr',
    com_ui_preview: 'Vorschau',
    com_ui_upload: 'Hochladen',
    com_ui_connect: 'Verbinden',
    com_ui_upload_delay:
      'Das Hochladen von "{0}" dauert länger als erwartet. Bitte warte, während die Datei zum Abruf indiziert wird.',
    com_ui_privacy_policy: 'Datenschutzrichtlinie',
    com_ui_terms_of_service: 'Nutzungsbedingungen',
    com_auth_error_login:
      'Die Anmeldung mit den angegebenen Daten ist fehlgeschlagen. Bitte überprüfe deine Anmeldedaten und versuche es erneut.',
    com_auth_error_login_rl:
      'Zu viele Anmeldeversuche in einer kurzen Zeitspanne. Bitte versuche es später noch einmal.',
    com_auth_error_login_ban:
      'Dein Konto wurde aufgrund von Verstößen gegen unseren Service vorübergehend gesperrt.',
    com_auth_error_login_server:
      'Es ist ein interner Serverfehler aufgetreten. Bitte warte ein paar Augenblicke und versuche es erneut.',
    com_auth_no_account: 'Du hast kein Konto?',
    com_auth_sign_up: 'Melde dich an',
    com_auth_sign_in: 'Melde dich an',
    com_auth_google_login: 'Weiter mit Google',
    com_auth_facebook_login: 'Weiter mit Facebook',
    com_auth_github_login: 'Weiter mit Github',
    com_auth_discord_login: 'Weiter mit Discord',
    com_auth_email: 'E-Mail',
    com_auth_email_required: 'E-Mail ist erforderlich',
    com_auth_email_min_length: 'E-Mail muss mindestens 6 Zeichen lang sein',
    com_auth_email_max_length: 'Die E-Mail sollte nicht länger als 120 Zeichen sein',
    com_auth_email_pattern: 'Du musst eine gültige E-Mail-Adresse eingeben',
    com_auth_email_address: 'E-Mail-Adresse',
    com_auth_password: 'Passwort',
    com_auth_password_required: 'Passwort ist erforderlich',
    com_auth_password_min_length: 'Das Passwort muss mindestens 8 Zeichen lang sein',
    com_auth_password_max_length: 'Das Passwort muss weniger als 128 Zeichen lang sein',
    com_auth_password_forgot: 'Passwort vergessen?',
    com_auth_password_confirm: 'Passwort bestätigen',
    com_auth_password_not_match: 'Passwörter stimmen nicht überein',
    com_auth_continue: 'Fortfahren',
    com_auth_create_account: 'Erstelle dein Konto',
    com_auth_error_create:
      'Beim Versuch, dein Konto zu registrieren, ist ein Fehler aufgetreten. Bitte versuche es erneut.',
    com_auth_full_name: 'Vollständiger Name',
    com_auth_name_required: 'Name ist erforderlich',
    com_auth_name_min_length: 'Der Name muss mindestens 3 Zeichen lang sein',
    com_auth_name_max_length: 'Der Name muss weniger als 80 Zeichen lang sein',
    com_auth_username: 'Benutzername (optional)',
    com_auth_username_required: 'Benutzername ist erforderlich',
    com_auth_username_min_length: 'Der Benutzername muss mindestens 2 Zeichen lang sein',
    com_auth_username_max_length: 'Der Benutzername muss weniger als 20 Zeichen lang sein',
    com_auth_already_have_account: 'Hast du schon ein Konto?',
    com_auth_login: 'Anmelden',
    com_auth_reset_password: 'Setze dein Passwort zurück',
    com_auth_click: 'Klick',
    com_auth_here: 'HIER',
    com_auth_to_reset_your_password: 'um dein Passwort zurückzusetzen.',
    com_auth_reset_password_link_sent: 'E-Mail gesendet',
    com_auth_reset_password_email_sent:
      'Es wurde eine E-Mail mit weiteren Anweisungen zum Zurücksetzen deines Passworts an dich gesendet.',
    com_auth_error_reset_password:
      'Es gab ein Problem beim Zurücksetzen deines Passworts. Es wurde kein Benutzer mit der angegebenen E-Mail Adresse gefunden. Bitte versuche es erneut.',
    com_auth_reset_password_success: 'Passwort zurücksetzen erfolgreich',
    com_auth_login_with_new_password: 'Du kannst dich jetzt mit deinem neuen Passwort anmelden.',
    com_auth_error_invalid_reset_token: 'Dieses Passwort-Reset-Token ist nicht mehr gültig.',
    com_auth_click_here: 'Klicke hier',
    com_auth_to_try_again: 'um es erneut zu versuchen.',
    com_auth_submit_registration: 'Anmeldung einreichen',
    com_auth_welcome_back: 'Willkommen zurück',
    com_auth_back_to_login: 'Zurück zum Login',
    com_endpoint_open_menu: 'Menü öffnen',
    com_endpoint_bing_enable_sydney: 'Sydney aktivieren',
    com_endpoint_bing_to_enable_sydney: 'Um Sydney zu aktivieren',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      "Bing kann bis zu 7k Token für 'context' verwenden, auf die es in der Konversation Bezug nehmen kann. Der genaue Grenzwert ist nicht bekannt, aber mehr als 7k Token können zu Fehlern führen.",
    com_endpoint_bing_system_message_placeholder:
      "WARNUNG: Der Missbrauch dieser Funktion kann dazu führen, dass du von der Nutzung von Bing ausgeschlossen wirst! Klicken Sie auf 'Systemaufforderung', um vollständige Anweisungen und die Standardnachricht zu erhalten, die als sicher gilt.",
    com_endpoint_system_message: 'Systemaufforderung',
    com_endpoint_message: 'Nachricht an',
    com_endpoint_message_not_appendable: 'Bearbeite deine Nachricht oder generiere sie neu.',
    com_endpoint_default_blank: 'Standard: leer',
    com_endpoint_default_false: 'Standard: falsch',
    com_endpoint_default_creative: 'Standard: kreativ',
    com_endpoint_default_empty: 'Standard: leer',
    com_endpoint_default_with_num: 'Standard: {0}',
    com_endpoint_context: 'Kontext',
    com_endpoint_tone_style: 'Farbtonstil',
    com_endpoint_token_count: 'Token-Anzahl',
    com_endpoint_output: 'Antwort',
    com_endpoint_google_temp:
      'Höhere Werte = zufälliger, während niedrigere Werte = gezielter und deterministischer sind. Wir empfehlen, dies oder Top P zu ändern, aber nicht beides.',
    com_endpoint_google_topp:
      'Top-p ändert, wie das Modell die Token für die Ausgabe auswählt. Die Token werden von der höchsten K-Wahrscheinlichkeit (siehe topK-Parameter) zur niedrigsten ausgewählt, bis die Summe ihrer Wahrscheinlichkeiten gleich dem top-p-Wert ist.',
    com_endpoint_google_topk:
      'Top-k ändert, wie das Modell die Token für die Ausgabe auswählt. Ein top-k von 1 bedeutet, dass das ausgewählte Token das wahrscheinlichste unter allen Token im Vokabular des Modells ist (auch gierige Dekodierung genannt), während ein top-k von 3 bedeutet, dass das nächste Token aus den 3 wahrscheinlichsten Token ausgewählt wird (unter Verwendung der Temperatur).',
    com_endpoint_google_maxoutputtokens:
      ' Maximale Anzahl von Token, die in der Antwort erzeugt werden können. Gib einen niedrigeren Wert für kürzere Antworten und einen höheren Wert für längere Antworten an.',
    com_endpoint_google_custom_name_placeholder: 'Setze einen benutzerdefinierten Namen für Google',
    com_endpoint_prompt_prefix_placeholder:
      'Setze benutzerdefinierte Anweisungen oder Kontext. Ignoriert, wenn leer.',
    com_endpoint_instructions_assistants_placeholder:
      'Setzt die Anweisungen des Assistenten außer Kraft. Dies ist nützlich, um das Verhalten pro Lauf zu ändern.',
    com_endpoint_prompt_prefix_assistants_placeholder:
      'Setzt zusätzliche Anweisungen oder Kontext über die Hauptanweisungen des Assistenten. Wird ignoriert, wenn leer.',
    com_endpoint_custom_name: 'Benutzerdefinierter Name',
    com_endpoint_prompt_prefix: 'Benutzerdefinierte Anweisungen',
    com_endpoint_prompt_prefix_assistants: 'Zusätzliche Anweisungen',
    com_endpoint_instructions_assistants: 'Anweisungen überschreiben',
    com_endpoint_temperature: 'Temperatur',
    com_endpoint_default: 'Standard',
    com_endpoint_top_p: 'Top-P',
    com_endpoint_top_k: 'Top-K',
    com_endpoint_max_output_tokens: 'Max. Antwort Tokens',
    com_endpoint_openai_temp:
      'Höhere Werte = zufälliger, während niedrigere Werte = zielgerichteter und deterministischer sind. Wir empfehlen, dies oder Top P zu ändern, aber nicht beides.',
    com_endpoint_openai_max:
      'Die maximale Anzahl der zu erzeugenden Token. Die Gesamtlänge der eingegebenen und generierten Token wird durch die Kontextlänge des Modells begrenzt.',
    com_endpoint_openai_topp:
      'Eine Alternative zum Sampling mit Temperatur, genannt Nukleus-Sampling, bei dem das Modell die Ergebnisse der Token mit der Wahrscheinlichkeitsmasse top_p berücksichtigt. 0,1 bedeutet also, dass nur die Token mit den obersten 10% Wahrscheinlichkeitsmasse berücksichtigt werden. Wir empfehlen, dies oder die Temperatur zu ändern, aber nicht beides.',
    com_endpoint_openai_freq:
      'Zahl zwischen -2,0 und 2,0. Positive Werte bestrafen neue Token auf der Grundlage ihrer bisherigen Häufigkeit im Text und verringern so die Wahrscheinlichkeit, dass das Model dieselbe Zeile wortwörtlich wiederholt.',
    com_endpoint_openai_pres:
      'Zahl zwischen -2.0 und 2.0. Positive Werte bestrafen neue Token, je nachdem, ob sie bereits im Text vorkommen, und erhöhen so die Wahrscheinlichkeit, dass das Model über neue Themen spricht.',
    com_endpoint_openai_resend:
      'Sende alle zuvor angehängten Bilder erneut. Hinweis: Dies kann die Token-Kosten erheblich erhöhen und bei vielen Bildanhängen können Fehler auftreten.',
    com_endpoint_openai_resend_files:
      'Sende alle zuvor angehängten Dateien erneut. Hinweis: Dies erhöht die Token-Kosten und bei vielen Anhängen kann es zu Fehlern kommen.',
    com_endpoint_openai_detail:
      'Die Auflösung für Bilderkennungs-Anfragen. "Niedrig" ist billiger und schneller, "Hoch" ist detaillierter und teurer, und "Auto" wählt automatisch zwischen den beiden Auflösungen.',
    com_endpoint_openai_custom_name_placeholder: 'Setzt einen benutzerdefinierten Namen für die KI',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Lege benutzerdefinierte Anweisungen fest, die in die Systemaufforderung aufgenommen werden sollen. Standard: keine',
    com_endpoint_anthropic_temp:
      'Der Bereich reicht von 0 bis 1. Verwende temp näher an 0 für analytische / Multiple Choice Aufgaben und näher an 1 für kreative und generative Aufgaben. Wir empfehlen, dies oder Top P zu ändern, aber nicht beides.',
    com_endpoint_anthropic_topp:
      'Top-p ändert, wie das Modell die Token für die Ausgabe auswählt. Die Token werden von der höchsten K-Wahrscheinlichkeit (siehe topK-Parameter) zur niedrigsten ausgewählt, bis die Summe ihrer Wahrscheinlichkeiten gleich dem top-p-Wert ist.',
    com_endpoint_anthropic_topk:
      'Top-k ändert, wie das Modell Token für die Ausgabe auswählt. Ein top-k von 1 bedeutet, dass das ausgewählte Token das wahrscheinlichste unter allen Token im Vokabular des Modells ist (auch greedy decoding genannt), während ein top-k von 3 bedeutet, dass das nächste Token aus den 3 wahrscheinlichsten Token ausgewählt wird (unter Verwendung der Temperatur).',
    com_endpoint_anthropic_maxoutputtokens:
      'Maximale Anzahl von Token, die in der Antwort erzeugt werden können. Gib einen niedrigeren Wert für kürzere Antworten und einen höheren Wert für längere Antworten an.',
    com_endpoint_anthropic_custom_name_placeholder: 'Lege einen eigenen Namen für Anthropic fest',
    com_endpoint_frequency_penalty: 'Frequency Penalty',
    com_endpoint_presence_penalty: 'Presence Penalty',
    com_endpoint_plug_use_functions: 'Funktionen verwenden',
    com_endpoint_plug_resend_files: 'Dateien erneut senden',
    com_endpoint_plug_resend_images: 'Bilder erneut senden',
    com_endpoint_plug_image_detail: 'Bild-Detail',
    com_endpoint_plug_skip_completion: 'Fertigstellung überspringen',
    com_endpoint_disabled_with_tools: 'Mit Werkzeugen deaktiviert',
    com_endpoint_disabled_with_tools_placeholder: 'Deaktiviert mit ausgewählten Werkzeugen',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Setzt benutzerdefinierte Anweisungen, die in die Systemaufforderung aufgenommen werden. Standard: keine',
    com_endpoint_import: 'Importieren',
    com_endpoint_set_custom_name:
      'Lege einen benutzerdefinierten Namen fest, für den Fall, dass du diese Vorgabe finden kannst',
    com_endpoint_preset_delete_confirm: 'Bist du sicher, dass du diese Vorgabe löschen willst?',
    com_endpoint_preset_clear_all_confirm:
      'Bist du sicher, dass du alle deine Voreinstellungen löschen willst?',
    com_endpoint_preset_import: 'Voreinstellung importiert!',
    com_endpoint_preset_import_error:
      'Beim Import deiner Voreinstellung ist ein Fehler aufgetreten. Bitte versuche es erneut.',
    com_endpoint_preset_save_error:
      'Es ist ein Fehler beim Speichern deiner Voreinstellung aufgetreten. Bitte versuche es noch einmal.',
    com_endpoint_preset_delete_error:
      'Beim Löschen deiner Voreinstellung ist ein Fehler aufgetreten. Bitte versuche es noch einmal.',
    com_endpoint_preset_default_removed: 'ist nicht mehr die Standardvorgabe.',
    com_endpoint_preset_default_item: 'Standard:',
    com_endpoint_preset_default_none: 'Keine Standardvoreinstellung aktiv.',
    com_endpoint_preset_title: 'Voreinstellung',
    com_endpoint_preset_saved: 'Gespeichert!',
    com_endpoint_preset_default: 'ist jetzt die Standardvoreinstellung.',
    com_endpoint_preset: 'Voreinstellung',
    com_endpoint_presets: 'Voreinstellungen',
    com_endpoint_preset_selected: 'Voreinstellung aktiv!',
    com_endpoint_preset_selected_title: 'Aktiv!',
    com_endpoint_preset_name: 'Voreinstellungsname',
    com_endpoint_new_topic: 'Neues Thema',
    com_endpoint: 'Endpunkt',
    com_endpoint_hide: 'Ausblenden',
    com_endpoint_show: 'Anzeigen',
    com_endpoint_examples: 'Voreinstellungen',
    com_endpoint_completion: 'Fertigstellung',
    com_endpoint_agent: 'Agent',
    com_endpoint_show_what_settings: 'Zeige {0} Einstellungen',
    com_endpoint_export: 'Exportieren',
    com_endpoint_assistant: 'Assistent',
    com_endpoint_use_active_assistant: 'Aktiven Assistenten verwenden',
    com_endpoint_assistant_model: 'Assistentenmodell',
    com_endpoint_save_as_preset: 'Als Voreinstellung speichern',
    com_endpoint_presets_clear_warning:
      'Bist du sicher, dass du alle Voreinstellungen löschen willst? Dies ist nicht umkehrbar.',
    com_endpoint_not_implemented: 'Nicht implementiert',
    com_endpoint_no_presets:
      'Es gibt noch keine Voreinstellungen, verwende die Schaltfläche Einstellungen, um eine zu erstellen',
    com_endpoint_not_available: 'Kein Endpunkt verfügbar',
    com_endpoint_view_options: 'Ansichtsoptionen',
    com_endpoint_save_convo_as_preset: 'Konversation als Voreinstellung speichern',
    com_endpoint_my_preset: 'Meine Voreinstellung',
    com_endpoint_agent_model: 'Agentenmodell (empfohlen: GPT-3.5)',
    com_endpoint_completion_model: 'Vervollständigungsmodell (empfohlen: GPT-4-Turbo)',
    com_endpoint_func_hover: 'Aktiviere die Verwendung von Plugins als OpenAI-Funktionen',
    com_endpoint_skip_hover:
      'Aktiviere das Überspringen des Abschlussschritts, der die endgültige Antwort und die generierten Schritte überprüft',
    com_endpoint_config_key: 'API-Schlüssel festlegen',
    com_endpoint_assistant_placeholder:
      'Bitte wähle einen Assistenten aus dem rechter Seitenleiste aus',
    com_endpoint_config_placeholder: 'Setze deinen Schlüssel im Header-Menü ein, um zu chatten.',
    com_endpoint_config_key_for: 'Setze den API-Schlüssel für',
    com_endpoint_config_key_name: 'Schlüssel',
    com_endpoint_config_value: 'Wert eingeben für',
    com_endpoint_config_key_name_placeholder: 'Setze API-Schlüssel zuerst',
    com_endpoint_config_key_encryption: 'Dein Schlüssel wird verschlüsselt und gelöscht bei',
    com_endpoint_config_key_expiry: 'die Verfallszeit',
    com_endpoint_config_click_here: 'Hier klicken',
    com_endpoint_config_google_service_key: 'Google Service Account Key',
    com_endpoint_config_google_cloud_platform: '(von Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'Google API Key',
    com_endpoint_config_google_gemini_api: '(Gemini API)',
    com_endpoint_config_google_api_info:
      'Um deinen Generative Language API-Schlüssel (für Gemini) zu erhalten,',
    com_endpoint_config_key_import_json_key: 'Import Service Account JSON Key.',
    com_endpoint_config_key_import_json_key_success:
      'Erfolgreich importierter Service Account JSON Key',
    com_endpoint_config_key_import_json_key_invalid:
      'Ungültiger Service Account JSON Key, Hast du die richtige Datei importiert?',
    com_endpoint_config_key_get_edge_key:
      'Um dein Access Token für Bing zu erhalten, melde dich an bei',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Verwende Dev-Tools oder eine Erweiterung, während du auf der Website angemeldet bist, um den Inhalt des _U-Cookies zu kopieren. Wenn dies fehlschlägt, befolge die folgenden Anweisungen',
    com_endpoint_config_key_edge_instructions: 'Anweisungen',
    com_endpoint_config_key_edge_full_key_string:
      'um die vollständigen Cookie-Strings bereitzustellen.',
    com_endpoint_config_key_chatgpt:
      "Um dein Zugangstoken für ChatGPT 'Free Version' zu erhalten, melde dich bei",
    com_endpoint_config_key_chatgpt_then_visit: 'dann besuche',
    com_endpoint_config_key_chatgpt_copy_token: 'Kopiere das Zugangstoken.',
    com_endpoint_config_key_google_need_to: 'Du musst',
    com_endpoint_config_key_google_vertex_ai: 'Vertex AI aktivieren',
    com_endpoint_config_key_google_vertex_api: 'API auf Google Cloud, dann',
    com_endpoint_config_key_google_service_account: 'Ein Service-Konto erstellen',
    com_endpoint_config_key_google_vertex_api_role:
      "Stelle sicher, dass du auf 'Erstellen und Fortfahren' klickst, um mindestens die 'Vertex AI User'-Rolle zu vergeben. Erstelle schließlich einen JSON-Schlüssel, den du hier importieren kannst.",
    com_nav_welcome_assistant: 'Bitte wähle einen Assistenten',
    com_nav_welcome_message: 'Wie kann ich dir heute helfen?',
    com_nav_auto_scroll: 'Beim Öffnen automatisch zum Neuesten scrollen',
    com_nav_hide_panel: 'Rechtsseitige Seitenleiste ausblenden',
    com_nav_modular_chat: 'Umschalten der Endpunkte während der Konversation aktivieren',
    com_nav_latex_parsing: 'Parsen von LaTeX in Nachrichten (kann die Leistung beeinträchtigen)',
    com_nav_profile_picture: 'Profilbild',
    com_nav_change_picture: 'Bild ändern',
    com_nav_plugin_store: 'Plugin-Store',
    com_nav_plugin_install: 'Installieren',
    com_nav_plugin_uninstall: 'Deinstallieren',
    com_nav_tool_add: 'Hinzufügen',
    com_nav_tool_remove: 'Löschen',
    com_nav_tool_dialog: 'Assistententools',
    com_nav_tool_dialog_description:
      'Der Assistent muss gespeichert werden, um die Werkzeugauswahl beizubehalten.',
    com_show_agent_settings: 'Agent-Einstellungen anzeigen',
    com_show_completion_settings: 'Fertigstellungseinstellungen anzeigen',
    com_hide_examples: 'Beispiele ausblenden',
    com_show_examples: 'Beispiele anzeigen',
    com_nav_plugin_search: 'Plugins suchen',
    com_nav_tool_search: 'Werkzeuge suchen',
    com_nav_plugin_auth_error:
      'Beim Versuch, dieses Plugin zu authentifizieren, ist ein Fehler aufgetreten. Bitte versuche es erneut.',
    com_nav_export_filename: 'Dateiname',
    com_nav_export_filename_placeholder: 'Setze den Dateinamen',
    com_nav_export_type: 'Typ',
    com_nav_export_include_endpoint_options: 'Endpunktoptionen einbeziehen',
    com_nav_enabled: 'Aktiviert',
    com_nav_not_supported: 'Nicht unterstützt',
    com_nav_export_all_message_branches: 'Alle Nachrichtenzweige exportieren',
    com_nav_export_recursive_or_sequential: 'Rekursiv oder sequentiell?',
    com_nav_export_recursive: 'Rekursiv',
    com_nav_export_conversation: 'Konversation exportieren',
    com_nav_export: 'Exportieren',
    com_nav_shared_links: 'Gemeinsame Links',
    com_nav_shared_links_manage: 'Verwalten',
    com_nav_shared_links_empty: 'Sie haben keine gemeinsam genutzten Links.',
    com_nav_shared_links_name: 'Name',
    com_nav_shared_links_date_shared: 'Datum geteilt',
    com_nav_my_files: 'Meine Dateien',
    com_nav_theme: 'Farbschema',
    com_nav_theme_system: 'System',
    com_nav_theme_dark: 'Dunkel',
    com_nav_theme_light: 'Hell',
    com_nav_user_name_display: 'Benutzernamen in Nachrichten anzeigen',
    com_nav_save_drafts: 'Entwurf lokal speichern',
    com_nav_show_code: 'Code immer anzeigen, wenn Code-Interpreter verwendet wird',
    com_nav_clear_all_chats: 'Alle Chats löschen',
    com_nav_confirm_clear: 'Bestätige Löschen',
    com_nav_close_sidebar: 'Sidebar schließen',
    com_nav_open_sidebar: 'Seitenleiste öffnen',
    com_nav_send_message: 'Nachricht senden',
    com_nav_log_out: 'Abmelden',
    com_nav_user: 'NUTZER',
    com_nav_archived_chats: 'Archivierte Chats',
    com_nav_archived_chats_manage: 'Verwalten',
    com_nav_archived_chats_empty: 'Keine archivierten Chats',
    com_nav_archive_all_chats: 'Alle Chats archivieren',
    com_nav_archive_all: 'Archivieren',
    com_nav_archive_name: 'Name',
    com_nav_archive_created_at: 'ErstelltAm',
    com_nav_clear_conversation: 'Unterhaltungen löschen',
    com_nav_clear_conversation_confirm_message:
      'Bist du sicher, dass du alle Unterhaltungen löschen willst? Dies ist unumkehrbar.',
    com_nav_help_faq: 'Hilfe & FAQ',
    com_nav_settings: 'Einstellungen',
    com_nav_search_placeholder: 'Nachrichten suchen',
    com_nav_setting_general: 'Allgemein',
    com_nav_setting_beta: 'Beta-Funktionen',
    com_nav_setting_data: 'Datenkontrollen',
    com_nav_setting_account: 'Konto',
    com_nav_language: 'Sprache',
    com_assistants_file_search: 'Dateisuche',
    com_assistants_file_search_info:
      'Das Anhängen von Vektorspeichern für die Dateisuche wird derzeit noch nicht unterstützt. Du kannst sie im Provider Playground anhängen oder Dateien für die Dateisuche pro Thread anhängen.',
    com_assistants_non_retrieval_model:
      'Die Dateisuche ist für dieses Modell nicht aktiviert. Bitte wähle ein anderes Modell aus.',
    com_ui_attach_error_openai:
      'Assistent-Dateien können nicht an andere Endpunkte angehängt werden',
    com_ui_attach_warn_endpoint:
      'Nicht-Assistent-Dateien könnten ohne ein kompatibles Werkzeug ignoriert werden',
    com_ui_assistant_deleted: 'Assistent erfolgreich gelöscht',
    com_ui_assistant_delete_error: 'Beim Löschen des Assistenten ist ein Fehler aufgetreten.',
    com_ui_copied: 'Kopiert',
    com_ui_copy_code: 'Code kopieren',
    com_nav_source_chat: 'Quellchat anzeigen',
    com_ui_date_today: 'Heute',
    com_ui_date_yesterday: 'Gestern',
    com_ui_date_previous_7_days: 'Letzte 7 Tage',
    com_ui_date_previous_30_days: 'Letzte 30 Tage',
    com_ui_date_january: 'Januar',
    com_ui_date_february: 'Februar',
    com_ui_date_march: 'März',
    com_ui_date_april: 'April',
    com_ui_date_may: 'Mai',
    com_ui_date_june: 'Juni',
    com_ui_date_july: 'Juli',
    com_ui_date_august: 'August',
    com_ui_date_september: 'September',
    com_ui_date_october: 'Oktober',
    com_ui_date_november: 'November',
    com_ui_date_december: 'Dezember',
    com_ui_nothing_found: 'Keine Ergebnisse gefunden',
    com_ui_go_to_conversation: 'Zum Chat wechseln',
    com_error_moderation:
      'Es sieht so aus, als ob der übermittelte Inhalt von unserem Moderationssystem als nicht konform mit unseren Gemeinschaftsrichtlinien markiert wurde. Wir können mit diesem spezifischen Thema leider nicht fortfahren. Wenn du andere Fragen oder Themen hast, die du gerne erörtern möchtest, bearbeite bitte deine Nachricht oder starte eine neue Konversation.',
    com_error_no_user_key:
      'Kein Schlüssel gefunden. Bitte gib einen Schlüssel ein und versuche es erneut.',
    com_error_no_base_url:
      'Es wurde keine Basis-URL gefunden. Bitte gib eine an und versuche es erneut.',
    com_error_invalid_user_key:
      'Ungültiger Schlüssel angegeben. Bitte gib einen gültigen Schlüssel ein und versuche es erneut.',
    com_error_expired_user_key:
      'Der bereitgestellte Schlüssel für {0} ist um {1} abgelaufen. Bitte gib einen neuen Schlüssel ein und versuche es erneut.',
    com_ui_none_selected: 'Keine ausgewählt',
    com_ui_fork: 'Abzweigen',
    com_ui_fork_info_1:
      'Verwende diese Einstellung, um Nachrichten mit dem gewünschten Verhalten abzuzweigen.',
    com_ui_fork_info_2:
      '"Forken" bezieht sich darauf, einen neuen Konversationsverlauf zu erstellen, der an bestimmten Nachrichten der aktuellen Konversation beginnt bzw. endet und eine Kopie gemäß den ausgewählten Optionen erstellt.',
    com_ui_fork_info_3:
      'Der Begriff "Zielnachricht" bezieht sich entweder auf die Nachricht, von der dieses Popup geöffnet wurde, oder, wenn du "{0}" auswählst, auf die letzte Nachricht im Gespräch.',
    com_ui_fork_info_visible:
      'Diese Option gabelt nur die sichtbaren Nachrichten ab; mit anderen Worten, den direkten Pfad zur Zielnachricht, ohne Verzweigungen.',
    com_ui_fork_info_branches:
      'Mit dieser Option werden die sichtbaren Nachrichten zusammen mit den zugehörigen Zweigen aufgeteilt; anders gesagt, der direkte Pfad zur Zielnachricht, einschließlich der Zweige entlang des Pfades.',
    com_ui_fork_info_target:
      'Diese Option verzweigt alle Nachrichten bis zur Zielnachricht, einschließlich ihrer Nachbarn; mit anderen Worten, alle Nachrichtenzweige werden einbezogen, unabhängig davon, ob sie sichtbar sind oder demselben Pfad folgen.',
    com_ui_fork_info_start:
      'Wenn aktiviert, beginnt die Abspaltung ab dieser Nachricht bis zur letzten Nachricht im Gespräch, entsprechend dem oben ausgewählten Verhalten.',
    com_ui_fork_info_remember:
      'Aktiviere diese Option, um deine gewählten Einstellungen für zukünftige Verwendungen zu speichern. So kannst du Konversationen schneller nach deinen Vorlieben aufteilen.',
    com_ui_fork_success: 'Konversation erfolgreich abgespalten',
    com_ui_fork_processing: 'Konversation wird aufgespalten...',
    com_ui_fork_error: 'Bei der Aufspaltung des Gesprächs ist ein Fehler aufgetreten.',
    com_ui_fork_change_default: 'Standardgabel-Option',
    com_ui_fork_default: 'Standardverzweigungsoption verwenden',
    com_ui_fork_remember: 'Merken',
    com_ui_fork_split_target_setting: 'Fork standardmäßig vom Ziel-Nachricht starten',
    com_ui_fork_split_target: 'Hier Gabelung starten',
    com_ui_fork_remember_checked:
      'Deine Auswahl wird nach der Verwendung gespeichert. Du kannst dies jederzeit in den Einstellungen ändern.',
    com_ui_fork_all_target: 'Alle einbeziehen',
    com_ui_fork_branches: 'Verwandte Branches einbeziehen',
    com_ui_fork_visible: 'Nur sichtbare Nachrichten',
    com_ui_fork_from_message: 'Wähle eine Fork-Option',
    com_ui_mention:
      'Erwähne einen Endpunkt, Assistenten oder eine Vorlage, um schnell dorthin zu wechseln',
    com_ui_import_conversation_file_type_error: 'Nicht unterstützter Importtyp',
    com_ui_min_tags:
      'Es können keine weiteren Werte entfernt werden, mindestens {0} sind erforderlich.',
    com_ui_max_tags: 'Die maximal erlaubte Anzahl ist {0}, die neuesten Werte werden verwendet.',
    com_endpoint_messages: 'Nachrichten',
    com_endpoint_context_tokens: 'Max. Kontexttoken',
    com_endpoint_context_info:
      'Die maximale Anzahl an Token, die für den Kontext verwendet werden kann. Verwenden Sie dies, um zu steuern, wie viele Token pro Anfrage gesendet werden. Wenn nicht angegeben, werden systemseitige Standardwerte basierend auf der bekannten Kontextgröße der Modelle verwendet. Höhere Werte können zu Fehlern und/oder höheren Tokenkosten führen.',
    com_endpoint_stop: 'Stoppsequenzen',
    com_endpoint_stop_placeholder: 'Trenne Werte durch Drücken der `Eingabetaste`',
    com_endpoint_openai_max_tokens:
      'Optionales `max_tokens`-Feld, das die maximale Anzahl der Token darstellt, die in der Chat-Vervollständigung generiert werden können.\n\nDie Gesamtlänge der eingegebenen Token und der generierten Token ist durch die Kontextlänge der Modelle begrenzt. Möglicherweise treten Fehler auf, wenn diese Zahl die maximale Kontexttoken-Anzahl überschreitet.',
    com_endpoint_openai_stop:
      'Bis zu 4 Sequenzen, bei denen die API die Generierung weiterer Token stoppt.',
    com_nav_enter_to_send: 'Drücke Enter, um Nachrichten zu senden',
    com_nav_lang_auto: 'Automatisch erkennen',
    com_nav_lang_english: 'Englisch',
    com_nav_lang_chinese: 'Chinesisch',
    com_nav_lang_german: 'Deutsch',
    com_nav_lang_spanish: 'Spanisch',
    com_nav_lang_french: 'Französisch',
    com_nav_lang_italian: 'Italienisch',
    com_nav_lang_polish: 'Polnisch',
    com_nav_lang_brazilian_portuguese: 'Brasilianisches Portugiesisch',
    com_nav_lang_russian: 'Russisch',
    com_nav_lang_japanese: 'Japanisch',
    com_nav_lang_swedish: 'Schwedisch',
    com_nav_lang_korean: 'Koreanisch',
    com_nav_lang_vietnamese: 'Vietnamesisch',
    com_nav_lang_traditionalchinese: 'Traditionelles Chinesisch',
    com_nav_lang_arabic: 'Arabisch',
    com_nav_lang_turkish: 'Türkisch',
    com_nav_lang_dutch: 'Niederländisch',
    com_nav_lang_indonesia: 'Indonesisch',
    com_nav_lang_hebrew: 'Hebräisch',
  },
  l1 = {
    com_error_moderation:
      'Sembra che il contenuto inviato sia stato contrassegnato dal nostro sistema di moderazione per non essere allineato con le nostre linee guida della community. Non possiamo procedere con questo argomento specifico. Se hai altre domande o argomenti che vorresti esplorare, modifica il tuo messaggio o crea una nuova conversazione.',
    com_error_no_user_key: 'Nessuna chiave trovata. Fornisci una chiave e riprova.',
    com_error_no_base_url: 'Nessun URL base trovato. Forniscine uno e riprova.',
    com_error_invalid_user_key: 'Chiave fornita non valida. Fornisci una chiave e riprova.',
    com_error_expired_user_key:
      'La chiave fornita per {0} è scaduta il {1}. Fornisci una chiave e riprova.',
    com_files_no_results: 'Nessun risultato.',
    com_files_filter: 'Filtra file...',
    com_files_number_selected: '{0} di {1} file selezionati',
    com_sidepanel_select_assistant: 'Seleziona un Assistente',
    com_sidepanel_parameters: 'Parametri',
    com_sidepanel_assistant_builder: 'Costruttore Assistente',
    com_sidepanel_hide_panel: 'Nascondi Pannello',
    com_sidepanel_attach_files: 'Allega File',
    com_sidepanel_manage_files: 'Gestisci File',
    com_assistants_capabilities: 'Capacità',
    com_assistants_knowledge: 'Conoscenza',
    com_assistants_knowledge_info:
      'Se carichi file sotto Conoscenza, le conversazioni con il tuo Assistente potrebbero includere i contenuti dei file.',
    com_assistants_knowledge_disabled:
      "L'Assistente deve essere creato, e Code Interpreter o Retrieval devono essere abilitati e salvati prima di caricare file come Conoscenza.",
    com_assistants_image_vision: 'Visione Immagine',
    com_assistants_code_interpreter: 'Interprete Codice',
    com_assistants_code_interpreter_files:
      'I seguenti file sono disponibili solo per Code Interpreter:',
    com_assistants_retrieval: 'Retrival',
    com_assistants_search_name: 'Cerca assistenti per nome',
    com_assistants_tools: 'Strumenti',
    com_assistants_actions: 'Azioni',
    com_assistants_add_tools: 'Aggiungi Strumenti',
    com_assistants_add_actions: 'Aggiungi Azioni',
    com_assistants_available_actions: 'Azioni Disponibili',
    com_assistants_running_action: 'Azione in corso',
    com_assistants_completed_action: 'Parlato con {0}',
    com_assistants_completed_function: 'Eseguito {0}',
    com_assistants_function_use: "L'Assistente ha usato {0}",
    com_assistants_domain_info: "L'Assistente ha inviato queste informazioni a {0}",
    com_assistants_delete_actions_success: "Azione eliminata dall'Assistente con successo",
    com_assistants_update_actions_success: 'Azione creata o aggiornata con successo',
    com_assistants_update_actions_error:
      "Si è verificato un errore durante la creazione o l'aggiornamento dell'azione.",
    com_assistants_delete_actions_error:
      "Si è verificato un errore durante l'eliminazione dell'azione.",
    com_assistants_actions_info:
      'Permetti al tuo Assistente di recuperare informazioni o eseguire azioni tramite API',
    com_assistants_name_placeholder: "Opzionale: Il nome dell'assistente",
    com_assistants_instructions_placeholder: "Le istruzioni di sistema che l'assistente utilizza",
    com_assistants_description_placeholder: 'Opzionale: Descrivi qui il tuo Assistente',
    com_assistants_actions_disabled: 'Devi prima creare un assistente prima di aggiungere azioni.',
    com_assistants_update_success: 'Aggiornamento avvenuto con successo',
    com_assistants_update_error:
      "Si è verificato un errore durante l'aggiornamento del tuo assistente.",
    com_assistants_create_success: 'Creazione avvenuta con successo',
    com_assistants_create_error:
      'Si è verificato un errore durante la creazione del tuo assistente.',
    com_ui_field_required: 'Questo campo è obbligatorio',
    com_ui_download_error:
      'Errore durante il download del file. Il file potrebbe essere stato eliminato.',
    com_ui_attach_error_type: "Tipo di file non supportato per l'endpoint:",
    com_ui_attach_error_size: "Limite dimensione file superato per l'endpoint:",
    com_ui_attach_error:
      'Impossibile allegare il file. Crea o seleziona una conversazione, oppure prova a ricaricare la pagina.',
    com_ui_examples: 'Esempi',
    com_ui_new_chat: 'Nuova chat',
    com_ui_happy_birthday: 'È il mio 1° compleanno!',
    com_ui_example_quantum_computing: "Spiega l'informatica quantistica in termini semplici",
    com_ui_example_10_year_old_b_day:
      'Hai qualche idea creativa per il compleanno di un bambino di 10 anni?',
    com_ui_example_http_in_js: 'Come faccio a fare una richiesta HTTP in Javascript?',
    com_ui_capabilities: 'Capacità',
    com_ui_capability_remember: "Ricorda ciò che l'utente ha detto prima nella conversazione",
    com_ui_capability_correction: "Permette all'utente di fornire correzioni successive",
    com_ui_capability_decline_requests: 'Addestrato a rifiutare richieste inappropriate',
    com_ui_limitations: 'Limitazioni',
    com_ui_limitation_incorrect_info: 'Potrebbe occasionalmente generare informazioni non corrette',
    com_ui_limitation_harmful_biased:
      'Potrebbe occasionalmente produrre istruzioni dannose o contenuti di parte',
    com_ui_limitation_limited_2021: 'Conoscenza limitata del mondo e degli eventi dopo il 2021',
    com_ui_experimental: 'Funzionalità Sperimentali',
    com_ui_on: 'Attivo',
    com_ui_off: 'Disattivo',
    com_ui_yes: 'Sì',
    com_ui_no: 'No',
    com_ui_ascending: 'Crescente',
    com_ui_descending: 'Decrescente',
    com_ui_show_all: 'Mostra Tutto',
    com_ui_name: 'Nome',
    com_ui_date: 'Data',
    com_ui_storage: 'Archiviazione',
    com_ui_context: 'Contesto',
    com_ui_size: 'Dimensione',
    com_ui_host: 'Host',
    com_ui_update: 'Aggiorna',
    com_ui_authentication: 'Autenticazione',
    com_ui_instructions: 'Istruzioni',
    com_ui_description: 'Descrizione',
    com_ui_error: 'Errore',
    com_ui_select: 'Seleziona',
    com_ui_input: 'Input',
    com_ui_close: 'Chiudi',
    com_ui_model: 'Modello',
    com_ui_select_model: 'Seleziona un modello',
    com_ui_select_search_model: 'Cerca modello per nome',
    com_ui_select_search_plugin: 'Cerca plugin per nome',
    com_ui_use_prompt: 'Usa prompt',
    com_ui_prev: 'Prec',
    com_ui_next: 'Succ',
    com_ui_stop: 'Ferma',
    com_ui_upload_files: 'Carica file',
    com_ui_prompt_templates: 'Modelli di prompt',
    com_ui_hide_prompt_templates: 'Nascondi modelli di prompt',
    com_ui_showing: 'Mostrando',
    com_ui_of: 'di',
    com_ui_entries: 'Voci',
    com_ui_pay_per_call:
      'Tutte le conversazioni AI in un unico posto. Paga a chiamata e non a mese',
    com_ui_new_footer: 'Tutte le conversazioni AI in un unico posto.',
    com_ui_enter: 'Invio',
    com_ui_submit: 'Invia',
    com_ui_none_selected: 'Nessuna selezionata',
    com_ui_upload_success: 'File caricato con successo',
    com_ui_upload_error: 'Si è verificato un errore durante il caricamento del file',
    com_ui_upload_invalid:
      "File non valido per il caricamento. Deve essere un'immagine non superiore a 2 MB",
    com_ui_cancel: 'Annulla',
    com_ui_save: 'Salva',
    com_ui_save_submit: 'Salva e Invia',
    com_ui_copy_to_clipboard: 'Copia negli appunti',
    com_ui_copied_to_clipboard: 'Copiato negli appunti',
    com_ui_fork_info_1:
      'Usa questa impostazione per duplicare i messaggi con il comportamento desiderato.',
    com_ui_fork_info_2:
      '"Duplicare" si riferisce alla creazione di una nuova conversazione che inizia/termina dai messaggi specifici nella conversazione corrente, creando una copia in base alle opzioni selezionate.',
    com_ui_fork_info_3: `Il "messaggio di destinazione" si riferisce al messaggio dal quale è stato aperto questo popup, oppure, se selezioni "{0}", all'ultimo messaggio della conversazione.`,
    com_ui_fork_info_visible:
      'Questa opzione duplica solo i messaggi visibili; in altre parole, il percorso diretto al messaggio di destinazione, senza alcun ramo.',
    com_ui_fork_info_branches:
      'Questa opzione duplica i messaggi visibili, insieme ai rami correlati; in altre parole, il percorso diretto al messaggio di destinazione, inclusi i rami lungo il percorso.',
    com_ui_fork_info_target:
      'Questa opzione duplica tutti i messaggi che portano al messaggio di destinazione, inclusi i suoi vicini; in altre parole, sono inclusi tutti i rami di messaggi, sia che siano visibili o meno o lungo lo stesso percorso.',
    com_ui_fork_info_start:
      "Se selezionato, la duplicazione partirà da questo messaggio fino all'ultimo messaggio della conversazione, in base al comportamento selezionato sopra.",
    com_ui_fork_info_remember:
      'Seleziona questa opzione per ricordare le opzioni selezionate per un futuro utilizzo, rendendo più veloce la duplicazione delle conversazioni come preferito.',
    com_ui_fork_success: 'Conversazione duplicata con successo',
    com_ui_fork_processing: 'Duplicazione conversazione in corso...',
    com_ui_fork_error: 'Si è verificato un errore durante la duplicazione della conversazione',
    com_ui_fork_change_default: 'Cambia opzione di duplicazione predefinita',
    com_ui_fork_default: 'Usa opzione di duplicazione predefinita',
    com_ui_fork_remember: 'Ricorda',
    com_ui_fork_split_target_setting:
      'Avvia la duplicazione dal messaggio di destinazione per impostazione predefinita',
    com_ui_fork_split_target: 'Avvia la duplicazione da qui',
    com_ui_fork_remember_checked:
      "La tua selezione verrà ricordata dopo l'utilizzo. Puoi cambiarla in qualsiasi momento nelle impostazioni.",
    com_ui_fork_all_target: 'Includi tutto da/per qui',
    com_ui_fork_branches: 'Includi rami correlati',
    com_ui_fork_visible: 'Solo messaggi visibili',
    com_ui_fork_from_message: "Seleziona un'opzione di duplicazione",
    com_ui_regenerate: 'Rigenera',
    com_ui_continue: 'Continua',
    com_ui_edit: 'Modifica',
    com_ui_success: 'Successo',
    com_ui_all: 'tutto',
    com_ui_clear: 'Cancella',
    com_ui_revoke: 'Revoca',
    com_ui_revoke_info: "Revoca tutte le credenziali fornite dall'utente",
    com_ui_import_conversation: 'Importa',
    com_ui_import_conversation_info: 'Importa conversazioni da un file JSON',
    com_ui_import_conversation_success: 'Conversazioni importate con successo',
    com_ui_import_conversation_error:
      "Si è verificato un errore durante l'importazione delle conversazioni",
    com_ui_import_conversation_file_type_error: 'Tipo di importazione non supportato',
    com_ui_confirm_action: 'Conferma Azione',
    com_ui_chats: 'chat',
    com_ui_avatar: 'Avatar',
    com_ui_unknown: 'Sconosciuto',
    com_ui_result: 'Risultato',
    com_ui_image_gen: 'Generazione immagine',
    com_ui_assistant: 'Assistente',
    com_ui_assistants: 'Assistenti',
    com_ui_attachment: 'Allegato',
    com_ui_assistants_output: 'Output Assistenti',
    com_ui_delete: 'Elimina',
    com_ui_create: 'Crea',
    com_ui_share: 'Condividi',
    com_ui_copy_link: 'Copia link',
    com_ui_update_link: 'Aggiorna link',
    com_ui_create_link: 'Crea link',
    com_ui_share_link_to_chat: 'Condividi link a chat',
    com_ui_share_error: 'Si è verificato un errore durante la condivisione del link della chat',
    com_ui_share_create_message:
      'Il tuo nome e qualsiasi messaggio aggiunto dopo la condivisione rimarranno privati.',
    com_ui_share_created_message:
      'È stato creato un link condiviso per la tua chat. Gestisci le chat condivise in precedenza in qualsiasi momento tramite Impostazioni.',
    com_ui_share_update_message:
      'Il tuo nome, istruzioni personalizzate e qualsiasi messaggio aggiunto dopo la condivisione rimarranno privati.',
    com_ui_share_updated_message:
      'Il link condiviso per la tua chat è stato aggiornato. Gestisci le chat condivise in precedenza in qualsiasi momento tramite Impostazioni.',
    com_ui_shared_link_not_found: 'Link condiviso non trovato',
    com_ui_delete_conversation: 'Eliminare la chat?',
    com_ui_delete_conversation_confirm: 'Questo eliminerà',
    com_ui_rename: 'Rinominare',
    com_ui_archive: 'Arsip',
    com_ui_archive_error: "Errore durante l'archiviazione della conversazione",
    com_ui_unarchive: 'Disarchivia',
    com_ui_unarchive_error: 'Impossibile disarchiviare la conversazione',
    com_ui_more_options: 'Pi',
    com_ui_delete_assistant_confirm:
      'Sei sicuro di voler eliminare questo Assistente? Questa operazione non può essere annullata.',
    com_ui_preview: 'Anteprima',
    com_ui_upload: 'Carica',
    com_ui_connect: 'Connetti',
    com_ui_locked: 'Bloccato',
    com_ui_upload_delay: `Il caricamento di "{0}" sta richiedendo più tempo del previsto. Attendi il completamento dell'indicizzazione per il recupero.`,
    com_ui_privacy_policy: 'Informativa sulla privacy',
    com_ui_terms_of_service: 'Termini di servizio',
    com_ui_min_tags: 'Impossibile rimuovere altri valori, è richiesto un minimo di {0}.',
    com_ui_max_tags: 'Il numero massimo consentito è {0}, verranno utilizzati gli ultimi valori.',
    com_auth_error_login:
      "Impossibile eseguire l'accesso con le informazioni fornite. Controlla le tue credenziali e riprova.",
    com_auth_error_login_rl:
      'Troppi tentativi di accesso in un breve periodo di tempo. Riprova più tardi.',
    com_auth_error_login_ban:
      'Il tuo account è stato temporaneamente bloccato a causa di violazioni del nostro servizio.',
    com_auth_error_login_server:
      'Si è verificato un errore interno del server. Attendi qualche istante e riprova.',
    com_auth_no_account: 'Non hai un account?',
    com_auth_sign_up: 'Registrati',
    com_auth_sign_in: 'Accedi',
    com_auth_google_login: 'Continua con Google',
    com_auth_facebook_login: 'Continua con Facebook',
    com_auth_github_login: 'Continua con Github',
    com_auth_discord_login: 'Continua con Discord',
    com_auth_email: 'Email',
    com_auth_email_required: "L'email è obbligatoria",
    com_auth_email_min_length: "L'email deve essere di almeno 6 caratteri",
    com_auth_email_max_length: "L'email non deve superare i 120 caratteri",
    com_auth_email_pattern: 'Devi inserire un indirizzo email valido',
    com_auth_email_address: 'Indirizzo email',
    com_auth_password: 'Password',
    com_auth_password_required: 'La password è obbligatoria',
    com_auth_password_min_length: 'La password deve essere di almeno 8 caratteri',
    com_auth_password_max_length: 'La password deve essere inferiore a 128 caratteri',
    com_auth_password_forgot: 'Password dimenticata?',
    com_auth_password_confirm: 'Conferma password',
    com_auth_password_not_match: 'Le password non corrispondono',
    com_auth_continue: 'Continua',
    com_auth_create_account: 'Crea il tuo account',
    com_auth_error_create:
      'Si è verificato un errore durante il tentativo di registrare il tuo account. Riprova.',
    com_auth_full_name: 'Nome completo',
    com_auth_name_required: 'Il nome è obbligatorio',
    com_auth_name_min_length: 'Il nome deve essere di almeno 3 caratteri',
    com_auth_name_max_length: 'Il nome deve essere inferiore a 80 caratteri',
    com_auth_username: 'Nome utente (opzionale)',
    com_auth_username_required: 'Il nome utente è obbligatorio',
    com_auth_username_min_length: 'Il nome utente deve essere di almeno 2 caratteri',
    com_auth_username_max_length: 'Il nome utente deve essere inferiore a 20 caratteri',
    com_auth_already_have_account: 'Hai già un account?',
    com_auth_login: 'Accedi',
    com_auth_reset_password: 'Reimposta la tua password',
    com_auth_click: 'Clicca',
    com_auth_here: 'QUI',
    com_auth_to_reset_your_password: 'per reimpostare la tua password.',
    com_auth_reset_password_link_sent: 'Email inviata',
    com_auth_reset_password_email_sent:
      "Ti è stata inviata un'email con ulteriori istruzioni per reimpostare la tua password.",
    com_auth_error_reset_password:
      "Si è verificato un problema durante il reset della tua password. Nessun utente trovato con l'indirizzo email fornito. Riprova.",
    com_auth_reset_password_success: 'Reset della password avvenuto con successo',
    com_auth_login_with_new_password: 'Ora puoi accedere con la tua nuova password.',
    com_auth_error_invalid_reset_token: 'Questo token di reset della password non è più valido.',
    com_auth_click_here: 'Clicca qui',
    com_auth_to_try_again: 'per riprovare.',
    com_auth_submit_registration: 'Invia registrazione',
    com_auth_welcome_back: 'Ben tornato',
    com_auth_back_to_login: "Torna all'accesso",
    com_endpoint_open_menu: 'Apri menu',
    com_endpoint_bing_enable_sydney: 'Abilita Sydney',
    com_endpoint_bing_to_enable_sydney: 'Per abilitare Sydney',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      'Bing può utilizzare fino a 7k token per il "contesto", che può riferire per la conversazione. Il limite specifico non è noto ma potrebbe incontrare errori superando 7k token',
    com_endpoint_bing_system_message_placeholder: `ATTENZIONE: L'uso improprio di questa funzione può farti BANNARE dall'utilizzo di Bing! Clicca su "Messaggio di sistema" per le istruzioni complete e il messaggio predefinito se omesso, che è il preset "Sydney" considerato sicuro.`,
    com_endpoint_system_message: 'Messaggio di sistema',
    com_endpoint_message: 'Messaggio',
    com_endpoint_messages: 'Messaggi',
    com_endpoint_message_not_appendable: 'Modifica il tuo messaggio o Rigenera.',
    com_endpoint_default_blank: 'predefinito: vuoto',
    com_endpoint_default_false: 'predefinito: falso',
    com_endpoint_default_creative: 'predefinito: creativo',
    com_endpoint_default_empty: 'predefinito: vuoto',
    com_endpoint_default_with_num: 'predefinito: {0}',
    com_endpoint_context: 'Contesto',
    com_endpoint_tone_style: 'Tono Stile',
    com_endpoint_token_count: 'Conteggio token',
    com_endpoint_output: 'Output',
    com_endpoint_google_temp:
      'Valori più alti = più casualità, mentre valori più bassi = più focalizzati e deterministici. Consigliamo di modificare questo o Top P ma non entrambi.',
    com_endpoint_google_topp:
      "Top-p cambia il modo in cui il modello seleziona i token per l'output. I token vengono selezionati dai più probabili K (vedi parametro topK) ai meno probabili fino a quando la somma delle loro probabilità eguaglia il valore top-p.",
    com_endpoint_google_topk:
      "Top-k cambia il modo in cui il modello seleziona i token per l'output. Un top-k di 1 significa che il token selezionato è il più probabile tra tutti i token nel vocabolario del modello (anche chiamato greedy decoding), mentre un top-k di 3 significa che il prossimo token è selezionato tra i 3 più probabili (usando la temperatura).",
    com_endpoint_google_maxoutputtokens:
      'Numero massimo di token che possono essere generati nella risposta. Specifica un valore più basso per risposte più brevi e un valore più alto per risposte più lunghe.',
    com_endpoint_google_custom_name_placeholder: 'Imposta un nome personalizzato per Google',
    com_endpoint_prompt_prefix_placeholder:
      'Imposta istruzioni personalizzate o contesto. Ignorato se vuoto.',
    com_endpoint_instructions_assistants_placeholder:
      "Sovrascrive le istruzioni dell'assistente. Utile per modificare il comportamento su base singola.",
    com_endpoint_prompt_prefix_assistants_placeholder:
      "Imposta istruzioni o contesto aggiuntivi oltre alle istruzioni principali dell'Assistente. Ignorato se vuoto.",
    com_endpoint_custom_name: 'Nome personalizzato',
    com_endpoint_prompt_prefix: 'Istruzioni personalizzate',
    com_endpoint_prompt_prefix_assistants: 'Istruzioni aggiuntive',
    com_endpoint_instructions_assistants: 'Sovrascrivi istruzioni',
    com_endpoint_temperature: 'Temperatura',
    com_endpoint_default: 'predefinito',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Token di output massimi',
    com_endpoint_stop: 'Sequenze di stop',
    com_endpoint_stop_placeholder: 'Separa i valori premendo `Invio`',
    com_endpoint_openai_temp:
      'Valori più alti = più casualità, mentre valori più bassi = più focalizzati e deterministici. Consigliamo di modificare questo o Top P ma non entrambi.',
    com_endpoint_openai_max:
      'I token massimi da generare. La lunghezza totale dei token di input e dei token generati è limitata dalla lunghezza del contesto del modello.',
    com_endpoint_openai_topp:
      "Un'alternativa al campionamento con temperatura, chiamata nucleus sampling, in cui il modello considera i risultati dei token con probabilità di massa top_p. Quindi 0,1 significa che vengono considerati solo i token che compongono la massa di probabilità superiore al 10%. Consigliamo di modificare questo o la temperatura ma non entrambi.",
    com_endpoint_openai_freq:
      'Numero compreso tra -2.0 e 2.0. Valori positivi penalizzano i nuovi token basati sulla loro frequenza esistente nel testo fino a quel momento, diminuendo la probabilità del modello di ripetere la stessa riga verbatim.',
    com_endpoint_openai_pres:
      'Numero compreso tra -2.0 e 2.0. Valori positivi penalizzano i nuovi token in base a se compaiono nel testo fino a quel momento, aumentando la probabilità del modello di parlare di nuovi argomenti.',
    com_endpoint_openai_resend:
      'Invia nuovamente tutte le immagini allegate in precedenza. Nota: questo può aumentare significativamente il costo dei token e potresti incontrare errori con molti allegati di immagini.',
    com_endpoint_openai_resend_files:
      'Invia nuovamente tutti i file allegati in precedenza. Nota: questo aumenterà il costo dei token e potresti incontrare errori con molti allegati.',
    com_endpoint_openai_detail: `La risoluzione per le richieste Vision. "Bassa" è più economica e veloce, "Alta" è più dettagliata e costosa, e "Auto" sceglierà automaticamente tra le due in base alla risoluzione dell'immagine.`,
    com_endpoint_openai_stop:
      "Fino a 4 sequenze in cui l'API smetterà di generare ulteriori token.",
    com_endpoint_openai_custom_name_placeholder: "Imposta un nome personalizzato per l'IA",
    com_endpoint_openai_prompt_prefix_placeholder:
      'Imposta istruzioni personalizzate da includere nel Messaggio di Sistema. Predefinito: nessuno',
    com_endpoint_anthropic_temp:
      'Varia da 0 a 1. Usa temp più vicino a 0 per analitica / scelta multipla, e più vicino a 1 per compiti creativi e generativi. Consigliamo di modificare questo o Top P ma non entrambi.',
    com_endpoint_anthropic_topp:
      "Top-p cambia il modo in cui il modello seleziona i token per l'output. I token vengono selezionati dai più probabili K (vedi parametro topK) ai meno probabili fino a quando la somma delle loro probabilità eguaglia il valore top-p.",
    com_endpoint_anthropic_topk:
      "Top-k cambia il modo in cui il modello seleziona i token per l'output. Un top-k di 1 significa che il token selezionato è il più probabile tra tutti i token nel vocabolario del modello (anche chiamato greedy decoding), mentre un top-k di 3 significa che il prossimo token è selezionato tra i 3 più probabili (usando la temperatura).",
    com_endpoint_anthropic_maxoutputtokens:
      'Numero massimo di token che possono essere generati nella risposta. Specifica un valore più basso per risposte più brevi e un valore più alto per risposte più lunghe.',
    com_endpoint_anthropic_custom_name_placeholder: 'Imposta un nome personalizzato per Anthropic',
    com_endpoint_frequency_penalty: 'Penalità di frequenza',
    com_endpoint_presence_penalty: 'Penalità di presenza',
    com_endpoint_plug_use_functions: 'Usa funzioni',
    com_endpoint_plug_resend_files: 'Reinvia file',
    com_endpoint_plug_resend_images: 'Reinvia immagini',
    com_endpoint_plug_image_detail: 'Dettaglio immagine',
    com_endpoint_plug_skip_completion: 'Salta completamento',
    com_endpoint_disabled_with_tools: 'disabilitato con strumenti',
    com_endpoint_disabled_with_tools_placeholder: 'Disabilitato con Strumenti Selezionati',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Imposta istruzioni personalizzate da includere nel Messaggio di Sistema. Predefinito: nessuno',
    com_endpoint_import: 'Importa',
    com_endpoint_set_custom_name:
      'Imposta un nome personalizzato, nel caso tu possa trovare questa preimpostazione',
    com_endpoint_preset_delete_confirm: 'Sei sicuro di voler eliminare questa preimpostazione?',
    com_endpoint_preset_clear_all_confirm:
      'Sei sicuro di voler eliminare tutte le tue preimpostazioni?',
    com_endpoint_preset_import: 'Preimpostazione importata!',
    com_endpoint_preset_import_error:
      "Si è verificato un errore durante l'importazione della preimpostazione. Riprova.",
    com_endpoint_preset_save_error:
      'Si è verificato un errore durante il salvataggio della preimpostazione. Riprova.',
    com_endpoint_preset_delete_error:
      "Si è verificato un errore durante l'eliminazione della preimpostazione. Riprova.",
    com_endpoint_preset_default_removed: 'non è più la preimpostazione predefinita.',
    com_endpoint_preset_default_item: 'Predefinita:',
    com_endpoint_preset_default_none: 'Nessuna preimpostazione predefinita attiva.',
    com_endpoint_preset_title: 'Preimpostazione',
    com_endpoint_preset_saved: 'Salvata!',
    com_endpoint_preset_default: 'è ora la preimpostazione predefinita.',
    com_endpoint_preset: 'preimpostazione',
    com_endpoint_presets: 'preimpostazioni',
    com_endpoint_preset_selected: 'Preimpostazione attiva!',
    com_endpoint_preset_selected_title: 'Attiva!',
    com_endpoint_preset_name: 'Nome preimpostazione',
    com_endpoint_new_topic: 'Nuovo argomento',
    com_endpoint: 'Endpoint',
    com_endpoint_hide: 'Nascondi',
    com_endpoint_show: 'Mostra',
    com_endpoint_examples: 'Preimpostazioni',
    com_endpoint_completion: 'Completamento',
    com_endpoint_agent: 'Agente',
    com_endpoint_show_what_settings: 'Mostra impostazioni {0}',
    com_endpoint_export: 'Esporta',
    com_endpoint_assistant: 'Assistente',
    com_endpoint_use_active_assistant: 'Usa Assistente Attivo',
    com_endpoint_assistant_model: 'Modello Assistente',
    com_endpoint_save_as_preset: 'Salva come Preimpostazione',
    com_endpoint_presets_clear_warning:
      'Sei sicuro di voler cancellare tutte le preimpostazioni? Questa azione è irreversibile.',
    com_endpoint_not_implemented: 'Non implementato',
    com_endpoint_no_presets:
      'Ancora nessuna preimpostazione, usa il pulsante impostazioni per crearne una',
    com_endpoint_not_available: 'Nessun endpoint disponibile',
    com_endpoint_view_options: 'Visualizza opzioni',
    com_endpoint_save_convo_as_preset: 'Salva conversazione come preimpostazione',
    com_endpoint_my_preset: 'La mia preimpostazione',
    com_endpoint_agent_model: 'Modello Agente (Consigliato: GPT-3.5)',
    com_endpoint_completion_model: 'Modello Completamento (Consigliato: GPT-4)',
    com_endpoint_func_hover: "Abilita l'uso di Plugin come OpenAI Functions",
    com_endpoint_skip_hover:
      'Abilita la possibilità di saltare il passaggio di completamento, che rivede la risposta finale e i passaggi generati',
    com_endpoint_config_key: 'Imposta chiave API',
    com_endpoint_assistant_placeholder: 'Seleziona un Assistente dal Pannello laterale destro',
    com_endpoint_config_placeholder: 'Imposta la tua Chiave nel menu Header per chattare.',
    com_endpoint_config_key_for: 'Imposta chiave API per',
    com_endpoint_config_key_name: 'Chiave',
    com_endpoint_config_value: 'Inserisci valore per',
    com_endpoint_config_key_name_placeholder: 'Imposta prima la chiave API',
    com_endpoint_config_key_encryption: 'La tua chiave sarà crittografata ed eliminata al',
    com_endpoint_config_key_expiry: 'tempo di scadenza',
    com_endpoint_config_click_here: 'Clicca qui',
    com_endpoint_config_google_service_key: 'Chiave Account di Servizio Google',
    com_endpoint_config_google_cloud_platform: '(da Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'Chiave API Google',
    com_endpoint_config_google_gemini_api: '(API Gemini)',
    com_endpoint_config_google_api_info:
      'Per ottenere la tua chiave API Generative Language (per Gemini),',
    com_endpoint_config_key_import_json_key: 'Importa chiave JSON Account di Servizio.',
    com_endpoint_config_key_import_json_key_success:
      'Chiave JSON Account di Servizio importata con successo',
    com_endpoint_config_key_import_json_key_invalid:
      'Chiave JSON Account di Servizio non valida, hai importato il file corretto?',
    com_endpoint_config_key_get_edge_key: 'Per ottenere il tuo token di accesso per Bing, accedi a',
    com_endpoint_config_key_get_edge_key_dev_tool:
      "Usa gli strumenti di sviluppo o un'estensione mentre sei connesso al sito per copiare il contenuto del cookie _U. Se questo fallisce, segui queste",
    com_endpoint_config_key_edge_instructions: 'istruzioni',
    com_endpoint_config_key_edge_full_key_string: 'per fornire le stringhe complete dei cookie.',
    com_endpoint_config_key_chatgpt:
      'Per ottenere il tuo token di accesso per ChatGPT "Versione Gratuita", accedi a',
    com_endpoint_config_key_chatgpt_then_visit: 'poi visita',
    com_endpoint_config_key_chatgpt_copy_token: 'Copia il token di accesso.',
    com_endpoint_config_key_google_need_to: 'Devi',
    com_endpoint_config_key_google_vertex_ai: 'Abilitare Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API su Google Cloud, poi',
    com_endpoint_config_key_google_service_account: 'Creare un Account di Servizio',
    com_endpoint_config_key_google_vertex_api_role:
      'Assicurati di cliccare su "Crea e Continua" per assegnare almeno il ruolo "Utente Vertex AI". Infine, crea una chiave JSON da importare qui.',
    com_nav_welcome_assistant: 'Seleziona un Assistente',
    com_nav_welcome_message: 'Come posso aiutarti oggi?',
    com_nav_auto_scroll: "Scorri automaticamente ai nuovi messaggi all'apertura",
    com_nav_hide_panel: 'Nascondi il Pannello laterale più a destra',
    com_nav_modular_chat: 'Abilita il cambio di Endpoint a metà conversazione',
    com_nav_latex_parsing: 'Analizza LaTeX nei messaggi (potrebbe influire sulle prestazioni)',
    com_nav_profile_picture: 'Immagine profilo',
    com_nav_change_picture: 'Cambia immagine',
    com_nav_plugin_store: 'Store plugin',
    com_nav_plugin_install: 'Installa',
    com_nav_plugin_uninstall: 'Disinstalla',
    com_nav_tool_add: 'Aggiungi',
    com_nav_tool_remove: 'Rimuovi',
    com_nav_tool_dialog: 'Strumenti Assistente',
    com_nav_tool_dialog_description:
      "L'Assistente deve essere salvato per conservare le selezioni degli strumenti.",
    com_show_agent_settings: 'Mostra impostazioni Agente',
    com_show_completion_settings: 'Mostra impostazioni Completamento',
    com_hide_examples: 'Nascondi esempi',
    com_show_examples: 'Mostra esempi',
    com_nav_plugin_search: 'Cerca plugin',
    com_nav_tool_search: 'Cerca strumenti',
    com_nav_plugin_auth_error:
      'Si è verificato un errore durante il tentativo di autenticazione di questo plugin. Riprova.',
    com_nav_export_filename: 'Nome file',
    com_nav_export_filename_placeholder: 'Imposta il nome del file',
    com_nav_export_type: 'Tipo',
    com_nav_export_include_endpoint_options: 'Includi opzioni endpoint',
    com_nav_enabled: 'Abilitato',
    com_nav_not_supported: 'Non supportato',
    com_nav_export_all_message_branches: 'Esporta tutti i rami dei messaggi',
    com_nav_export_recursive_or_sequential: 'Ricorsivo o sequenziale?',
    com_nav_export_recursive: 'Ricorsivo',
    com_nav_export_conversation: 'Esporta conversazione',
    com_nav_export: 'Esporta',
    com_nav_shared_links: 'Link condivisi',
    com_nav_shared_links_manage: 'Gestisci',
    com_nav_shared_links_empty: 'Non hai link condivisi.',
    com_nav_shared_links_name: 'Nome',
    com_nav_shared_links_date_shared: 'Data condivisione',
    com_nav_my_files: 'I miei file',
    com_nav_theme: 'Tema',
    com_nav_theme_system: 'Sistema',
    com_nav_theme_dark: 'Scuro',
    com_nav_theme_light: 'Chiaro',
    com_nav_enter_to_send: 'Premi Invio per inviare messaggi',
    com_nav_user_name_display: 'Mostra nome utente nei messaggi',
    com_nav_save_drafts: 'Salva bozze localmente',
    com_nav_show_code: "Mostra sempre il codice quando si usa l'interprete di codice",
    com_nav_clear_all_chats: 'Cancella tutte le chat',
    com_nav_confirm_clear: 'Conferma cancellazione',
    com_nav_close_sidebar: 'Chiudi barra laterale',
    com_nav_open_sidebar: 'Apri barra laterale',
    com_nav_send_message: 'Invia messaggio',
    com_nav_log_out: 'Disconnetti',
    com_nav_user: 'UTENTE',
    com_nav_archived_chats: 'Chat archiviate',
    com_nav_archived_chats_manage: 'Gestisci',
    com_nav_archived_chats_empty: 'Non hai chat archiviate.',
    com_nav_archive_all_chats: 'Archivia tutte le chat',
    com_nav_archive_all: 'Archivia tutto',
    com_nav_archive_name: 'Nome',
    com_nav_archive_created_at: 'DateCreated',
    com_nav_clear_conversation: 'Cancella conversazioni',
    com_nav_clear_conversation_confirm_message:
      'Sei sicuro di voler cancellare tutte le conversazioni? Questa azione è irreversibile.',
    com_nav_help_faq: 'Guida e FAQ',
    com_nav_settings: 'Impostazioni',
    com_nav_search_placeholder: 'Cerca messaggi',
    com_nav_delete_account: 'Elimina account',
    com_nav_delete_account_confirm: 'Sei sicuro di voler eliminare il tuo account?',
    com_nav_delete_account_button: 'Elimina permanentemente il mio account',
    com_nav_delete_account_email_placeholder: 'Inserisci la tua email',
    com_nav_delete_account_confirm_placeholder:
      'Per procedere, digita "DELETE" nel campo di input sottostante',
    com_dialog_delete_warning: 'ATTENZIONE: Questo cancellerà permanentemente il tuo account.',
    com_dialog_delete_data_info: 'Tutti i tuoi dati verranno eliminati.',
    com_dialog_delete_help_center: 'Per più informazioni, visita il nostro centro assistenza.',
    com_nav_setting_general: 'Generale',
    com_nav_setting_beta: 'Funzioni Beta',
    com_nav_setting_data: 'Controlli dati',
    com_nav_setting_speech: 'Voce',
    com_nav_setting_account: 'Account',
    com_assistants_file_search: 'Ricerca File',
    com_assistants_file_search_info:
      "L'aggiunta di archivi vettoriali per la Ricerca File non è ancora supportata. Puoi aggiungerli dal Provider Playground o allegare file ai messaggi per la ricerca file su base di thread.",
    com_assistants_non_retrieval_model:
      'La ricerca di file non è abilitata su questo modello. Seleziona un altro modello.',
    com_ui_attach_error_openai: "Non è possibile allegare file dell'Assistente ad altri endpoint",
    com_ui_attach_warn_endpoint:
      'Attenzione: i file non compatibili con lo strumento potrebbero essere ignorati',
    com_ui_assistant_deleted: 'Assistente eliminato con successo',
    com_ui_assistant_delete_error:
      "Si è verificato un errore durante l'eliminazione dell'assistente",
    com_ui_copied: 'Copiato!',
    com_ui_copy_code: 'Copia codice',
    com_nav_source_chat: 'Visualizza chat sorgente',
    com_ui_date_today: 'Oggi',
    com_ui_date_yesterday: 'Ieri',
    com_ui_date_previous_7_days: 'Ultimi 7 giorni',
    com_ui_date_previous_30_days: 'Ultimi 30 giorni',
    com_ui_date_january: 'Gennaio',
    com_ui_date_february: 'Febbraio',
    com_ui_date_march: 'Marzo',
    com_ui_date_april: 'Aprile',
    com_ui_date_may: 'Maggio',
    com_ui_date_june: 'Giugno',
    com_ui_date_july: 'Luglio',
    com_ui_date_august: 'Agosto',
    com_ui_date_september: 'Settembre',
    com_ui_date_october: 'Ottobre',
    com_ui_date_november: 'Novembre',
    com_ui_date_december: 'Dicembre',
    com_ui_nothing_found: 'Non è stato trovato nulla',
    com_ui_go_to_conversation: 'Vai alla conversazione',
    com_user_message: 'Mostra nome utente nei messaggi',
    com_ui_fork: 'Duplica',
    com_ui_mention: 'Menziona un endpoint, assistente o preset per passare rapidamente ad esso',
    com_endpoint_context_tokens: 'Token di Contesto Massimi',
    com_endpoint_context_info:
      'Il numero massimo di token che possono essere utilizzati per il contesto. Usalo per controllare quanti token vengono inviati per richiesta. Se non specificato, verranno utilizzate le impostazioni di sistema predefinite in base alle dimensioni del contesto dei modelli noti. Impostare valori più alti potrebbe causare errori e/o costi di token più elevati.',
    com_endpoint_openai_max_tokens:
      'Campo `max_tokens` opzionale, che rappresenta il numero massimo di token che possono essere generati nel completamento della chat.\n\nLa lunghezza totale dei token di input e dei token generati è limitata dalla lunghezza del contesto del modello. Potresti riscontrare errori se questo numero supera il massimo dei token di contesto.',
    com_nav_language: 'Lingua',
    com_nav_lang_auto: 'Rileva automaticamente',
    com_nav_lang_english: 'Inglese',
    com_nav_lang_chinese: 'Cinese',
    com_nav_lang_german: 'Tedesco',
    com_nav_lang_spanish: 'Spagnolo',
    com_nav_lang_french: 'Francese',
    com_nav_lang_italian: 'Italiano',
    com_nav_lang_polish: 'Polacco',
    com_nav_lang_brazilian_portuguese: 'Portoghese brasiliano',
    com_nav_lang_russian: 'Russo',
    com_nav_lang_japanese: 'Giapponese',
    com_nav_lang_swedish: 'Svedese',
    com_nav_lang_korean: 'Coreano',
    com_nav_lang_vietnamese: 'Vietnamita',
    com_nav_lang_traditionalchinese: 'Cinese tradizionale',
    com_nav_lang_arabic: 'Arabo',
    com_nav_lang_turkish: 'Turco',
    com_nav_lang_dutch: 'Olandese',
    com_nav_lang_indonesia: 'Indonesiano',
    com_nav_lang_hebrew: 'ebraico',
  },
  _1 = {
    com_ui_examples: 'Przykłady',
    com_ui_new_chat: 'Nowy czat',
    com_ui_happy_birthday: 'To moje pierwsze urodziny!',
    com_ui_example_quantum_computing: 'Wyjaśnij obliczenia kwantowe w prostych słowach',
    com_ui_example_10_year_old_b_day: 'Masz jakieś kreatywne pomysły na dziesiąte urodziny?',
    com_ui_example_http_in_js: 'Jak wykonać żądanie HTTP w JavaScript?',
    com_ui_capabilities: 'Możliwości',
    com_ui_capability_remember: 'Pamięta to, co użytkownik powiedział wcześniej w rozmowie',
    com_ui_capability_correction: 'Pozwala użytkownikowi wprowadzać poprawki do dalszej rozmowy',
    com_ui_capability_decline_requests: 'Szkolony do odrzucania nieodpowiednich żądań',
    com_ui_limitations: 'Ograniczenia',
    com_ui_limitation_incorrect_info: 'Czasami może podać nieprawidłowe informacje',
    com_ui_limitation_harmful_biased:
      'Czasami może generować szkodliwe instrukcje lub stronniczą treść',
    com_ui_limitation_limited_2021: 'Ograniczona świadomość świata i wydarzeń po roku 2021',
    com_u_input: 'Wejście',
    com_u_close: 'Zamknij',
    com_u_model: 'Model',
    com_ui_select_model: 'Wybierz model',
    com_ui_use_prompt: 'Użyj podpowiedzi',
    com_ui_prev: 'Poprzedni',
    com_ui_next: 'Następny',
    com_ui_prompt_templates: 'Szablony podpowiedzi',
    com_ui_hide_prompt_templates: 'Ukryj szablony podpowiedzi',
    com_ui_showing: 'Pokazuje',
    com_ui_of: 'z',
    com_ui_entries: 'wpisów',
    com_ui_pay_per_call:
      'Wszystkie rozmowy z AI w jednym miejscu. Płatność za połączenie, a nie za miesiąc',
    com_ui_share: 'Udostępnij',
    com_ui_copy_link: 'Skopiuj link',
    com_ui_update_link: 'Zaktualizuj link',
    com_ui_create_link: 'Utwórz link',
    com_ui_share_link_to_chat: 'Udostępnij link w czacie',
    com_ui_share_error: 'Wystąpił błąd podczas udostępniania linku do czatu',
    com_ui_share_create_message:
      'Twoje imię i jakiekolwiek wiadomości dodane po udostępnieniu pozostaną prywatne.',
    com_ui_share_created_message:
      'Utworzono link udostępniony do Twojego czatu. Zarządzaj wcześniej udostępnionymi czatami w dowolnym momencie za pomocą Ustawień.',
    com_ui_share_update_message:
      'Twoje imię, niestandardowe instrukcje i jakiekolwiek wiadomości dodane po udostępnieniu pozostaną prywatne.',
    com_ui_share_updated_message:
      'Link udostępniony do Twojego czatu został zaktualizowany. Zarządzaj wcześniej udostępnionymi czatami w dowolnym momencie za pomocą Ustawień.',
    com_ui_shared_link_not_found: 'Nie znaleziono linku udostępnionego',
    com_ui_rename: 'Zmień nazwę',
    com_ui_archive: 'Archiwum',
    com_ui_archive_error: 'Nie udało się archiwizować rozmowy',
    com_ui_unarchive: 'Przywróć z archiwum',
    com_ui_unarchive_error: 'Nie udało się odtworzyć rozmowy z archiwum',
    com_ui_more_options: 'Więcej',
    com_auth_error_login:
      'Nie udało się zalogować przy użyciu podanych danych. Sprawdź swoje dane logowania i spróbuj ponownie.',
    com_auth_no_account: 'Nie masz konta?',
    com_auth_sign_up: 'Zarejestruj się',
    com_auth_sign_in: 'Zaloguj się',
    com_auth_google_login: 'Zaloguj się przez Google',
    com_auth_facebook_login: 'Zaloguj się przez Facebooka',
    com_auth_github_login: 'Zaloguj się przez Githuba',
    com_auth_discord_login: 'Zaloguj się przez Discorda',
    com_auth_email: 'Email',
    com_auth_email_required: 'Wymagane jest podanie adresu email.',
    com_auth_email_min_length: 'Adres email musi mieć co najmniej 6 znaków.',
    com_auth_email_max_length: 'Adres email nie może być dłuższy niż 120 znaków.',
    com_auth_email_pattern: 'Wprowadź poprawny adres e-mail',
    com_auth_email_address: 'Adres e-mail',
    com_auth_password: 'Hasło',
    com_auth_password_required: 'Wymagane jest podanie hasła',
    com_auth_password_min_length: 'Hasło musi mieć co najmniej 8 znaków',
    com_auth_password_max_length: 'Hasło musi mieć mniej niż 128 znaków',
    com_auth_password_forgot: 'Zapomniałeś hasła?',
    com_auth_password_confirm: 'Potwierdź hasło',
    com_auth_password_not_match: 'Hasła nie są zgodne',
    com_auth_continue: 'Kontynuuj',
    com_auth_create_account: 'Utwórz konto',
    com_auth_error_create: 'Wystąpił błąd podczas tworzenia konta. Spróbuj ponownie.',
    com_auth_full_name: 'Pełne imię',
    com_auth_name_required: 'Imię jest wymagane',
    com_auth_name_min_length: 'Imię musi zawierać co najmniej 3 znaki',
    com_auth_name_max_length: 'Imię nie może zawierać więcej niż 80 znaków',
    com_auth_username: 'Nazwa użytkownika (opcjonalnie)',
    com_auth_username_required: 'Nazwa użytkownika jest wymagana',
    com_auth_username_min_length: 'Nazwa użytkownika musi zawierać co najmniej 2 znaki',
    com_auth_username_max_length: 'Nazwa użytkownika nie może zawierać więcej niż 20 znaków',
    com_auth_already_have_account: 'Masz już konto?',
    com_auth_login: 'Zaloguj się',
    com_auth_reset_password: 'Zresetuj hasło',
    com_auth_click: 'Kliknij',
    com_auth_here: 'TUTAJ',
    com_auth_to_reset_your_password: 'aby zresetować hasło.',
    com_auth_reset_password_link_sent: 'Link do resetowania hasła został wysłany',
    com_auth_reset_password_email_sent:
      'Na podany adres e-mail wysłano wiadomość z instrukcjami dotyczącymi resetowania hasła.',
    com_auth_error_reset_password:
      'Wystąpił problem z resetowaniem hasła. Nie znaleziono użytkownika o podanym adresie e-mail. Spróbuj ponownie.',
    com_auth_reset_password_success: 'Hasło zostało pomyślnie zresetowane',
    com_auth_login_with_new_password: 'Teraz możesz zalogować się, używając nowego hasła.',
    com_auth_error_invalid_reset_token: 'Ten token do resetowania hasła jest już nieważny.',
    com_auth_click_here: 'Kliknij tutaj',
    com_auth_to_try_again: 'aby spróbować ponownie.',
    com_auth_submit_registration: 'Zarejestruj się',
    com_auth_welcome_back: 'Witamy z powrotem',
    com_endpoint_open_menu: 'Otwórz menu',
    com_endpoint_bing_enable_sydney: 'Aktywuj Sydney',
    com_endpoint_bing_to_enable_sydney: 'Aby aktywować Sydney',
    com_endpoint_bing_jailbreak: 'Odblokuj',
    com_endpoint_bing_context_placeholder:
      "Bing może użyć do 7k tokenów dla 'kontekstu', które mogą odnosić się do rozmowy.  Dokładny limit nie jest znany, ale przekroczenie 7 tysięcy tokenów może prowadzić do błędów.",
    com_endpoint_bing_system_message_placeholder:
      "OSTRZEŻENIE: Nadużywanie tej funkcji może skutkować ZAKAZEM korzystania z Bing! Kliknij na 'Wiadomość systemowa' , aby uzyskać pełne instrukcje oraz domyślną wiadomość, jeśli zostanie pominięta, co jest predefiniowaną opcją 'Sydney', uważaną za bezpieczną.",
    com_endpoint_system_message: 'Wiadomość systemowa',
    com_endpoint_default_blank: 'domyślnie: puste',
    com_endpoint_default_false: 'domyślnie: fałsz',
    com_endpoint_default_creative: 'domyślnie: kreatywny',
    com_endpoint_default_empty: 'domyślnie: puste',
    com_endpoint_default_with_num: 'domyślnie: {0}',
    com_endpoint_context: 'Kontekst',
    com_endpoint_tone_style: 'Styl tonu',
    com_endpoint_token_count: 'Liczba tokenów',
    com_endpoint_output: 'Wyjście',
    com_endpoint_google_temp:
      'Wyższe wartości oznaczają większą losowość, natomiast niższe wartości prowadzą do bardziej skoncentrowanych i deterministycznych wyników. Zalecamy dostosowanie tej wartości lub Top P, ale nie obu jednocześnie.',
    com_endpoint_google_topp:
      'Top-p wpływa na sposób, w jaki model wybiera tokeny do wygenerowania odpowiedzi. Tokeny są wybierane od najbardziej prawdopodobnych do najmniej, aż suma ich prawdopodobieństw osiągnie wartość top-p.',
    com_endpoint_google_topk:
      'Top-k wpływa na sposób, w jaki model wybiera tokeny do wygenerowania odpowiedzi. Top-k 1 oznacza, że wybrany token jest najbardziej prawdopodobny spośród wszystkich tokenów w słowniku modelu (nazywane też dekodowaniem zachłannym), podczas gdy top-k 3 oznacza, że następny token jest wybierany spośród 3 najbardziej prawdopodobnych tokenów (z uwzględnieniem temperatury).',
    com_endpoint_google_maxoutputtokens:
      'Maksymalna liczba tokenów, które mogą być wygenerowane w odpowiedzi. Wybierz niższą wartość dla krótszych odpowiedzi i wyższą wartość dla dłuższych odpowiedzi.',
    com_endpoint_google_custom_name_placeholder: 'Ustaw niestandardową nazwę dla Google',
    com_endpoint_google_prompt_prefix_placeholder:
      'Ustaw niestandardowe instrukcje lub kontekst. Jeśli puste, zostanie zignorowane.',
    com_endpoint_custom_name: 'Niestandardowa nazwa',
    com_endpoint_prompt_prefix: 'Prefiks promptu',
    com_endpoint_temperature: 'Temperatura',
    com_endpoint_default: 'domyślnie',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Maksymalna liczba tokenów wyjściowych',
    com_endpoint_openai_temp:
      'Wyższe wartości oznaczają większą losowość, natomiast niższe wartości prowadzą do bardziej skoncentrowanych i deterministycznych wyników. Zalecamy dostosowanie tej wartości lub Top P, ale nie obu jednocześnie.',
    com_endpoint_openai_max:
      'Maksymalna liczba tokenów do wygenerowania. Łączna długość tokenów wejściowych i wygenerowanych tokenów jest ograniczona długością kontekstu modelu.',
    com_endpoint_openai_topp:
      'Alternatywa dla próbkowania z temperaturą, nazywana próbkowaniem jądra, gdzie model rozważa wyniki tokenów z prawdopodobieństwem top_p. Przykładowo, 0,1 oznacza, że tylko tokeny składające się z 10% najwyższego prawdopodobieństwa są rozważane. Zalecamy dostosowanie tej wartości lub temperatury, ale nie obu jednocześnie.',
    com_endpoint_openai_freq:
      'Liczba pomiędzy -2,0 a 2,0. Dodatnie wartości karzą nowe tokeny w oparciu o ich dotychczasową częstotliwość występowania w tekście, co zmniejsza tendencję modelu do powtarzania tej samej linii dosłownie.',
    com_endpoint_openai_pres:
      'Liczba pomiędzy -2,0 a 2,0. Dodatnie wartości karzą nowe tokeny w oparciu o to, czy pojawiły się już w tekście, co zwiększa tendencję modelu do poruszania nowych tematów.',
    com_endpoint_openai_custom_name_placeholder: 'Ustaw własną nazwę dla ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Ustaw własne instrukcje do umieszczenia w systemowej wiadomości. Domyślnie: brak',
    com_endpoint_anthropic_temp:
      'Zakres od 0 do 1. Użyj wartości bliżej 0 dla analizy/wyboru wielokrotnego, a bliżej 1 dla zadań twórczych i generatywnych. Zalecamy dostosowanie tej wartości lub Top P, ale nie obu jednocześnie.',
    com_endpoint_anthropic_topp:
      'Top-P wpływa na sposób wyboru tokenów przez model. Tokeny wybierane są od najbardziej prawdopodobnych do najmniej prawdopodobnych, aż suma ich prawdopodobieństw osiągnie wartość top-P.',
    com_endpoint_anthropic_topk:
      'Top-K wpływa na sposób wyboru tokenów przez model. Top-K równa 1 oznacza, że wybrany token jest najbardziej prawdopodobny spośród wszystkich tokenów w słowniku modelu (tzw. dekodowanie zachłanne), podczas gdy top-K równa 3 oznacza, że następny token zostaje wybrany spośród 3 najbardziej prawdopodobnych tokenów (za pomocą temperatury).',
    com_endpoint_anthropic_maxoutputtokens:
      'Maksymalna liczba tokenów, która może zostać wygenerowana w odpowiedzi. Wybierz mniejszą wartość dla krótszych odpowiedzi i większą wartość dla dłuższych odpowiedzi.',
    com_endpoint_frequency_penalty: 'Kara za częstotliwość',
    com_endpoint_presence_penalty: 'Kara za obecność',
    com_endpoint_plug_use_functions: 'Użyj funkcji',
    com_endpoint_plug_skip_completion: 'Pomiń uzupełnienie',
    com_endpoint_disabled_with_tools: 'wyłączony z narzędziami',
    com_endpoint_disabled_with_tools_placeholder: 'Wyłączony z wybranymi narzędziami',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Ustaw własne instrukcje do umieszczenia w systemowej wiadomości. Domyślnie: brak',
    com_endpoint_set_custom_name: 'Ustaw własną nazwę, w razie potrzeby odszukania tego ustawienia',
    com_endpoint_preset_name: 'Nazwa ustawienia',
    com_endpoint_new_topic: 'Nowy temat',
    com_endpoint: 'Punkt końcowy',
    com_endpoint_hide: 'Ukryj',
    com_endpoint_show: 'Pokaż',
    com_endpoint_examples: 'Przykłady',
    com_endpoint_completion: 'Uzupełnienie',
    com_endpoint_agent: 'Agent',
    com_endpoint_show_what_settings: 'Pokaż ustawienia {0}',
    com_endpoint_save: 'Zapisz',
    com_endpoint_export: 'Eksportuj',
    com_endpoint_save_as_preset: 'Zapisz jako predefiniowane ustawienie',
    com_endpoint_not_implemented: 'Nie zaimplementowano',
    com_endpoint_no_presets: 'Brak zapisanych predefiniowanych ustawień',
    com_endpoint_not_available: 'Punkt końcowy niedostępny',
    com_endpoint_clear_all: 'Usuń wszystko',
    com_endpoint_view_options: 'Pokaż opcje',
    com_endpoint_save_convo_as_preset: 'Zapisz konwersację jako predefiniowane ustawienie',
    com_endpoint_my_preset: 'Moje predefiniowane ustawienie',
    com_endpoint_agent_model: 'Model agenta (zalecany: GPT-3.5)',
    com_endpoint_completion_model: 'Model uzupełnienia (zalecany: GPT-4)',
    com_endpoint_func_hover: 'Aktywuj wtyczki jako funkcje OpenAI',
    com_endpoint_skip_hover:
      'Omijaj etap uzupełnienia sprawdzający ostateczną odpowiedź i generowane kroki',
    com_endpoint_config_token: 'Token konfiguracji',
    com_nav_plugin_store: 'Sklep z wtyczkami',
    com_nav_plugin_search: 'Wyszukiwanie wtyczek',
    com_nav_plugin_auth_error:
      'Wystąpił błąd podczas próby uwierzytelnienia tej wtyczki. Proszę spróbować ponownie.',
    com_nav_export_filename: 'Nazwa pliku',
    com_nav_export_filename_placeholder: 'Podaj nazwę pliku',
    com_nav_export_type: 'Typ',
    com_nav_export_include_endpoint_options: 'Dołącz opcje punktu końcowego',
    com_nav_enabled: 'Włączone',
    com_nav_not_supported: 'Nieobsługiwane',
    com_nav_export_all_message_branches: 'Eksportuj wszystkie gałęzie wiadomości',
    com_nav_export_recursive_or_sequential: 'Rekurencyjny czy sekwencyjny?',
    com_nav_export_recursive: 'Rekurencyjny',
    com_nav_export_conversation: 'Eksportuj konwersację',
    com_nav_shared_links: 'Linki udostępnione',
    com_nav_shared_links_manage: 'Beheren',
    com_nav_shared_links_empty: 'U hebt geen gedeeld links.',
    com_nav_shared_links_name: 'Naam',
    com_nav_shared_links_date_shared: 'Datum gedeeld',
    com_nav_theme: 'Motyw',
    com_nav_theme_system: 'Domyślny',
    com_nav_theme_dark: 'Ciemny',
    com_nav_theme_light: 'Jasny',
    com_nav_clear: 'Wyczyść',
    com_nav_clear_all_chats: 'Usuń wszystkie konwersacje',
    com_nav_confirm_clear: 'Potwierdź usunięcie',
    com_nav_close_sidebar: 'Zamknij pasek boczny',
    com_nav_open_sidebar: 'Otwórz pasek boczny',
    com_nav_send_message: 'Wyślij wiadomość',
    com_nav_log_out: 'Wyloguj',
    com_nav_user: 'Użytkownik',
    com_nav_archived_chats: 'Zarchiwizowane rozmowy',
    com_nav_archived_chats_manage: 'Zarządzaj',
    com_nav_archived_chats_empty: 'Nie masz żadnych zarchiwizowanych rozmów.',
    com_nav_archive_all_chats: 'Archiwizuj wszystkie rozmowy',
    com_nav_archive_all: 'Archiwizuj wszystkie',
    com_nav_archive_name: 'Nazwa',
    com_nav_archive_created_at: 'Utworzono',
    com_nav_clear_conversation: 'Wyczyść rozmowę',
    com_nav_clear_conversation_confirm_message:
      'Czy na pewno chcesz usunąć wszystkie konwersacje? Tej operacji nie można cofnąć.',
    com_nav_help_faq: 'Pomoc i często zadawane pytania',
    com_nav_settings: 'Ustawienia',
    com_nav_search_placeholder: 'Szukaj wiadomości',
    com_nav_setting_general: 'Ogólne',
    com_ui_import_conversation: 'Importuj',
    com_ui_import_conversation_info: 'Importuj konwersacje z pliku JSON',
    com_ui_import_conversation_success: 'Konwersacje zostały pomyślnie zaimportowane',
    com_ui_import_conversation_error: 'Wystąpił błąd podczas importowania konwersacji',
  },
  d1 = {
    com_files_no_results: 'Nenhum resultado.',
    com_files_filter: 'Filtrar arquivos...',
    com_files_number_selected: '{0} de {1} arquivo(s) selecionado(s)',
    com_sidepanel_select_assistant: 'Selecionar um Assistente',
    com_sidepanel_assistant_builder: 'Construtor de Assistente',
    com_sidepanel_hide_panel: 'Ocultar Painel',
    com_sidepanel_attach_files: 'Anexar Arquivos',
    com_sidepanel_manage_files: 'Gerenciar Arquivos',
    com_assistants_capabilities: 'Capacidades',
    com_assistants_knowledge: 'Conhecimento',
    com_assistants_knowledge_info:
      'Se você enviar arquivos de Conhecimento, as conversas com seu Assistente podem incluir o conteúdo dos arquivos.',
    com_assistants_knowledge_disabled:
      'O Assistente deve ser criado, e o Interpretador de Código ou Recuperação devem ser habilitados e salvos antes de enviar arquivos como Conhecimento.',
    com_assistants_image_vision: 'Visão de Imagem',
    com_assistants_code_interpreter: 'Interpretador de Código',
    com_assistants_code_interpreter_files:
      'Os seguintes arquivos estão disponíveis apenas para o Interpretador de Código:',
    com_assistants_retrieval: 'Recuperação',
    com_assistants_search_name: 'Pesquisar assistentes por nome',
    com_assistants_tools: 'Ferramentas',
    com_assistants_actions: 'Ações',
    com_assistants_add_tools: 'Adicionar Ferramentas',
    com_assistants_add_actions: 'Adicionar Ações',
    com_assistants_available_actions: 'Ações Disponíveis',
    com_assistants_running_action: 'Executando ação',
    com_assistants_completed_action: 'Falou com {0}',
    com_assistants_completed_function: 'Executou {0}',
    com_assistants_function_use: 'O Assistente usou {0}',
    com_assistants_domain_info: 'O Assistente enviou esta informação para {0}',
    com_assistants_delete_actions_success: 'Ação excluída do Assistente com sucesso',
    com_assistants_update_actions_success: 'Ação criada ou atualizada com sucesso',
    com_assistants_update_actions_error: 'Ocorreu um erro ao criar ou atualizar a ação.',
    com_assistants_delete_actions_error: 'Ocorreu um erro ao excluir a ação.',
    com_assistants_actions_info:
      'Permita que seu Assistente recupere informações ou execute ações via APIs',
    com_assistants_name_placeholder: 'Opcional: O nome do assistente',
    com_assistants_instructions_placeholder: 'As instruções do sistema que o assistente usa',
    com_assistants_description_placeholder: 'Opcional: Descreva seu Assistente aqui',
    com_assistants_actions_disabled: 'Você precisa criar um assistente antes de adicionar ações.',
    com_assistants_update_success: 'Atualizado com sucesso',
    com_assistants_update_error: 'Ocorreu um erro ao atualizar seu assistente.',
    com_assistants_create_success: 'Criado com sucesso',
    com_assistants_create_error: 'Ocorreu um erro ao criar seu assistente.',
    com_ui_attach_error_type: 'Tipo de arquivo não suportado para endpoint:',
    com_ui_attach_error_size: 'Limite de tamanho de arquivo excedido para endpoint:',
    com_ui_attach_error:
      'Não é possível anexar arquivo. Crie ou selecione uma conversa ou tente atualizar a página.',
    com_ui_examples: 'Exemplos',
    com_ui_new_chat: 'Nova Conversa',
    com_ui_happy_birthday: 'É meu 1º aniversário!',
    com_ui_example_quantum_computing: 'Explique computação quântica em termos simples',
    com_ui_example_10_year_old_b_day: 'Tem alguma ideia criativa para o aniversário de 10 anos?',
    com_ui_example_http_in_js: 'Como faço uma requisição HTTP em Javascript?',
    com_ui_capabilities: 'Capacidades',
    com_ui_capability_remember: 'Lembra o que o usuário disse anteriormente na conversa',
    com_ui_capability_correction: 'Permite que o usuário forneça correções de acompanhamento',
    com_ui_capability_decline_requests: 'Treinado para recusar solicitações inadequadas',
    com_ui_limitations: 'Limitações',
    com_ui_limitation_incorrect_info: 'Pode ocasionalmente gerar informações incorretas',
    com_ui_limitation_harmful_biased:
      'Pode ocasionalmente produzir instruções prejudiciais ou conteúdo enviesado',
    com_ui_limitation_limited_2021: 'Conhecimento limitado do mundo e eventos após 2021',
    com_ui_experimental: 'Recursos Experimentais',
    com_ui_ascending: 'Asc',
    com_ui_descending: 'Desc',
    com_ui_show_all: 'Mostrar Todos',
    com_ui_name: 'Nome',
    com_ui_date: 'Data',
    com_ui_storage: 'Armazenamento',
    com_ui_context: 'Contexto',
    com_ui_size: 'Tamanho',
    com_ui_host: 'Host',
    com_ui_update: 'Atualizar',
    com_ui_authentication: 'Autenticação',
    com_ui_instructions: 'Instruções',
    com_ui_description: 'Descrição',
    com_ui_error: 'Erro',
    com_ui_select: 'Selecionar',
    com_ui_input: 'Entrada',
    com_ui_close: 'Fechar',
    com_ui_model: 'Modelo',
    com_ui_select_model: 'Selecionar um modelo',
    com_ui_select_search_model: 'Pesquisar modelo por nome',
    com_ui_select_search_plugin: 'Pesquisar plugin por nome',
    com_ui_use_prompt: 'Usar prompt',
    com_ui_prev: 'Ant',
    com_ui_next: 'Próx',
    com_ui_stop: 'Parar',
    com_ui_upload_files: 'Carregar arquivos',
    com_ui_prompt_templates: 'Modelos de Prompt',
    com_ui_hide_prompt_templates: 'Ocultar Modelos de Prompt',
    com_ui_showing: 'Mostrando',
    com_ui_of: 'de',
    com_ui_entries: 'Entradas',
    com_ui_pay_per_call: 'Todas as conversas de IA em um só lugar. Pague por chamada e não por mês',
    com_ui_new_footer: 'Todas as conversas de IA em um só lugar.',
    com_ui_enter: 'Entrar',
    com_ui_submit: 'Enviar',
    com_ui_upload_success: 'Arquivo carregado com sucesso',
    com_ui_upload_error: 'Ocorreu um erro ao carregar seu arquivo',
    com_ui_upload_invalid: 'Arquivo inválido para upload. Deve ser uma imagem não excedendo 2 MB',
    com_ui_cancel: 'Cancelar',
    com_ui_save: 'Salvar',
    com_ui_save_submit: 'Salvar & Enviar',
    com_user_message: 'Você',
    com_ui_copy_to_clipboard: 'Copiar para a área de transferência',
    com_ui_copied_to_clipboard: 'Copiado para a área de transferência',
    com_ui_regenerate: 'Regenerar',
    com_ui_continue: 'Continuar',
    com_ui_edit: 'Editar',
    com_ui_success: 'Sucesso',
    com_ui_all: 'todos',
    com_ui_clear: 'Limpar',
    com_ui_revoke: 'Revogar',
    com_ui_revoke_info: 'Revogar todas as credenciais fornecidas pelo usuário',
    com_ui_import_conversation: 'Importar',
    com_ui_import_conversation_info: 'Importe conversas de um arquivo JSON',
    com_ui_import_conversation_success: 'Conversas importadas com sucesso',
    com_ui_import_conversation_error: 'Houve um erro ao importar suas conversas',
    com_ui_confirm_action: 'Confirmar Ação',
    com_ui_chats: 'conversas',
    com_ui_avatar: 'Avatar',
    com_ui_unknown: 'Desconhecido',
    com_ui_result: 'Resultado',
    com_ui_image_gen: 'Geração de Imagem',
    com_ui_assistant: 'Assistente',
    com_ui_assistants: 'Assistentes',
    com_ui_attachment: 'Anexo',
    com_ui_assistants_output: 'Saída dos Assistentes',
    com_ui_delete: 'Excluir',
    com_ui_create: 'Criar',
    com_ui_share: 'Compartilhar',
    com_ui_copy_link: 'Copiar link',
    com_ui_update_link: 'Atualizar link',
    com_ui_create_link: 'Criar link',
    com_ui_share_link_to_chat: 'Compartilhar link no chat',
    com_ui_share_error: 'Ocorreu um erro ao compartilhar o link do chat',
    com_ui_share_create_message:
      'Seu nome e quaisquer mensagens que você adicionar após o compartilhamento permanecem privadas.',
    com_ui_share_created_message:
      'Um link compartilhado para o seu chat foi criado. Gerencie conversas compartilhadas previamente a qualquer momento via Configurações.',
    com_ui_share_update_message:
      'Seu nome, instruções personalizadas e quaisquer mensagens que você adicionar após o compartilhamento permanecem privadas.',
    com_ui_share_updated_message:
      'Um link compartilhado para o seu chat foi atualizado. Gerencie conversas compartilhadas previamente a qualquer momento via Configurações.',
    com_ui_shared_link_not_found: 'Link compartilhado não encontrado',
    com_ui_delete_conversation: 'Excluir conversa?',
    com_ui_delete_conversation_confirm: 'Isso excluirá',
    com_ui_delete_assistant_confirm:
      'Tem certeza de que deseja excluir este Assistente? Esta ação não pode ser desfeita.',
    com_ui_rename: 'Renomear',
    com_ui_archive: 'Arquivar',
    com_ui_archive_error: 'Ocorreu um erro ao arquivar a conversa.',
    com_ui_unarchive: 'Desarquivar',
    com_ui_unarchive_error: 'Ocorreu um erro ao desarquivar a conversa.',
    com_ui_more_options: 'Mais',
    com_ui_preview: 'Visualizar',
    com_ui_upload: 'Carregar',
    com_ui_connect: 'Conectar',
    com_ui_upload_delay:
      'O envio de "{0}" está levando mais tempo do que o esperado. Aguarde enquanto o arquivo é indexado para recuperação.',
    com_ui_privacy_policy: 'Política de privacidade',
    com_ui_terms_of_service: 'Termos de serviço',
    com_auth_error_login:
      'Não foi possível fazer login com as informações fornecidas. Por favor, verifique suas credenciais e tente novamente.',
    com_auth_error_login_rl:
      'Muitas tentativas de login em um curto período de tempo. Por favor, tente novamente mais tarde.',
    com_auth_error_login_ban:
      'Sua conta foi temporariamente banida devido a violações de nosso serviço.',
    com_auth_error_login_server:
      'Ocorreu um erro interno do servidor. Aguarde alguns instantes e tente novamente.',
    com_auth_no_account: 'Não tem uma conta?',
    com_auth_sign_up: 'Inscrever-se',
    com_auth_sign_in: 'Entrar',
    com_auth_google_login: 'Continuar com o Google',
    com_auth_facebook_login: 'Continuar com o Facebook',
    com_auth_github_login: 'Continuar com o Github',
    com_auth_discord_login: 'Continuar com o Discord',
    com_auth_email: 'Email',
    com_auth_email_required: 'O email é obrigatório',
    com_auth_email_min_length: 'O email deve ter pelo menos 6 caracteres',
    com_auth_email_max_length: 'O email não deve ter mais de 120 caracteres',
    com_auth_email_pattern: 'Você deve inserir um endereço de email válido',
    com_auth_email_address: 'Endereço de email',
    com_auth_password: 'Senha',
    com_auth_password_required: 'A senha é obrigatória',
    com_auth_password_min_length: 'A senha deve ter pelo menos 8 caracteres',
    com_auth_password_max_length: 'A senha deve ter menos de 128 caracteres',
    com_auth_password_forgot: 'Esqueceu a Senha?',
    com_auth_password_confirm: 'Confirmar senha',
    com_auth_password_not_match: 'As senhas não correspondem',
    com_auth_continue: 'Continuar',
    com_auth_create_account: 'Crie sua conta',
    com_auth_error_create:
      'Ocorreu um erro ao tentar registrar sua conta. Por favor, tente novamente.',
    com_auth_full_name: 'Nome completo',
    com_auth_name_required: 'O nome é obrigatório',
    com_auth_name_min_length: 'O nome deve ter pelo menos 3 caracteres',
    com_auth_name_max_length: 'O nome deve ter menos de 80 caracteres',
    com_auth_username: 'Nome de usuário (opcional)',
    com_auth_username_required: 'O nome de usuário é obrigatório',
    com_auth_username_min_length: 'O nome de usuário deve ter pelo menos 2 caracteres',
    com_auth_username_max_length: 'O nome de usuário deve ter menos de 20 caracteres',
    com_auth_already_have_account: 'Já tem uma conta?',
    com_auth_login: 'Entrar',
    com_auth_reset_password: 'Redefinir sua senha',
    com_auth_click: 'Clique',
    com_auth_here: 'AQUI',
    com_auth_to_reset_your_password: 'para redefinir sua senha.',
    com_auth_reset_password_link_sent: 'Email Enviado',
    com_auth_reset_password_email_sent:
      'Um email foi enviado para você com mais instruções para redefinir sua senha.',
    com_auth_error_reset_password:
      'Houve um problema ao redefinir sua senha. Não foi encontrado nenhum usuário com o endereço de email fornecido. Por favor, tente novamente.',
    com_auth_reset_password_success: 'Redefinição de Senha Bem-sucedida',
    com_auth_login_with_new_password: 'Você pode agora fazer login com sua nova senha.',
    com_auth_error_invalid_reset_token: 'Este token de redefinição de senha não é mais válido.',
    com_auth_click_here: 'Clique aqui',
    com_auth_to_try_again: 'para tentar novamente.',
    com_auth_submit_registration: 'Enviar registro',
    com_auth_welcome_back: 'Bem-vindo de volta',
    com_auth_back_to_login: 'Voltar para Login',
    com_endpoint_open_menu: 'Abrir Menu',
    com_endpoint_bing_enable_sydney: 'Habilitar Sydney',
    com_endpoint_bing_to_enable_sydney: 'Para habilitar Sydney',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      "O Bing pode usar até 7k tokens para 'contexto', que ele pode referenciar para a conversa. O limite específico não é conhecido, mas pode causar erros ao exceder 7k tokens",
    com_endpoint_bing_system_message_placeholder:
      "AVISO: O uso indevido deste recurso pode fazer com que você seja BANIDO de usar o Bing! Clique em 'Mensagem do Sistem' para obter instruções completas e a mensagem padrão, caso omitida, que é a predefinição 'Sydney', considerada segura.",
    com_endpoint_system_message: 'Mensagem do Sistema',
    com_endpoint_message: 'Conversar com',
    com_endpoint_message_not_appendable: 'Edite sua mensagem ou Regenere.',
    com_endpoint_default_blank: 'padrão: em branco',
    com_endpoint_default_false: 'padrão: falso',
    com_endpoint_default_creative: 'padrão: criativo',
    com_endpoint_default_empty: 'padrão: vazio',
    com_endpoint_default_with_num: 'padrão: {0}',
    com_endpoint_context: 'Contexto',
    com_endpoint_tone_style: 'Estilo de Tom',
    com_endpoint_token_count: 'Contagem de Tokens',
    com_endpoint_output: 'Saída',
    com_endpoint_google_temp:
      'Valores mais altos = mais aleatório, enquanto valores mais baixos = mais focado e determinístico. Recomendamos alterar este ou o Top P, mas não ambos.',
    com_endpoint_google_topp:
      'O Top-p altera a forma como o modelo seleciona tokens para a saída. Os tokens são selecionados do mais provável K (veja o parâmetro topK) para o menos provável até que a soma de suas probabilidades seja igual ao valor top-p.',
    com_endpoint_google_topk:
      'O Top-k altera a forma como o modelo seleciona tokens para a saída. Um top-k de 1 significa que o token selecionado é o mais provável entre todos os tokens no vocabulário do modelo (também chamado de decodificação gulosa), enquanto um top-k de 3 significa que o próximo token é selecionado entre os 3 tokens mais prováveis (usando temperatura).',
    com_endpoint_google_maxoutputtokens:
      'Número máximo de tokens que podem ser gerados na resposta. Especifique um valor menor para respostas mais curtas e um valor maior para respostas mais longas.',
    com_endpoint_google_custom_name_placeholder: 'Defina um nome personalizado para o Google',
    com_endpoint_prompt_prefix_placeholder:
      'Defina instruções ou contexto personalizados. Ignorado se vazio.',
    com_endpoint_instructions_assistants_placeholder:
      'Substitui as instruções do assistente. Isso é útil para modificar o comportamento em uma base por execução.',
    com_endpoint_prompt_prefix_assistants_placeholder:
      'Defina instruções ou contexto adicionais além das instruções principais do Assistente. Ignorado se vazio.',
    com_endpoint_custom_name: 'Nome Personalizado',
    com_endpoint_prompt_prefix: 'Instruções Personalizadas',
    com_endpoint_prompt_prefix_assistants: 'Instruções Adicionais',
    com_endpoint_instructions_assistants: 'Substituir Instruções',
    com_endpoint_temperature: 'Temperatura',
    com_endpoint_default: 'padrão',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Máx. Tokens de Saída',
    com_endpoint_openai_temp:
      'Valores mais altos = mais aleatório, enquanto valores mais baixos = mais focado e determinístico. Recomendamos alterar este ou o Top P, mas não ambos.',
    com_endpoint_openai_max:
      'O máximo de tokens a gerar. O comprimento total de tokens de entrada e tokens gerados é limitado pelo comprimento do contexto do modelo.',
    com_endpoint_openai_topp:
      'Uma alternativa à amostragem com temperatura, chamada amostragem de núcleo, onde o modelo considera os resultados dos tokens com massa de probabilidade top_p. Então, 0,1 significa que apenas os tokens que compõem os 10% superiores da massa de probabilidade são considerados. Recomendamos alterar este ou a temperatura, mas não ambos.',
    com_endpoint_openai_freq:
      'Número entre -2,0 e 2,0. Valores positivos penalizam novos tokens com base em sua frequência existente no texto até agora, diminuindo a probabilidade do modelo repetir a mesma linha literalmente.',
    com_endpoint_openai_pres:
      'Número entre -2,0 e 2,0. Valores positivos penalizam novos tokens com base em sua aparição no texto até o momento, aumentando a probabilidade do modelo falar sobre novos tópicos.',
    com_endpoint_openai_resend:
      'Reenviar todas as imagens anexadas anteriormente. Nota: isso pode aumentar significativamente o custo de tokens e você pode encontrar erros com muitos anexos de imagem.',
    com_endpoint_openai_resend_files:
      'Reenviar todos os arquivos anexados anteriormente. Nota: isso aumentará o custo de tokens e você pode encontrar erros com muitos anexos.',
    com_endpoint_openai_detail:
      'A resolução para solicitações de Visão. "Baixa" é mais barata e rápida, "Alta" é mais detalhada e cara, e "Automática" escolherá automaticamente entre as duas com base na resolução da imagem.',
    com_endpoint_openai_custom_name_placeholder: 'Defina um nome personalizado para o ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Defina instruções personalizadas para incluir na Mensagem do Sistema. Padrão: nenhuma',
    com_endpoint_anthropic_temp:
      'Varia de 0 a 1. Use temp mais próximo de 0 para tarefas analíticas/múltipla escolha e mais próximo de 1 para tarefas criativas e generativas. Recomendamos alterar este ou o Top P, mas não ambos.',
    com_endpoint_anthropic_topp:
      'O Top-p altera a forma como o modelo seleciona tokens para a saída. Os tokens são selecionados do mais provável K (veja o parâmetro topK) para o menos provável até que a soma de suas probabilidades seja igual ao valor top-p.',
    com_endpoint_anthropic_topk:
      'O Top-k altera a forma como o modelo seleciona tokens para a saída. Um top-k de 1 significa que o token selecionado é o mais provável entre todos os tokens no vocabulário do modelo (também chamado de decodificação gulosa), enquanto um top-k de 3 significa que o próximo token é selecionado entre os 3 tokens mais prováveis (usando temperatura).',
    com_endpoint_anthropic_maxoutputtokens:
      'Número máximo de tokens que podem ser gerados na resposta. Especifique um valor menor para respostas mais curtas e um valor maior para respostas mais longas.',
    com_endpoint_anthropic_custom_name_placeholder: 'Defina um nome personalizado para Anthropic',
    com_endpoint_frequency_penalty: 'Penalidade de Frequência',
    com_endpoint_presence_penalty: 'Penalidade de Presença',
    com_endpoint_plug_use_functions: 'Usar Funções',
    com_endpoint_plug_resend_files: 'Reenviar Arquivos',
    com_endpoint_plug_resend_images: 'Reenviar Imagens',
    com_endpoint_plug_image_detail: 'Detalhe da Imagem',
    com_endpoint_plug_skip_completion: 'Ignorar Conclusão',
    com_endpoint_disabled_with_tools: 'desabilitado com ferramentas',
    com_endpoint_disabled_with_tools_placeholder: 'Desabilitado com Ferramentas Selecionadas',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Defina instruções personalizadas para incluir na Mensagem do Sistema. Padrão: nenhuma',
    com_endpoint_import: 'Importar',
    com_endpoint_set_custom_name:
      'Defina um nome personalizado, caso você encontre esta predefinição',
    com_endpoint_preset_delete_confirm: 'Tem certeza de que deseja excluir esta predefinição?',
    com_endpoint_preset_clear_all_confirm:
      'Tem certeza de que deseja excluir todas as suas predefinições?',
    com_endpoint_preset_import: 'Predefinição Importada!',
    com_endpoint_preset_import_error:
      'Ocorreu um erro ao importar sua predefinição. Por favor, tente novamente.',
    com_endpoint_preset_save_error:
      'Ocorreu um erro ao salvar sua predefinição. Por favor, tente novamente.',
    com_endpoint_preset_delete_error:
      'Ocorreu um erro ao excluir sua predefinição. Por favor, tente novamente.',
    com_endpoint_preset_default_removed: 'não é mais a predefinição padrão.',
    com_endpoint_preset_default_item: 'Padrão:',
    com_endpoint_preset_default_none: 'Nenhuma predefinição padrão ativa.',
    com_endpoint_preset_title: 'Predefinição',
    com_endpoint_preset_saved: 'Salvo!',
    com_endpoint_preset_default: 'é agora a predefinição padrão.',
    com_endpoint_preset: 'predefinição',
    com_endpoint_presets: 'predefinições',
    com_endpoint_preset_selected: 'Predefinição Ativa!',
    com_endpoint_preset_selected_title: 'Ativa!',
    com_endpoint_preset_name: 'Nome da Predefinição',
    com_endpoint_new_topic: 'Novo Tópico',
    com_endpoint: 'Endpoint',
    com_endpoint_hide: 'Ocultar',
    com_endpoint_show: 'Mostrar',
    com_endpoint_examples: ' Predefinições',
    com_endpoint_completion: 'Conclusão',
    com_endpoint_agent: 'Agente',
    com_endpoint_show_what_settings: 'Mostrar Configurações de {0}',
    com_endpoint_export: 'Exportar',
    com_endpoint_assistant: 'Assistente',
    com_endpoint_use_active_assistant: 'Usar Assistente Ativo',
    com_endpoint_assistant_model: 'Modelo de Assistente',
    com_endpoint_save_as_preset: 'Salvar como Predefinição',
    com_endpoint_presets_clear_warning:
      'Tem certeza de que deseja limpar todas as predefinições? Isso é irreversível.',
    com_endpoint_not_implemented: 'Não implementado',
    com_endpoint_no_presets:
      'Nenhuma predefinição ainda, use o botão de configurações para criar uma',
    com_endpoint_not_available: 'Nenhum endpoint disponível',
    com_endpoint_view_options: 'Opções de Visualização',
    com_endpoint_save_convo_as_preset: 'Salvar Conversa como Predefinição',
    com_endpoint_my_preset: 'Minha Predefinição',
    com_endpoint_agent_model: 'Modelo de Agente (Recomendado: GPT-3.5)',
    com_endpoint_completion_model: 'Modelo de Conclusão (Recomendado: GPT-4)',
    com_endpoint_func_hover: 'Habilitar o uso de Plugins como Funções OpenAI',
    com_endpoint_skip_hover:
      'Habilitar a ignorância da etapa de conclusão, que revisa a resposta final e as etapas geradas',
    com_endpoint_config_key: 'Definir Chave API',
    com_endpoint_assistant_placeholder:
      'Por favor, selecione um Assistente no Painel Lateral Direito',
    com_endpoint_config_placeholder: 'Defina sua Chave no menu Cabeçalho para conversar.',
    com_endpoint_config_key_for: 'Definir Chave API para',
    com_endpoint_config_key_name: 'Chave',
    com_endpoint_config_value: 'Digite o valor para',
    com_endpoint_config_key_name_placeholder: 'Defina a chave API primeiro',
    com_endpoint_config_key_encryption: 'Sua chave será criptografada e excluída em',
    com_endpoint_config_key_expiry: 'o tempo de expiração',
    com_endpoint_config_click_here: 'Clique Aqui',
    com_endpoint_config_google_service_key: 'Chave de Conta de Serviço do Google',
    com_endpoint_config_google_cloud_platform: '(da Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'Chave API do Google',
    com_endpoint_config_google_gemini_api: '(API Gemini)',
    com_endpoint_config_google_api_info:
      'Para obter sua chave da API de Linguagem Generativa (para Gemini),',
    com_endpoint_config_key_import_json_key: 'Importar Chave JSON da Conta de Serviço.',
    com_endpoint_config_key_import_json_key_success:
      'Chave JSON da Conta de Serviço Importada com Sucesso',
    com_endpoint_config_key_import_json_key_invalid:
      'Chave JSON da Conta de Serviço Inválida, Você importou o arquivo correto?',
    com_endpoint_config_key_get_edge_key:
      'Para obter seu Token de Acesso para o Bing, faça login em',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Use as ferramentas de desenvolvimento ou uma extensão enquanto estiver logado no site para copiar o conteúdo do cookie _U. Se isso falhar, siga estas',
    com_endpoint_config_key_edge_instructions: 'instruções',
    com_endpoint_config_key_edge_full_key_string: 'para fornecer as strings completas de cookies.',
    com_endpoint_config_key_chatgpt:
      "Para obter seu Token de Acesso para o ChatGPT 'Versão Gratuita', faça login em",
    com_endpoint_config_key_chatgpt_then_visit: 'então visite',
    com_endpoint_config_key_chatgpt_copy_token: 'Copiar token de acesso.',
    com_endpoint_config_key_google_need_to: 'Você precisa',
    com_endpoint_config_key_google_vertex_ai: 'Habilitar o Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API no Google Cloud, então',
    com_endpoint_config_key_google_service_account: 'Criar uma Conta de Serviço',
    com_endpoint_config_key_google_vertex_api_role:
      "Certifique-se de clicar em 'Criar e Continuar' para dar pelo menos a função 'Usuário do Vertex AI'. Por último, crie uma chave JSON para importar aqui.",
    com_nav_welcome_assistant: 'Por favor, Selecione um Assistente',
    com_nav_welcome_message: 'Como posso ajudar você hoje?',
    com_nav_auto_scroll: 'Auto-rolagem para o mais recente ao abrir',
    com_nav_hide_panel: 'Ocultar painel mais à direita',
    com_nav_enter_to_send: 'Enviar Mensagem com a Tecla Enter',
    com_nav_modular_chat: 'Habilitar troca de Endpoints durante a conversa',
    com_nav_latex_parsing: 'Analisando LaTeX nas mensagens (pode afetar o desempenho)',
    com_nav_profile_picture: 'Foto de perfil',
    com_nav_change_picture: 'Alterar foto',
    com_nav_plugin_store: 'Loja de plugins',
    com_nav_plugin_install: 'Instalar',
    com_nav_plugin_uninstall: 'Desinstalar',
    com_nav_tool_add: 'Adicionar',
    com_nav_tool_remove: 'Remover',
    com_nav_tool_dialog: 'Ferramentas do Assistente',
    com_nav_tool_dialog_description:
      'O Assistente deve ser salvo para persistir nas seleções de ferramentas.',
    com_show_agent_settings: 'Mostrar configurações do agente',
    com_show_completion_settings: 'Mostrar configurações de conclusão',
    com_hide_examples: 'Ocultar exemplos',
    com_show_examples: 'Mostrar exemplos',
    com_nav_plugin_search: 'Pesquisar plugins',
    com_nav_tool_search: 'Pesquisar ferramentas',
    com_nav_plugin_auth_error:
      'Houve um erro ao tentar autenticar este plugin. Por favor, tente novamente.',
    com_nav_export_filename: 'Nome do arquivo',
    com_nav_export_filename_placeholder: 'Definir o nome do arquivo',
    com_nav_export_type: 'Tipo',
    com_nav_export_include_endpoint_options: 'Incluir opções de endpoint',
    com_nav_enabled: 'Habilitado',
    com_nav_not_supported: 'Não Suportado',
    com_nav_export_all_message_branches: 'Exportar todos os ramos de mensagens',
    com_nav_export_recursive_or_sequential: 'Recursivo ou sequencial?',
    com_nav_export_recursive: 'Recursivo',
    com_nav_export_conversation: 'Exportar conversa',
    com_nav_export: 'Exportar',
    com_nav_shared_links: 'Links Compartilhados',
    com_nav_shared_links_manage: 'Gerenciar',
    com_nav_shared_links_empty: 'Você não tem nenhum link compartilhado.',
    com_nav_shared_links_name: 'Nome',
    com_nav_shared_links_date_shared: 'Data compartilhada',
    com_nav_my_files: 'Meus arquivos',
    com_nav_theme: 'Tema',
    com_nav_theme_system: 'Sistema',
    com_nav_theme_dark: 'Escuro',
    com_nav_theme_light: 'Claro',
    com_nav_user_name_display: 'Exibir nome de usuário nas mensagens',
    com_nav_save_drafts: 'Salvar rascunhos localmente',
    com_nav_show_code: 'Sempre mostrar código ao usar o interpretador de código',
    com_nav_clear_all_chats: 'Limpar todas as conversas',
    com_nav_confirm_clear: 'Confirmar Limpeza',
    com_nav_close_sidebar: 'Fechar barra lateral',
    com_nav_open_sidebar: 'Abrir barra lateral',
    com_nav_send_message: 'Enviar mensagem',
    com_nav_log_out: 'Sair',
    com_nav_user: 'USUÁRIO',
    com_nav_archived_chats: 'Conversas Arquivadas',
    com_nav_archived_chats_manage: 'Gerenciar',
    com_nav_archived_chats_empty: 'Você não tem nenhuma conversa arquivada.',
    com_nav_archive_all_chats: 'Arquivar todas as conversas',
    com_nav_archive_all: 'Arquivar todas',
    com_nav_archive_name: 'Nome',
    com_nav_archive_created_at: 'CriadoEm',
    com_nav_clear_conversation: 'Limpar conversas',
    com_nav_clear_conversation_confirm_message:
      'Tem certeza de que deseja limpar todas as conversas? Isso é irreversível.',
    com_nav_help_faq: 'Ajuda & FAQ',
    com_nav_settings: 'Configurações',
    com_nav_search_placeholder: 'Pesquisar mensagens',
    com_nav_setting_general: 'Geral',
    com_nav_setting_beta: 'Recursos beta',
    com_nav_setting_data: 'Controles de dados',
    com_nav_setting_account: 'Conta',
    com_nav_language: 'Idioma',
    com_nav_lang_auto: 'Detecção automática',
    com_nav_lang_brazilian_portuguese: 'Português Brasileiro',
  },
  m1 = {
    com_files_no_results: 'Sin resultados.',
    com_files_filter: 'Filtrar archivos...',
    com_files_number_selected: '{0} de {1} archivo(s) seleccionado(s)',
    com_sidepanel_select_assistant: 'Seleccionar un Asistente',
    com_sidepanel_assistant_builder: 'Creador de Asistentes',
    com_sidepanel_hide_panel: 'Ocultar Panel',
    com_sidepanel_attach_files: 'Adjuntar Archivos',
    com_sidepanel_manage_files: 'Administrar Archivos',
    com_assistants_capabilities: 'Capacidades',
    com_assistants_knowledge: 'Conocimiento',
    com_assistants_knowledge_info:
      'Si sube archivos en Conocimiento, las conversaciones con su Asistente pueden incluir el contenido de los archivos.',
    com_assistants_knowledge_disabled:
      'El Asistente debe ser creado, y el Intérprete de Código o la Recuperación deben estar habilitados y guardados antes de subir archivos como Conocimiento.',
    com_assistants_image_vision: 'Visión de Imagen',
    com_assistants_code_interpreter: 'Intérprete de Código',
    com_assistants_code_interpreter_files:
      'Los siguientes archivos solo están disponibles para el Intérprete de Código:',
    com_assistants_retrieval: 'Recuperación',
    com_assistants_search_name: 'Buscar asistentes por nombre',
    com_assistants_tools: 'Herramientas',
    com_assistants_actions: 'Acciones',
    com_assistants_add_tools: 'Añadir Herramientas',
    com_assistants_add_actions: 'Añadir Acciones',
    com_assistants_available_actions: 'Acciones Disponibles',
    com_assistants_running_action: 'Ejecutando acción',
    com_assistants_completed_action: 'Hablé con {0}',
    com_assistants_completed_function: 'Ejecuté {0}',
    com_assistants_function_use: 'El Asistente usó {0}',
    com_assistants_domain_info: 'El Asistente envió esta información a {0}',
    com_assistants_delete_actions_success: 'Acción eliminada del Asistente con éxito',
    com_assistants_update_actions_success: 'Acción creada o actualizada con éxito',
    com_assistants_update_actions_error: 'Hubo un error al crear o actualizar la acción.',
    com_assistants_delete_actions_error: 'Hubo un error al eliminar la acción.',
    com_assistants_actions_info:
      "Permita que su Asistente recupere información o realice acciones a través de API's",
    com_assistants_name_placeholder: 'Opcional: El nombre del asistente',
    com_assistants_instructions_placeholder:
      'Las instrucciones del sistema que utiliza el asistente',
    com_assistants_description_placeholder: 'Opcional: Describa su Asistente aquí',
    com_assistants_actions_disabled: 'Necesita crear un asistente antes de añadir acciones.',
    com_assistants_update_success: 'Actualizado con éxito',
    com_assistants_update_error: 'Hubo un error al actualizar su asistente.',
    com_assistants_create_success: 'Creado con éxito',
    com_assistants_create_error: 'Hubo un error al crear su asistente.',
    com_ui_attach_error_type: 'Tipo de archivo no admitido para el endpoint:',
    com_ui_attach_error_size: 'Se excedió el límite de tamaño de archivo para el endpoint:',
    com_ui_attach_error:
      'No se puede adjuntar el archivo. Cree o seleccione una conversación, o intente actualizar la página.',
    com_ui_examples: 'Ejemplos',
    com_ui_new_chat: 'Nuevo Chat',
    com_ui_happy_birthday: '¡Es mi primer cumpleaños!',
    com_ui_example_quantum_computing: 'Explique la computación cuántica en términos sencillos',
    com_ui_example_10_year_old_b_day:
      '¿Tiene alguna idea creativa para el cumpleaños de un niño de 10 años?',
    com_ui_example_http_in_js: '¿Cómo hago una solicitud HTTP en Javascript?',
    com_ui_capabilities: 'Capacidades',
    com_ui_capability_remember: 'Recuerda lo que el usuario dijo anteriormente en la conversación',
    com_ui_capability_correction: 'Permite que el usuario proporcione correcciones de seguimiento',
    com_ui_capability_decline_requests: 'Entrenado para rechazar solicitudes inapropiadas',
    com_ui_limitations: 'Limitaciones',
    com_ui_limitation_incorrect_info: 'Ocasionalmente puede generar información incorrecta',
    com_ui_limitation_harmful_biased:
      'Ocasionalmente puede producir instrucciones dañinas o contenido sesgado',
    com_ui_limitation_limited_2021: 'Conocimiento limitado del mundo y eventos posteriores a 2021',
    com_ui_experimental: 'Funciones Experimentales',
    com_ui_ascending: 'Asc',
    com_ui_descending: 'Desc',
    com_ui_show_all: 'Mostrar Todo',
    com_ui_name: 'Nombre',
    com_ui_date: 'Fecha',
    com_ui_storage: 'Almacenamiento',
    com_ui_context: 'Contexto',
    com_ui_size: 'Tamaño',
    com_ui_host: 'Host',
    com_ui_update: 'Actualizar',
    com_ui_authentication: 'Autenticación',
    com_ui_instructions: 'Instrucciones',
    com_ui_description: 'Descripción',
    com_ui_error: 'Error',
    com_ui_select: 'Seleccionar',
    com_ui_input: 'Entrada',
    com_ui_close: 'Cerrar',
    com_ui_model: 'Modelo',
    com_ui_select_model: 'Seleccionar un modelo',
    com_ui_select_search_model: 'Buscar modelo por nombre',
    com_ui_select_search_plugin: 'Buscar plugin por nombre',
    com_ui_use_prompt: 'Usar prompt',
    com_ui_prev: 'Ant',
    com_ui_next: 'Sig',
    com_ui_stop: 'Detener',
    com_ui_upload_files: 'Subir archivos',
    com_ui_prompt_templates: 'Plantillas de Prompt',
    com_ui_hide_prompt_templates: 'Ocultar Plantillas de Prompt',
    com_ui_showing: 'Mostrando',
    com_ui_of: 'de',
    com_ui_entries: 'Entradas',
    com_ui_pay_per_call:
      'Todas las conversaciones de IA en un mismo lugar. Pague por llamada y no por mes',
    com_ui_new_footer: 'Todas las conversaciones de IA en un mismo lugar.',
    com_ui_enter: 'Intro',
    com_ui_submit: 'Enviar',
    com_ui_upload_success: 'Archivo subido con éxito',
    com_ui_upload_error: 'Hubo un error al subir su archivo',
    com_ui_upload_invalid:
      'Archivo inválido para subir. Debe ser una imagen que no exceda los 2 MB',
    com_ui_cancel: 'Cancelar',
    com_ui_save: 'Guardar',
    com_ui_save_submit: 'Guardar y Enviar',
    com_user_message: 'Usted',
    com_ui_copy_to_clipboard: 'Copiar al portapapeles',
    com_ui_copied_to_clipboard: 'Copiado al portapapeles',
    com_ui_regenerate: 'Regenerar',
    com_ui_continue: 'Continuar',
    com_ui_edit: 'Editar',
    com_ui_success: 'Éxito',
    com_ui_all: 'todas',
    com_ui_clear: 'Limpiar',
    com_ui_revoke: 'Revocar',
    com_ui_revoke_info: 'Revocar todas las credenciales proporcionadas por el usuario',
    com_ui_import_conversation: 'Importar',
    com_ui_import_conversation_info: 'Importar chats de un archivo JSON',
    com_ui_import_conversation_success: 'Chats importados exitosamente',
    com_ui_import_conversation_error: 'Hubo un error al importar tus chats',
    com_ui_confirm_action: 'Confirmar Acción',
    com_ui_chats: 'conversaciones',
    com_ui_avatar: 'Avatar',
    com_ui_unknown: 'Desconocido',
    com_ui_result: 'Resultado',
    com_ui_image_gen: 'Gen Imágenes',
    com_ui_assistant: 'Asistente',
    com_ui_assistants: 'Asistentes',
    com_ui_attachment: 'Adjunto',
    com_ui_assistants_output: 'Salida de Asistentes',
    com_ui_delete: 'Eliminar',
    com_ui_create: 'Crear',
    com_ui_share: 'Compartir',
    com_ui_copy_link: 'Copiar enlace',
    com_ui_update_link: 'Actualizar enlace',
    com_ui_create_link: 'Crear enlace',
    com_ui_share_link_to_chat: 'Compartir enlace en el chat',
    com_ui_share_error: 'Hubo un error al compartir el enlace del chat',
    com_ui_share_create_message:
      'Tu nombre y cualquier mensaje que agregues después de compartir se mantendrán privados.',
    com_ui_share_created_message:
      'Se ha creado un enlace compartido para tu chat. Gestiona los chats compartidos anteriormente en cualquier momento a través de Configuración.',
    com_ui_share_update_message:
      'Tu nombre, instrucciones personalizadas y cualquier mensaje que agregues después de compartir se mantendrán privados.',
    com_ui_share_updated_message:
      'Se ha actualizado un enlace compartido para tu chat. Gestiona los chats compartidos anteriormente en cualquier momento a través de Configuración.',
    com_ui_shared_link_not_found: 'Enlace compartido no encontrado',
    com_ui_delete_conversation: '¿Eliminar Chat?',
    com_ui_delete_conversation_confirm: 'Esto eliminará',
    com_ui_delete_assistant_confirm:
      '¿Está seguro de que desea eliminar este Asistente? Esta acción no se puede deshacer.',
    com_ui_rename: 'Renombrar',
    com_ui_archive: 'Archivar',
    com_ui_archive_error: 'Error al archivar la conversación',
    com_ui_unarchive: 'Desarchivar',
    com_ui_unarchive_error: 'Error al desarchivar la conversación',
    com_ui_more_options: 'Más',
    com_ui_preview: 'Previsualizar',
    com_ui_upload: 'Subir',
    com_ui_connect: 'Conectar',
    com_ui_upload_delay:
      'La carga de "{0}" está tomando más tiempo del esperado. Espere mientras el archivo termina de indexarse para su recuperación.',
    com_ui_privacy_policy: 'Política de privacidad',
    com_ui_terms_of_service: 'Términos de servicio',
    com_auth_error_login:
      'No se puede iniciar sesión con la información proporcionada. Verifique sus credenciales y vuelva a intentarlo.',
    com_auth_error_login_rl:
      'Demasiados intentos de inicio de sesión en un corto período de tiempo. Inténtelo de nuevo más tarde.',
    com_auth_error_login_ban:
      'Su cuenta ha sido bloqueada temporalmente debido a violaciones de nuestro servicio.',
    com_auth_error_login_server:
      'Hubo un error interno del servidor. Espere unos momentos y vuelva a intentarlo.',
    com_auth_no_account: '¿No tiene una cuenta?',
    com_auth_sign_up: 'Regístrese',
    com_auth_sign_in: 'Iniciar sesión',
    com_auth_google_login: 'Continuar con Google',
    com_auth_facebook_login: 'Continuar con Facebook',
    com_auth_github_login: 'Continuar con Github',
    com_auth_discord_login: 'Continuar con Discord',
    com_auth_email: 'Correo electrónico',
    com_auth_email_required: 'Se requiere correo electrónico',
    com_auth_email_min_length: 'El correo electrónico debe tener al menos 6 caracteres',
    com_auth_email_max_length: 'El correo electrónico no debe tener más de 120 caracteres',
    com_auth_email_pattern: 'Debe ingresar una dirección de correo electrónico válida',
    com_auth_email_address: 'Dirección de correo electrónico',
    com_auth_password: 'Contraseña',
    com_auth_password_required: 'Se requiere contraseña',
    com_auth_password_min_length: 'La contraseña debe tener al menos 8 caracteres',
    com_auth_password_max_length: 'La contraseña debe tener menos de 128 caracteres',
    com_auth_password_forgot: '¿Olvidó su contraseña?',
    com_auth_password_confirm: 'Confirmar contraseña',
    com_auth_password_not_match: 'Las contraseñas no coinciden',
    com_auth_continue: 'Continuar',
    com_auth_create_account: 'Crear su cuenta',
    com_auth_error_create: 'Hubo un error al intentar registrar su cuenta. Inténtelo de nuevo.',
    com_auth_full_name: 'Nombre completo',
    com_auth_name_required: 'Se requiere nombre',
    com_auth_name_min_length: 'El nombre debe tener al menos 3 caracteres',
    com_auth_name_max_length: 'El nombre debe tener menos de 80 caracteres',
    com_auth_username: 'Nombre de usuario (opcional)',
    com_auth_username_required: 'Se requiere nombre de usuario',
    com_auth_username_min_length: 'El nombre de usuario debe tener al menos 2 caracteres',
    com_auth_username_max_length: 'El nombre de usuario debe tener menos de 20 caracteres',
    com_auth_already_have_account: '¿Ya tiene una cuenta?',
    com_auth_login: 'Iniciar sesión',
    com_auth_reset_password: 'Restablecer su contraseña',
    com_auth_click: 'Haga clic',
    com_auth_here: 'AQUÍ',
    com_auth_to_reset_your_password: 'para restablecer su contraseña.',
    com_auth_reset_password_link_sent: 'Correo electrónico enviado',
    com_auth_reset_password_email_sent:
      'Se le ha enviado un correo electrónico con más instrucciones para restablecer su contraseña.',
    com_auth_error_reset_password:
      'Hubo un problema al restablecer su contraseña. No se encontró ningún usuario con la dirección de correo electrónico proporcionada. Inténtelo de nuevo.',
    com_auth_reset_password_success: 'Éxito al restablecer la contraseña',
    com_auth_login_with_new_password: 'Ahora puede iniciar sesión con su nueva contraseña.',
    com_auth_error_invalid_reset_token:
      'Este token de restablecimiento de contraseña ya no es válido.',
    com_auth_click_here: 'Haz clic aquí',
    com_auth_to_try_again: 'para intentar de nuevo.',
    com_auth_submit_registration: 'Enviar registro',
    com_auth_welcome_back: 'Bienvenido de nuevo',
    com_auth_back_to_login: 'Volver al inicio de sesión',
    com_endpoint_open_menu: 'Abrir menú',
    com_endpoint_bing_enable_sydney: 'Habilitar Sydney',
    com_endpoint_bing_to_enable_sydney: 'Para habilitar Sydney',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      "Bing puede utilizar hasta 7k tokens para el 'contexto', al que puede hacer referencia en la conversación. El límite específico no se conoce, pero puede producir errores si se exceden los 7k tokens",
    com_endpoint_bing_system_message_placeholder:
      "ADVERTENCIA: El mal uso de esta función puede hacer que te PROHÍBAN el uso de Bing. Haz clic en 'Mensaje del sistema' para ver las instrucciones completas y el mensaje predeterminado si se omite, que es la configuración preestablecida 'Sydney' que se considera segura.",
    com_endpoint_system_message: 'Mensaje del sistema',
    com_endpoint_message: 'Mensaje',
    com_endpoint_message_not_appendable: 'Edita tu mensaje o regénera.',
    com_endpoint_default_blank: 'predeterminado: en blanco',
    com_endpoint_default_false: 'predeterminado: falso',
    com_endpoint_default_creative: 'predeterminado: creativo',
    com_endpoint_default_empty: 'predeterminado: vacío',
    com_endpoint_default_with_num: 'predeterminado: {0}',
    com_endpoint_context: 'Contexto',
    com_endpoint_tone_style: 'Estilo de tono',
    com_endpoint_token_count: 'Recuento de tokens',
    com_endpoint_output: 'Salida',
    com_endpoint_google_temp:
      'Los valores más altos = más aleatorios, mientras que los valores más bajos = más enfocados y deterministas. Recomendamos alterar esto o Top P, pero no ambos.',
    com_endpoint_google_topp:
      'Top-p cambia la forma en que el modelo selecciona tokens para la salida. Los tokens se seleccionan desde los más K (ver parámetro topK) probables hasta los menos probables hasta que la suma de sus probabilidades sea igual al valor top-p.',
    com_endpoint_google_topk:
      'Top-k cambia la forma en que el modelo selecciona tokens para la salida. Un top-k de 1 significa que el token seleccionado es el más probable entre todos los tokens en el vocabulario del modelo (también llamado decodificación codiciosa), mientras que un top-k de 3 significa que el siguiente token se selecciona entre los 3 tokens más probables (usando temperatura).',
    com_endpoint_google_maxoutputtokens:
      'Número máximo de tokens que se pueden generar en la respuesta. Especifique un valor más bajo para respuestas más cortas y un valor más alto para respuestas más largas.',
    com_endpoint_google_custom_name_placeholder: 'Establecer un nombre personalizado para Google',
    com_endpoint_prompt_prefix_placeholder:
      'Configurar instrucciones personalizadas o contexto. Se ignora si está vacío.',
    com_endpoint_instructions_assistants_placeholder:
      'Anula las instrucciones del asistente. Esto es útil para modificar el comportamiento por ejecución.',
    com_endpoint_prompt_prefix_assistants_placeholder:
      'Establecer instrucciones o contexto adicionales además de las instrucciones principales del Asistente. Se ignora si está vacío.',
    com_endpoint_custom_name: 'Nombre personalizado',
    com_endpoint_prompt_prefix: 'Instrucciones personalizadas',
    com_endpoint_prompt_prefix_assistants: 'Instrucciones adicionales',
    com_endpoint_instructions_assistants: 'Anular instrucciones',
    com_endpoint_temperature: 'Temperatura',
    com_endpoint_default: 'predeterminado',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Tokens de Salida Máximos',
    com_endpoint_openai_temp:
      'Los valores más altos = más aleatorios, mientras que los valores más bajos = más enfocados y deterministas. Recomendamos alterar esto o Top P, pero no ambos.',
    com_endpoint_openai_max:
      'Los tokens máximos a generar. La longitud total de los tokens de entrada y los tokens generados está limitada por la longitud del contexto del modelo.',
    com_endpoint_openai_topp:
      'Una alternativa al muestreo con temperatura, llamada muestreo de núcleo, donde el modelo considera los resultados de los tokens con la masa de probabilidad superior al top_p. Entonces, 0.1 significa que solo se consideran los tokens que comprenden la masa de probabilidad superior al 10%. Recomendamos alterar esto o la temperatura, pero no ambos.',
    com_endpoint_openai_freq:
      'Número entre -2.0 y 2.0. Los valores positivos penalizan los nuevos tokens basados en su frecuencia existente en el texto hasta el momento, disminuyendo la probabilidad del modelo de repetir la misma línea textualmente.',
    com_endpoint_openai_pres:
      'Número entre -2.0 y 2.0. Los valores positivos penalizan los nuevos tokens basados en si aparecen o no en el texto hasta el momento, aumentando la probabilidad del modelo de hablar sobre nuevos temas.',
    com_endpoint_openai_resend:
      'Reenviar todas las imágenes adjuntas previamente. Nota: esto puede aumentar significativamente el costo de tokens y puede experimentar errores con muchos archivos adjuntos de imágenes.',
    com_endpoint_openai_resend_files:
      'Reenviar todos los archivos adjuntos anteriormente. Nota: esto aumentará el costo de tokens y puede experimentar errores con muchos archivos adjuntos.',
    com_endpoint_openai_detail:
      'La resolución para las solicitudes de Vision. "Baja" es más económica y rápida, "Alta" es más detallada y costosa, y "Automática" elegirá automáticamente entre las dos en función de la resolución de la imagen.',
    com_endpoint_openai_custom_name_placeholder: 'Establecer un nombre personalizado para ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Establecer instrucciones personalizadas para incluir en el Mensaje del sistema. Predeterminado: ninguno',
    com_endpoint_anthropic_temp:
      'Rango de 0 a 1. Utilice una temperatura más cercana a 0 para tareas analíticas/de opción múltiple y más cercana a 1 para tareas creativas y generativas. Recomendamos alterar esto o Top P, pero no ambos.',
    com_endpoint_anthropic_topp:
      'Top-p cambia la forma en que el modelo selecciona tokens para la salida. Los tokens se seleccionan desde los más K (ver parámetro topK) probables hasta los menos probables hasta que la suma de sus probabilidades sea igual al valor top-p.',
    com_endpoint_anthropic_topk:
      'Top-k cambia la forma en que el modelo selecciona tokens para la salida. Un top-k de 1 significa que el token seleccionado es el más probable entre todos los tokens en el vocabulario del modelo (también llamado decodificación codiciosa), mientras que un top-k de 3 significa que el siguiente token se selecciona entre los 3 tokens más probables (usando temperatura).',
    com_endpoint_anthropic_maxoutputtokens:
      'Número máximo de tokens que se pueden generar en la respuesta. Especifique un valor más bajo para respuestas más cortas y un valor más alto para respuestas más largas.',
    com_endpoint_anthropic_custom_name_placeholder:
      'Establecer un nombre personalizado para Anthropic',
    com_endpoint_frequency_penalty: 'Penalización de frecuencia',
    com_endpoint_presence_penalty: 'Penalización de presencia',
    com_endpoint_plug_use_functions: 'Utilizar funciones',
    com_endpoint_plug_resend_files: 'Reenviar archivos',
    com_endpoint_plug_resend_images: 'Reenviar imágenes',
    com_endpoint_plug_image_detail: 'Detalle de imagen',
    com_endpoint_plug_skip_completion: 'Omitir finalización',
    com_endpoint_disabled_with_tools: 'deshabilitado con herramientas',
    com_endpoint_disabled_with_tools_placeholder: 'Deshabilitado con herramientas seleccionadas',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Establecer instrucciones personalizadas para incluir en el Mensaje del sistema. Predeterminado: ninguno',
    com_endpoint_import: 'Importar',
    com_endpoint_set_custom_name:
      'Establece un nombre personalizado, en caso de que puedas encontrar esta configuración preestablecida',
    com_endpoint_preset_delete_confirm:
      '¿Estás seguro de que quieres eliminar esta configuración preestablecida?',
    com_endpoint_preset_clear_all_confirm:
      '¿Estás seguro de que quieres eliminar todas tus configuraciones preestablecidas?',
    com_endpoint_preset_import: '¡Configuración preestablecida importada!',
    com_endpoint_preset_import_error:
      'Hubo un error al importar tu configuración preestablecida. Por favor, inténtalo de nuevo.',
    com_endpoint_preset_save_error:
      'Hubo un error al guardar tu configuración preestablecida. Por favor, inténtalo de nuevo.',
    com_endpoint_preset_delete_error:
      'Hubo un error al eliminar tu configuración preestablecida. Por favor, inténtalo de nuevo.',
    com_endpoint_preset_default_removed: 'ya no es la configuración preestablecida predeterminada.',
    com_endpoint_preset_default_item: 'Predeterminado:',
    com_endpoint_preset_default_none: 'No hay configuración preestablecida predeterminada activa.',
    com_endpoint_preset_title: 'Configuración preestablecida',
    com_endpoint_preset_saved: '¡Guardado!',
    com_endpoint_preset_default: 'es ahora la configuración preestablecida predeterminada.',
    com_endpoint_preset: 'configuración preestablecida',
    com_endpoint_presets: 'configuraciones preestablecidas',
    com_endpoint_preset_selected: '¡Configuración preestablecida activa!',
    com_endpoint_preset_selected_title: '¡Activo!',
    com_endpoint_preset_name: 'Nombre de la configuración preestablecida',
    com_endpoint_new_topic: 'Nuevo tema',
    com_endpoint: 'Endpoint',
    com_endpoint_hide: 'Ocultar',
    com_endpoint_show: 'Mostrar',
    com_endpoint_examples: ' Configuraciones preestablecidas',
    com_endpoint_completion: 'Finalización',
    com_endpoint_agent: 'Agente',
    com_endpoint_show_what_settings: 'Mostrar configuración de {0}',
    com_endpoint_export: 'Exportar',
    com_endpoint_assistant: 'Asistente',
    com_endpoint_use_active_assistant: 'Utilizar asistente activo',
    com_endpoint_assistant_model: 'Modelo de asistente',
    com_endpoint_save_as_preset: 'Guardar como configuración preestablecida',
    com_endpoint_presets_clear_warning:
      '¿Estás seguro de que quieres borrar todas las configuraciones preestablecidas? Esto es irreversible.',
    com_endpoint_not_implemented: 'No implementado',
    com_endpoint_no_presets:
      'Aún no hay configuraciones preestablecidas, utiliza el botón de configuración para crear una',
    com_endpoint_not_available: 'No hay endpoint disponible',
    com_endpoint_view_options: 'Ver opciones',
    com_endpoint_save_convo_as_preset: 'Guardar conversación como configuración preestablecida',
    com_endpoint_my_preset: 'Mi configuración preestablecida',
    com_endpoint_agent_model: 'Modelo de agente (Recomendado: GPT-3.5)',
    com_endpoint_completion_model: 'Modelo de finalización (Recomendado: GPT-4)',
    com_endpoint_func_hover: 'Habilitar el uso de Plugins como funciones de OpenAI',
    com_endpoint_skip_hover:
      'Habilitar omitir el paso de finalización, que revisa la respuesta final y los pasos generados',
    com_endpoint_config_key: 'Establecer clave API',
    com_endpoint_assistant_placeholder:
      'Por favor, seleccione un Asistente desde el panel lateral derecho',
    com_endpoint_config_placeholder: 'Establezca su clave en el menú del encabezado para chatear.',
    com_endpoint_config_key_for: 'Establecer clave API para',
    com_endpoint_config_key_name: 'Clave',
    com_endpoint_config_value: 'Ingresar valor para',
    com_endpoint_config_key_name_placeholder: 'Establezca primero la clave API',
    com_endpoint_config_key_encryption: 'Tu clave será encriptada y eliminada en',
    com_endpoint_config_key_expiry: 'el tiempo de expiración',
    com_endpoint_config_click_here: 'Haz clic aquí',
    com_endpoint_config_google_service_key: 'Clave de cuenta de servicio de Google',
    com_endpoint_config_google_cloud_platform: '(de Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'Clave API de Google',
    com_endpoint_config_google_gemini_api: '(API Gemini)',
    com_endpoint_config_google_api_info:
      'Para obtener tu clave de la API de Lenguaje Generativo (para Gemini),',
    com_endpoint_config_key_import_json_key: 'Importar clave JSON de cuenta de servicio.',
    com_endpoint_config_key_import_json_key_success:
      'Clave JSON de cuenta de servicio importada correctamente',
    com_endpoint_config_key_import_json_key_invalid:
      'Clave JSON de cuenta de servicio no válida, ¿importaste el archivo correcto?',
    com_endpoint_config_key_get_edge_key:
      'Para obtener tu token de acceso para Bing, inicia sesión en',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Utiliza las herramientas de desarrollador o una extensión mientras estás conectado al sitio para copiar el contenido de la cookie _U. Si esto falla, sigue estas',
    com_endpoint_config_key_edge_instructions: 'instrucciones',
    com_endpoint_config_key_edge_full_key_string:
      'para proporcionar las cadenas de cookies completas.',
    com_endpoint_config_key_chatgpt:
      "Para obtener tu token de acceso para ChatGPT 'Versión gratuita', inicia sesión en",
    com_endpoint_config_key_chatgpt_then_visit: 'y luego visita',
    com_endpoint_config_key_chatgpt_copy_token: 'Copia el token de acceso.',
    com_endpoint_config_key_google_need_to: 'Necesitas',
    com_endpoint_config_key_google_vertex_ai: 'Habilitar el Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API en Google Cloud, luego',
    com_endpoint_config_key_google_service_account: 'Crear una Cuenta de Servicio',
    com_endpoint_config_key_google_vertex_api_role:
      "Asegúrate de hacer clic en 'Crear y continuar' para otorgar al menos el rol de 'Usuario de Vertex AI'. Por último, crea una clave JSON para importar aquí.",
    com_nav_welcome_assistant: 'Por favor, selecciona un asistente',
    com_nav_welcome_message: '¿En qué puedo ayudarte hoy?',
    com_nav_auto_scroll: 'Desplazamiento automático al más reciente al abrir',
    com_nav_hide_panel: 'Ocultar el panel lateral derecho',
    com_nav_enter_to_send: 'Enviar mensaje con la tecla Enter',
    com_nav_modular_chat: 'Habilitar el cambio de puntos finales en medio de una conversación',
    com_nav_latex_parsing: 'Analizar LaTeX en los mensajes (puede afectar el rendimiento)',
    com_nav_profile_picture: 'Imagen de perfil',
    com_nav_change_picture: 'Cambiar imagen',
    com_nav_plugin_store: 'Tienda de plugins',
    com_nav_plugin_install: 'Instalar',
    com_nav_plugin_uninstall: 'Desinstalar',
    com_nav_tool_add: 'Agregar',
    com_nav_tool_remove: 'Eliminar',
    com_nav_tool_dialog: 'Herramientas del asistente',
    com_nav_tool_dialog_description:
      'El asistente debe guardarse para que las selecciones de herramientas persistan.',
    com_show_agent_settings: 'Mostrar configuración del agente',
    com_show_completion_settings: 'Mostrar configuración de completado',
    com_hide_examples: 'Ocultar ejemplos',
    com_show_examples: 'Mostrar ejemplos',
    com_nav_plugin_search: 'Buscar plugins',
    com_nav_tool_search: 'Buscar herramientas',
    com_nav_plugin_auth_error:
      'Hubo un error al intentar autenticar este plugin. Por favor, inténtalo de nuevo.',
    com_nav_export_filename: 'Nombre de archivo',
    com_nav_export_filename_placeholder: 'Establecer el nombre de archivo',
    com_nav_export_type: 'Tipo',
    com_nav_export_include_endpoint_options: 'Incluir opciones de punto final',
    com_nav_enabled: 'Habilitado',
    com_nav_not_supported: 'No soportado',
    com_nav_export_all_message_branches: 'Exportar todas las ramas de mensajes',
    com_nav_export_recursive_or_sequential: '¿Recursivo o secuencial?',
    com_nav_export_recursive: 'Recursivo',
    com_nav_export_conversation: 'Exportar conversación',
    com_nav_export: 'Exportar',
    com_nav_shared_links: 'Links Compartidos',
    com_nav_shared_links_manage: 'Gerenciar',
    com_nav_shared_links_empty: 'Você não tem nenhum link compartilhado.',
    com_nav_shared_links_name: 'Nome',
    com_nav_shared_links_date_shared: 'Data compartilhada',
    com_nav_my_files: 'Mis archivos',
    com_nav_theme: 'Tema',
    com_nav_theme_system: 'Sistema',
    com_nav_theme_dark: 'Oscuro',
    com_nav_theme_light: 'Claro',
    com_nav_user_name_display: 'Mostrar nombre de usuario en los mensajes',
    com_nav_save_drafts: 'Guardar borradores localmente',
    com_nav_show_code: 'Mostrar siempre el código cuando se use el intérprete de código',
    com_nav_clear_all_chats: 'Borrar todos los chats',
    com_nav_confirm_clear: 'Confirmar borrado',
    com_nav_close_sidebar: 'Cerrar barra lateral',
    com_nav_open_sidebar: 'Abrir barra lateral',
    com_nav_send_message: 'Enviar mensaje',
    com_nav_log_out: 'Cerrar sesión',
    com_nav_user: 'USUARIO',
    com_nav_archived_chats: 'Archivadas',
    com_nav_archived_chats_manage: 'Gestionar',
    com_nav_archived_chats_empty: 'No tienes conversaciones archivadas.',
    com_nav_archive_all_chats: 'Archivar todas las conversaciones',
    com_nav_archive_all: 'Archivar todas',
    com_nav_archive_name: 'Nombre',
    com_nav_archive_created_at: 'CreadoEn',
    com_nav_clear_conversation: 'Borrar conversaciones',
    com_nav_clear_conversation_confirm_message:
      '¿Estás seguro de que quieres borrar todas las conversaciones? Esta acción es irreversible.',
    com_nav_help_faq: 'Ayuda y preguntas frecuentes',
    com_nav_settings: 'Configuración',
    com_nav_search_placeholder: 'Buscar mensajes',
    com_nav_setting_general: 'General',
    com_nav_setting_beta: 'Funciones beta',
    com_nav_setting_data: 'Controles de datos',
    com_nav_setting_account: 'Cuenta',
    com_nav_language: 'Idioma',
    com_nav_lang_auto: 'Detección automática',
    com_nav_lang_spanish: 'Español',
    com_assistants_file_search: 'Búsqueda de Archivos',
    com_assistants_file_search_info:
      'Adjuntar almacenes vectoriales para la Búsqueda de Archivos aún no está soportado. Puede adjuntarlos desde el Área de Pruebas del Proveedor o adjuntar archivos a los mensajes para la búsqueda de archivos en una conversación específica.',
    com_assistants_non_retrieval_model:
      'La búsqueda de archivos no está habilitada en este modelo. Por favor, seleccione otro modelo.',
    com_ui_attach_error_openai:
      'No se pueden adjuntar archivos del Asistente a otros puntos de conexión',
    com_ui_attach_warn_endpoint:
      'Es posible que los archivos no compatibles con la herramienta sean ignorados',
    com_ui_assistant_deleted: 'Asistente eliminado con éxito',
    com_ui_assistant_delete_error: 'Hubo un error al eliminar el asistente',
    com_ui_copied: '¡Copiado!',
    com_ui_copy_code: 'Copiar código',
    com_nav_source_chat: 'Ver chat de origen',
    com_ui_date_today: 'Hoy',
    com_ui_date_yesterday: 'Ayer',
    com_ui_date_previous_7_days: 'Últimos 7 días',
    com_ui_date_previous_30_days: 'Últimos 30 días',
    com_ui_date_january: 'Enero',
    com_ui_date_february: 'Febrero',
    com_ui_date_march: 'Marzo',
    com_ui_date_april: 'Abril',
    com_ui_date_may: 'Mayo',
    com_ui_date_june: 'Junio',
    com_ui_date_july: 'Julio',
    com_ui_date_august: 'Agosto',
    com_ui_date_september: 'Septiembre',
    com_ui_date_october: 'Octubre',
    com_ui_date_november: 'Noviembre',
    com_ui_date_december: 'Diciembre',
    com_ui_nothing_found: 'No se encontró nada',
    com_ui_go_to_conversation: 'Ir a la conversación',
    com_error_moderation:
      'Parece que el contenido enviado ha sido marcado por nuestro sistema de moderación por no estar alineado con nuestras pautas comunitarias. No podemos proceder con este tema específico. Si tiene alguna otra pregunta o tema que le gustaría explorar, por favor edite su mensaje o cree una nueva conversación.',
    com_error_no_user_key:
      'No se encontró ninguna clave. Por favor, proporcione una clave e inténtelo de nuevo.',
    com_error_invalid_user_key:
      'Clave proporcionada no válida. Por favor proporcione una clave válida e inténtelo de nuevo.',
    com_error_expired_user_key:
      'La clave proporcionada para {0} expiró en {1}. Por favor, proporcione una clave nueva e inténtelo de nuevo.',
    com_ui_off: 'Desactivado',
    com_ui_none_selected: 'No se ha seleccionado ninguno',
    com_ui_fork_info_1:
      "com_ui_fork_info_1: 'Utilice esta configuración para bifurcar los mensajes con el comportamiento deseado.'",
    com_ui_fork_info_2:
      '"Bifurcar" se refiere a crear una nueva conversación que comienza/termina desde mensajes específicos en la conversación actual, creando una copia según las opciones seleccionadas.',
    com_ui_fork_info_visible:
      'Esta opción bifurca únicamente los mensajes visibles; es decir, la ruta directa hacia el mensaje objetivo, sin ninguna ramificación.',
    com_ui_fork_info_start:
      'Si se marca, la bifurcación comenzará desde este mensaje hasta el último mensaje de la conversación, según el comportamiento seleccionado anteriormente.',
    com_ui_fork_success: 'Se ha bifurcado la conversación con éxito',
    com_ui_fork_processing: 'Bifurcando conversación...',
    com_ui_fork_error: 'Hubo un error al bifurcar la conversación',
    com_ui_fork_split_target_setting:
      'Iniciar bifurcación desde el mensaje objetivo de forma predeterminada',
    com_ui_import_conversation_file_type_error:
      'com_ui_import_conversation_file_type_error: Tipo de archivo no compatible para importar',
    com_ui_min_tags: 'No se pueden eliminar más valores, se requiere un mínimo de {0}.',
    com_endpoint_messages: 'Mensajes',
    com_endpoint_context_tokens: 'Máximo de tokens de contexto',
    com_endpoint_stop_placeholder: 'Separe los valores presionando `Intro`',
    com_error_no_base_url:
      'No se encontró URL base. Por favor proporcione una y vuelva a intentarlo.',
    com_sidepanel_parameters: 'Parámetros',
    com_ui_field_required: 'Este campo es obligatorio',
    com_ui_download_error:
      'Hubo un error al descargar el archivo. Es posible que el archivo haya sido eliminado.',
    com_ui_on: 'Encendido',
    com_ui_yes: 'Sí',
    com_ui_no: 'No',
    com_ui_fork: 'Bifurcar',
    com_ui_fork_info_3:
      'El término "mensaje objetivo" se refiere ya sea al mensaje desde el cual se abrió este popup, o, si marca "{0}", al último mensaje en la conversación.',
    com_ui_fork_info_branches:
      'Esta opción bifurca los mensajes visibles, junto con las ramas relacionadas; en otras palabras, la ruta directa hacia el mensaje objetivo, incluyendo las ramas a lo largo de esa ruta.',
    com_ui_fork_info_target:
      'Esta opción bifurca todos los mensajes que conducen al mensaje objetivo, incluyendo sus vecinos; en otras palabras, se incluyen todas las ramas de mensajes, ya sean visibles o no, o estén en el mismo camino.',
    com_ui_fork_info_remember:
      'Marque esta opción para recordar las preferencias que seleccione para su uso futuro, lo que agilizará la bifurcación de conversaciones según sus preferencias.',
    com_ui_fork_change_default: 'Opción de bifurcación predeterminada',
    com_ui_fork_default: 'Utilizar opción de bifurcación predeterminada',
    com_ui_fork_remember: 'Recuerde',
    com_ui_fork_split_target: 'Iniciar bifurcación aquí',
    com_ui_fork_remember_checked:
      'Su selección se recordará después de utilizarla. Puede cambiar esta opción en cualquier momento en la configuración.',
    com_ui_fork_all_target: 'Incluir todo desde/hacia aquí',
    com_ui_fork_branches: 'Incluir ramas relacionadas',
    com_ui_fork_visible: 'Mostrar únicamente mensajes visibles',
    com_ui_fork_from_message: 'Seleccione una opción de bifurcación',
    com_ui_mention:
      'Menciona un punto de conexión, asistente o preconfiguración para cambiar rápidamente a él.',
    com_ui_max_tags: 'El número máximo permitido es {0}, utilizando los valores más recientes.',
    com_endpoint_context_info:
      'La cantidad máxima de tokens que se pueden utilizar para el contexto. Utilice esto para controlar cuántos tokens se envían por solicitud. Si no se especifica, se utilizarán los valores predeterminados del sistema basados en el tamaño de contexto conocido de los modelos. Establecer valores más altos puede resultar en errores y/o un mayor costo de tokens.',
    com_endpoint_stop: 'Secuencias de detención',
    com_endpoint_openai_max_tokens:
      'Campo opcional `max_tokens`, que representa el número máximo de tokens que se pueden generar en la finalización del chat.\n\nLa longitud total de los tokens de entrada y los tokens generados está limitada por la longitud del contexto del modelo. Puede experimentar errores si este número excede los tokens máximos de contexto.',
    com_endpoint_openai_stop: 'Hasta 4 secuencias donde la API dejará de generar más tokens.',
    com_nav_lang_english: 'Inglés',
    com_nav_lang_chinese: 'Chino',
    com_nav_lang_german: 'Alemán',
    com_nav_lang_french: 'Francés',
    com_nav_lang_italian: 'Español',
    com_nav_lang_polish: 'Polaco',
    com_nav_lang_brazilian_portuguese: 'Portugués de Brasil',
    com_nav_lang_russian: 'Ruso',
    com_nav_lang_japanese: 'Japonés',
    com_nav_lang_swedish: 'Idioma sueco',
    com_nav_lang_korean: 'Coreano',
    com_nav_lang_vietnamese: 'Vietnamita',
    com_nav_lang_traditionalchinese: 'Chino tradicional',
    com_nav_lang_arabic: 'Árabe',
    com_nav_lang_turkish: 'Idioma turco',
    com_nav_lang_dutch: 'Holandés',
    com_nav_lang_indonesia: 'Indonesia',
    com_nav_lang_hebrew: 'עברית',
  },
  u1 = {
    com_ui_examples: 'Exemples',
    com_ui_new_chat: 'Nouvelle conversation',
    com_ui_happy_birthday: "C'est mon premier anniversaire !",
    com_ui_example_quantum_computing: "Expliquer l'informatique quantique en termes simples",
    com_ui_example_10_year_old_b_day:
      "Tu as des idées créatives pour l'anniversaire d'un enfant de 10 ans ?",
    com_ui_example_http_in_js: 'Comment faire une requête HTTP en Javascript ?',
    com_ui_capabilities: 'Capacités',
    com_ui_capability_remember:
      "Se souvient de ce que l'utilisateur a dit plus tôt dans la conversation",
    com_ui_capability_correction: "Permet à l'utilisateur de fournir des corrections de suivi",
    com_ui_capability_decline_requests: 'Formé à refuser les demandes inappropriées',
    com_ui_limitations: 'Limitations',
    com_ui_limitation_incorrect_info: 'Peut occasionnellement générer des informations incorrectes',
    com_ui_limitation_harmful_biased:
      'Peut occasionnellement produire des instructions nuisibles ou du contenu biaisé',
    com_ui_limitation_limited_2021: 'Connaissance limitée du monde et des événements après 2021',
    com_ui_experimental: 'Fonctionnalités expérimentales',
    com_ui_input: 'Entrée',
    com_ui_close: 'Fermer',
    com_ui_model: 'Modèle',
    com_ui_select_model: 'Sélectionner un modèle',
    com_ui_use_prompt: 'Utiliser le prompt',
    com_ui_prev: 'Précédent',
    com_ui_next: 'Suivant',
    com_ui_stop: 'Arrêt ',
    com_ui_prompt_templates: 'Modèles de prompt',
    com_ui_hide_prompt_templates: 'Masquer les modèles de prompt',
    com_ui_showing: 'Affichage',
    com_ui_of: 'des',
    com_ui_entries: 'entrées',
    com_ui_pay_per_call:
      'Toutes les conversations IA au même endroit. Payez à la demande et non par mois',
    com_ui_new_footer: 'Toutes les conversations IA au même endroit.',
    com_ui_enter: 'Entrer',
    com_ui_submit: 'Soumettre',
    com_ui_upload_success: 'Fichier téléversé avec succès',
    com_ui_upload_error: "Une erreur s'est produite lors du téléversement de votre fichier",
    com_ui_upload_invalid:
      'Fichier invalide pour le téléversement. Doit être une image ne dépassant pas 2 Mo',
    com_ui_cancel: 'Annuler',
    com_ui_save: 'Sauvegarder',
    com_ui_save_submit: 'Enregistrer et Soumettre',
    com_user_message: 'Vous',
    com_ui_copy_to_clipboard: 'Copier dans le presse-papier',
    com_ui_copied_to_clipboard: 'Copié dans le presse-papier',
    com_ui_regenerate: 'Régénérer',
    com_ui_continue: 'Continuer',
    com_ui_edit: 'Modifier',
    com_ui_success: 'Succès',
    com_ui_all: 'tout',
    com_ui_clear: 'Effacer',
    com_ui_revoke: 'Révoquer',
    com_ui_revoke_info:
      "Révoquer toutes les informations d'identification fournies par l'utilisateur",
    com_ui_import_conversation: 'Importer',
    com_ui_import_conversation_info: 'Importer des conversations à partir d’un fichier JSON',
    com_ui_import_conversation_success: 'Conversations importées avec succès',
    com_ui_import_conversation_error:
      'Une erreur s’est produite lors de l’importation de vos conversations',
    com_ui_confirm_action: "Confirmer l'action",
    com_ui_chats: 'discussions',
    com_ui_share: 'Share',
    com_ui_share_link_to_chat: 'Share link to chat',
    com_ui_share_error: 'There was an error sharing the chat link',
    com_ui_share_create_message: 'Your name and any messages you add after sharing stay private.',
    com_ui_share_created_message:
      'A shared link to your chat has been created. Manage previously shared chats at any time via Settings.',
    com_ui_share_update_message:
      'Your name, custom instructions, and any messages you add after sharing stay private.',
    com_ui_share_updated_message:
      'A shared link to your chat has been updated. Manage previously shared chats at any time via Settings.',
    com_ui_shared_link_not_found: 'Shared link not found',
    com_ui_delete: 'Supprimer',
    com_ui_delete_conversation: 'Supprimer la discussions?',
    com_ui_delete_conversation_confirm: 'Cela supprimera',
    com_ui_rename: 'Renombrar',
    com_ui_archive: 'Archiver',
    com_ui_archive_error: "échec de l'archivage de la conversation",
    com_ui_unarchive: 'Désarchiver',
    com_ui_unarchive_error: 'Échec de la désarchivage de la conversation',
    com_ui_more_options: 'Plus',
    com_ui_preview: 'Aperçu',
    com_ui_upload: 'Téléverser',
    com_ui_connect: 'Connecter',
    com_auth_error_login:
      'Impossible de se connecter avec les informations fournies. Veuillez vérifier vos identifiants et réessayer.',
    com_auth_error_login_rl:
      'Trop de tentatives de connexion en peu de temps. Veuillez réessayer plus tard.',
    com_auth_error_login_ban:
      'Votre compte a été temporairement banni en raison de violations de notre service.',
    com_auth_error_login_server:
      "Une erreur interne du serveur s'est produite. Veuillez patienter quelques instants et réessayer.",
    com_auth_no_account: "Vous n'avez pas de compte?",
    com_auth_sign_up: "S'inscrire",
    com_auth_sign_in: 'Se connecter',
    com_auth_google_login: 'Se connecter avec Google',
    com_auth_facebook_login: 'Se connecter avec Facebook',
    com_auth_github_login: 'Se connecter avec Github',
    com_auth_discord_login: 'Se connecter avec Discord',
    com_auth_email: 'Courriel',
    com_auth_email_required: 'Le courriel est obligatoire',
    com_auth_email_min_length: 'Le courriel doit comporter au moins 6 caractères',
    com_auth_email_max_length: 'Le courriel ne doit pas dépasser 120 caractères',
    com_auth_email_pattern: 'Vous devez entrer une adresse courriel valide',
    com_auth_email_address: 'Adresse courriel',
    com_auth_password: 'Mot de passe',
    com_auth_password_required: 'Le mot de passe est obligatoire',
    com_auth_password_min_length: 'Le mot de passe doit comporter au moins 8 caractères',
    com_auth_password_max_length: 'Le mot de passe doit être inférieur à 128 caractères',
    com_auth_password_forgot: 'Mot de passe oublié?',
    com_auth_password_confirm: 'Confirmer le mot de passe',
    com_auth_password_not_match: 'Les mots de passe ne correspondent pas',
    com_auth_continue: 'Continuer',
    com_auth_create_account: 'Créez votre compte',
    com_auth_error_create:
      "Il y a eu une erreur lors de la tentative d'enregistrement de votre compte. Veuillez réessayer.",
    com_auth_full_name: 'Nom complet',
    com_auth_name_required: 'Le nom est obligatoire',
    com_auth_name_min_length: 'Le nom doit comporter au moins 3 caractères',
    com_auth_name_max_length: 'Le nom doit être inférieur à 80 caractères',
    com_auth_username: "Nom d'utilisateur",
    com_auth_username_required: "Le nom d'utilisateur est obligatoire",
    com_auth_username_min_length: "Le nom d'utilisateur doit comporter au moins 3 caractères",
    com_auth_username_max_length: "Le nom d'utilisateur doit être inférieur à 20 caractères",
    com_auth_already_have_account: 'Vous avez déjà un compte ?',
    com_auth_login: 'Connexion',
    com_auth_reset_password: 'Réinitialiser votre mot de passe',
    com_auth_click: 'Cliquez',
    com_auth_here: 'ICI',
    com_auth_to_reset_your_password: 'pour réinitialiser votre mot de passe.',
    com_auth_reset_password_link_sent: 'Courriel envoyé',
    com_auth_reset_password_email_sent:
      'Un courriel vous a été envoyé avec des instructions supplémentaires pour réinitialiser votre mot de passe.',
    com_auth_error_reset_password:
      "Il y a eu un problème pour réinitialiser votre mot de passe. Aucun utilisateur n'a été trouvé avec l'adresse courriel fournie. Veuillez réessayer.",
    com_auth_reset_password_success: 'Réinitialisation du mot de passe réussie',
    com_auth_login_with_new_password:
      'Vous pouvez maintenant vous connecter avec votre nouveau mot de passe.',
    com_auth_error_invalid_reset_token:
      "Ce jeton de réinitialisation de mot de passe n'est plus valide.",
    com_auth_click_here: 'Cliquez ici',
    com_auth_to_try_again: 'pour réessayer.',
    com_auth_submit_registration: "Soumettre l'inscription",
    com_auth_welcome_back: 'Bienvenue à nouveau',
    com_endpoint_open_menu: 'Ouvrir le menu',
    com_endpoint_bing_enable_sydney: 'Activer Sydney',
    com_endpoint_bing_to_enable_sydney: 'Pour activer Sydney',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder: `Bing peut utiliser jusqu'à 7k jetons pour le "contexte", qu'il peut référencer pour la conversation. La limite spécifique n'est pas connue mais peut entraîner des erreurs dépassant les 7k jetons`,
    com_endpoint_bing_system_message_placeholder: `AVERTISSEMENT : L'abus de cette fonctionnalité peut vous faire BANNIR de l'utilisation de Bing! Cliquez sur "Message système" pour obtenir les instructions complètes et le message par défaut si omis, qui est le préréglage "Sydney" qui est considéré comme sûr.`,
    com_endpoint_system_message: 'Message système',
    com_endpoint_message: 'Message',
    com_endpoint_message_not_appendable: 'Editer votre message ou regénerer.',
    com_endpoint_default_blank: 'par défaut : vide',
    com_endpoint_default_false: 'par défaut : faux',
    com_endpoint_default_creative: 'par défaut : créatif',
    com_endpoint_default_empty: 'par défaut : vide',
    com_endpoint_default_with_num: 'par défaut : {0}',
    com_endpoint_context: 'Contexte',
    com_endpoint_tone_style: 'Style de ton',
    com_endpoint_token_count: 'Nombre de jetons',
    com_endpoint_output: 'Sortie',
    com_endpoint_google_temp:
      'Des valeurs plus élevées = plus aléatoires, tandis que des valeurs plus faibles = plus concentrées et déterministes. Nous vous recommandons de modifier ceci ou Top P mais pas les deux.',
    com_endpoint_google_topp:
      "Top-p change la façon dont le modèle sélectionne les jetons pour la sortie. Les jetons sont sélectionnés du plus K (voir le paramètre topK) probable au moins jusqu'à ce que la somme de leurs probabilités égale la valeur top-p.",
    com_endpoint_google_topk:
      "Top-k change la façon dont le modèle sélectionne les jetons pour la sortie. Un top-k de 1 signifie que le jeton sélectionné est le plus probable parmi tous les jetons du vocabulaire du modèle (également appelé décodage glouton), tandis qu'un top-k de 3 signifie que le jeton suivant est sélectionné parmi les 3 jetons les plus probables (en utilisant la température).",
    com_endpoint_google_maxoutputtokens:
      'Nombre maximum de jetons qui peuvent être générés dans la réponse. Spécifiez une valeur plus faible pour des réponses plus courtes et une valeur plus élevée pour des réponses plus longues.',
    com_endpoint_google_custom_name_placeholder: 'Définir un nom personnalisé pour Google',
    com_endpoint_google_prompt_prefix_placeholder:
      'Définir des instructions ou un contexte personnalisés. Ignoré si vide.',
    com_endpoint_custom_name: 'Nom personnalisé',
    com_endpoint_prompt_prefix: 'Préfixe du prompt',
    com_endpoint_temperature: 'Température',
    com_endpoint_default: 'par défaut',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Nombre maximum de jetons en sortie',
    com_endpoint_openai_temp:
      'Des valeurs plus élevées = plus aléatoires, tandis que des valeurs plus faibles = plus concentrées et déterministes. Nous vous recommandons de modifier ceci ou Top P mais pas les deux.',
    com_endpoint_openai_max:
      "Le nombre maximum de jetons à générer. La longueur totale des jetons d'entrée et des jetons générés est limitée par la longueur du contexte du modèle.",
    com_endpoint_openai_topp:
      "Une alternative à l'échantillonnage avec température, appelée échantillonnage du noyau, où le modèle considère les résultats des jetons avec une masse de probabilité top_p. Ainsi, 0,1 signifie que seuls les jetons représentant les 10 % de masse de probabilité les plus élevés sont pris en compte. Nous vous recommandons de modifier ceci ou la température mais pas les deux.",
    com_endpoint_openai_freq:
      "Nombre compris entre -2,0 et 2,0. Les valeurs positives pénalisent les nouveaux jetons en fonction de leur fréquence existante dans le texte jusqu'à présent, diminuant ainsi la probabilité que le modèle répète la même ligne mot pour mot.",
    com_endpoint_openai_pres:
      "Nombre compris entre -2,0 et 2,0. Les valeurs positives pénalisent les nouveaux jetons en fonction du fait qu'ils apparaissent ou non dans le texte jusqu'à présent, augmentant ainsi la probabilité que le modèle parle de nouveaux sujets.",
    com_endpoint_openai_resend:
      "Renvoyer toutes les images précédemment jointes. Remarque : cela peut augmenter considérablement le coût en jetons et vous pouvez rencontrer des erreurs avec de nombreuses pièces jointes d'images.",
    com_endpoint_openai_detail: `La résolution pour les requêtes Vision. "Low" est moins cher et plus rapide, "High" est plus détaillé et plus cher, et "Auto" choisira automatiquement entre les deux en fonction de la résolution de l'image.`,
    com_endpoint_openai_custom_name_placeholder: 'Définir un nom personnalisé pour ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Définir des instructions personnalisées à inclure dans le message système. Par défaut : aucun',
    com_endpoint_anthropic_temp:
      "Varie de 0 à 1. Utilisez une température proche de 0 pour l'analyse / le choix multiple, et proche de 1 pour les tâches créatives et génératives. Nous vous recommandons de modifier ceci ou Top P mais pas les deux.",
    com_endpoint_anthropic_topp:
      "Top-p change la façon dont le modèle sélectionne les jetons pour la sortie. Les jetons sont sélectionnés du plus K (voir le paramètre topK) probable au moins jusqu'à ce que la somme de leurs probabilités égale la valeur top-p.",
    com_endpoint_anthropic_topk:
      "Top-k change la façon dont le modèle sélectionne les jetons pour la sortie. Un top-k de 1 signifie que le jeton sélectionné est le plus probable parmi tous les jetons du vocabulaire du modèle (également appelé décodage glouton), tandis qu'un top-k de 3 signifie que le jeton suivant est sélectionné parmi les 3 jetons les plus probables (en utilisant la température).",
    com_endpoint_anthropic_maxoutputtokens:
      'Nombre maximum de jetons qui peuvent être générés dans la réponse. Spécifiez une valeur plus faible pour des réponses plus courtes et une valeur plus élevée pour des réponses plus longues.',
    com_endpoint_anthropic_custom_name_placeholder: 'Définir un nom personnalisé pour Anthropic',
    com_endpoint_frequency_penalty: 'Pénalité de fréquence',
    com_endpoint_presence_penalty: 'Pénalité de présence',
    com_endpoint_plug_use_functions: 'Utiliser les fonctions',
    com_endpoint_plug_resend_images: 'Renvoyer des images',
    com_endpoint_plug_skip_completion: 'Sauter la complétion',
    com_endpoint_disabled_with_tools: 'désactivé avec les outils',
    com_endpoint_disabled_with_tools_placeholder: 'Désactivé avec les outils sélectionnés',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Définir des instructions personnalisées à inclure dans le message système. Par défaut : aucun',
    com_endpoint_import: 'Importer',
    com_endpoint_set_custom_name:
      'Définir un nom personnalisé, au cas où vous trouveriez ce préréglage',
    com_endpoint_preset_delete_confirm: 'Êtes-vous sûr de vouloir supprimer ce préréglage?',
    com_endpoint_preset_clear_all_confirm:
      'Êtes-vous sûr de vouloir supprimer tous vos préréglages?',
    com_endpoint_preset_import: 'Préréglage importé!',
    com_endpoint_preset_import_error:
      "Il y a eu une erreur lors de l'importation de votre préréglage. Veuillez réessayer.",
    com_endpoint_preset_save_error:
      'Il y a eu une erreur lors de la sauvegarde de votre préréglage. Veuillez réessayer.',
    com_endpoint_preset_delete_error:
      'Il y a eu une erreur lors de la suppression de votre préréglage. Veuillez réessayer.',
    com_endpoint_preset_default_removed: "n'est plus le préréglage par défaut.",
    com_endpoint_preset_default_item: 'Par défaut :',
    com_endpoint_preset_default_none: 'Aucun préréglage par défaut actif.',
    com_endpoint_preset_title: 'Préréglage',
    com_endpoint_preset_saved: 'Enregistré!',
    com_endpoint_preset_default: 'est maintenant le préréglage par défaut.',
    com_endpoint_preset: 'préréglage',
    com_endpoint_presets: 'préréglages',
    com_endpoint_preset_selected: 'Préréglage actif!',
    com_endpoint_preset_selected_title: 'Actif!',
    com_endpoint_preset_name: 'Nom du préréglage',
    com_endpoint_new_topic: 'Nouveau sujet',
    com_endpoint: 'Endpoint',
    com_endpoint_hide: 'Masquer',
    com_endpoint_show: 'Afficher',
    com_endpoint_examples: ' Exemples',
    com_endpoint_completion: 'Complétion',
    com_endpoint_agent: 'Agent',
    com_endpoint_show_what_settings: 'Afficher les paramètres {0}',
    com_endpoint_save: 'Enregistrer',
    com_endpoint_export: 'Exporter',
    com_endpoint_save_as_preset: 'Enregistrer comme préréglage',
    com_endpoint_presets_clear_warning:
      'Etes-vous sûr de vouloir effacer tous les préréglages? Cette action est irréversible.',
    com_endpoint_not_implemented: 'Non implémenté',
    com_endpoint_no_presets:
      "Aucun préréglage pour l'instant, utilisez le bouton paramètres pour en créer un",
    com_endpoint_not_available: 'Aucun endpoint disponible',
    com_endpoint_view_options: 'Voir les options',
    com_endpoint_save_convo_as_preset: 'Enregistrer la conversation comme préréglage',
    com_endpoint_my_preset: 'Mon préréglage',
    com_endpoint_agent_model: "Modèle d'agent (recommandé : GPT-3.5)",
    com_endpoint_completion_model: 'Modèle de complétion (recommandé : GPT-4)',
    com_endpoint_func_hover: "Activer l'utilisation des plugins comme fonctions OpenAI",
    com_endpoint_skip_hover:
      "Activer le saut de l'étape de complétion, qui examine la réponse finale et les étapes générées",
    com_endpoint_config_key: 'Définir la clé API',
    com_endpoint_config_placeholder: 'Définissez votre clé dans le menu En-tête pour discuter.',
    com_endpoint_config_key_for: 'Définir la clé API pour',
    com_endpoint_config_key_name: 'Clé',
    com_endpoint_config_value: 'Entrez la valeur pour',
    com_endpoint_config_key_name_placeholder: "Définir d'abord la clé API",
    com_endpoint_config_key_encryption: 'Votre clé sera cryptée et supprimée à',
    com_endpoint_config_key_expiry: "le délai d'expiration",
    com_endpoint_config_click_here: 'Cliquez ici',
    com_endpoint_config_google_service_key: 'Clé de compte de service Google',
    com_endpoint_config_google_cloud_platform: '(de Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'Clé API Google',
    com_endpoint_config_google_gemini_api: '(API Gemini)',
    com_endpoint_config_google_api_info:
      'Pour obtenir votre clé API de langage génératif (pour Gemini),',
    com_endpoint_config_key_import_json_key: 'Importez la clé JSON du compte de service.',
    com_endpoint_config_key_import_json_key_success:
      'Clé JSON du compte de service importé avec succès',
    com_endpoint_config_key_import_json_key_invalid:
      'Clé JSON du compte de service invalide. Avez-vous importé le bon fichier ?',
    com_endpoint_config_key_get_edge_key:
      "Pour obtenir votre jeton d'accès pour Bing, connectez-vous à",
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Utilisez dev tools ou une extension lorsque vous êtes connecté au site pour copier le contenu du cookie _U. Si cela échoue, suivez ces',
    com_endpoint_config_key_edge_instructions: 'instructions',
    com_endpoint_config_key_edge_full_key_string: 'pour fournir les chaînes complètes des cookies.',
    com_endpoint_config_key_chatgpt:
      "Pour obtenir votre jeton d'accès pour ChatGPT 'Version gratuite', se connecter à",
    com_endpoint_config_key_chatgpt_then_visit: 'puis visitez',
    com_endpoint_config_key_chatgpt_copy_token: "Copiez le jeton d'accès.",
    com_endpoint_config_key_google_need_to: 'Vous devez',
    com_endpoint_config_key_google_vertex_ai: 'Activer Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API sur Google Cloud, puis',
    com_endpoint_config_key_google_service_account: 'Créer un compte de service',
    com_endpoint_config_key_google_vertex_api_role:
      "Assurez-vous de cliquer 'Créer et continuer' pour donner au moins le role 'Utilisateur de Vertex AI'. Finalement, créez une clé JSON à importer ici.",
    com_nav_welcome_message: "Comment puis-je vous aider aujourd'hui?",
    com_nav_auto_scroll: "Défilement automatique jusqu'au plus récent à l'ouverture",
    com_nav_modular_chat: 'Activer le changement de points de terminaison en cours de conversation',
    com_nav_latex_parsing: 'Analyse LaTeX dans les messages (peut affecter les performances)',
    com_nav_profile_picture: 'Photo de profil',
    com_nav_change_picture: 'Changer de photo',
    com_nav_plugin_store: 'Boutique de plugins',
    com_show_agent_settings: "Afficher les paramètres de l'agent",
    com_show_completion_settings: 'Afficher les paramètres de complétion',
    com_hide_examples: 'Masquer les exemples',
    com_show_examples: 'Afficher les exemples',
    com_nav_plugin_search: 'Rechercher des plugins',
    com_nav_plugin_auth_error:
      "Une erreur s'est produite lors de la tentative d'authentification de ce plugin. Veuillez réessayer.",
    com_nav_export_filename: 'Nom du fichier',
    com_nav_export_filename_placeholder: 'Définir le nom du fichier',
    com_nav_export_type: 'Type',
    com_nav_export_include_endpoint_options: "Inclure les options d'extrémité",
    com_nav_enabled: 'Activé',
    com_nav_not_supported: 'Non pris en charge',
    com_nav_export_all_message_branches: 'Exporter toutes les branches de messages',
    com_nav_export_recursive_or_sequential: 'Récursif ou séquentiel ?',
    com_nav_export_recursive: 'Récursif',
    com_nav_export_conversation: 'Exporter la conversation',
    com_nav_export: 'Exporter',
    com_nav_shared_links: 'Liens partagés',
    com_nav_shared_links_manage: 'Gerenciar',
    com_nav_shared_links_empty: 'Você não tem nenhum link compartilhado.',
    com_nav_shared_links_name: 'Nome',
    com_nav_shared_links_date_shared: 'Data compartilhada',
    com_nav_theme: 'Thème',
    com_nav_theme_system: 'Système',
    com_nav_theme_dark: 'Sombre',
    com_nav_theme_light: 'Clair',
    com_nav_user_name_display: "Afficher le nom d'utilisateur dans les messages",
    com_nav_save_drafts: 'Enregistrer les brouillons localement',
    com_nav_clear_all_chats: 'Effacer toutes les conversations',
    com_nav_confirm_clear: "Confirmer l'effacement",
    com_nav_close_sidebar: 'Fermer la barre latérale',
    com_nav_open_sidebar: 'Ouvrir la barre latérale',
    com_nav_send_message: 'Envoyer un message',
    com_nav_log_out: 'Se déconnecter',
    com_nav_user: 'UTILISATEUR',
    com_nav_archived_chats: 'Conversations archivées',
    com_nav_archived_chats_manage: 'Gérer',
    com_nav_archive_all_chats: 'Archiver toutes les conversations',
    com_nav_archive_all: 'Archiver tout',
    com_nav_archive_name: 'Nom',
    com_nav_archive_created_at: 'CréééLe',
    com_nav_clear_conversation: 'Effacer les conversations',
    com_nav_clear_conversation_confirm_message:
      'Êtes-vous sûr de vouloir effacer toutes les conversations ? Ceci est irréversible.',
    com_nav_help_faq: 'Aide & FAQ',
    com_nav_settings: 'Paramètres',
    com_nav_search_placeholder: 'Rechercher des messages',
    com_nav_setting_general: 'Général',
    com_nav_setting_beta: 'Fonctionnalités bêta',
    com_nav_setting_data: 'Contrôles des données',
    com_nav_setting_account: 'Compte',
    com_assistants_file_search: 'Recherche de fichiers',
    com_assistants_file_search_info:
      "L'ajout de vecteurs de stockage pour la recherche de fichiers n'est pas encore pris en charge. Vous pouvez les ajouter depuis le terrain de jeu du fournisseur ou joindre des fichiers aux messages pour une recherche de fichiers au niveau du fil de discussion.",
    com_assistants_non_retrieval_model:
      "La recherche de fichiers n'est pas activée pour ce modèle. Veuillez sélectionner un autre modèle.",
    com_ui_attach_error_openai:
      "Impossible de joindre les fichiers de l'Assistant à d'autres points d'accès",
    com_ui_attach_warn_endpoint: "Les fichiers non compatibles avec l'outil peuvent être ignorés",
    com_ui_assistant_deleted: 'Assistant supprimé avec succès',
    com_ui_assistant_delete_error:
      "Une erreur s'est produite lors de la suppression de l'assistant.",
    com_ui_copied: 'Copié !',
    com_ui_copy_code: 'Copier le code',
    com_ui_copy_link: 'Copier le lien',
    com_ui_update_link: 'Mettre à jour le lien',
    com_ui_create_link: 'Créer un lien',
    com_nav_source_chat: 'Afficher la conversation source',
    com_ui_date_today: "Aujourd'hui",
    com_ui_date_yesterday: 'Hier',
    com_ui_date_previous_7_days: '7 derniers jours',
    com_ui_date_previous_30_days: '30 derniers jours',
    com_ui_date_january: 'Janvier',
    com_ui_date_february: 'Février',
    com_ui_date_march: 'Mars',
    com_ui_date_april: 'Avril',
    com_ui_date_may: 'Mai',
    com_ui_date_june: 'Juin',
    com_ui_date_july: 'Juillet',
    com_ui_date_august: 'Août',
    com_ui_date_september: 'Septembre',
    com_ui_date_october: 'Octobre',
    com_ui_date_november: 'Novembre',
    com_ui_date_december: 'Décembre',
    com_ui_nothing_found: 'Aucun résultat trouvé',
    com_ui_go_to_conversation: 'Aller à la conversation',
    com_nav_tool_add: 'Ajouter',
    com_nav_tool_remove: 'Supprimer',
    com_nav_tool_dialog: "Outils de l'assistant",
    com_nav_tool_dialog_description:
      "L'assistant doit être sauvegardé pour conserver les sélections d'outils.",
    com_nav_tool_search: 'Outils de recherche',
    com_nav_my_files: 'Mes fichiers',
    com_nav_enter_to_send: 'Appuyez sur Entrée pour envoyer des messages',
    com_nav_show_code: "Toujours afficher le code lors de l'utilisation de l'interpréteur de code",
    com_nav_archived_chats_empty: "Vous n'avez aucune conversation archivée.",
    com_nav_language: 'Langue',
    com_nav_lang_auto: 'Détection automatique',
    com_nav_lang_english: 'Anglais',
    com_nav_lang_chinese: 'Chinois',
    com_nav_lang_german: 'Allemand',
    com_nav_lang_spanish: 'Espagnol',
    com_nav_lang_french: 'Français',
    com_nav_lang_italian: 'Italien',
    com_nav_lang_polish: 'Polonais',
    com_nav_lang_brazilian_portuguese: 'Portugais brésilien',
    com_nav_lang_russian: 'Russe',
    com_nav_lang_japanese: 'Japonais',
    com_nav_lang_swedish: 'Suédois',
    com_nav_lang_korean: 'Coréen',
    com_nav_lang_vietnamese: 'Vietnamien',
    com_nav_lang_traditionalchinese: 'Chinois traditionnel',
    com_nav_lang_arabic: 'Arabe',
    com_nav_lang_turkish: 'Turc',
    com_nav_lang_dutch: 'Néerlandais',
    com_nav_lang_indonesia: 'Indonésie',
    com_nav_lang_hebrew: 'Hébreu',
    com_error_moderation:
      "Il semble que le contenu soumis ait été signalé par notre système de modération pour ne pas être conforme à nos lignes directrices communautaires. Nous ne pouvons pas procéder avec ce sujet spécifique. Si vous avez d'autres questions ou sujets que vous souhaitez explorer, veuillez modifier votre message ou créer une nouvelle conversation.",
    com_error_no_user_key: 'Aucune clé trouvée. Veuillez fournir une clé et réessayer.',
    com_error_no_base_url: 'Aucune URL de base trouvée. Veuillez en fournir une et réessayer.',
    com_error_invalid_user_key:
      'Clé fournie non valide. Veuillez fournir une clé valide et réessayer.',
    com_error_expired_user_key:
      'La clé fournie pour {0} a expiré à {1}. Veuillez fournir une clé et réessayer.',
    com_files_no_results: 'Aucun résultat.',
    com_files_filter: 'Filtrer les fichiers...',
    com_files_number_selected: '{0} sur {1} fichier(s) sélectionné(s)',
    com_sidepanel_select_assistant: 'Sélectionner un assistant',
    com_sidepanel_parameters: 'Paramètres',
    com_sidepanel_assistant_builder: "Constructeur d'assistant",
    com_sidepanel_hide_panel: 'Masquer le panneau',
    com_sidepanel_attach_files: 'Joindre des fichiers',
    com_sidepanel_manage_files: 'Gérer les fichiers',
    com_assistants_capabilities: 'Capacités des assistants',
    com_assistants_knowledge: 'Connaissances',
    com_assistants_knowledge_info:
      'Si vous téléchargez des fichiers dans la section Connaissances, les conversations avec votre Assistant pourront inclure le contenu de ces fichiers.',
    com_assistants_knowledge_disabled:
      "L'assistant doit être créé, et l'interpréteur de code ou la récupération doivent être activés et enregistrés avant de pouvoir importer des fichiers en tant que connaissances.",
    com_assistants_image_vision: "Vision d'image",
    com_assistants_code_interpreter: 'Interpréteur de code',
    com_assistants_code_interpreter_files:
      "Les fichiers suivants sont disponibles uniquement pour l'interpréteur de code :",
    com_assistants_retrieval: 'Récupération',
    com_assistants_search_name: 'Rechercher des assistants par nom',
    com_assistants_tools: 'Outils',
    com_assistants_actions: 'Actions',
    com_assistants_add_tools: 'Ajouter des outils',
    com_assistants_add_actions: 'Ajouter des actions',
    com_assistants_available_actions: 'Actions disponibles',
    com_assistants_running_action: 'Action en cours',
    com_assistants_completed_action: 'A parlé à {0}',
    com_assistants_completed_function: 'A exécuté {0}',
    com_assistants_function_use: "L'assistant a utilisé {0}",
    com_assistants_domain_info: "L'assistant a envoyé ces informations à {0}",
    com_assistants_delete_actions_success: "Action supprimée avec succès de l'Assistant",
    com_assistants_update_actions_success: 'Action créée ou mise à jour avec succès',
    com_assistants_update_actions_error:
      "Une erreur s'est produite lors de la création ou de la mise à jour de l'action.",
    com_assistants_delete_actions_error:
      "Une erreur s'est produite lors de la suppression de l'action.",
    com_assistants_actions_info:
      "Permettez à votre Assistant de récupérer des informations ou d'effectuer des actions via des API",
    com_assistants_name_placeholder: "Nom de l'assistant (facultatif)",
    com_assistants_instructions_placeholder: "Les instructions système que l'assistant utilise",
    com_assistants_description_placeholder: 'Décrivez votre assistant ici (facultatif)',
    com_assistants_actions_disabled: "Vous devez créer un assistant avant d'ajouter des actions.",
    com_assistants_update_success: 'Mise à jour réussie',
    com_assistants_update_error:
      "Une erreur s'est produite lors de la mise à jour de votre assistant.",
    com_assistants_create_success: 'Création réussie',
    com_assistants_create_error:
      "Une erreur s'est produite lors de la création de votre assistant.",
    com_ui_field_required: 'Ce champ est obligatoire',
    com_ui_download_error:
      'Erreur lors du téléchargement du fichier. Le fichier a peut-être été supprimé.',
    com_ui_attach_error_type: "Type de fichier non pris en charge pour ce point d'accès :",
    com_ui_attach_error_size: 'Limite de taille de fichier dépassée pour le point de terminaison :',
    com_ui_attach_error:
      "Impossible de joindre le fichier. Créez ou sélectionnez une conversation, ou essayez d'actualiser la page.",
    com_ui_on: 'Activé',
    com_ui_off: 'Désactivé',
    com_ui_yes: 'Oui',
    com_ui_no: 'Non',
    com_ui_ascending: 'Croissant',
    com_ui_descending: 'Décroissant',
    com_ui_show_all: 'Tout afficher',
    com_ui_name: 'Nom',
    com_ui_date: 'Date',
    com_ui_storage: 'Stockage',
    com_ui_context: 'Contexte',
    com_ui_size: 'Taille',
    com_ui_host: 'Hôte',
    com_ui_update: 'Mettre à jour',
    com_ui_authentication: 'Authentification',
    com_ui_instructions: 'Instructions',
    com_ui_description: 'Description',
    com_ui_error: 'Erreur',
    com_ui_select: 'Sélectionner',
    com_ui_select_search_model: 'Rechercher un modèle par nom',
    com_ui_select_search_plugin: 'Rechercher un plugin par nom',
    com_ui_upload_files: 'Téléverser des fichiers',
    com_ui_none_selected: 'Aucune sélection',
    com_ui_fork: 'Bifurquer',
    com_ui_fork_info_1:
      'Utilisez ce paramètre pour créer une bifurcation des messages avec le comportement souhaité.',
    com_ui_fork_info_2: `"Forker" fait référence à la création d'une nouvelle conversation qui commence/se termine à partir de messages spécifiques dans la conversation actuelle, en créant une copie selon les options sélectionnées.`,
    com_ui_fork_info_3:
      'Le terme "message cible" fait référence soit au message à partir duquel cette fenêtre contextuelle a été ouverte, soit, si vous cochez "{0}", au dernier message de la conversation.',
    com_ui_fork_info_visible:
      "Cette option permet de diviser uniquement les messages visibles ; en d'autres termes, le chemin direct vers le message cible, sans aucune branche.",
    com_ui_fork_info_branches:
      "Cette option divise les messages visibles, ainsi que les branches associées ; en d'autres termes, le chemin direct vers le message cible, y compris les branches le long du chemin.",
    com_ui_fork_info_target:
      "Cette option divise tous les messages menant au message cible, y compris ses voisins ; en d'autres termes, toutes les branches de messages, qu'elles soient visibles ou non et quel que soit leur chemin, sont incluses.",
    com_ui_fork_info_start:
      "Si cette option est cochée, le fork commencera à partir de ce message jusqu'au dernier message de la conversation, selon le comportement sélectionné ci-dessus.",
    com_ui_fork_info_remember:
      'Cochez cette case pour mémoriser les options que vous sélectionnez pour une utilisation future, ce qui vous permettra de bifurquer plus rapidement les conversations selon vos préférences.',
    com_ui_fork_success: 'Conversation bifurquée avec succès',
    com_ui_fork_processing: 'Bifurquer la conversation...',
    com_ui_fork_error: "Une erreur s'est produite lors du dédoublement de la conversation",
    com_ui_fork_change_default: 'Option de fourche par défaut',
    com_ui_fork_default: "Utiliser l'option de fourche par défaut",
    com_ui_fork_remember: 'Se souvenir',
    com_ui_fork_split_target_setting:
      'Démarrer la bifurcation à partir du message cible par défaut',
    com_ui_fork_split_target: 'Démarrer la bifurcation ici',
    com_ui_fork_remember_checked:
      'Votre sélection sera mémorisée après utilisation. Vous pouvez la modifier à tout moment dans les paramètres.',
    com_ui_fork_all_target: "Inclure tout à partir d'ici",
    com_ui_fork_branches: 'Inclure les branches associées',
    com_ui_fork_visible: 'Messages visibles uniquement',
    com_ui_fork_from_message: 'Sélectionner une option de bifurcation',
    com_ui_mention:
      'Mentionnez un point de terminaison, un assistant ou un préréglage pour basculer rapidement vers celui-ci',
    com_ui_import_conversation_file_type_error:
      "Type de fichier non pris en charge pour l'importation",
    com_ui_avatar: 'Avatar',
    com_ui_unknown: 'Inconnu',
    com_ui_result: 'Résultat',
    com_ui_image_gen: "Génération d'image",
    com_ui_assistant: 'Assistant',
    com_ui_assistants: 'Assistants virtuels',
    com_ui_attachment: 'Pièce jointe',
    com_ui_assistants_output: 'Sortie des assistants',
    com_ui_create: 'Créer',
    com_ui_delete_assistant_confirm:
      'Êtes-vous sûr de vouloir supprimer cet Assistant ? Cette action est irréversible.',
    com_ui_upload_delay:
      'Le téléversement de "{0}" prend plus de temps que prévu. Veuillez patienter pendant que le fichier termine son indexation pour la récupération.',
    com_ui_privacy_policy: 'Politique de confidentialité',
    com_ui_terms_of_service: "Conditions d'utilisation",
    com_ui_min_tags: 'Impossible de supprimer plus de valeurs, un minimum de {0} est requis.',
    com_ui_max_tags: 'Le nombre maximum autorisé est {0}, en utilisant les dernières valeurs.',
    com_auth_back_to_login: 'Retour à la connexion',
    com_endpoint_messages: 'Messages',
    com_endpoint_context_tokens: 'Jetons de contexte maximum',
    com_endpoint_context_info:
      'Le nombre maximum de jetons qui peuvent être utilisés pour le contexte. Utilisez ceci pour contrôler le nombre de jetons envoyés par requête. Si non spécifié, les valeurs par défaut du système seront utilisées en fonction de la taille de contexte connue des modèles. Définir des valeurs plus élevées peut entraîner des erreurs et/ou un coût en jetons plus élevé.',
    com_endpoint_prompt_prefix_placeholder:
      'Définir des instructions ou un contexte personnalisé. Ignoré si vide.',
    com_endpoint_instructions_assistants_placeholder:
      "Remplace les instructions de l'assistant. Cela est utile pour modifier le comportement au cas par cas.",
    com_endpoint_prompt_prefix_assistants_placeholder:
      "Définir des instructions ou un contexte supplémentaire en plus des instructions principales de l'Assistant. Ignoré si vide.",
    com_endpoint_prompt_prefix_assistants: 'Instructions supplémentaires pour les assistants',
    com_endpoint_instructions_assistants: 'Instructions de remplacement',
    com_endpoint_stop: "Séquences d'arrêt",
    com_endpoint_stop_placeholder: 'Séparez les valeurs en appuyant sur `Entrée`',
    com_endpoint_openai_max_tokens:
      "Champ `max_tokens` optionnel, représentant le nombre maximum de jetons pouvant être générés dans la complétion de conversation. La longueur totale des jetons d'entrée et des jetons générés est limitée par la longueur du contexte du modèle. Vous pouvez rencontrer des erreurs si ce nombre dépasse le maximum de jetons de contexte.",
    com_endpoint_openai_resend_files:
      'Renvoyer tous les fichiers précédemment joints. Remarque : cela augmentera le coût en jetons et vous pourriez rencontrer des erreurs avec de nombreuses pièces jointes.',
    com_endpoint_openai_stop: "Jusqu'à 4 séquences où l'API cessera de générer d'autres jetons.",
    com_endpoint_plug_resend_files: 'Renvoyer les fichiers',
    com_endpoint_plug_image_detail: "Détail de l'image",
    com_endpoint_assistant: 'Assistant de point de terminaison',
    com_endpoint_use_active_assistant: "Utiliser l'assistant actif",
    com_endpoint_assistant_model: "Modèle d'assistant",
    com_endpoint_assistant_placeholder:
      'Veuillez sélectionner un assistant dans le panneau latéral droit',
    com_nav_welcome_assistant: 'Veuillez sélectionner un assistant',
    com_nav_hide_panel: 'Masquer le panneau latéral le plus à droite',
    com_nav_plugin_install: 'Installer',
    com_nav_plugin_uninstall: 'Désinstaller',
  },
  p1 = {
    com_sidepanel_select_assistant: 'Выбрать Ассистента',
    com_sidepanel_assistant_builder: 'Конструктор Ассистента',
    com_sidepanel_attach_files: 'Прикрепить файлы',
    com_sidepanel_manage_files: 'Управление файлами',
    com_assistants_code_interpreter: 'Интерпретатор кода',
    com_assistants_code_interpreter_files:
      'Следующие файлы доступны только для Интерпретатора кода:',
    com_ui_examples: 'Примеры',
    com_ui_new_chat: 'Создать чат',
    com_ui_happy_birthday: 'Это мой первый день рождения!',
    com_ui_example_quantum_computing: 'Объясни квантовые вычисления простыми словами',
    com_ui_example_10_year_old_b_day:
      'У тебя есть креативные идеи для дня рождения 10-летнего ребенка?',
    com_ui_example_http_in_js: 'Как мне сделать HTTP-запрос в JavaScript?',
    com_ui_capabilities: 'Возможности',
    com_ui_capability_remember: 'Запоминает, что пользователь говорил ранее в разговоре',
    com_ui_capability_correction: 'Позволяет пользователю вносить корректировки после ответа',
    com_ui_capability_decline_requests: 'Обучен отклонять неподходящие запросы',
    com_ui_limitations: 'Ограничения',
    com_ui_limitation_incorrect_info: 'Иногда может генерировать некорректную информацию',
    com_ui_limitation_harmful_biased:
      'Иногда может создавать вредные инструкции или предвзятое содержимое',
    com_ui_limitation_limited_2021: 'Ограниченные знания о мире и событиях после 2021 года',
    com_ui_experimental: 'Экспериментальный',
    com_ui_input: 'Ввод',
    com_ui_close: 'Закрыть',
    com_ui_model: 'Модель',
    com_ui_select_model: 'Выберите модель',
    com_ui_use_prompt: 'Использовать промт',
    com_ui_prev: 'Предыдущий',
    com_ui_next: 'Следующий',
    com_ui_stop: 'Остановить генерацию',
    com_ui_prompt_templates: 'Шаблоны промтов',
    com_ui_hide_prompt_templates: 'Скрыть шаблоны промтов',
    com_ui_showing: 'Показано',
    com_ui_of: 'из',
    com_ui_entries: 'записей',
    com_ui_pay_per_call: 'Все AI-разговоры в одном месте. Оплачивайте за вызовы, а не за месяц',
    com_ui_new_footer: 'Все AI-разговоры в одном месте.',
    com_ui_enter: 'Ввести',
    com_ui_submit: 'Отправить',
    com_ui_upload_success: 'Файл успешно загружен',
    com_ui_upload_invalid: 'Недопустимый файл для загрузки',
    com_ui_cancel: 'Отмена',
    com_ui_save: 'Сохранить',
    com_ui_save_submit: 'Сохранить и отправить',
    com_ui_copy_to_clipboard: 'Копировать в буфер обмена',
    com_ui_copied_to_clipboard: 'Скопировано в буфер обмена',
    com_ui_regenerate: 'Повторная генерация',
    com_ui_continue: 'Продолжить',
    com_ui_edit: 'Редактировать',
    com_ui_success: 'Успешно',
    com_ui_all: 'все',
    com_ui_clear: 'Удалить',
    com_ui_revoke: 'Отозвать',
    com_ui_revoke_info: 'Отозвать все предоставленные пользователем учетные данные',
    com_ui_import_conversation: 'Импортировать',
    com_ui_import_conversation_info: 'Импортировать беседы из файла JSON',
    com_ui_import_conversation_success: 'Беседы успешно импортированы',
    com_ui_import_conversation_error: 'При импорте бесед произошла ошибка',
    com_ui_confirm_action: 'Подтвердить действие',
    com_ui_chats: 'чаты',
    com_ui_delete: 'Удалить',
    com_ui_preview: 'Предпросмотр',
    com_ui_upload: 'Загрузить',
    com_ui_connect: 'Подключить',
    com_ui_share: 'Поделиться',
    com_ui_copy_link: 'Скопировать ссылку',
    com_ui_update_link: 'Обновить ссылку',
    com_ui_create_link: 'Создать ссылку',
    com_ui_share_link_to_chat: 'Поделиться ссылкой в чате',
    com_ui_share_error: 'Произошла ошибка при попытке поделиться ссылкой на чат',
    com_ui_share_create_message:
      'Ваше имя и любые сообщения, которые вы добавите после обмена, останутся конфиденциальными.',
    com_ui_share_created_message:
      'Создана общая ссылка на ваш чат. Управляйте ранее общими чатами в любое время через Настройки.',
    com_ui_share_update_message:
      'Ваше имя, пользовательские инструкции и любые сообщения, которые вы добавите после обмена, останутся конфиденциальными.',
    com_ui_share_updated_message:
      'Обновлена общая ссылка на ваш чат. Управляйте ранее общими чатами в любое время через Настройки.',
    com_ui_shared_link_not_found: 'Общая ссылка не найдена',
    com_ui_delete_conversation: 'Удалить чат?',
    com_ui_delete_conversation_confirm: 'Будет удален следующий чат: ',
    com_ui_rename: 'Переименовать',
    com_ui_archive: 'Архивировать',
    com_ui_archive_error: 'Nie udało się archiwizować rozmowy',
    com_ui_unarchive: 'разархивировать',
    com_ui_unarchive_error: 'Nie udało się odtworzyć rozmowy z archiwum',
    com_ui_more_options: 'Еще',
    com_auth_error_login:
      'Не удалось войти с предоставленной информацией. Пожалуйста, проверьте ваши учетные данные и попробуйте снова.',
    com_auth_error_login_rl:
      'Слишком много попыток входа в систему за короткий промежуток времени. Пожалуйста, повторите попытку позже.',
    com_auth_error_login_ban:
      'Ваша учетная запись была временно заблокирована в связи с нарушениями нашего сервиса.',
    com_auth_error_login_server:
      'Произошла внутренняя ошибка сервера. Пожалуйста, подождите несколько минут и повторите попытку.',
    com_auth_no_account: 'Еще не зарегистрированы?',
    com_auth_sign_up: 'Зарегистрироваться',
    com_auth_sign_in: 'Войти',
    com_auth_google_login: 'Войти с помощью Google',
    com_auth_facebook_login: 'Войти с помощью Facebook',
    com_auth_github_login: 'Войти с помощью Github',
    com_auth_discord_login: 'Войти с помощью Discord',
    com_auth_email: 'Email',
    com_auth_email_required: 'Email обязателен',
    com_auth_email_min_length: 'Email должен содержать не менее 6 символов',
    com_auth_email_max_length: 'Email не может быть длиннее 120 символов',
    com_auth_email_pattern: 'Вы должны ввести действительный адрес электронной почты',
    com_auth_email_address: 'Адрес электронной почты',
    com_auth_password: 'Пароль',
    com_auth_password_required: 'Пароль обязателен',
    com_auth_password_min_length: 'Пароль должен содержать не менее 8 символов',
    com_auth_password_max_length: 'Пароль должен быть не более 128 символов',
    com_auth_password_forgot: 'Забыли пароль?',
    com_auth_password_confirm: 'Подтвердите пароль',
    com_auth_password_not_match: 'Пароли не совпадают',
    com_auth_continue: 'Продолжить',
    com_auth_create_account: 'Создать аккаунт',
    com_auth_error_create:
      'Возникла ошибка при попытке зарегистрировать ваш аккаунт. Пожалуйста, попробуйте еще раз.',
    com_auth_full_name: 'Полное имя',
    com_auth_name_required: 'Имя обязательно',
    com_auth_name_min_length: 'Имя должно содержать не менее 3 символов',
    com_auth_name_max_length: 'Имя должно быть короче 80 символов',
    com_auth_username: 'Имя пользователя (необязательно)',
    com_auth_username_required: 'Имя пользователя обязательно',
    com_auth_username_min_length: 'Имя пользователя должно содержать не менее 2 символов',
    com_auth_username_max_length: 'Имя пользователя должно быть не более 20 символов',
    com_auth_already_have_account: 'Уже зарегистрированы?',
    com_auth_login: 'Войти',
    com_auth_reset_password: 'Сбросить пароль',
    com_auth_click: 'Нажмите',
    com_auth_here: 'ЗДЕСЬ',
    com_auth_to_reset_your_password: 'чтобы сбросить ваш пароль.',
    com_auth_reset_password_link_sent: 'Письмо отправлено',
    com_auth_reset_password_email_sent:
      'На вашу почту было отправлено письмо с дальнейшими инструкциями по сбросу пароля.',
    com_auth_error_reset_password:
      'При сбросе пароля возникла проблема. Пользователь с указанным адресом электронной почты не найден. Пожалуйста, попробуйте еще раз.',
    com_auth_reset_password_success: 'Сброс пароля успешно выполнен',
    com_auth_login_with_new_password: 'Теперь вы можете войти с новым паролем.',
    com_auth_error_invalid_reset_token: 'Этот токен сброса пароля больше не действителен.',
    com_auth_click_here: 'Нажмите здесь',
    com_auth_to_try_again: 'чтобы попробовать снова.',
    com_auth_submit_registration: 'Отправить регистрацию',
    com_auth_welcome_back: 'Добро пожаловать',
    com_auth_back_to_login: 'Вернуться к авторизации',
    com_endpoint_open_menu: 'Открыть меню',
    com_endpoint_bing_enable_sydney: 'Включить Sydney',
    com_endpoint_bing_to_enable_sydney: 'Чтобы включить Sydney',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      'Bing может использовать до 7 тысяч токенов для "контекста", на который он может ссылаться в разговоре. Точный предел неизвестен, но превышение 7 тысяч токенов может вызвать ошибки.',
    com_endpoint_bing_system_message_placeholder:
      'ПРЕДУПРЕЖДЕНИЕ: Неправильное использование этой функции может привести к БАНУ на использование Bing! Нажмите на "Системное сообщение" для получения полных инструкций и значения по умолчанию, которое является предустановкой "Sydney", считающейся безопасной.',
    com_endpoint_system_message: 'Системное сообщение',
    com_endpoint_message: 'Сообщение',
    com_endpoint_message_not_appendable: 'Отредактируйте свое сообщение или перегенерируйте.',
    com_endpoint_default_blank: 'по умолчанию: пусто',
    com_endpoint_default_false: 'по умолчанию: false',
    com_endpoint_default_creative: 'по умолчанию: креативный',
    com_endpoint_default_empty: 'по умолчанию: пусто',
    com_endpoint_default_with_num: 'по умолчанию: {0}',
    com_endpoint_context: 'Контекст',
    com_endpoint_tone_style: 'Стиль тона',
    com_endpoint_token_count: 'Количество токенов',
    com_endpoint_output: 'Вывод',
    com_endpoint_google_temp:
      'Более высокие значения = более случайные результаты, более низкие значения = более фокусированные и детерминированные результаты. Мы рекомендуем изменять это или Top P, но не оба значения одновременно.',
    com_endpoint_google_topp:
      'Top-p изменяет то, как модель выбирает токены для вывода. Токены выбираются из наиболее вероятных K (см. параметр topK) до наименее вероятных, пока сумма их вероятностей не достигнет значения top-p.',
    com_endpoint_google_topk:
      'Top-k изменяет то, как модель выбирает токены для вывода. Top-k равное 1 означает, что выбирается наиболее вероятный токен из всего словаря модели (так называемое жадное декодирование), а Top-k равное 3 означает, что следующий токен выбирается из трех наиболее вероятных токенов (с использованием температуры).',
    com_endpoint_google_maxoutputtokens:
      ' 	Максимальное количество токенов, которые могут быть сгенерированы в ответе. Укажите меньшее значение для более коротких ответов и большее значение для более длинных ответов.',
    com_endpoint_google_custom_name_placeholder: 'Задайте кастомное имя для Google',
    com_endpoint_prompt_prefix_placeholder:
      'Задайте пользовательские инструкции или контекст. Игнорируется, если пусто.',
    com_endpoint_custom_name: 'Кастомное имя',
    com_endpoint_prompt_prefix: 'Префикс промта',
    com_endpoint_temperature: 'Температура',
    com_endpoint_default: 'по умолчанию',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Максимальное количество выводимых токенов',
    com_endpoint_openai_temp:
      'Более высокие значения = более случайные результаты, более низкие значения = более фокусированные и детерминированные результаты. Мы рекомендуем изменять это или Top P, но не оба значения одновременно.',
    com_endpoint_openai_max:
      'Максимальное количество генерируемых токенов. Общая длина входных токенов и сгенерированных токенов ограничена длиной контекста модели.',
    com_endpoint_openai_topp:
      'Альтернатива выбору с использованием температуры, называемая выбором по ядру, при которой модель учитывает результаты токенов с наибольшей вероятностью top_p. Таким образом, значение 0,1 означает, что рассматриваются только токены, составляющие верхние 10% вероятностной массы. Мы рекомендуем изменять это или температуру, но не оба значения одновременно.',
    com_endpoint_openai_freq:
      'Число от -2.0 до 2.0. Положительные значения штрафуют новые токены на основе их частоты в тексте до сих пор, уменьшая вероятность модели повторить ту же строку дословно.',
    com_endpoint_openai_pres:
      'Число от -2.0 до 2.0. Положительные значения штрафуют новые токены на основе того, появляются ли они в тексте до сих пор, увеличивая вероятность модели говорить о новых темах.',
    com_endpoint_openai_custom_name_placeholder: 'Задайте кастомное имя для ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Задайте кастомные промты для включения в системное сообщение. По умолчанию: нет',
    com_endpoint_anthropic_temp:
      'Диапазон значений от 0 до 1. Используйте значение temp ближе к 0 для аналитических / множественного выбора и ближе к 1 для креативных и генеративных задач. Мы рекомендуем изменять это или Top P, но не оба значения одновременно.',
    com_endpoint_anthropic_topp:
      'Top P изменяет то, как модель выбирает токены для вывода. Токены выбираются из наиболее вероятных (см. параметр topK) до наименее вероятных, пока сумма их вероятностей не достигнет значения top-p.',
    com_endpoint_anthropic_topk:
      'Top K изменяет то, как модель выбирает токены для вывода. Top K равное 1 означает, что выбирается наиболее вероятный токен из всего словаря модели (так называемое жадное декодирование), а Top K равное 3 означает, что следующий токен выбирается из трех наиболее вероятных токенов (с использованием температуры).',
    com_endpoint_anthropic_maxoutputtokens:
      'Максимальное количество токенов, которые могут быть сгенерированы в ответе. Укажите меньшее значение для более коротких ответов и большее значение для более длинных ответов.',
    com_endpoint_anthropic_custom_name_placeholder: 'Задайте кастомное имя для Anthropic',
    com_endpoint_frequency_penalty: 'Штраф за частоту',
    com_endpoint_presence_penalty: 'Штраф за присутствие',
    com_endpoint_plug_use_functions: 'Использовать функции',
    com_endpoint_plug_skip_completion: 'Пропустить завершение',
    com_endpoint_disabled_with_tools: 'отключено с плагинами',
    com_endpoint_disabled_with_tools_placeholder: 'Отключено при включённых плагинах',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Задайте кастомные инструкции для включения в системное сообщение. По умолчанию: нет',
    com_endpoint_import: 'Импорт',
    com_endpoint_set_custom_name:
      'Задайте кастомное имя на случай, если вы сможете найти эту предустановку :)',
    com_endpoint_preset_delete_confirm: 'Вы уверены, что хотите удалить этот пресет?',
    com_endpoint_preset_clear_all_confirm: 'Вы уверены, что хотите удалить все ваши пресеты?',
    com_endpoint_preset_import: 'Пресет Импортирован!',
    com_endpoint_preset_import_error:
      'Произошла ошибка при импорте вашего пресета. Пожалуйста, попробуйте еще раз.',
    com_endpoint_preset_save_error:
      'Произошла ошибка при сохранении вашего пресета. Пожалуйста, попробуйте еще раз.',
    com_endpoint_preset_delete_error:
      'Произошла ошибка при удалении вашего пресета. Пожалуйста, попробуйте еще раз.',
    com_endpoint_preset_default_removed: 'больше не пресет по умолчанию.',
    com_endpoint_preset_default_item: 'По умолчанию:',
    com_endpoint_preset_default_none: 'Активных пресетов по умолчанию нет.',
    com_endpoint_preset_title: 'Пресет',
    com_endpoint_preset_saved: 'Сохранено!',
    com_endpoint_preset_default: 'теперь пресет По умолчаанию.',
    com_endpoint_preset: 'пресет',
    com_endpoint_presets: 'пресеты',
    com_endpoint_preset_selected: 'Пресет Активирован!',
    com_endpoint_preset_selected_title: 'Активирован!',
    com_endpoint_preset_name: 'Имя пресета',
    com_endpoint_new_topic: 'Новая тема',
    com_endpoint: 'Эндпоинт',
    com_endpoint_hide: 'Скрыть',
    com_endpoint_show: 'Показать',
    com_endpoint_examples: 'Примеры',
    com_endpoint_completion: 'Завершение',
    com_endpoint_agent: 'Агент',
    com_endpoint_show_what_settings: 'Показать настройки {0}',
    com_endpoint_save: 'Сохранить',
    com_endpoint_export: 'Экспорт',
    com_endpoint_save_as_preset: 'Сохранить как Пресет',
    com_endpoint_presets_clear_warning:
      'Вы уверены, что хотите удалить все пресеты? Это действие необратимо и восстановление невозможно.',
    com_endpoint_not_implemented: 'Не реализовано',
    com_endpoint_no_presets: 'Пока нет пресетов, используйте кнопку настроек чтобы создать его',
    com_endpoint_not_available: 'Нет доступных эндпоинтов',
    com_endpoint_view_options: 'Просмотреть Настройки',
    com_endpoint_save_convo_as_preset: 'Сохранить текущий разговор как Пресет',
    com_endpoint_my_preset: 'Мой Пресет',
    com_endpoint_agent_model: 'Модель агента (Рекомендуется: GPT-3.5)',
    com_endpoint_completion_model: 'Модель завершения (Рекомендуется: GPT-4)',
    com_endpoint_func_hover: 'Включить использование плагинов как функции OpenAI',
    com_endpoint_skip_hover:
      'Пропустить этап завершения, который проверяет окончательный ответ и сгенерированные шаги',
    com_endpoint_config_token: 'Токен конфигурации',
    com_endpoint_config_key: 'Указать ключ к API',
    com_endpoint_config_placeholder: 'Укажите ваш ключ к API в меню сверху для начала разговора.',
    com_endpoint_config_key_for: 'Установить ключ к API для',
    com_endpoint_config_key_name: 'Ключ',
    com_endpoint_config_value: 'Введите значение для',
    com_endpoint_config_key_name_placeholder: 'Сначала укажите ключ к API',
    com_endpoint_config_key_encryption: 'Ваш ключ зашифрован и будет удалён',
    com_endpoint_config_key_expiry: 'срок действия',
    com_endpoint_config_click_here: 'Нажми Здесь',
    com_endpoint_config_google_service_key: 'Google Service Account Key',
    com_endpoint_config_google_cloud_platform: '(из Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'Google API Key',
    com_endpoint_config_google_gemini_api: '(Gemini API)',
    com_endpoint_config_google_api_info:
      'Чтобы получить ключ к API Generative Language (для Gemini),',
    com_endpoint_config_key_import_json_key: 'Импортировать Service Account JSON Key.',
    com_endpoint_config_key_import_json_key_success:
      'Успешно Импортирован Service Account JSON Key',
    com_endpoint_config_key_import_json_key_invalid:
      'Некорректный Service Account JSON Key, Вы импортировали верный файл?',
    com_endpoint_config_key_get_edge_key: 'Чтобы получить ваш токен доступа к Bing, войдите в',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Пока вы на сайте, используйте dev tools или расширение чтобы скопировать содержимое куки _U. Если не получается, следуйте этим',
    com_endpoint_config_key_edge_instructions: 'инструкциям',
    com_endpoint_config_key_edge_full_key_string: 'чтобы получить все строки cookie.',
    com_endpoint_config_key_chatgpt:
      'Чтобы получить токен доступа к "Бесплатной Версии" ChatGPT, войдите в',
    com_endpoint_config_key_chatgpt_then_visit: 'затем посетите',
    com_endpoint_config_key_chatgpt_copy_token: 'Скопируйте токен доступа.',
    com_endpoint_config_key_google_need_to: 'Вам нужно',
    com_endpoint_config_key_google_vertex_ai: 'Активировать Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API в Google Cloud, после',
    com_endpoint_config_key_google_service_account: 'Создать Service Account',
    com_endpoint_config_key_google_vertex_api_role:
      "Убедитесь что нажали на 'Create and Continue' чтобы получить как минимум 'Vertex AI User'. Наконец, создайте JSON-ключ чтобы импортировать его сюда.",
    com_nav_welcome_message: 'Чем я могу помочь вам сегодня?',
    com_nav_auto_scroll: 'Автоматически проматывать к самым новым сообщениям при открытии',
    com_nav_hide_panel: 'Скрыть правую боковую панель',
    com_nav_modular_chat: 'Разрешить менять точки подключения в середине разговора',
    com_nav_latex_parsing: 'Обработка LaTeX в сообщениях (может повлиять на производительность)',
    com_nav_plugin_store: 'Магазин плагинов',
    com_nav_plugin_search: 'Поиск плагинов',
    com_nav_plugin_auth_error:
      'При попытке аутентификации этого плагина произошла ошибка. Пожалуйста, попробуйте еще раз.',
    com_nav_export_filename: 'Имя файла',
    com_nav_export_filename_placeholder: 'Задайте имя файла',
    com_nav_export_type: 'Тип',
    com_nav_export_include_endpoint_options: 'Включить параметры эндпоинта',
    com_nav_enabled: 'Включено',
    com_nav_not_supported: 'Не поддерживается',
    com_nav_export_all_message_branches: 'Экспортировать все ветки сообщений',
    com_nav_export_recursive_or_sequential: 'Рекурсивно или последовательно?',
    com_nav_export_recursive: 'Рекурсивно',
    com_nav_export_conversation: 'Экспортировать разговор',
    com_nav_export: 'Экспорт',
    com_nav_shared_links: 'Связываемые ссылки',
    com_nav_shared_links_manage: 'Управление',
    com_nav_shared_links_empty: 'У вас нет связываемых ссылок.',
    com_nav_shared_links_name: 'Naam',
    com_nav_shared_links_date_shared: 'Datum gedeeld',
    com_nav_my_files: 'Мои файлы',
    com_nav_theme: 'Тема',
    com_nav_theme_system: 'Системная',
    com_nav_theme_dark: 'Темная',
    com_nav_theme_light: 'Светлая',
    com_nav_user_name_display: 'Отображать имя пользователя в сообщениях',
    com_nav_save_drafts: 'Сохранить черновики локально',
    com_nav_language: 'Локализация',
    com_nav_setting_account: 'Аккаунт',
    com_nav_profile_picture: 'Изображение профиля',
    com_nav_change_picture: 'Изменить изображение',
    com_nav_lang_auto: 'Автоопределение',
    com_nav_clear: 'Очистить',
    com_nav_clear_all_chats: 'Удалить все чаты',
    com_nav_confirm_clear: 'Подтвердить удаление',
    com_nav_close_sidebar: 'Закрыть боковую панель',
    com_nav_open_sidebar: 'Открыть боковую панель',
    com_nav_send_message: 'Отправить сообщение',
    com_nav_log_out: 'Выйти',
    com_nav_user: 'ПОЛЬЗОВАТЕЛЬ',
    com_nav_archived_chats: 'Архивированные чаты',
    com_nav_archived_chats_manage: 'Управление',
    com_nav_archived_chats_empty: 'У вас нет архивированных разговоров.',
    com_nav_archive_all_chats: 'Архивировать все чаты',
    com_nav_archive_all: 'Архивировать все',
    com_nav_archive_name: 'Имя',
    com_nav_archive_created_at: 'Дата создания',
    com_nav_clear_conversation: 'Удалить разговоры',
    com_nav_clear_conversation_confirm_message:
      'Вы уверены, что хотите удалить все разговоры? Это действие нельзя отменить.',
    com_nav_help_faq: 'Помощь и Вопросы',
    com_nav_settings: 'Настройки',
    com_nav_search_placeholder: 'Поиск сообщений',
    com_nav_setting_general: 'Общие',
    com_nav_setting_beta: 'Бета-функции',
    com_nav_setting_data: 'Управление данными',
    com_assistants_knowledge: 'База знаний',
    com_assistants_knowledge_info:
      'Если вы загрузите файлы в раздел Знания, разговоры с вашим ассистентом могут включать содержимое файлов.',
    com_assistants_knowledge_disabled:
      'Ассистент должен быть сохранён, и Интерпретатор кода (Code Interpreter) или Поиск (Retrieval) должны быть включены и сохранены перед загрузкой файлов к Базе Знаний.',
    com_assistants_retrieval: 'Поиск (Retrieval)',
    com_assistants_name_placeholder: 'Необязательно: имя ассистента',
    com_assistants_instructions_placeholder: 'Системные инструкции, которые использует ассистент',
    com_assistants_description_placeholder: 'Необязательно: описание вашего ассистента',
    com_assistants_actions_disabled:
      'Вам нужно сохранить ассистента, прежде чем добавлять Actions.',
    com_assistants_update_success: 'Успешно обновлено',
    com_assistants_update_error: 'Произошла ошибка при обновлении вашего ассистента.',
    com_assistants_create_success: 'Успешно сохранено',
    com_assistants_create_error: 'Произошла ошибка при сохранении вашего ассистента.',
    com_ui_attach_error_type: 'Неподдерживаемый тип файла для этого режима:',
    com_ui_attach_error_size: 'Превышен лимит размера файла для этого режима:',
    com_ui_attach_error:
      'Невозможно прикрепить файл. Создайте новый или выберите разговор, или попробуйте обновить страницу.',
    com_ui_name: 'Имя',
    com_ui_instructions: 'Инструкции',
    com_ui_description: 'Описание',
    com_ui_error: 'Ошибка',
    com_ui_select: 'Выбрать',
    com_ui_upload_files: 'Загрузить файлы',
    com_ui_upload_error: 'Произошла ошибка при загрузке вашего файла',
    com_user_message: 'Вы',
    com_assistants_file_search: 'Поиск файлов',
    com_assistants_file_search_info:
      'Прикрепление векторных хранилищ для Поиска по файлам пока не поддерживается. Вы можете прикрепить их из Песочницы провайдера или прикрепить файлы к сообщениям для поиска по файлам в отдельных диалогах.',
    com_assistants_non_retrieval_model:
      'Поиск по файлам недоступен для этой модели. Пожалуйста, выберите другую модель.',
    com_ui_attach_error_openai: 'Невозможно прикрепить файлы ассистента к другим режимам',
    com_ui_attach_warn_endpoint:
      'Файлы сторонних приложений могут быть проигнорированы без совместимого плагина',
    com_ui_assistant_deleted: 'Ассистент успешно удален',
    com_ui_assistant_delete_error: 'Произошла ошибка при удалении ассистента',
    com_ui_copied: 'Скопировано',
    com_ui_copy_code: 'Копировать код',
    com_nav_source_chat: 'Просмотреть исходный чат',
    com_ui_date_today: 'Сегодня',
    com_ui_date_yesterday: 'Вчера',
    com_ui_date_previous_7_days: 'Предыдущие 7 дней',
    com_ui_date_previous_30_days: 'За последние 30 дней',
    com_ui_date_january: 'Январь',
    com_ui_date_february: 'Февраль',
    com_ui_date_march: 'Март',
    com_ui_date_april: 'Апрель',
    com_ui_date_may: 'Май',
    com_ui_date_june: 'Июнь',
    com_ui_date_july: 'Июль',
    com_ui_date_august: 'Август',
    com_ui_date_september: 'Сентябрь',
    com_ui_date_october: 'Октябрь',
    com_ui_date_november: 'Ноябрь',
    com_ui_date_december: 'Декабрь',
    com_ui_nothing_found: 'Ничего не найдено',
    com_ui_go_to_conversation: 'Перейти к беседе',
    com_error_moderation:
      'К сожалению, отправленный вами контент был помечен нашей системой модерации как не соответствующий правилам сообщества. Мы не можем продолжить обсуждение этой конкретной темы. Если у вас есть другие вопросы или темы, которые вы хотели бы обсудить, пожалуйста, отредактируйте сообщение или начните новый диалог.',
    com_error_no_user_key: 'Ключ не найден. Пожалуйста, укажите ключ и повторите попытку.',
    com_error_no_base_url: 'Базовый URL не найден. Пожалуйста, укажите его и повторите попытку.',
    com_error_invalid_user_key:
      'Предоставлен некорректный ключ. Пожалуйста, укажите действительный ключ и повторите попытку.',
    com_error_expired_user_key:
      'Предоставленный ключ для {0} истек {1}. Пожалуйста, укажите новый ключ и повторите попытку.',
    com_files_no_results: 'Нет результатов',
    com_files_filter: 'Фильтр файлов',
    com_files_number_selected: 'Выбрано {0} из {1} файл(а/ов)',
    com_sidepanel_parameters: 'Параметры',
    com_sidepanel_hide_panel: 'Скрыть панель',
    com_assistants_capabilities: 'Возможности',
    com_assistants_image_vision: 'Анализ изображений',
    com_assistants_search_name: 'Поиск ассистентов по имени',
    com_assistants_tools: 'Инструменты',
    com_assistants_actions: 'Действия',
    com_assistants_add_tools: 'Добавить инструменты',
    com_assistants_add_actions: 'Добавить действия',
    com_assistants_available_actions: 'Доступные действия',
    com_assistants_running_action: 'Выполняется действие',
    com_assistants_completed_action: 'Общался с {0}',
    com_assistants_completed_function: 'Выполнено: {0}',
    com_assistants_function_use: 'Ассистент использовал {0}',
    com_assistants_domain_info: 'Ассистент отправил эту информацию {0}',
    com_assistants_delete_actions_success: 'Действие успешно удалено из ассистента',
    com_assistants_update_actions_success: 'Действие успешно создано или обновлено',
    com_assistants_update_actions_error: 'Произошла ошибка при создании или обновлении действия.',
    com_assistants_delete_actions_error: 'Произошла ошибка при удалении действия.',
    com_assistants_actions_info:
      'Позвольте вашему ассистенту получать информацию или выполнять действия через API',
    com_ui_field_required: 'Это поле обязательно для заполнения',
    com_ui_download_error: 'Ошибка загрузки файла. Возможно, файл был удален.',
    com_ui_on: 'Вкл.',
    com_ui_off: 'Выкл.',
    com_ui_yes: 'Да',
    com_ui_no: 'Нет',
    com_ui_ascending: 'По возрастанию',
    com_ui_descending: 'По убыванию',
    com_ui_show_all: 'Показать все',
    com_ui_date: 'Дата',
    com_ui_storage: 'Хранилище',
    com_ui_context: 'Контекст',
    com_ui_size: 'Размер',
    com_ui_host: 'Хост',
    com_ui_update: 'Обновить',
    com_ui_authentication: 'Аутентификация',
    com_ui_select_search_model: 'Поиск модели по названию',
    com_ui_select_search_plugin: 'Поиск плагина по названию',
    com_ui_none_selected: 'Ничего не выбрано',
    com_ui_fork: 'Разделить',
    com_ui_fork_info_1: 'Используйте эту настройку для разделения сообщений с нужным поведением.',
    com_ui_fork_info_2:
      '"Форкинг" означает создание новой ветви разговора, которая начинается или заканчивается на определенных сообщениях текущего разговора, создавая копию в соответствии с выбранными параметрами.',
    com_ui_fork_info_3:
      '"Целевое сообщение" относится либо к сообщению, из которого было открыто это всплывающее окно, либо, если вы отметите "{0}", к последнему сообщению в диалоге.',
    com_ui_fork_info_visible:
      'Эта опция создает ветвь только для видимых сообщений, то есть прямой путь к целевому сообщению без боковых ветвей.',
    com_ui_fork_info_branches:
      'Эта опция создает ветвление видимых сообщений вместе со связанными ветвями; другими словами, прямой путь к целевому сообщению, включая ветви на этом пути.',
    com_ui_fork_info_target:
      'Эта опция создает ветвление всех сообщений, ведущих к целевому сообщению, включая соседние. Другими словами, включаются все ветви сообщений, независимо от того, видны они или находятся по одному пути.',
    com_ui_fork_info_start:
      'Если отмечено, ветвление начнется с этого сообщения до последнего сообщения в разговоре в соответствии с выбранным выше поведением.',
    com_ui_fork_info_remember:
      'Отметьте это, чтобы запомнить выбранные вами параметры для будущего использования, что позволит быстрее создавать ответвления бесед по вашим предпочтениям.',
    com_ui_fork_success: 'Разветвление беседы успешно выполнено',
    com_ui_fork_processing: 'Разделение беседы...',
    com_ui_fork_error: 'Произошла ошибка при создании ответвления разговора',
    com_ui_fork_change_default: 'Изменить вариант ветвления по умолчанию',
    com_ui_fork_default: 'Использовать вариант по умолчанию',
    com_ui_fork_remember: 'Запомнить',
    com_ui_fork_split_target_setting: 'По умолчанию создавать ветку от целевого сообщения',
    com_ui_fork_split_target: 'Начать ветвление здесь',
    com_ui_fork_remember_checked:
      'Ваш выбор будет сохранен после использования. Вы можете изменить его в любое время в настройках.',
    com_ui_fork_all_target: 'Включить все сюда',
    com_ui_fork_branches: 'Включить связанные ветки',
    com_ui_fork_visible: 'Только видимые сообщения',
    com_ui_fork_from_message: 'Выберите вариант ответвления',
    com_ui_mention:
      'Упомянуть конечную точку, помощника или предустановку для быстрого переключения',
    com_ui_import_conversation_file_type_error: 'Неподдерживаемый тип импорта',
    com_ui_avatar: 'Аватар',
    com_ui_unknown: 'Неизвестно',
    com_ui_result: 'Результат',
    com_ui_image_gen: 'Генератор изображений',
    com_ui_assistant: 'Помощник',
    com_ui_assistants: 'Ассистенты',
    com_ui_attachment: 'Вложение',
    com_ui_assistants_output: 'Вывод ассистентов',
    com_ui_create: 'Создать',
    com_ui_delete_assistant_confirm:
      'Вы действительно хотите удалить этого ассистента? Это действие необратимо.',
    com_ui_upload_delay:
      'Загрузка "{0}" занимает больше времени, чем ожидалось. Пожалуйста, подождите, пока файл полностью проиндексируется для доступа.',
    com_ui_privacy_policy: 'Политика конфиденциальности',
    com_ui_terms_of_service: 'Условия использования',
    com_ui_min_tags: 'Нельзя удалить больше значений, требуется минимум {0}.',
    com_ui_max_tags: 'Максимально допустимое количество - {0}, используются последние значения.',
    com_endpoint_messages: 'Сообщения',
    com_endpoint_context_tokens: 'Максимальное количество контекстных токенов',
    com_endpoint_context_info:
      'Максимальное количество токенов, которое может быть использовано для контекста. Используется для контроля количества токенов, отправляемых за один запрос. Если не указано, будут использованы системные значения по умолчанию, основанные на известном размере контекста моделей. Установка более высоких значений может привести к ошибкам и/или более высокой стоимости токенов.',
    com_endpoint_instructions_assistants_placeholder:
      'Переопределяет инструкции для ассистента. Это полезно для изменения поведения для отдельного запуска.',
    com_endpoint_prompt_prefix_assistants_placeholder:
      'Задайте дополнительные инструкции или контекст сверху основных инструкций ассистента. Игнорируется, если пусто.',
    com_endpoint_prompt_prefix_assistants: 'Дополнительные инструкции',
    com_endpoint_instructions_assistants: 'Инструкции для ассистентов',
    com_endpoint_stop: 'Стоп-последовательности',
    com_endpoint_stop_placeholder: 'Разделяйте значения нажатием `Enter`',
    com_endpoint_openai_max_tokens:
      'Необязательное поле `max_tokens`, задающее максимальное количество токенов, которое может быть сгенерировано в ответе чата. Общая длина входных токенов и сгенерированных токенов ограничена длиной контекста модели. Вы можете получить ошибку, если это число превысит максимальную длину контекста.',
    com_endpoint_openai_resend:
      'Повторно отправить все ранее прикрепленные изображения. Примечание: это может значительно увеличить стоимость токенов, и при большом количестве прикрепленных изображений могут возникнуть ошибки.',
    com_endpoint_openai_resend_files:
      'Повторно отправить все ранее прикрепленные файлы. Примечание: это увеличит расход токенов, и при большом количестве вложений могут возникнуть ошибки.',
    com_endpoint_openai_detail:
      'Разрешение для запросов Vision. "Низкое" - дешевле и быстрее, "Высокое" - более детализировано и дорогое, а "Авто" автоматически выберет один из двух вариантов в зависимости от разрешения изображения.',
    com_endpoint_openai_stop:
      'До 4 последовательностей, после которых API прекратит генерировать дальнейшие токены.',
    com_endpoint_plug_resend_files: 'Повторить отправку файлов',
    com_endpoint_plug_resend_images: 'Повторно отправить изображения',
    com_endpoint_plug_image_detail: 'Детали изображения',
    com_endpoint_assistant: 'Ассистент',
    com_endpoint_use_active_assistant: 'Использовать активного ассистента',
    com_endpoint_assistant_model: 'Модель ассистента',
    com_endpoint_assistant_placeholder: 'Выберите Ассистента в правой боковой панели',
    com_nav_welcome_assistant: 'Выберите ассистента',
    com_nav_plugin_install: 'Установить',
    com_nav_plugin_uninstall: 'Удалить',
    com_nav_tool_add: 'Добавить',
    com_nav_tool_remove: 'Удалить',
    com_nav_tool_dialog: 'Инструменты помощника',
    com_nav_tool_dialog_description:
      'Ассистент должен быть сохранен для применения выбранных инструментов.',
    com_show_agent_settings: 'Настройки агента',
    com_show_completion_settings: 'Показать настройки завершения',
    com_hide_examples: 'Скрыть примеры',
    com_show_examples: 'Показать примеры',
    com_nav_tool_search: 'Поиск инструментов',
    com_nav_enter_to_send: 'Отправить сообщение нажатием Enter',
    com_nav_show_code: 'Всегда показывать код при использовании интерпретатора',
    com_nav_lang_english: 'Английский',
    com_nav_lang_chinese: 'Китайский',
    com_nav_lang_german: 'Немецкий',
    com_nav_lang_spanish: 'Испанский',
    com_nav_lang_french: 'Французский',
    com_nav_lang_italian: 'Итальянский',
    com_nav_lang_polish: 'Польский',
    com_nav_lang_brazilian_portuguese: 'Португальский (Бразилия)',
    com_nav_lang_russian: 'Русский',
    com_nav_lang_japanese: 'Язык',
    com_nav_lang_swedish: 'Шведский',
    com_nav_lang_korean: 'Корейский',
    com_nav_lang_vietnamese: 'Вьетнамский',
    com_nav_lang_traditionalchinese: 'Традиционный китайский',
    com_nav_lang_arabic: 'Арабский',
    com_nav_lang_turkish: 'Турецкий',
    com_nav_lang_dutch: 'Голландский',
    com_nav_lang_indonesia: 'Индонезийский',
    com_nav_lang_hebrew: 'Иврит',
  },
  h1 = {
    com_error_moderation:
      '送信されたコンテンツは、コミュニティガイドラインに準拠していないとして、投稿監視システムによって検知されました。この特定のトピックについては処理を続行できません。他に質問や調べたいトピックがある場合は、メッセージを編集するか、新しい会話を作成してください。',
    com_error_no_user_key: 'キーが見つかりません。キーを入力して再試行してください。',
    com_error_no_base_url: 'ベースURLが見つかりません。ベースURLを入力して再試行してください。',
    com_error_expired_user_key:
      '{0}の提供されたキーは{1}で期限切れです。キーを入力して再試行してください。',
    com_files_no_results: '結果がありません。',
    com_files_filter: 'ファイルをフィルタリング...',
    com_files_number_selected: '{0} of {1} ファイルが選択されました',
    com_sidepanel_select_assistant: 'Assistantを選択',
    com_sidepanel_parameters: 'パラメータ',
    com_sidepanel_assistant_builder: 'Assistant Builder',
    com_sidepanel_hide_panel: 'パネルを隠す',
    com_sidepanel_attach_files: 'ファイルを添付する',
    com_sidepanel_manage_files: 'ファイルを管理',
    com_assistants_capabilities: 'Capabilities',
    com_assistants_knowledge: 'ナレッジ',
    com_assistants_knowledge_info:
      'ナレッジの下でファイルをアップロードする場合、アシスタントとの会話にファイルの内容が含まれる場合があります。',
    com_assistants_knowledge_disabled:
      'ファイルをナレッジとしてアップロードする前に、アシスタントを作成し、Code InterpreterまたはRetrievalを有効にして保存する必要があります。',
    com_assistants_image_vision: 'Image Vision',
    com_assistants_code_interpreter: 'Code Interpreter',
    com_assistants_code_interpreter_files: '次のファイルはCode Interpreterでのみ使用できます。',
    com_assistants_retrieval: 'Retrieval',
    com_assistants_search_name: 'Assistantの名前で検索',
    com_assistants_tools: 'Tools',
    com_assistants_actions: 'Actions',
    com_assistants_add_tools: 'Toolsを追加',
    com_assistants_add_actions: 'アクションを追加',
    com_assistants_available_actions: '利用可能なActions',
    com_assistants_running_action: 'アクションを実行',
    com_assistants_completed_action: 'Talked to {0}',
    com_assistants_completed_function: 'Ran {0}',
    com_assistants_function_use: 'アシスタントが {0} を使用しました',
    com_assistants_domain_info: 'アシスタントがこの情報を {0} に送信しました',
    com_assistants_delete_actions_success: 'アシスタントからアクションが削除されました',
    com_assistants_update_actions_success: 'アクションが作成または更新されました',
    com_assistants_update_actions_error: 'アクションの作成または更新中にエラーが発生しました。',
    com_assistants_delete_actions_error: 'アクションの削除中にエラーが発生しました。',
    com_assistants_actions_info:
      "アシスタントが API を介して情報を取得したり、アクションを実行したりできるようにします's",
    com_assistants_name_placeholder: 'オプション: アシスタントの名前',
    com_assistants_instructions_placeholder: 'アシスタントが使用するシステム指示',
    com_assistants_description_placeholder: 'オプション: ここにアシスタントについて説明します',
    com_assistants_actions_disabled:
      'アクションを追加する前にアシスタントを作成する必要があります。',
    com_assistants_update_success: 'アップデートに成功しました',
    com_assistants_update_error: 'アシスタントの更新中にエラーが発生しました。',
    com_assistants_create_success: 'アシスタントが正常に作成されました。',
    com_assistants_create_error: 'アシスタントの作成中にエラーが発生しました。',
    com_ui_field_required: '必須入力項目です',
    com_ui_download_error:
      'ファイルのダウンロード中にエラーが発生しました。ファイルが削除された可能性があります。',
    com_ui_attach_error_type: 'エンドポイントでサポートされていないファイル タイプ:',
    com_ui_attach_error_size: 'エンドポイントのファイル サイズ制限を超えました:',
    com_ui_attach_error:
      'ファイルを添付できません。会話を作成または選択するか、ページを更新してみてください。',
    com_ui_examples: '例',
    com_ui_new_chat: '新規チャット',
    com_ui_happy_birthday: '初めての誕生日です！',
    com_ui_example_quantum_computing: '量子コンピュータを簡潔に説明してください',
    com_ui_example_10_year_old_b_day: '10歳の誕生日で行うクリエイティブなアイデアはありますか？',
    com_ui_example_http_in_js: 'JavascriptでHTTPリクエストを作成するにはどうすればよいですか？',
    com_ui_capabilities: '能力(機能)',
    com_ui_capability_remember: 'ユーザと話した以前の会話の内容を参照します',
    com_ui_capability_correction: 'ユーザーの追加の質問を許可する',
    com_ui_capability_decline_requests: '不適切な要求を拒否するように学習されています',
    com_ui_limitations: '制限事項',
    com_ui_limitation_incorrect_info: '誤った情報を生成することがあります',
    com_ui_limitation_harmful_biased: '有害な指示や偏った内容を生成する可能性があります',
    com_ui_limitation_limited_2021: '2021年以降の出来事に関しては知識に制限があります',
    com_ui_experimental: 'Experimental',
    com_ui_on: 'On',
    com_ui_off: 'Off',
    com_ui_yes: 'はい',
    com_ui_no: 'いいえ',
    com_ui_ascending: '昇順',
    com_ui_descending: '降順',
    com_ui_show_all: 'すべて表示',
    com_ui_name: '名前',
    com_ui_date: '日付',
    com_ui_storage: 'Storage',
    com_ui_context: 'Context',
    com_ui_size: 'サイズ',
    com_ui_host: 'ホスト',
    com_ui_update: 'Update',
    com_ui_authentication: '認証',
    com_ui_instructions: '指示文',
    com_ui_description: '概要',
    com_ui_error: 'エラー',
    com_ui_select: '選択',
    com_ui_input: '入力',
    com_ui_close: '閉じる',
    com_ui_model: 'モデル',
    com_ui_select_model: 'モデル選択',
    com_ui_select_search_model: 'モデル名で検索',
    com_ui_select_search_plugin: 'プラグイン名で検索',
    com_ui_use_prompt: 'プロンプトの利用',
    com_ui_prev: '前',
    com_ui_next: '次',
    com_ui_stop: '止める',
    com_ui_upload_files: 'ファイルをアップロード',
    com_ui_prompt_templates: 'プロンプトテンプレート',
    com_ui_hide_prompt_templates: 'プロンプトテンプレートを非表示',
    com_ui_showing: '表示',
    com_ui_of: 'of',
    com_ui_entries: 'エントリー',
    com_ui_pay_per_call: 'すべてのAIモデルを1つの場所で。支払いは使った分だけ',
    com_ui_new_footer: 'すべてのAIモデルを1つの場所で。',
    com_ui_enter: 'Enter',
    com_ui_submit: '送信する',
    com_ui_upload_success: 'アップロード成功',
    com_ui_upload_error: 'ファイルのアップロード中にエラーが発生しました。',
    com_ui_upload_invalid: '不正なファイルです',
    com_ui_cancel: 'キャンセル',
    com_ui_save: '保存',
    com_ui_save_submit: '保存 & 送信',
    com_user_message: 'あなた',
    com_ui_copy_to_clipboard: 'クリップボードへコピー',
    com_ui_copied_to_clipboard: 'コピーしました',
    com_ui_regenerate: '再度 生成する',
    com_ui_continue: '続きを生成する',
    com_ui_edit: '編集',
    com_ui_success: '成功',
    com_ui_all: 'すべて',
    com_ui_clear: '削除する',
    com_ui_revoke: '無効にする',
    com_ui_revoke_info: 'ユーザへ発行した認証情報をすべて無効にする。',
    com_ui_import_conversation: 'インポート',
    com_ui_import_conversation_info: 'JSONファイルから会話をインポートする',
    com_ui_import_conversation_success: '会話のインポートに成功しました',
    com_ui_import_conversation_error: '会話のインポート時にエラーが発生しました',
    com_ui_confirm_action: '実行する',
    com_ui_chats: 'チャット',
    com_ui_avatar: 'アバター',
    com_ui_unknown: '不明',
    com_ui_result: '結果',
    com_ui_image_gen: '画像生成',
    com_ui_assistant: 'Assistant',
    com_ui_assistants: 'Assistants',
    com_ui_attachment: '添付ファイル',
    com_ui_assistants_output: 'Assistantsの出力',
    com_ui_delete: '削除',
    com_ui_create: '作成',
    com_ui_share: '共有',
    com_ui_copy_link: 'リンクをコピー',
    com_ui_update_link: 'リンクを更新する',
    com_ui_create_link: 'リンクを作成する',
    com_ui_share_link_to_chat: 'チャットへの共有リンク',
    com_ui_share_error: 'チャットの共有リンクの共有中にエラーが発生しました',
    com_ui_share_create_message:
      'あなたの名前と共有リンクを作成した後のメッセージは、共有されません。',
    com_ui_share_created_message:
      'チャットの共有リンクが作成されました。設定から以前共有したチャットを管理できます。',
    com_ui_share_update_message:
      'あなたの名前、カスタム指示、共有リンクを作成した後のメッセージは、共有されません。',
    com_ui_share_updated_message:
      'チャットの共有リンクが更新されました。設定から以前共有したチャットを管理できます。',
    com_ui_shared_link_not_found: '共有リンクが見つかりません',
    com_ui_delete_conversation: 'チャットを削除しますか？',
    com_ui_delete_conversation_confirm: 'このチャットは削除されます。',
    com_ui_delete_assistant_confirm: 'このアシスタントを削除しますか？ この操作は元に戻せません。',
    com_ui_rename: 'タイトル変更',
    com_ui_archive: 'アーカイブ',
    com_ui_archive_error: 'アーカイブに失敗しました。',
    com_ui_unarchive: 'アーカイブ解除',
    com_ui_unarchive_error: 'アーカイブ解除に失敗しました。',
    com_ui_more_options: 'More',
    com_ui_preview: 'プレビュー',
    com_ui_upload: 'アップロード',
    com_ui_connect: '接続',
    com_ui_upload_delay:
      'ファイル "{0}"のアップロードに時間がかかっています。ファイルの検索のためのインデックス作成が完了するまでお待ちください。',
    com_ui_privacy_policy: 'プライバシーポリシー',
    com_ui_terms_of_service: '利用規約',
    com_ui_min_tags: 'これ以上の値を削除できません。少なくとも {0} が必要です。',
    com_ui_max_tags: '最新の値を使用した場合、許可される最大数は {0} です。',
    com_auth_error_login:
      '入力された情報ではログインできませんでした。認証情報を確認した上で再度お試しください。',
    com_auth_error_login_rl:
      'お使いのIPアドレスから短時間に多数のログイン試行がありました。しばらくしてから再度お試しください。',
    com_auth_error_login_ban: '本サービスの利用規約違反のため、一時的にアカウントを停止しました。',
    com_auth_error_login_server:
      'サーバーエラーが発生しています。。しばらくしてから再度お試しください。',
    com_auth_no_account: 'アカウントをお持ちでない場合はこちら',
    com_auth_sign_up: '新規登録',
    com_auth_sign_in: 'ログイン',
    com_auth_google_login: 'Googleでログイン',
    com_auth_facebook_login: 'Facebookでログイン',
    com_auth_github_login: 'Githubでログイン',
    com_auth_discord_login: 'Discordでログイン',
    com_auth_email: 'メール',
    com_auth_email_required: 'メールアドレスは必須です',
    com_auth_email_min_length: 'メールアドレスは最低6文字で入力してください',
    com_auth_email_max_length: 'メールアドレスは最大120文字で入力してください',
    com_auth_email_pattern: '有効なメールアドレスを入力してください',
    com_auth_email_address: 'メールアドレス',
    com_auth_password: 'パスワード',
    com_auth_password_required: 'パスワードは必須です',
    com_auth_password_min_length: 'パスワードは最低8文字で入力してください',
    com_auth_password_max_length: 'パスワードは最大128文字で入力してください',
    com_auth_password_forgot: 'パスワードを忘れた場合はこちら',
    com_auth_password_confirm: '確認用パスワード',
    com_auth_password_not_match: 'パスワードが一致しません',
    com_auth_continue: '続ける',
    com_auth_create_account: 'アカウント登録',
    com_auth_error_create: 'アカウント登録に失敗しました。もう一度お試しください。',
    com_auth_full_name: 'フルネーム',
    com_auth_name_required: 'フルネームは必須です',
    com_auth_name_min_length: 'フルネームは最低3文字で入力してください',
    com_auth_name_max_length: 'フルネームは最大80文字で入力してください',
    com_auth_username: 'ユーザ名 (オプション)',
    com_auth_username_required: 'ユーザー名は必須です',
    com_auth_username_min_length: 'ユーザ名は最低2文字で入力してください',
    com_auth_username_max_length: 'ユーザ名は最大20文字で入力してください',
    com_auth_already_have_account: '既にアカウントがある場合はこちら',
    com_auth_login: 'ログイン',
    com_auth_reset_password: 'パスワードをリセット',
    com_auth_click: 'クリック',
    com_auth_here: 'こちら',
    com_auth_to_reset_your_password: 'to reset your password.',
    com_auth_reset_password_link_sent: 'メールを送信',
    com_auth_reset_password_email_sent: 'パスワードのリセット方法を記載したメールを送信しました。',
    com_auth_error_reset_password:
      'パスワードのリセット中に問題が発生しました。指定されたメールアドレスのユーザは存在しません。別のメールアドレスでもう一度お試しください。',
    com_auth_reset_password_success: 'パスワードのリセットに成功しました',
    com_auth_login_with_new_password: '新しいパスワードでログインをお試しください。',
    com_auth_error_invalid_reset_token: '無効なパスワードリセットトークンです。',
    com_auth_click_here: 'ここをクリック',
    com_auth_to_try_again: '再認証する',
    com_auth_submit_registration: '登録をする',
    com_auth_welcome_back: 'おかえりなさい',
    com_auth_back_to_login: 'ログイン画面に戻る',
    com_endpoint_open_menu: 'メニューを開く',
    com_endpoint_bing_enable_sydney: 'Sydney有効化',
    com_endpoint_bing_to_enable_sydney: '(Sydneyを利用する)',
    com_endpoint_bing_jailbreak: 'ジェイルブレイク',
    com_endpoint_bing_context_placeholder:
      'Bingは最大7kトークンの「コンテキスト」を参照できます。具体的な上限は不明ですが、7kトークンを超えるとエラーになる可能性があります。',
    com_endpoint_bing_system_message_placeholder:
      '警告: この機能を悪用するとBingの利用を「制限」される可能性があります。すべての内容を表示するには「System Message」をクリックしてください。省略された場合は、安全と考えられる「Sydney」プリセットが使われます',
    com_endpoint_system_message: 'システムメッセージ',
    com_endpoint_message: 'メッセージ',
    com_endpoint_message_not_appendable: 'メッセージを編集、再入力してください。',
    com_endpoint_default_blank: 'デフォルト: 空',
    com_endpoint_default_false: 'デフォルト: false',
    com_endpoint_default_creative: 'デフォルト: 創造的',
    com_endpoint_default_empty: 'デフォルト: 空',
    com_endpoint_default_with_num: 'デフォルト: {0}',
    com_endpoint_context: 'コンテキスト',
    com_endpoint_tone_style: 'トーンスタイル',
    com_endpoint_token_count: 'トークン数',
    com_endpoint_output: '出力',
    com_endpoint_google_temp:
      '大きい値 = ランダム性が増します。低い値 = より決定論的になります。この値を変更するか、Top P の変更をおすすめしますが、両方を変更はおすすめしません。',
    com_endpoint_google_topp:
      'Top-p はモデルがトークンをどのように選択して出力するかを変更します。K(topKを参照)の確率の合計がtop-pの確率と等しくなるまでのトークンが選択されます。',
    com_endpoint_google_topk:
      'Top-k はモデルがトークンをどのように選択して出力するかを変更します。top-kが1の場合はモデルの語彙に含まれるすべてのトークンの中で最も確率が高い1つが選択されます(greedy decodingと呼ばれている)。top-kが3の場合は上位3つのトークンの中から選択されます。(temperatureを使用)',
    com_endpoint_google_maxoutputtokens:
      ' 	生成されるレスポンスの最大トークン数。短いレスポンスには低い値を、長いレスポンスには高い値を指定します。',
    com_endpoint_google_custom_name_placeholder: 'Googleのカスタム名を設定する',
    com_endpoint_prompt_prefix_placeholder:
      'custom instructions か context を設定する。空の場合は無視されます。',
    com_endpoint_custom_name: 'プリセット名',
    com_endpoint_prompt_prefix: 'プロンプトの先頭',
    com_endpoint_instructions_assistants_placeholder:
      'アシスタントの指示を上書きします。これは、実行ごとに動作を変更する場合に便利です。',
    com_endpoint_prompt_prefix_assistants_placeholder:
      'アシスタントの主な指示に加えて、追加の指示やコンテキストを設定します。空欄の場合は無視されます。',
    com_endpoint_temperature: 'Temperature',
    com_endpoint_default: 'デフォルト',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: '最大出力トークン数',
    com_endpoint_openai_temp:
      '大きい値 = ランダム性が増します。低い値 = より決定論的になります。この値を変更するか、Top P の変更をおすすめしますが、両方を変更はおすすめしません。',
    com_endpoint_openai_max:
      '生成されるトークンの最大値。入力トークンと出力トークンの長さの合計は、モデルのコンテキスト長によって制限されます。',
    com_endpoint_openai_topp:
      'nucleus sampling と呼ばれるtemperatureを使用したサンプリングの代わりに、top_p確率質量のトークンの結果を考慮します。つまり、0.1とすると確率質量の上位10%を構成するトークンのみが考慮されます。この値かtemperatureの変更をおすすめしますが、両方を変更はおすすめしません。',
    com_endpoint_openai_freq:
      '-2.0から2.0の値。正の値を入力すると、テキストの繰り返し頻度に基づいたペナルティを課し、文字通り「同じ文言」を繰り返す可能性を減少させる。',
    com_endpoint_openai_pres:
      '-2.0から2.0の値。正の値は入力すると、新規トークンの出現に基づいたペナルティを課し、新しいトピックについて話す可能性を高める。',
    com_endpoint_openai_resend:
      'これまでに添付した画像を全て再送信します。注意：トークン数が大幅に増加したり、多くの画像を添付するとエラーが発生する可能性があります。',
    com_endpoint_openai_resend_files:
      '以前に添付されたすべてのファイルを再送信します。注意：これにより、トークンのコストが増加し、多くの添付ファイルでエラーが発生する可能性があります。',
    com_endpoint_openai_detail:
      'Visionリクエストの解像度を選択します。"Low"はコストが安くて低解像度、"Highは"コストが高くて高解像度"、"Auto"は画像の解像度に基づいて自動的に選択します。',
    com_endpoint_openai_custom_name_placeholder: 'ChatGPTのカスタム名を設定する',
    com_endpoint_openai_prompt_prefix_placeholder:
      'システムメッセージに含める Custom Instructions。デフォルト: none',
    com_endpoint_anthropic_temp:
      '0から1の値。分析的・多岐の選択になる課題には0に近い値を入力する。創造的・生成的な課題には1に近い値を入力する。この値か Top P の変更をおすすめしますが、両方の変更はおすすめしません。',
    com_endpoint_anthropic_topp:
      'Top-p はモデルがトークンをどのように選択して出力するかを変更する。K(topKを参照)の確率の合計がtop-pの確率と等しくなるまでのトークンが選択される。',
    com_endpoint_anthropic_topk:
      'Top-k はモデルがトークンをどのように選択して出力するかを変更する。top-kが1の場合はモデルの語彙に含まれるすべてのトークンの中で最も確率が高い1つが選択される(greedy decodingと呼ばれている)。top-kが3の場合は上位3つのトークンの中から選択される。(temperatureを使用)',
    com_endpoint_anthropic_maxoutputtokens:
      '生成されるレスポンスの最大トークン数。短いレスポンスには低い値を、長いレスポンスには高い値を指定する。',
    com_endpoint_anthropic_custom_name_placeholder: 'Anthropicのカスタム名を設定する',
    com_endpoint_frequency_penalty: '頻度によるペナルティ',
    com_endpoint_presence_penalty: '既存性によるペナルティ',
    com_endpoint_plug_use_functions: 'Functionsを使用',
    com_endpoint_plug_resend_files: 'ファイルを再送',
    com_endpoint_plug_resend_images: '画像の再送信',
    com_endpoint_plug_image_detail: '画像の詳細',
    com_endpoint_plug_skip_completion: 'Skip Completion',
    com_endpoint_disabled_with_tools: 'disabled with tools',
    com_endpoint_disabled_with_tools_placeholder: 'Disabled with Tools Selected',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'システムメッセージに含める Custom Instructions。デフォルト: none',
    com_endpoint_import: 'インポート',
    com_endpoint_set_custom_name: 'このプリセットを見つけやすいように名前を設定する。',
    com_endpoint_preset_delete_confirm: '本当にこのプリセットを削除しますか？',
    com_endpoint_preset_clear_all_confirm: '本当にすべてのプリセットを削除しますか？',
    com_endpoint_preset_import: 'プリセットのインポートが完了しました',
    com_endpoint_preset_import_error:
      'プリセットのインポートに失敗しました。もう一度お試し下さい。',
    com_endpoint_preset_save_error: 'プリセットの保存に失敗しました。もう一度お試し下さい。',
    com_endpoint_preset_delete_error: 'プリセットの削除に失敗しました。もう一度お試し下さい。',
    com_endpoint_preset_default_removed: 'が無効化されました。',
    com_endpoint_preset_default_item: 'デフォルト:',
    com_endpoint_preset_default_none: '現在有効なプリセットはありません。',
    com_endpoint_preset_title: 'プリセット',
    com_endpoint_preset_saved: '保存しました!',
    com_endpoint_preset_default: 'が有効化されました。',
    com_endpoint_preset: 'プリセット',
    com_endpoint_presets: 'プリセット',
    com_endpoint_preset_selected: 'プリセットが有効化されました!',
    com_endpoint_preset_selected_title: '有効化',
    com_endpoint_preset_name: 'プリセット名',
    com_endpoint_new_topic: '新規トピック',
    com_endpoint: 'エンドポイント',
    com_endpoint_hide: '非表示',
    com_endpoint_show: '表示',
    com_endpoint_examples: ' プリセット名',
    com_endpoint_completion: 'コンプリーション',
    com_endpoint_agent: 'エージェント',
    com_endpoint_show_what_settings: '設定 {0} を表示する',
    com_endpoint_save: '保存',
    com_endpoint_export: 'エクスポート',
    com_endpoint_assistant: 'アシスタント',
    com_endpoint_use_active_assistant: 'アクティブなアシスタントを使用',
    com_endpoint_assistant_model: 'アシスタント モデル',
    com_endpoint_save_as_preset: 'プリセットとして保存する',
    com_endpoint_presets_clear_warning:
      '本当にすべてのプリセットを削除しますか？ この操作は元に戻せません。',
    com_endpoint_not_implemented: 'まだ実装されていません',
    com_endpoint_no_presets: 'プリセットがありません',
    com_endpoint_not_available: 'エンドポイントは利用できません',
    com_endpoint_view_options: 'オプションを見る',
    com_endpoint_save_convo_as_preset: '会話をプリセットとして保存する',
    com_endpoint_my_preset: 'Myプリセット',
    com_endpoint_agent_model: 'エージェントモデル (推奨: GPT-3.5)',
    com_endpoint_completion_model: 'コンプリーションモデル (推奨: GPT-4)',
    com_endpoint_func_hover: 'プラグインをOpenAIの関数として使えるようにする',
    com_endpoint_skip_hover:
      'コンプリーションのステップをスキップする。(最終的な回答と生成されたステップをレビューする機能)',
    com_endpoint_stop: 'シーケンスを停止',
    com_endpoint_stop_placeholder: 'Enterキー押下で値を区切ります',
    com_endpoint_openai_stop:
      'APIがさらにトークンを生成するのを止めるため、最大で4つのシーケンスを設定可能',
    com_endpoint_config_key: 'API Keyを設定',
    com_endpoint_assistant_placeholder: '右側のサイドパネルからアシスタントを選択してください',
    com_endpoint_config_placeholder: 'ヘッダーメニューからAPI Keyを設定してください。',
    com_endpoint_config_key_for: 'API Key の設定: ',
    com_endpoint_config_key_name: 'Key',
    com_endpoint_config_value: '値を入力してください',
    com_endpoint_config_key_name_placeholder: 'API key を入力してください',
    com_endpoint_config_key_encryption: '鍵は暗号化されます。削除予定日:',
    com_endpoint_config_key_expiry: 'すでに有効期限切れです',
    com_endpoint_config_click_here: 'ここをクリック',
    com_endpoint_config_google_service_key: 'Google Service Account Key',
    com_endpoint_config_google_cloud_platform: '(from Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'Google API Key',
    com_endpoint_config_google_gemini_api: '(Gemini API)',
    com_endpoint_config_google_api_info: 'Gemeni用のGenerative Language API keyを取得するには',
    com_endpoint_config_key_import_json_key: 'Service Account JSON Key をインポートする。',
    com_endpoint_config_key_import_json_key_success:
      'Service Account JSON Keyのインポートに成功しました。',
    com_endpoint_config_key_import_json_key_invalid:
      '無効なService Account JSON Keyです。正しいファイルかどうか確認してください。',
    com_endpoint_config_key_get_edge_key:
      'Bing用のアクセストークンを取得するためにログインをしてください: ',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'サイトにログインした状態で、開発ツールまたは拡張機能を使用して、_U クッキーの内容をコピーします。もし失敗する場合は次の手順に従ってください。',
    com_endpoint_config_key_edge_instructions: '手順',
    com_endpoint_config_key_edge_full_key_string: 'to provide the full cookie strings.',
    com_endpoint_config_key_chatgpt:
      'ChatGPTの「無料版」のアクセストークンを入手するためにへログインをしてください:',
    com_endpoint_config_key_chatgpt_then_visit: 'つぎに、ここへアクセスしてください:',
    com_endpoint_config_key_chatgpt_copy_token: 'トークンをコピーしてください。',
    com_endpoint_config_key_google_need_to: 'こちらを有効化する必要があります:',
    com_endpoint_config_key_google_vertex_ai: 'Vertex AI を有効化',
    com_endpoint_config_key_google_vertex_api: 'API (Google Cloud) 次に、',
    com_endpoint_config_key_google_service_account: 'サービスアカウントを作成する',
    com_endpoint_config_key_google_vertex_api_role:
      '必ず「作成して続行」をクリックして、少なくとも「Vertex AI ユーザー」権限を与えてください。最後にここにインポートするJSONキーを作成してください。',
    com_nav_welcome_message: 'How can I help you today?',
    com_nav_auto_scroll: 'チャットを開いたときに最新まで自動でスクロール',
    com_nav_hide_panel: '右側のパネルを非表示',
    com_nav_modular_chat: '会話の途中でのエンドポイント切替を有効化',
    com_nav_latex_parsing:
      'メッセージ内の LaTeX の構文解析 (パフォーマンスに影響する可能性があります。)',
    com_nav_profile_picture: 'プロフィール画像',
    com_nav_change_picture: '画像を変更',
    com_nav_plugin_search: 'プラグイン検索',
    com_nav_plugin_store: 'プラグインストア',
    com_nav_plugin_install: 'インストール',
    com_nav_plugin_uninstall: 'アンインストール',
    com_nav_tool_add: '追加',
    com_nav_tool_dialog: 'アシスタントツール',
    com_nav_tool_dialog_description:
      'ツールの選択を維持するには、アシスタントを保存する必要があります。',
    com_nav_tool_remove: '削除',
    com_nav_tool_search: 'ツールを検索',
    com_show_agent_settings: 'エージェント設定を表示',
    com_show_completion_settings: 'コンプリーション設定を表示',
    com_hide_examples: '例を非表示',
    com_show_examples: '例を表示',
    com_nav_plugin_auth_error:
      'このプラグインの認証中にエラーが発生しました。もう一度お試しください。',
    com_nav_export_filename: 'ファイル名',
    com_nav_export_filename_placeholder: 'ファイル名を入力してください',
    com_nav_export_type: '形式',
    com_nav_export_include_endpoint_options: 'エンドポイントのオプションを含める',
    com_nav_enabled: '有効化',
    com_nav_not_supported: 'サポートされていません',
    com_nav_export_all_message_branches: 'すべての子メッセージを含める',
    com_nav_export_recursive_or_sequential: '再帰的? or 順次的?',
    com_nav_export_recursive: '再帰的',
    com_nav_export_conversation: '会話をエクスポートする',
    com_nav_export: 'エクスポート',
    com_nav_shared_links: '共有リンク',
    com_nav_shared_links_manage: '管理',
    com_nav_shared_links_empty: '共有リンクはありません。',
    com_nav_shared_links_name: 'タイトル',
    com_nav_shared_links_date_shared: '共有日',
    com_nav_my_files: 'My Files',
    com_nav_theme: 'テーマ',
    com_nav_theme_system: 'システム',
    com_nav_theme_dark: 'ダーク',
    com_nav_theme_light: 'ライト',
    com_nav_enter_to_send: 'Enterキーでメッセージを送信する',
    com_nav_user_name_display: 'メッセージにユーザー名を表示する',
    com_nav_save_drafts: 'ローカルにドラフトを保存する',
    com_nav_show_code: 'Code Interpreter を使用する際は常にコードを表示する',
    com_nav_clear_all_chats: 'すべてのチャットを削除する',
    com_nav_confirm_clear: '削除を確定',
    com_nav_close_sidebar: 'サイドバーを閉じる',
    com_nav_open_sidebar: 'サイドバーを開く',
    com_nav_send_message: 'メッセージを送信する',
    com_nav_log_out: 'ログアウト',
    com_nav_user: 'ユーザー',
    com_nav_archived_chats: 'アーカイブされたチャット',
    com_nav_archived_chats_manage: '管理',
    com_nav_archived_chats_empty: 'アーカイブされたチャットはありません',
    com_nav_archive_all_chats: 'すべてのチャットをアーカイブ',
    com_nav_archive_all: 'すべてアーカイブする',
    com_nav_archive_name: '名前',
    com_nav_archive_created_at: '作成日',
    com_nav_clear_conversation: '会話を削除する',
    com_nav_clear_conversation_confirm_message:
      '本当にすべての会話を削除しますか？ この操作は取り消せません。',
    com_nav_help_faq: 'ヘルプ & FAQ',
    com_nav_settings: '設定',
    com_nav_search_placeholder: 'メッセージ検索',
    com_nav_setting_general: '一般',
    com_nav_setting_beta: 'ベータ版の機能',
    com_nav_setting_data: 'データ管理',
    com_nav_setting_account: 'アカウント',
    com_assistants_file_search: 'ファイル検索',
    com_assistants_file_search_info:
      'ファイル検索用のベクトル ストアを添付することはまだサポートされていません。Provider Playgroundからそれらを添付するか、スレッド単位でメッセージにファイルを添付してファイル検索を行うことができます。',
    com_assistants_non_retrieval_model:
      'このモデルではファイル検索機能は有効になっていません。別のモデルを選択してください。',
    com_ui_attach_error_openai: '他のエンドポイントにAssistantファイルを添付することはできません',
    com_ui_attach_warn_endpoint:
      '互換性のあるツールがない場合、非アシスタントのファイルは無視される可能性があります',
    com_ui_assistant_deleted: 'アシスタントが正常に削除されました',
    com_ui_assistant_delete_error: 'アシスタントの削除中にエラーが発生しました。',
    com_ui_copied: 'コピーしました',
    com_ui_copy_code: 'コードをコピーする',
    com_nav_source_chat: 'ソースチャットを表示する',
    com_ui_date_today: '今日',
    com_ui_date_yesterday: '昨日',
    com_ui_date_previous_7_days: '過去7日間',
    com_ui_date_previous_30_days: '過去30日間',
    com_ui_date_january: '1月',
    com_ui_date_february: '2月',
    com_ui_date_march: '3月',
    com_ui_date_april: '4月',
    com_ui_date_may: '5月',
    com_ui_date_june: '6月',
    com_ui_date_july: '7月',
    com_ui_date_august: '8月',
    com_ui_date_september: '9月',
    com_ui_date_october: '10月',
    com_ui_date_november: '11月',
    com_ui_date_december: '12月',
    com_ui_nothing_found: '該当するものが見つかりませんでした',
    com_ui_go_to_conversation: '会話に移動する',
    com_error_invalid_user_key: '無効なキーが提供されました。キーを入力して再試行してください。',
    com_ui_none_selected: '選択されていません',
    com_ui_fork: '分岐',
    com_ui_fork_info_1: 'この設定を使うと、希望の動作でメッセージを分岐させることができます。',
    com_ui_fork_info_2:
      '「フォーク」とは、現在の会話から特定のメッセージを開始/終了点として新しい会話を作成し、選択したオプションに従ってコピーを作成することを指します。',
    com_ui_fork_info_3:
      '「ターゲットメッセージ」とは、このポップアップを開いたメッセージか、"{0}"にチェックを入れた場合は会話の最新のメッセージを指します。',
    com_ui_fork_info_visible:
      'この設定は、ターゲットメッセージへの直接の経路のみを表示し、分岐は表示しません。つまり、可視メッセージのみを抽出して表示するということです。',
    com_ui_fork_info_branches:
      'この設定では、表示されているメッセージとそれに関連するブランチ（つまり、ターゲットメッセージに至る直接の経路上のブランチを含む）を分岐させます。',
    com_ui_fork_info_target:
      'この設定では、対象のメッセージとその近傍のメッセージを含む、すべてのメッセージの枝を分岐させます。つまり、表示されているかどうか、同じ経路上にあるかどうかに関係なく、すべてのメッセージ枝が含まれます。',
    com_ui_fork_info_start:
      'チェックを入れると、上記で選択した動作に従って、このメッセージから会話の最新のメッセージまでフォークが開始されます。',
    com_ui_fork_info_remember:
      'この設定を有効にすると、今後の会話で同じオプションを選択する手間が省けるようになります。お好みの設定を記憶させることで、会話の分岐をスムーズに行えるようになります。',
    com_ui_fork_success: '会話のフォークに成功しました',
    com_ui_fork_processing: '会話をフォークしています...',
    com_ui_fork_error: '会話を分岐できませんでした。エラーが発生しました。',
    com_ui_fork_change_default: 'デフォルトのフォークオプション',
    com_ui_fork_default: 'デフォルトのフォークオプションを使用する',
    com_ui_fork_remember: '以前の会話内容を記憶する',
    com_ui_fork_split_target_setting: 'デフォルトで対象メッセージからフォークを開始する',
    com_ui_fork_split_target: 'ここでフォークを開始',
    com_ui_fork_remember_checked:
      '選択した内容は、次回の利用時にも記憶されます。設定から変更できます。',
    com_ui_fork_all_target: 'すべてを対象に含める',
    com_ui_fork_branches: '関連ブランチを含める',
    com_ui_fork_visible: 'メッセージを表示のみ',
    com_ui_fork_from_message: 'フォークオプションを選択する',
    com_ui_mention:
      'エンドポイント、アシスタント、またはプリセットを素早く切り替えるには、それらを言及してください。',
    com_ui_import_conversation_file_type_error: 'サポートされていないインポート形式です',
    com_endpoint_messages: 'メッセージ',
    com_endpoint_context_tokens: 'コンテキストトークン数の最大値',
    com_endpoint_context_info:
      'コンテキストに使用できるトークンの最大数です。リクエストごとに送信されるトークン数を制御するために使用します。指定しない場合は、既知のモデルのコンテキストサイズに基づいてシステムのデフォルト値が使用されます。高い値を設定すると、エラーが発生したり、トークンコストが高くなる可能性があります。',
    com_endpoint_prompt_prefix_assistants: '追加の指示',
    com_endpoint_instructions_assistants: '指示をオーバーライドする',
    com_endpoint_openai_max_tokens:
      'オプションの `max_tokens` フィールドで、チャット補完時に生成可能な最大トークン数を設定します。入力トークンと生成されたトークンの合計長さは、モデルのコンテキスト長によって制限されています。この数値がコンテキストの最大トークン数を超えると、エラーが発生する可能性があります。',
    com_nav_welcome_assistant: 'アシスタントを選択してください',
    com_nav_language: '言語',
    com_nav_lang_auto: '自動検出',
    com_nav_lang_english: '英語',
    com_nav_lang_chinese: '中国語',
    com_nav_lang_german: 'ドイツ語',
    com_nav_lang_spanish: 'スペイン語',
    com_nav_lang_french: 'フランス語',
    com_nav_lang_italian: 'イタリア語',
    com_nav_lang_polish: 'ポーランド語',
    com_nav_lang_brazilian_portuguese: 'ブラジルポルトガル語',
    com_nav_lang_russian: 'ロシア語',
    com_nav_lang_japanese: 'ナビゲーションメニュー',
    com_nav_lang_swedish: 'スウェーデン語',
    com_nav_lang_korean: '韓国語',
    com_nav_lang_vietnamese: 'ベトナム語',
    com_nav_lang_traditionalchinese: '繁體中文',
    com_nav_lang_arabic: 'アラビア語',
    com_nav_lang_turkish: 'トルコ語',
    com_nav_lang_dutch: 'オランダ語',
    com_nav_lang_indonesia: 'インドネシア語',
    com_nav_lang_hebrew: 'ヘブライ語',
  },
  g1 = {
    com_ui_examples: 'Exempel',
    com_ui_new_chat: 'Ny chatt',
    com_ui_happy_birthday: 'Det är min första födelsedag!',
    com_ui_example_quantum_computing: 'Förklara kvantberäkning på enkla termer',
    com_ui_example_10_year_old_b_day: 'Har du några kreativa idéer till ett 10-årings födelsedag?',
    com_ui_example_http_in_js: 'Hur gör jag en HTTP-förfrågan i Javascript?',
    com_ui_capabilities: 'Möjligheter',
    com_ui_capability_remember: 'Kommer ihåg vad användaren sa tidigare i konversationen',
    com_ui_capability_correction: 'Tillåter användaren att ge uppföljande rättelser',
    com_ui_capability_decline_requests: 'Tränad för att avvisa olämpliga förfrågningar',
    com_ui_limitations: 'Begränsningar',
    com_ui_limitation_incorrect_info: 'Kan ibland generera felaktig information',
    com_ui_limitation_harmful_biased:
      'Kan ibland producera skadliga instruktioner eller snedvridet innehåll',
    com_ui_limitation_limited_2021: 'Begränsad kunskap om världen och händelser efter 2021',
    com_ui_input: 'Inmatning',
    com_ui_close: 'Stäng',
    com_ui_model: 'Modell',
    com_ui_select_model: 'Välj en modell',
    com_ui_use_prompt: 'Använd prompt',
    com_ui_prev: 'Föregående',
    com_ui_next: 'Nästa',
    com_ui_prompt_templates: 'Prompt Mallar',
    com_ui_hide_prompt_templates: 'Dölj Prompt Mallar',
    com_ui_showing: 'Visar',
    com_ui_of: 'av',
    com_ui_entries: 'Inlägg',
    com_ui_pay_per_call:
      'Alla AI-konversationer på ett ställe. Betala per anrop och inte per månad',
    com_ui_enter: 'Ange',
    com_ui_submit: 'Skicka',
    com_ui_upload_success: 'Uppladdningen av filen lyckades',
    com_ui_upload_invalid: 'Ogiltig fil för uppladdning',
    com_ui_cancel: 'Avbryt',
    com_ui_save: 'Spara',
    com_ui_copy_to_clipboard: 'Kopiera till urklipp',
    com_ui_copied_to_clipboard: 'Kopierat till urklipp',
    com_ui_regenerate: 'Återskapa',
    com_ui_continue: 'Fortsätt',
    com_ui_edit: 'Redigera',
    com_ui_success: 'Lyckades',
    com_ui_all: 'alla',
    com_ui_clear: 'Rensa',
    com_ui_revoke: 'Återkalla',
    com_ui_revoke_info: 'Återkalla alla användaruppgifter.',
    com_ui_import_conversation: 'Importera',
    com_ui_import_conversation_info: 'Importera konversationer från en JSON-fil',
    com_ui_import_conversation_success: 'Konversationer har importerats framgångsrikt',
    com_ui_import_conversation_error: 'Det uppstod ett fel vid import av dina konversationer',
    com_ui_confirm_action: 'Bekräfta åtgärd',
    com_ui_chats: 'chattar',
    com_ui_share: 'Dela',
    com_ui_copy_link: 'Kopiera länk',
    com_ui_update_link: 'Uppdatera länk',
    com_ui_create_link: 'Skapa länk',
    com_ui_share_link_to_chat: 'Dela länk till chatt',
    com_ui_share_error: 'Ett fel uppstod vid delning av chattlänken',
    com_ui_share_create_message:
      'Ditt namn och alla meddelanden du lägger till efter delningen förblir privata.',
    com_ui_share_created_message:
      'En delad länk till din chatt har skapats. Hantera tidigare delade chattar när som helst via Inställningar.',
    com_ui_share_update_message:
      'Ditt namn, anpassade instruktioner och alla meddelanden du lägger till efter delningen förblir privata.',
    com_ui_share_updated_message:
      'En delad länk till din chatt har uppdaterats. Hantera tidigare delade chattar när som helst via Inställningar.',
    com_ui_shared_link_not_found: 'Delad länk hittades inte',
    com_ui_delete: 'Radera',
    com_ui_delete_conversation: 'Radera chatt?',
    com_ui_delete_conversation_confirm: 'Detta kommer att radera',
    com_ui_rename: 'byta namn på',
    com_ui_archive: 'Arkiv',
    com_ui_archive_error: 'Kunde inte arkivera chatt',
    com_ui_unarchive: 'Avarkivera',
    com_ui_unarchive_error: 'Kunde inte avarkivera chatt',
    com_ui_more_options: 'Mer',
    com_auth_error_login:
      'Kunde inte logga in med den angivna informationen. Kontrollera dina uppgifter och försök igen.',
    com_auth_error_login_rl:
      'För många inloggningsförsök från den här IP-adressen på kort tid. Vänligen försök igen senare.',
    com_auth_no_account: 'Har du inget konto?',
    com_auth_sign_up: 'Registrera dig',
    com_auth_sign_in: 'Logga in',
    com_auth_google_login: 'Logga in med Google',
    com_auth_facebook_login: 'Logga in med Facebook',
    com_auth_github_login: 'Logga in med Github',
    com_auth_discord_login: 'Logga in med Discord',
    com_auth_email: 'E-post',
    com_auth_email_required: 'E-post krävs',
    com_auth_email_min_length: 'E-post måste vara minst 6 tecken',
    com_auth_email_max_length: 'E-post får inte vara längre än 120 tecken',
    com_auth_email_pattern: 'Du måste ange en giltig e-postadress',
    com_auth_email_address: 'E-postadress',
    com_auth_password: 'Lösenord',
    com_auth_password_required: 'Lösenord krävs',
    com_auth_password_min_length: 'Lösenordet måste vara minst 8 tecken',
    com_auth_password_max_length: 'Lösenordet får inte vara längre än 128 tecken',
    com_auth_password_forgot: 'Glömt lösenord?',
    com_auth_password_confirm: 'Bekräfta lösenord',
    com_auth_password_not_match: 'Lösenorden matchar inte',
    com_auth_continue: 'Fortsätt',
    com_auth_create_account: 'Skapa ditt konto',
    com_auth_error_create:
      'Det uppstod ett fel när du försökte registrera ditt konto. Vänligen försök igen.',
    com_auth_full_name: 'Fullständigt namn',
    com_auth_name_required: 'Namn krävs',
    com_auth_name_min_length: 'Namnet måste vara minst 3 tecken',
    com_auth_name_max_length: 'Namnet får inte vara längre än 80 tecken',
    com_auth_username: 'Användarnamn (valfritt)',
    com_auth_username_required: 'Användarnamn krävs',
    com_auth_username_min_length: 'Användarnamnet måste vara minst 2 tecken',
    com_auth_username_max_length: 'Användarnamnet får inte vara längre än 20 tecken',
    com_auth_already_have_account: 'Har du redan ett konto?',
    com_auth_login: 'Logga in',
    com_auth_reset_password: 'Återställ ditt lösenord',
    com_auth_click: 'Klicka',
    com_auth_here: 'HÄR',
    com_auth_to_reset_your_password: 'för att återställa ditt lösenord.',
    com_auth_reset_password_link_sent: 'E-post skickad',
    com_auth_reset_password_email_sent:
      'Ett e-postmeddelande har skickats till dig med ytterligare instruktioner för att återställa ditt lösenord.',
    com_auth_error_reset_password:
      'Det uppstod ett problem med att återställa ditt lösenord. Ingen användare hittades med den angivna e-postadressen. Vänligen försök igen.',
    com_auth_reset_password_success: 'Lösenordsåterställning lyckades',
    com_auth_login_with_new_password: 'Du kan nu logga in med ditt nya lösenord.',
    com_auth_error_invalid_reset_token:
      'Detta lösenordsåterställningsnyckel är inte längre giltigt.',
    com_auth_click_here: 'Klicka här',
    com_auth_to_try_again: 'för att försöka igen.',
    com_auth_submit_registration: 'Skicka registrering',
    com_auth_welcome_back: 'Välkommen tillbaka',
    com_endpoint_open_menu: 'Öppna meny',
    com_endpoint_bing_enable_sydney: 'Aktivera Sydney',
    com_endpoint_bing_to_enable_sydney: 'För att aktivera Sydney',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      'Bing kan använda upp till 7k tokens för "kontext", som den kan referera till under konversationen. Den specifika gränsen är inte känd men kan stöta på fel om den överstiger 7k tokens',
    com_endpoint_bing_system_message_placeholder:
      'VARNING: Otillåten användning av denna funktion kan få dig BANNAD från att använda Bing! Klicka på "Systemmeddelande" för fullständiga instruktioner och standardmeddelandet om det utelämnas, vilket är "Sydney"-förinställningen som anses vara säker.',
    com_endpoint_system_message: 'Systemmeddelande',
    com_endpoint_default_blank: 'standard: tom',
    com_endpoint_default_false: 'standard: falsk',
    com_endpoint_default_creative: 'standard: kreativ',
    com_endpoint_default_empty: 'standard: tom',
    com_endpoint_default_with_num: 'standard: {0}',
    com_endpoint_context: 'Kontext',
    com_endpoint_tone_style: 'Tonstil',
    com_endpoint_token_count: 'Antal tokens',
    com_endpoint_output: 'Utdata',
    com_endpoint_google_temp:
      'Högre värden = mer slumpmässigt, medan lägre värden = mer fokuserat och bestämt. Vi rekommenderar att ändra detta eller Top P men inte båda.',
    com_endpoint_google_topp:
      'Top-p ändrar hur modellen väljer tokens för utdata. Tokens väljs från de mest K (se topK-parameter) sannolika till de minst tills summan av deras sannolikheter når top-p-värdet.',
    com_endpoint_google_topk:
      'Top-k ändrar hur modellen väljer tokens för utdata. Ett top-k av 1 innebär att den valda token är den mest sannolika bland alla tokens i modellens vokabulär (kallas också girig avkodning), medan ett top-k av 3 innebär att nästa token väljs bland de 3 mest sannolika tokens (med temperatur).',
    com_endpoint_google_maxoutputtokens:
      'Maximalt antal tokens som kan genereras i svaret. Ange ett lägre värde för kortare svar och ett högre värde för längre svar.',
    com_endpoint_google_custom_name_placeholder: 'Ange ett anpassat namn för Google',
    com_endpoint_prompt_prefix_placeholder:
      'Ange anpassade instruktioner eller kontext. Ignoreras om tom.',
    com_endpoint_custom_name: 'Anpassat namn',
    com_endpoint_prompt_prefix: 'Uppmaningsprefix',
    com_endpoint_temperature: 'Temperatur',
    com_endpoint_default: 'standard',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Max utdatatokens',
    com_endpoint_openai_temp:
      'Högre värden = mer slumpmässigt, medan lägre värden = mer fokuserat och bestämt. Vi rekommenderar att ändra detta eller Top P men inte båda.',
    com_endpoint_openai_max:
      'Max tokens att generera. Den totala längden på tokens för inmatning och svar är begränsad av modellen som används.',
    com_endpoint_openai_topp:
      'Ett alternativ till temperatur, kallat kärnprovtagning, där modellen beaktar resultaten av tokens med top_p-sannolikhetsmassa. Så 0,1 innebär att endast de tokens som utgör den översta 10% sannolikhetsmassan beaktas. Vi rekommenderar att ändra detta eller temperaturen men inte båda.',
    com_endpoint_openai_freq:
      'Nummer mellan -2,0 och 2,0. Positiva värden minskar nya tokens baserat på deras befintliga frekvens i texten hittills, vilket minskar modellens sannolikhet att upprepa samma rad ordagrant.',
    com_endpoint_openai_pres:
      'Nummer mellan -2,0 och 2,0. Positiva värden minskar nya tokens baserat på om de förekommer i texten hittills, vilket ökar modellens sannolikhet att prata om nya ämnen.',
    com_endpoint_openai_custom_name_placeholder: 'Ange ett eget namn för ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Ange anpassade instruktioner att inkludera i Systemmeddelande. Standard: inga',
    com_endpoint_anthropic_temp:
      'Varierar mellan 0 och 1. Använd temp närmare 0 för analytiska/flervalsfrågor och närmare 1 för kreativa och generativa uppgifter. Vi rekommenderar att ändra detta eller Top P men inte båda.',
    com_endpoint_anthropic_topp:
      'Top-p ändrar hur modellen väljer tokens för utdata. Tokens väljs från de mest K (se topK-parameter) sannolika till de minst tills summan av deras sannolikheter når top-p-värdet.',
    com_endpoint_anthropic_topk:
      'Top-k ändrar hur modellen väljer tokens för utdata. Ett top-k av 1 innebär att den valda token är den mest sannolika bland alla tokens i modellens vokabulär (kallas också girig avkodning), medan ett top-k av 3 innebär att nästa token väljs bland de 3 mest sannolika tokens (med temperatur).',
    com_endpoint_anthropic_maxoutputtokens:
      'Maximalt antal tokens som kan genereras i svaret. Ange ett lägre värde för kortare svar och ett högre värde för längre svar.',
    com_endpoint_anthropic_custom_name_placeholder: 'Ange ett anpassat namn för Anthropic',
    com_endpoint_frequency_penalty: 'Frekvensstraff',
    com_endpoint_presence_penalty: 'Närvarostraff',
    com_endpoint_plug_use_functions: 'Använd funktioner',
    com_endpoint_plug_skip_completion: 'Hoppa över komplettering',
    com_endpoint_disabled_with_tools: 'inaktiverad med verktyg',
    com_endpoint_disabled_with_tools_placeholder: 'Inaktiverad med valda verktyg',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Ange anpassade instruktioner att inkludera i systemmeddelande. Standard: inga',
    com_endpoint_import: 'Importera',
    com_endpoint_set_custom_name: 'Ange ett eget namn, om du kan hitta denna förinställning',
    com_endpoint_preset: 'förinställning',
    com_endpoint_presets: 'förinställningar',
    com_endpoint_preset_name: 'Förinställningsnamn',
    com_endpoint_new_topic: 'Nytt ämne',
    com_endpoint: 'Slutpunkt',
    com_endpoint_hide: 'Dölj',
    com_endpoint_show: 'Visa',
    com_endpoint_examples: ' Förinställningar',
    com_endpoint_completion: 'Komplettering',
    com_endpoint_agent: 'Agent',
    com_endpoint_show_what_settings: 'Visa {0} inställningar',
    com_endpoint_save: 'Spara',
    com_endpoint_export: 'Exportera',
    com_endpoint_save_as_preset: 'Spara som förinställning',
    com_endpoint_presets_clear_warning:
      'Är du säker på att du vill rensa alla förinställningar? Detta går inte att ångra.',
    com_endpoint_not_implemented: 'Ej implementerad',
    com_endpoint_no_presets: 'Ingen förinställning ännu',
    com_endpoint_not_available: 'Ingen slutpunkt tillgänglig',
    com_endpoint_view_options: 'Visa alternativ',
    com_endpoint_save_convo_as_preset: 'Spara konversation som förinställning',
    com_endpoint_my_preset: 'Min förinställning',
    com_endpoint_agent_model: 'Agentmodell (Rekommenderad: GPT-3.5)',
    com_endpoint_completion_model: 'Kompletteringsmodell (Rekommenderad: GPT-4)',
    com_endpoint_func_hover: 'Aktivera användning av tillägg som OpenAI-funktioner',
    com_endpoint_skip_hover:
      'Aktivera att hoppa över kompletteringssteg, som granskar det slutliga svaret och genererade steg',
    com_endpoint_config_key: 'Ange API-nyckel',
    com_endpoint_config_key_for: 'Ange API-nyckel för',
    com_endpoint_config_key_name: 'Nyckel',
    com_endpoint_config_value: 'Ange värde för',
    com_endpoint_config_key_name_placeholder: 'Ange API-nyckel först',
    com_endpoint_config_key_encryption: 'Din nyckel kommer att krypteras och raderas vid',
    com_endpoint_config_key_expiry: 'utgångstiden',
    com_endpoint_config_key_import_json_key: 'Importera JSON-nyckel för kontot.',
    com_endpoint_config_key_import_json_key_success: 'Lyckades importera JSON-nyckel för kontot',
    com_endpoint_config_key_import_json_key_invalid:
      'Ogiltig JSON-nyckel för konto, importerade du rätt fil?',
    com_endpoint_config_key_get_edge_key: 'För att få din åtkomstnyckel för Bing, logga in på',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Använd utvecklingsverktyg eller ett tillägg när du är inloggad på webbplatsen för att kopiera innehållet i _U-cookien. Om detta misslyckas, följ dessa',
    com_endpoint_config_key_edge_instructions: 'instruktioner',
    com_endpoint_config_key_edge_full_key_string: 'för att tillhandahålla hela cookie-strängarna.',
    com_endpoint_config_key_chatgpt:
      'För att få din åtkomstnyckel för ChatGPT "Gratisversion", logga in på',
    com_endpoint_config_key_chatgpt_then_visit: 'sedan besök',
    com_endpoint_config_key_chatgpt_copy_token: 'Kopiera åtkomstnyckel.',
    com_endpoint_config_key_google_need_to: 'Du behöver',
    com_endpoint_config_key_google_vertex_ai: 'Aktivera Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API på Google Cloud, sedan',
    com_endpoint_config_key_google_service_account: 'Skapa ett tjänstekonto',
    com_endpoint_config_key_google_vertex_api_role:
      'Se till att klicka på "Skapa och fortsätt" för att ge åtminstone rollen "Vertex AI-användare". Skapa slutligen en JSON-nyckel att importera här.',
    com_nav_plugin_store: 'Pluginbutik',
    com_nav_plugin_search: 'Sök efter plugins',
    com_nav_plugin_auth_error:
      'Det uppstod ett fel när försöket att autentisera denna plugin gjordes. Försök igen.',
    com_nav_export_filename: 'Filnamn',
    com_nav_export_filename_placeholder: 'Ange filnamnet',
    com_nav_export_type: 'Typ',
    com_nav_export_include_endpoint_options: 'Inkludera slutpunktsalternativ',
    com_nav_enabled: 'Aktiverad',
    com_nav_not_supported: 'Stöds ej',
    com_nav_export_all_message_branches: 'Exportera alla grenar för meddelanden',
    com_nav_export_recursive_or_sequential: 'Rekursiv eller sekventiell?',
    com_nav_export_recursive: 'Rekursiv',
    com_nav_export_conversation: 'Exportera konversation',
    com_nav_export: 'Exportera',
    com_nav_shared_links: 'Delade länkar',
    com_nav_shared_links_manage: 'Hantera',
    com_nav_shared_links_empty: 'Du har inga delade länkar.',
    com_nav_shared_links_name: 'Namn',
    com_nav_shared_links_date_shared: 'Datum delad',
    com_nav_theme: 'Tema',
    com_nav_theme_system: 'System',
    com_nav_theme_dark: 'Mörkt',
    com_nav_theme_light: 'Ljust',
    com_nav_clear_all_chats: 'Rensa alla chattar',
    com_nav_confirm_clear: 'Bekräfta rensning',
    com_nav_close_sidebar: 'Stäng sidofält',
    com_nav_open_sidebar: 'Öppna sidofält',
    com_nav_send_message: 'Skicka meddelande',
    com_nav_log_out: 'Logga ut',
    com_nav_user: 'ANVÄNDARE',
    com_nav_archived_chats: 'Arkiverade chattar',
    com_nav_archived_chats_manage: 'Hantera',
    com_nav_archived_chats_empty: 'Du har inga arkiverade chattar.',
    com_nav_archive_all_chats: 'Arkivera alla chattar',
    com_nav_archive_all: 'Arkivera alla',
    com_nav_archive_name: 'Namn',
    com_nav_archive_created_at: 'Skapad',
    com_nav_clear_conversation: 'Rensa konversationer',
    com_nav_clear_conversation_confirm_message:
      'Är du säker på att du vill rensa alla konversationer? Detta går inte att ångra.',
    com_nav_help_faq: 'Hjälp & Vanliga frågor',
    com_nav_settings: 'Inställningar',
    com_nav_search_placeholder: 'Sök meddelanden',
    com_nav_setting_general: 'Allmänt',
    com_nav_setting_data: 'Datakontroller',
  },
  f1 = {
    com_ui_examples: '예시',
    com_ui_new_chat: '새 채팅',
    com_ui_happy_birthday: '내 첫 생일이야!',
    com_ui_example_quantum_computing: '양자 컴퓨팅을 간단하게 설명해줄래?',
    com_ui_example_10_year_old_b_day: '10살 아이 생일 파티를 위한 참신한 아이디어 있을까?',
    com_ui_example_http_in_js: '자바스크립트에서 HTTP 요청을 어떻게 만드나요?',
    com_ui_capabilities: '기능',
    com_ui_capability_remember: '대화 중 사용자가 이전에 말한 것을 기억해요.',
    com_ui_capability_correction: '사용자가 수정 사항을 제공할 수 있어요.',
    com_ui_capability_decline_requests: '부적절한 요청을 거부하도록 훈련되었어요.',
    com_ui_limitations: '제한사항',
    com_ui_limitation_incorrect_info: '간혹 잘못된 정보를 생성할 수 있습니다.',
    com_ui_limitation_harmful_biased: '간혹 해로운 지시나 편향된 내용을 제공할 수 있습니다.',
    com_ui_limitation_limited_2021: '2021년 이후의 세계 및 이벤트에 대한 지식이 제한적입니다.',
    com_ui_input: '입력',
    com_ui_close: '닫기',
    com_ui_model: '모델',
    com_ui_select_model: '모델 선택',
    com_ui_use_prompt: '프롬프트 사용',
    com_ui_prev: '이전',
    com_ui_next: '다음',
    com_ui_prompt_templates: '프롬프트 템플릿',
    com_ui_hide_prompt_templates: '프롬프트 템플릿 숨기기',
    com_ui_showing: '표시 중',
    com_ui_of: '/',
    com_ui_entries: '개',
    com_ui_pay_per_call: '모든 AI 대화를 한 곳에서. 월별이 아닌 호출 당 지불',
    com_ui_enter: 'Enter',
    com_ui_submit: '제출',
    com_ui_upload_success: '파일 업로드 성공',
    com_ui_upload_invalid: '잘못된 파일입니다',
    com_ui_cancel: '취소',
    com_ui_save: '저장',
    com_ui_copy_to_clipboard: '클립보드에 복사',
    com_ui_copied_to_clipboard: '클립보드에 복사되었습니다',
    com_ui_regenerate: '재생성',
    com_ui_continue: '계속',
    com_ui_edit: '편집',
    com_ui_success: '성공',
    com_ui_all: '전체',
    com_ui_clear: '지우기',
    com_ui_revoke: '취소',
    com_ui_revoke_info: '사용자가 제공한 자격 증명을 모두 취소합니다.',
    com_ui_import_conversation: '가져오기',
    com_ui_import_conversation_info: 'JSON 파일에서 대화 가져오기',
    com_ui_import_conversation_success: '대화가 성공적으로 가져와졌습니다',
    com_ui_import_conversation_error: '대화를 가져오는 동안 오류가 발생했습니다',
    com_ui_confirm_action: '작업 확인',
    com_ui_chats: '채팅',
    com_ui_share: '공유하기',
    com_ui_copy_link: '링크 복사',
    com_ui_update_link: '링크 업데이트',
    com_ui_create_link: '링크 만들기',
    com_ui_share_link_to_chat: '채팅으로 링크 공유하기',
    com_ui_share_error: '채팅 링크를 공유하는 동안 오류가 발생했습니다',
    com_ui_share_create_message: '이름과 공유 후에 추가하는 메시지는 비공개로 유지됩니다.',
    com_ui_share_created_message:
      '귀하의 채팅에 대한 공유 링크가 생성되었습니다. 설정을 통해 언제든지 이전에 공유한 채팅을 관리할 수 있습니다.',
    com_ui_share_update_message:
      '이름, 사용자 지정 지침 및 공유 후 추가하는 메시지는 비공개로 유지됩니다.',
    com_ui_share_updated_message:
      '귀하의 채팅에 대한 공유 링크가 업데이트되었습니다. 설정을 통해 언제든지 이전에 공유한 채팅을 관리할 수 있습니다.',
    com_ui_shared_link_not_found: '공유 링크를 찾을 수 없습니다',
    com_ui_delete: '삭제',
    com_ui_delete_conversation: '채팅을 삭제하시겠습니까?',
    com_ui_delete_conversation_confirm: '이 채팅이 삭제됩니다',
    com_ui_rename: '이름 바꾸기',
    com_ui_archive: '아카이브',
    com_ui_archive_error: '대화 아카이브 실패',
    com_ui_unarchive: '아카이브 해제',
    com_ui_unarchive_error: '대화 아카이브 해제 실패',
    com_ui_more_options: '더 보기',
    com_auth_error_login:
      '제공된 정보로 로그인할 수 없습니다. 자격 증명을 확인하고 다시 시도하세요.',
    com_auth_no_account: '계정이 없으신가요?',
    com_auth_sign_up: '가입하기',
    com_auth_sign_in: '로그인',
    com_auth_google_login: 'Google로 로그인',
    com_auth_facebook_login: 'Facebook으로 로그인',
    com_auth_github_login: 'Github으로 로그인',
    com_auth_discord_login: 'Discord로 로그인',
    com_auth_email: '이메일',
    com_auth_email_required: '이메일은 필수입니다',
    com_auth_email_min_length: '이메일은 최소 6자 이상이어야 합니다',
    com_auth_email_max_length: '이메일은 120자를 넘을 수 없습니다',
    com_auth_email_pattern: '유효한 이메일 주소를 입력하세요',
    com_auth_email_address: '이메일 주소',
    com_auth_password: '비밀번호',
    com_auth_password_required: '비밀번호는 필수입니다',
    com_auth_password_min_length: '비밀번호는 최소 8자 이상이어야 합니다',
    com_auth_password_max_length: '비밀번호는 128자를 넘을 수 없습니다',
    com_auth_password_forgot: '비밀번호를 잊으셨나요?',
    com_auth_password_confirm: '비밀번호 확인',
    com_auth_password_not_match: '비밀번호가 일치하지 않습니다',
    com_auth_continue: '계속',
    com_auth_create_account: '계정 만들기',
    com_auth_error_create: '계정을 등록하는 중에 오류가 발생했습니다. 다시 시도하세요.',
    com_auth_full_name: '이름',
    com_auth_name_required: '이름은 필수입니다',
    com_auth_name_min_length: '이름은 최소 3자 이상이어야 합니다',
    com_auth_name_max_length: '이름은 80자를 초과할 수 없습니다',
    com_auth_username: '사용자명',
    com_auth_username_required: '사용자명이 필요합니다',
    com_auth_username_min_length: '사용자명은 최소 3자 이상이어야 합니다',
    com_auth_username_max_length: '사용자명은 20자를 초과할 수 없습니다',
    com_auth_already_have_account: '이미 계정이 있으신가요?',
    com_auth_login: '로그인',
    com_auth_reset_password: '비밀번호 재설정',
    com_auth_click: '클릭',
    com_auth_here: '여기',
    com_auth_to_reset_your_password: '비밀번호를 재설정하려면',
    com_auth_reset_password_link_sent: '이메일 전송',
    com_auth_reset_password_email_sent:
      '비밀번호 재설정에 대한 지침이 포함된 이메일이 전송되었습니다.',
    com_auth_error_reset_password:
      '비밀번호 재설정 중에 문제가 발생했습니다. 제공된 이메일 주소로 사용자를 찾을 수 없습니다. 다시 시도하세요.',
    com_auth_reset_password_success: '비밀번호 재설정 성공',
    com_auth_login_with_new_password: '새로운 비밀번호로 로그인할 수 있습니다.',
    com_auth_error_invalid_reset_token: '이 비밀번호 재설정 토큰은 더 이상 유효하지 않습니다.',
    com_auth_click_here: '여기를 클릭하세요',
    com_auth_to_try_again: '다시 시도하세요.',
    com_auth_submit_registration: '등록하기',
    com_auth_welcome_back: '다시 오신 것을 환영합니다',
    com_endpoint_open_menu: '메뉴 열기',
    com_endpoint_bing_enable_sydney: '시드니 활성화',
    com_endpoint_bing_to_enable_sydney: '시드니를 활성화하려면',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      "Bing은 '컨텍스트'로 최대 7,000개의 토큰을 사용할 수 있으며, 대화에서 참조할 수 있습니다. 구체적인 제한은 알려져 있지 않지만, 7,000개의 토큰을 초과하면 오류가 발생할 수 있습니다.",
    com_endpoint_bing_system_message_placeholder:
      "경고: 이 기능의 오용으로 인해 Bing의 사용이 '금지'될 수 있습니다. 모든 내용을 보려면 '시스템 메시지'를 클릭하세요. 생략된 경우 '시드니' 프리셋이 사용됩니다.",
    com_endpoint_system_message: '시스템 메시지',
    com_endpoint_default_blank: '기본값: 공백',
    com_endpoint_default_false: '기본값: false',
    com_endpoint_default_creative: '기본값: 창의적',
    com_endpoint_default_empty: '기본값: 비어 있음',
    com_endpoint_default_with_num: '기본값: {0}',
    com_endpoint_context: '컨텍스트',
    com_endpoint_tone_style: '톤 스타일',
    com_endpoint_token_count: '토큰 수',
    com_endpoint_output: '출력',
    com_endpoint_google_temp:
      '높은 값 = 더 무작위, 낮은 값 = 더 집중적이고 결정적입니다. 이 값을 변경하거나 Top P 중 하나만 변경하는 것을 권장합니다.',
    com_endpoint_google_topp:
      'Top-p는 모델이 출력에 사용할 토큰을 선택하는 방식을 변경합니다. 토큰은 가장 높은 확률부터 가장 낮은 확률까지 선택됩니다. 선택된 토큰의 확률의 합이 top-p 값과 같아질 때까지 선택됩니다.',
    com_endpoint_google_topk:
      'Top-k는 모델이 출력에 사용할 토큰을 선택하는 방식을 변경합니다. top-k가 1인 경우 모델의 어휘 중 가장 확률이 높은 토큰이 선택됩니다(greedy decoding). top-k가 3인 경우 다음 토큰은 가장 확률이 높은 3개의 토큰 중에서 선택됩니다(temperature 사용).',
    com_endpoint_google_maxoutputtokens:
      '응답에서 생성할 수 있는 최대 토큰 수입니다. 짧은 응답에는 낮은 값을, 긴 응답에는 높은 값을 지정하세요.',
    com_endpoint_google_custom_name_placeholder: 'Google에 대한 사용자 정의 이름 설정',
    com_endpoint_prompt_prefix_placeholder:
      '사용자 정의 지시사항 또는 컨텍스트를 설정하세요. 비어 있으면 무시됩니다.',
    com_endpoint_custom_name: '사용자 정의 이름',
    com_endpoint_prompt_prefix: '프롬프트 접두사',
    com_endpoint_temperature: '온도',
    com_endpoint_default: '기본값',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: '최대 출력 토큰 수',
    com_endpoint_openai_temp:
      '높은 값 = 더 무작위, 낮은 값 = 더 집중적이고 결정적입니다. 이 값을 변경하거나 Top P 중 하나만 변경하는 것을 권장합니다.',
    com_endpoint_openai_max:
      '생성할 최대 토큰 수입니다. 입력 토큰과 생성된 토큰의 총 길이는 모델의 컨텍스트 길이로 제한됩니다.',
    com_endpoint_openai_topp:
      '온도를 사용한 샘플링 대신, top_p 확률 질량을 고려하는 nucleus 샘플링입니다. 따라서 0.1은 상위 10% 확률 질량을 구성하는 토큰만 고려합니다. 이 값을 변경하거나 온도를 변경하는 것을 권장하지만, 둘 다 변경하지는 마세요.',
    com_endpoint_openai_freq:
      '텍스트에서 토큰의 빈도수에 따라 새로운 토큰에 패널티를 부여합니다. 이전에 나온 텍스트의 빈도수에 따라 새로운 토큰의 확률이 감소하여 동일한 문장을 반복할 가능성을 줄입니다.',
    com_endpoint_openai_pres:
      '텍스트에서 토큰이 나타나는지 여부에 따라 새로운 토큰에 패널티를 부여합니다. 이전에 나온 텍스트에 나타나는 토큰에 대한 패널티를 증가시켜 새로운 주제에 대해 이야기할 가능성을 높입니다.',
    com_endpoint_openai_custom_name_placeholder: 'ChatGPT에 대한 사용자 정의 이름을 설정하세요.',
    com_endpoint_openai_prompt_prefix_placeholder:
      '시스템 메시지에 포함할 사용자 정의 지시사항을 설정하세요. 기본값: 없음',
    com_endpoint_anthropic_temp:
      '0에서 1 사이의 값으로, 분석/다중 선택에는 0에 가까운 값을 사용하고, 창의적이고 생성적인 작업에는 1에 가까운 값을 사용하세요. 이 값을 변경하거나 Top P 중 하나만 변경하는 것을 권장합니다.',
    com_endpoint_anthropic_topp:
      'Top-p는 모델이 출력에 사용할 토큰을 선택하는 방식을 변경합니다. 토큰은 가장 높은 확률부터 가장 낮은 확률까지 선택됩니다. 선택된 토큰의 확률의 합이 top-p 값과 같아질 때까지 선택됩니다.',
    com_endpoint_anthropic_topk:
      'Top-k는 모델이 출력에 사용할 토큰을 선택하는 방식을 변경합니다. top-k가 1인 경우 모델의 어휘 중 가장 확률이 높은 토큰이 선택됩니다(greedy decoding). top-k가 3인 경우 다음 토큰은 가장 확률이 높은 3개의 토큰 중에서 선택됩니다(temperature 사용).',
    com_endpoint_anthropic_maxoutputtokens:
      '응답에서 생성할 수 있는 최대 토큰 수입니다. 짧은 응답에는 낮은 값을, 긴 응답에는 높은 값을 지정하세요.',
    com_endpoint_anthropic_custom_name_placeholder: 'Anthropic에 대한 사용자 정의 이름 설정',
    com_endpoint_frequency_penalty: '빈도 패널티',
    com_endpoint_presence_penalty: '존재 패널티',
    com_endpoint_plug_use_functions: '함수 사용',
    com_endpoint_plug_skip_completion: '완료 단계 건너뛰기',
    com_endpoint_disabled_with_tools: '도구 사용 불가',
    com_endpoint_disabled_with_tools_placeholder: '도구 선택 시 사용 불가',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      '시스템 메시지에 포함할 사용자 정의 지시사항을 설정하세요. 기본값: 없음',
    com_endpoint_import: '가져오기',
    com_endpoint_set_custom_name: '프리셋을 쉽게 찾을 수 있도록 사용자 정의 이름을 설정하세요',
    com_endpoint_preset: '프리셋',
    com_endpoint_presets: '프리셋',
    com_endpoint_preset_name: '프리셋 이름',
    com_endpoint_new_topic: '새로운 주제',
    com_endpoint: '엔드포인트',
    com_endpoint_hide: '숨기기',
    com_endpoint_show: '표시',
    com_endpoint_examples: ' 프리셋',
    com_endpoint_completion: '완료',
    com_endpoint_agent: '에이전트',
    com_endpoint_show_what_settings: '{0} 설정 표시',
    com_endpoint_save: '저장',
    com_endpoint_export: '내보내기',
    com_endpoint_save_as_preset: '프리셋으로 저장',
    com_endpoint_presets_clear_warning:
      '모든 프리셋을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.',
    com_endpoint_not_implemented: '구현되지 않았습니다',
    com_endpoint_no_presets: '아직 프리셋이 없습니다',
    com_endpoint_not_available: '사용할 수 없는 엔드포인트입니다',
    com_endpoint_view_options: '옵션 보기',
    com_endpoint_save_convo_as_preset: '대화를 프리셋으로 저장',
    com_endpoint_my_preset: '내 프리셋',
    com_endpoint_agent_model: '에이전트 모델 (권장: GPT-3.5)',
    com_endpoint_completion_model: '완료 모델 (권장: GPT-4)',
    com_endpoint_func_hover: '플러그인을 OpenAI 함수로 사용할 수 있도록 합니다.',
    com_endpoint_skip_hover:
      '완료 단계를 건너뛰도록 합니다. 최종 답변과 생성된 단계를 검토하는 단계입니다.',
    com_endpoint_config_key: 'API 키 설정',
    com_endpoint_config_key_for: 'API 키 설정: ',
    com_endpoint_config_key_name: '키',
    com_endpoint_config_value: '값 입력',
    com_endpoint_config_key_name_placeholder: '먼저 API 키를 설정하세요',
    com_endpoint_config_key_encryption: '키는 암호화되어 저장되며, 만료 시간에 삭제됩니다',
    com_endpoint_config_key_expiry: '만료 시간',
    com_endpoint_config_key_import_json_key: '서비스 계정 JSON 키 가져오기',
    com_endpoint_config_key_import_json_key_success: '서비스 계정 JSON 키 가져오기 성공',
    com_endpoint_config_key_import_json_key_invalid:
      '유효하지 않은 서비스 계정 JSON 키입니다. 올바른 파일을 가져왔는지 확인하세요',
    com_endpoint_config_key_get_edge_key: 'Bing 액세스 토큰을 얻으려면 다음 사이트에 로그인하세요',
    com_endpoint_config_key_get_edge_key_dev_tool:
      '로그인한 상태에서 개발 도구 또는 확장 프로그램을 사용하여 _U 쿠키의 내용을 복사합니다. 실패하는 경우 다음',
    com_endpoint_config_key_edge_instructions: '지침',
    com_endpoint_config_key_edge_full_key_string: '전체 쿠키 문자열을 제공하세요',
    com_nav_plugin_store: '플러그인 스토어',
    com_nav_plugin_search: '플러그인 검색',
    com_nav_plugin_auth_error:
      '이 플러그인을 인증하려는 중에 오류가 발생했습니다. 다시 시도해주세요.',
    com_nav_export_filename: '파일 이름',
    com_nav_export_filename_placeholder: '파일 이름을 설정하세요',
    com_nav_export_type: '유형',
    com_nav_export_include_endpoint_options: '엔드포인트 옵션 포함',
    com_nav_enabled: '활성화됨',
    com_nav_not_supported: '지원되지 않음',
    com_nav_export_all_message_branches: '모든 메시지 브랜치 내보내기',
    com_nav_export_recursive_or_sequential: '재귀적 또는 순차적?',
    com_nav_export_recursive: '재귀적',
    com_nav_export_conversation: '대화 내보내기',
    com_nav_export: '내보내기',
    com_nav_shared_links: '공유 링크',
    com_nav_shared_links_manage: '관리',
    com_nav_shared_links_empty: '공유 링크가 없습니다.',
    com_nav_shared_links_name: '이름',
    com_nav_shared_links_date_shared: '공유 날짜',
    com_nav_theme: '테마',
    com_nav_theme_system: '시스템',
    com_nav_theme_dark: '다크',
    com_nav_theme_light: '라이트',
    com_nav_clear_all_chats: '모든 채팅 지우기',
    com_nav_confirm_clear: '지우기 확인',
    com_nav_close_sidebar: '사이드바 닫기',
    com_nav_open_sidebar: '사이드바 열기',
    com_nav_send_message: '메시지 보내기',
    com_nav_log_out: '로그아웃',
    com_nav_user: '사용자',
    com_nav_archived_chats: '아카이브된 채팅',
    com_nav_archived_chats_manage: '관리',
    com_nav_archived_chats_empty: '아카이브된 채팅이 없습니다',
    com_nav_archive_all_chats: '모든 채팅 아카이브',
    com_nav_archive_all: '모든 채팅 아카이브',
    com_nav_archive_name: '이름',
    com_nav_archive_created_at: '생성 날짜',
    com_nav_clear_conversation: '대화 지우기',
    com_nav_clear_conversation_confirm_message:
      '모든 대화를 지우시겠습니까? 이 작업은 되돌릴 수 없습니다.',
    com_nav_help_faq: '도움말 및 FAQ',
    com_nav_settings: '설정',
    com_nav_search_placeholder: '메시지 검색',
    com_nav_setting_general: '일반',
    com_nav_setting_data: '데이터 제어',
    com_assistants_file_search: '파일 검색',
    com_assistants_file_search_info:
      '파일 검색을 위한 벡터 저장소 연결은 아직 지원되지 않습니다. Provider Playground에서 연결하거나 스레드 기반으로 메시지에 파일을 첨부하여 파일 검색을 할 수 있습니다.',
    com_assistants_non_retrieval_model:
      '이 모델에서는 파일 검색 기능을 사용할 수 없습니다. 다른 모델을 선택하세요.',
    com_ui_attach_error_openai: '어시스턴트 파일을 다른 엔드포인트에 첨부할 수 없습니다.',
    com_ui_attach_warn_endpoint: '호환되는 도구가 없으면 비어시스턴트 파일이 무시될 수 있습니다.',
    com_ui_assistant_deleted: '어시스턴트가 성공적으로 삭제되었습니다',
    com_ui_assistant_delete_error: '어시스턴트 삭제 중 오류가 발생했습니다.',
    com_ui_copied: '복사됨',
    com_ui_copy_code: '코드 복사',
    com_nav_source_chat: '소스 채팅 보기',
    com_ui_date_today: '오늘',
    com_ui_date_yesterday: '어제',
    com_ui_date_previous_7_days: '지난 7일',
    com_ui_date_previous_30_days: '지난 30일',
    com_ui_date_january: '1월',
    com_ui_date_february: '2월',
    com_ui_date_march: '3월',
    com_ui_date_april: '4월',
    com_ui_date_may: '5월',
    com_ui_date_june: '6월',
    com_ui_date_july: '7월',
    com_ui_date_august: '8월',
    com_ui_date_september: '9월',
    com_ui_date_october: '10월',
    com_ui_date_november: '11월',
    com_ui_date_december: '12월',
    com_assistants_domain_info: '어시스턴트가 {0}에게 이 정보를 보냈습니다',
    com_assistants_delete_actions_success: '어시스턴트에서 작업이 성공적으로 삭제되었습니다',
    com_error_moderation:
      '제출된 내용이 커뮤니티 가이드라인에 부합하지 않는다고 판단되어 모더레이션 시스템에 의해 차단되었습니다. 해당 주제로는 진행할 수 없습니다. 다른 질문이나 탐구하고 싶은 주제가 있다면 메시지를 수정하거나 새 대화를 시작해 주세요.',
    com_error_no_user_key: '키를 찾을 수 없습니다. 키를 제공하고 다시 시도해주세요.',
    com_error_no_base_url: '기본 URL이 없습니다. URL을 제공한 후 다시 시도해 주세요.',
    com_error_invalid_user_key: '제공된 키가 유효하지 않습니다. 키를 제공하고 다시 시도해주세요.',
    com_error_expired_user_key:
      '{0}에 대한 키가 {1}에 만료되었습니다. 새 키를 제공하고 다시 시도해주세요.',
    com_files_no_results: '결과가 없습니다.',
    com_files_filter: '파일 필터링...',
    com_files_number_selected: '{0}개의 파일({1}개 중)이 선택되었습니다',
    com_sidepanel_select_assistant: '어시스턴트 선택',
    com_sidepanel_parameters: '매개변수',
    com_sidepanel_assistant_builder: '어시스턴트 제작기',
    com_sidepanel_hide_panel: '패널 숨기기',
    com_sidepanel_attach_files: '파일 첨부',
    com_sidepanel_manage_files: '파일 관리',
    com_assistants_capabilities: '기능',
    com_assistants_knowledge: '지식',
    com_assistants_knowledge_info:
      'Knowledge에 파일을 업로드하면 어시스턴트와의 대화에서 파일 내용이 포함될 수 있습니다.',
    com_assistants_knowledge_disabled:
      '지식으로 파일을 업로드하기 전에 Assistant를 생성하고 Code Interpreter 또는 Retrieval을 활성화한 후 저장해야 합니다.',
    com_assistants_image_vision: '이미지 인식',
    com_assistants_code_interpreter: '코드 인터프리터',
    com_assistants_code_interpreter_files: '코드 인터프리터에서만 다음 파일을 사용할 수 있습니다:',
    com_assistants_retrieval: '검색',
    com_assistants_search_name: '이름으로 도우미 검색',
    com_assistants_tools: '도구',
    com_assistants_actions: '작업',
    com_assistants_add_tools: '도구 추가',
    com_assistants_add_actions: '작업 추가',
    com_assistants_available_actions: '사용 가능한 작업',
    com_assistants_running_action: '작업 진행 중',
    com_assistants_completed_action: '{0}과 대화했습니다',
    com_assistants_completed_function: '{0}을(를) 실행했습니다',
    com_assistants_function_use: '어시스턴트는 {0}을(를) 사용했습니다.',
    com_assistants_update_actions_success: '액션이 성공적으로 생성 또는 업데이트되었습니다',
    com_assistants_update_actions_error: '작업을 생성하거나 업데이트하는 중에 오류가 발생했습니다.',
    com_assistants_delete_actions_error: '작업 삭제 중 오류가 발생했습니다',
    com_assistants_actions_info:
      '어시스턴트가 API를 통해 정보를 검색하거나 작업을 수행할 수 있게 해줍니다.',
    com_assistants_name_placeholder: '선택 사항: 어시스턴트의 이름',
    com_assistants_instructions_placeholder: '보조 지침은 보조가 사용하는 시스템 지침입니다.',
    com_assistants_description_placeholder: '옵션: 여기에 어시스턴트를 설명하세요',
    com_assistants_actions_disabled: '어시스턴트를 만들어야 작업을 추가할 수 있습니다.',
    com_assistants_update_success: '업데이트 성공',
    com_assistants_update_error: '어시스턴트 업데이트 중 오류가 발생했습니다.',
    com_assistants_create_success: '계정이 성공적으로 생성되었습니다',
    com_assistants_create_error: '어시스턴트 생성 중 오류가 발생했습니다.',
    com_ui_field_required: '이 필드는 필수입니다',
    com_ui_download_error: '파일 다운로드 중 오류가 발생했습니다. 파일이 삭제되었을 수 있습니다.',
    com_ui_attach_error_type: '엔드포인트에서 지원하지 않는 파일 형식입니다.',
    com_ui_attach_error_size: '엔드포인트에 대한 파일 크기 제한을 초과했습니다.',
    com_ui_attach_error:
      '파일을 첨부할 수 없습니다. 대화를 생성하거나 선택하시거나 페이지를 새로고침해 보세요.',
    com_ui_experimental: '실험적 기능',
    com_ui_on: '켜기',
    com_ui_off: '꺼짐',
    com_ui_yes: '네',
    com_ui_no: '아니요',
    com_ui_ascending: '오름차순',
    com_ui_descending: '내림차순',
    com_ui_show_all: '전체 보기',
    com_ui_name: '이름',
    com_ui_date: '날짜',
    com_ui_storage: '저장소',
    com_ui_context: '맥락',
    com_ui_size: '크기',
    com_ui_host: '호스트',
    com_ui_update: '업데이트',
    com_ui_authentication: '인증',
    com_ui_instructions: '설명',
    com_ui_description: '설명',
    com_ui_error: '오류',
    com_ui_select: '선택',
    com_ui_select_search_model: '이름으로 모델 검색',
    com_ui_select_search_plugin: '이름으로 플러그인 검색',
    com_ui_stop: '중지',
    com_ui_upload_files: '파일 업로드',
    com_ui_new_footer: '모든 AI 대화를 한 곳에 모아놓았습니다.',
    com_ui_none_selected: '선택된 항목 없음',
    com_ui_upload_error: '파일 업로드 중 오류가 발생했습니다',
    com_ui_save_submit: '저장 및 제출',
    com_user_message: '당신',
    com_ui_fork: '포크',
    com_ui_fork_info_1: '이 설정을 사용하면 원하는 동작으로 메시지를 분기할 수 있습니다.',
    com_ui_fork_info_2:
      '"포킹(Forking)"은 현재 대화에서 특정 메시지를 시작/종료 지점으로 하여 새로운 대화를 생성하고, 선택한 옵션에 따라 복사본을 만드는 것을 의미합니다.',
    com_ui_fork_info_3:
      '"대상 메시지"는 이 팝업이 열린 메시지 또는 "{0}"에 체크하면 대화의 최신 메시지를 의미합니다.',
    com_ui_fork_info_visible:
      '이 옵션은 표시된 메시지만 분기하여 복사합니다. 즉, 대상 메시지로 가는 직접 경로만 복사하고 다른 분기는 복사하지 않습니다.',
    com_ui_fork_info_branches:
      '이 옵션은 표시된 메시지와 관련 브랜치를 분기시킵니다. 즉, 대상 메시지에 이르는 직접 경로와 그 경로에 있는 브랜치를 포함합니다.',
    com_ui_fork_info_target:
      '이 옵션은 대상 메시지와 그 주변 메시지를 포함하여 대상 메시지에 이르는 모든 메시지 분기를 포크합니다. 다시 말해, 표시 여부나 동일한 경로 상에 있는지 여부와 상관없이 모든 메시지 분기가 포함됩니다.',
    com_ui_fork_info_start:
      '선택 시 이 메시지부터 대화의 최신 메시지까지 위에서 선택한 동작에 따라 포크가 시작됩니다.',
    com_ui_fork_info_remember:
      '이 옵션을 선택하면 향후 대화를 더 빠르게 분기할 수 있도록 선택한 옵션을 기억합니다.',
    com_ui_fork_success: '대화 복제 성공',
    com_ui_fork_processing: '대화 분기 중...',
    com_ui_fork_error: '대화 분기 중 오류가 발생했습니다',
    com_ui_fork_change_default: '기본 포크 옵션',
    com_ui_fork_default: '기본 포크 옵션 사용',
    com_ui_fork_remember: '기억하기',
    com_ui_fork_split_target_setting: '기본적으로 대상 메시지에서 포크 시작',
    com_ui_fork_split_target: '여기서 포크 시작',
    com_ui_fork_remember_checked:
      '선택한 내용은 사용 후에도 기억됩니다. 설정에서 언제든 변경할 수 있습니다.',
    com_ui_fork_all_target: '여기부터 전체 포함',
    com_ui_fork_branches: '관련 브랜치 포함',
    com_ui_fork_visible: '공개 메시지만 표시',
    com_ui_fork_from_message: '포크 옵션 선택',
    com_ui_mention: '엔드포인트, 어시스턴트 또는 프리셋을 언급하여 빠르게 전환하세요',
    com_ui_nothing_found: '찾을 수 없습니다',
    com_ui_go_to_conversation: '대화로 이동',
    com_ui_import_conversation_file_type_error: '가져올 수 없는 파일 형식입니다',
    com_ui_avatar: '프로필 사진',
    com_ui_unknown: '알 수 없음',
    com_ui_result: '결과',
    com_ui_image_gen: '이미지 생성',
    com_ui_assistant: '어시스턴트',
    com_ui_assistants: '어시스턴트',
    com_ui_attachment: '첨부 파일',
    com_ui_assistants_output: '어시스턴트 출력',
    com_ui_create: '만들기',
    com_ui_delete_assistant_confirm:
      '이 Assistant를 삭제하시겠습니까? 이 작업은 취소할 수 없습니다.',
    com_ui_preview: '미리보기',
    com_ui_upload: '업로드',
    com_ui_connect: '연결',
    com_ui_upload_delay:
      '"{0}" 파일 업로드에 예상보다 시간이 더 걸리고 있습니다. 파일 인덱싱이 완료될 때까지 기다려 주세요.',
    com_ui_privacy_policy: '개인정보 보호정책',
    com_ui_terms_of_service: '이용 약관',
    com_ui_min_tags: '최소 {0}개는 필수로 입력해야 합니다. 더 이상 값을 제거할 수 없습니다.',
    com_ui_max_tags: '최대 {0}개까지만 허용됩니다. 최신 값을 사용 중입니다.',
    com_auth_error_login_rl:
      '짧은 시간 동안 너무 많은 로그인 시도가 있었습니다. 잠시 후 다시 시도해 주세요.',
    com_auth_error_login_ban: '서비스 이용 규정을 위반하여 계정이 일시적으로 제한되었습니다.',
    com_auth_error_login_server:
      '내부 서버 오류가 발생했습니다. 잠시 기다렸다가 다시 시도해 주세요.',
    com_auth_back_to_login: '로그인 화면으로 돌아가기',
    com_endpoint_message: '메시지',
    com_endpoint_messages: '메시지',
    com_endpoint_message_not_appendable: '메시지를 수정하거나 다시 생성하세요.',
    com_endpoint_context_tokens: '최대 컨텍스트 토큰 수',
    com_endpoint_context_info:
      '컨텍스트로 사용할 수 있는 최대 토큰 수입니다. 요청마다 보내는 토큰 수를 제어하는 데 사용할 수 있습니다. 지정하지 않으면 알려진 모델의 컨텍스트 크기를 기반으로 시스템 기본값을 사용합니다. 더 높은 값을 설정하면 오류가 발생하거나 토큰 비용이 더 높아질 수 있습니다.',
    com_endpoint_instructions_assistants_placeholder:
      '어시스턴트의 지침을 재정의합니다. 이를 통해 실행마다 동작을 수정할 수 있습니다.',
    com_endpoint_prompt_prefix_assistants_placeholder:
      '추가 지시사항 또는 컨텍스트를 Assistant의 기본 지시사항에 추가합니다. 비어 있으면 무시됩니다.',
    com_endpoint_prompt_prefix_assistants: '추가 지시사항',
    com_endpoint_instructions_assistants: '에이전트 지침 재정의',
    com_endpoint_stop: '중지 시퀀스',
    com_endpoint_stop_placeholder: 'Enter 키를 눌러 값을 구분하세요',
    com_endpoint_openai_max_tokens:
      '선택적 `max_tokens` 필드로, 채팅 완성에서 생성할 수 있는 최대 토큰 수를 나타냅니다. 입력 토큰과 생성된 토큰의 총 길이는 모델의 컨텍스트 길이로 제한됩니다. 이 숫자가 최대 컨텍스트 토큰 수를 초과하면 오류가 발생할 수 있습니다.',
    com_endpoint_openai_resend:
      '이전에 첨부한 모든 이미지를 다시 전송합니다. 참고: 이렇게 하면 토큰 비용이 크게 증가할 수 있으며, 많은 이미지를 첨부하면 오류가 발생할 수 있습니다.',
    com_endpoint_openai_resend_files:
      '이전에 첨부한 모든 파일을 다시 보내세요. 참고: 이렇게 하면 토큰 비용이 증가하고 많은 첨부 파일로 인해 오류가 발생할 수 있습니다.',
    com_endpoint_openai_detail:
      '비전 요청의 해상도입니다. "낮음"은 저렴하고 빠르며, "높음"은 더 상세하지만 비용이 많이 듭니다. "자동"은 이미지 해상도에 따라 두 가지 중 하나를 자동으로 선택합니다.',
    com_endpoint_openai_stop: 'API가 추가 토큰 생성을 중지할 최대 4개의 시퀀스입니다.',
    com_endpoint_plug_resend_files: '파일 재전송',
    com_endpoint_plug_resend_images: '이미지 재전송',
    com_endpoint_plug_image_detail: '이미지 상세 정보',
    com_endpoint_preset_delete_confirm: '이 프리셋을 삭제하시겠습니까?',
    com_endpoint_preset_clear_all_confirm: '모든 프리셋을 삭제하시겠습니까?',
    com_endpoint_preset_import: '프리셋 가져왔습니다!',
    com_endpoint_preset_import_error:
      '프리셋을 가져오는 중에 오류가 발생했습니다. 다시 시도해주세요.',
    com_endpoint_preset_save_error:
      '프리셋을 저장하는 중에 오류가 발생했습니다. 다시 시도해 주세요.',
    com_endpoint_preset_delete_error:
      '프리셋을 삭제하는 중에 오류가 발생했습니다. 다시 시도해 주세요.',
    com_endpoint_preset_default_removed: '더 이상 기본 프리셋이 아닙니다',
    com_endpoint_preset_default_item: '기본값:',
    com_endpoint_preset_default_none: '기본 프리셋이 설정되지 않았습니다.',
    com_endpoint_preset_title: '프리셋',
    com_endpoint_preset_saved: '저장되었습니다!',
    com_endpoint_preset_default: '이제 기본 프리셋입니다.',
    com_endpoint_preset_selected: '프리셋 활성화됨',
    com_endpoint_preset_selected_title: '활성화됨',
    com_endpoint_assistant: '어시스턴트',
    com_endpoint_use_active_assistant: '활성 에이전트 사용',
    com_endpoint_assistant_model: '에이전트 모델',
    com_endpoint_assistant_placeholder: '오른쪽 사이드 패널에서 에이전트를 선택하세요',
    com_endpoint_config_placeholder: '헤더 메뉴에서 키를 설정하여 채팅하세요.',
    com_endpoint_config_click_here: '여기를 클릭하세요',
    com_endpoint_config_google_service_key: 'Google 서비스 계정 키',
    com_endpoint_config_google_cloud_platform: 'Google Cloud Platform 엔드포인트 설정',
    com_endpoint_config_google_api_key: 'Google API 키',
    com_endpoint_config_google_gemini_api: 'Gemini API 설정',
    com_endpoint_config_google_api_info: 'Gemini에서 Generative Language API 키를 얻으려면',
    com_endpoint_config_key_chatgpt:
      "ChatGPT '무료 버전'의 액세스 토큰을 얻으려면 다음 사이트에 로그인하세요",
    com_endpoint_config_key_chatgpt_then_visit: '그런 다음 방문하세요',
    com_endpoint_config_key_chatgpt_copy_token: '액세스 토큰 복사',
    com_endpoint_config_key_google_need_to: 'API 키를 설정해야 합니다',
    com_endpoint_config_key_google_vertex_ai: 'Vertex AI 사용',
    com_endpoint_config_key_google_vertex_api: 'Google Cloud에서 제공하는 API',
    com_endpoint_config_key_google_service_account: '서비스 계정 생성',
    com_endpoint_config_key_google_vertex_api_role:
      "'Vertex AI 사용자' 역할을 부여하려면 반드시 '생성 및 계속'을 클릭하세요. 마지막으로 여기에 가져올 JSON 키를 생성하세요.",
    com_nav_welcome_assistant: '어시스턴트 선택하기',
    com_nav_welcome_message: '오늘 무엇을 도와드릴까요?',
    com_nav_auto_scroll: '채팅 열렸을 때 최신 메시지로 자동 스크롤',
    com_nav_hide_panel: '오른쪽 사이드 패널 숨기기',
    com_nav_modular_chat: '대화 중간에 엔드포인트 전환 허용',
    com_nav_latex_parsing: '메시지에서 LaTeX 구문 분석(성능에 영향을 줄 수 있음)',
    com_nav_profile_picture: '프로필 사진',
    com_nav_change_picture: '프로필 사진 변경',
    com_nav_plugin_install: '플러그인 설치',
    com_nav_plugin_uninstall: '플러그인 제거',
    com_nav_tool_add: '추가',
    com_nav_tool_remove: '제거',
    com_nav_tool_dialog: '어시스턴트 도구',
    com_nav_tool_dialog_description: 'Assistant를 저장해야 도구 선택이 유지됩니다.',
    com_show_agent_settings: '에이전트 설정 표시',
    com_show_completion_settings: '완료 설정 표시',
    com_hide_examples: '예시 숨기기',
    com_show_examples: '예시 보기',
    com_nav_tool_search: '도구 검색',
    com_nav_my_files: '내 파일',
    com_nav_enter_to_send: '엔터키를 눌러 메시지 보내기',
    com_nav_user_name_display: '메시지에서 사용자 이름 표시',
    com_nav_save_drafts: '초안을 로컬에 저장',
    com_nav_show_code: '코드 인터프리터 사용 시 항상 코드 표시',
    com_nav_setting_beta: '베타 기능',
    com_nav_setting_account: '계정',
    com_nav_language: '언어',
    com_nav_lang_auto: '자동 감지',
    com_nav_lang_english: '영어',
    com_nav_lang_chinese: '중국어',
    com_nav_lang_german: '독일어',
    com_nav_lang_spanish: '스페인어',
    com_nav_lang_french: '프랑스어',
    com_nav_lang_italian: '이탈리아어',
    com_nav_lang_polish: '폴란드어',
    com_nav_lang_brazilian_portuguese: '브라질 포르투갈어',
    com_nav_lang_russian: '러시아어',
    com_nav_lang_japanese: '일본어',
    com_nav_lang_swedish: '스웨덴어',
    com_nav_lang_korean: '한국어',
    com_nav_lang_vietnamese: '베트남어',
    com_nav_lang_traditionalchinese: '번체 중국어',
    com_nav_lang_arabic: '아랍어',
    com_nav_lang_turkish: '터키어',
    com_nav_lang_dutch: '네덜란드어',
    com_nav_lang_indonesia: '인도네시아',
    com_nav_lang_hebrew: '히브리어',
  },
  x1 = {
    com_ui_examples: '範例',
    com_ui_new_chat: '新對話',
    com_ui_happy_birthday: '這是我的第一個生日！',
    com_ui_example_quantum_computing: '用簡單的方式解釋量子計算',
    com_ui_example_10_year_old_b_day: '有沒有創意十足的十歲生日派對點子？',
    com_ui_example_http_in_js: '如何在 JavaScript 中發起 HTTP 請求？',
    com_ui_capabilities: '功能',
    com_ui_capability_remember: '能記得先前在對話中提到的內容',
    com_ui_capability_correction: '允許使用者提供後續的修正',
    com_ui_capability_decline_requests: '訓練有素以拒絕不適當的請求',
    com_ui_limitations: '限制',
    com_ui_limitation_incorrect_info: '有時可能會產生不正確的資訊',
    com_ui_limitation_harmful_biased: '有時可能會產生有害的指示或帶有偏見的內容',
    com_ui_limitation_limited_2021: '對於 2021 年後的世界和事件的知識有限',
    com_ui_input: '輸入',
    com_ui_close: '關閉',
    com_ui_model: '模型',
    com_ui_select_model: '選擇模型',
    com_ui_use_prompt: '使用提示',
    com_ui_prev: '上一個',
    com_ui_next: '下一個',
    com_ui_prompt_templates: '提示範本',
    com_ui_hide_prompt_templates: '隱藏提示範本',
    com_ui_showing: '顯示',
    com_ui_of: '的',
    com_ui_entries: '條目',
    com_ui_pay_per_call: '將所有 AI 對話都在集中在一處，按用量付費而非固定月費',
    com_ui_enter: '輸入',
    com_ui_submit: '送出',
    com_ui_upload_success: '檔案上傳成功',
    com_ui_upload_invalid: '上傳檔案無效',
    com_ui_cancel: '取消',
    com_ui_save: '儲存',
    com_ui_copy_to_clipboard: '複製到剪貼簿',
    com_ui_copied_to_clipboard: '已複製到剪貼簿',
    com_ui_regenerate: '重新生成',
    com_ui_continue: '繼續',
    com_ui_edit: '編輯',
    com_ui_success: '成功',
    com_ui_all: '全部',
    com_ui_clear: '清除',
    com_ui_revoke: '撤銷',
    com_ui_revoke_info: '撤銷所有使用者提供的憑證。',
    com_ui_import_conversation: '導入',
    com_ui_import_conversation_info: '從JSON文件導入對話',
    com_ui_import_conversation_success: '對話導入成功',
    com_ui_import_conversation_error: '導入對話時發生錯誤',
    com_ui_confirm_action: '確認操作',
    com_ui_chats: '對話',
    com_ui_share: '分享',
    com_ui_copy_link: '複製連結',
    com_ui_update_link: '更新連結',
    com_ui_create_link: '創建連結',
    com_ui_share_link_to_chat: '分享鏈接到聊天',
    com_ui_share_error: '分享聊天鏈接時發生錯誤',
    com_ui_share_create_message: '您的姓名以及您在共享後添加的任何消息都會保密。',
    com_ui_share_created_message:
      '已創建到您的聊天的共享鏈接。可以隨時通過設置管理以前共享的聊天。',
    com_ui_share_update_message: '您的姓名、自定義指示以及您在共享後添加的任何消息都會保密。',
    com_ui_share_updated_message:
      '已更新到您的聊天的共享鏈接。可以隨時通過設置管理以前共享的聊天。',
    com_ui_shared_link_not_found: '未找到共享鏈接',
    com_ui_delete: '刪除',
    com_ui_delete_conversation: '刪除對話？',
    com_ui_delete_conversation_confirm: '這將刪除',
    com_ui_rename: '重新命名',
    com_ui_archive: '封存',
    com_ui_archive_error: '封存對話時發生錯誤',
    com_ui_unarchive: '取消封存',
    com_ui_unarchive_error: '取消封存對話時發生錯誤',
    com_ui_more_options: '更多',
    com_auth_error_login: '無法使用提供的資訊登入。請檢查您的登入資訊後重試。',
    com_auth_error_login_rl: '短時間內嘗試登入的次數過多。請稍後再試。',
    com_auth_error_login_ban: '由於違反我們的服務條款，您的帳號已被暫時停用。',
    com_auth_error_login_server: '發生內部伺服器錯誤。請稍候片刻，然後重試。',
    com_auth_no_account: '還沒有帳號？',
    com_auth_sign_up: '註冊',
    com_auth_sign_in: '登入',
    com_auth_google_login: '使用 Google 登入',
    com_auth_facebook_login: '使用 Facebook 登入',
    com_auth_github_login: '使用 GitHub 登入',
    com_auth_discord_login: '使用 Discord 登入',
    com_auth_email: '電子郵件',
    com_auth_email_required: '電子郵件必填',
    com_auth_email_min_length: '電子郵件長度必須至少有 6 個字元',
    com_auth_email_max_length: '電子郵件不應超過 120 個字元',
    com_auth_email_pattern: '您必須輸入有效的電子郵件地址',
    com_auth_email_address: '電子郵件地址',
    com_auth_password: '密碼',
    com_auth_password_required: '密碼必填',
    com_auth_password_min_length: '密碼長度必須至少有 8 個字元',
    com_auth_password_max_length: '密碼長度必須少於 128 個字元',
    com_auth_password_forgot: '忘記密碼？',
    com_auth_password_confirm: '確認密碼',
    com_auth_password_not_match: '密碼不符',
    com_auth_continue: '繼續',
    com_auth_create_account: '建立您的帳號',
    com_nav_auto_scroll: '開啟時自動捲動至最新內容',
    com_auth_error_create: '嘗試註冊您的帳號時發生錯誤。請重試。',
    com_auth_full_name: '全名',
    com_auth_name_required: '名稱必填',
    com_auth_name_min_length: '名稱長度必須至少有 3 個字元',
    com_auth_name_max_length: '名稱長度長度必須少於 80 個字元',
    com_auth_username: '使用者名稱（選填）',
    com_auth_username_required: '使用者名稱必填',
    com_auth_username_min_length: '使用者名稱長度必須至少有 2 個字元',
    com_auth_username_max_length: '使用者名稱長度必須少於 20 個字元',
    com_auth_already_have_account: '已經有帳號了？',
    com_auth_login: '登入',
    com_auth_reset_password: '重設密碼',
    com_auth_click: '點選',
    com_auth_here: '這裡',
    com_auth_to_reset_your_password: '重設您的密碼。',
    com_auth_reset_password_link_sent: '電子郵件已傳送',
    com_auth_reset_password_email_sent: '已向您傳送電子郵件，其中包含進一步重設密碼的操作說明。',
    com_auth_error_reset_password:
      '重設密碼時出現問題。找不到使用提供的電子郵件地址的使用者。請重試。',
    com_auth_reset_password_success: '密碼重設成功',
    com_auth_login_with_new_password: '您現在可以使用新密碼登入。',
    com_auth_error_invalid_reset_token: '此密碼重設令牌已無效。',
    com_auth_click_here: '點選這裡',
    com_auth_to_try_again: '重試。',
    com_auth_submit_registration: '送出',
    com_auth_welcome_back: '歡迎回來',
    com_endpoint_open_menu: '開啟選單',
    com_endpoint_bing_enable_sydney: 'Sydney',
    com_endpoint_bing_to_enable_sydney: '啟用 Sydney',
    com_endpoint_bing_jailbreak: '越獄',
    com_endpoint_bing_context_placeholder:
      'Bing 可以使用多達 7k 個 token 作為「前後文」，並在對話中引用。具體限制不詳，但可能會在超過 7k token 時出現錯誤',
    com_endpoint_bing_system_message_placeholder:
      '警告：不當使用此功能可能會導致您被禁止使用 Bing！如需完整指引和預設訊息（若未設定），請點選「系統訊息」，這是被認為安全的「Sydney」預設值。',
    com_endpoint_system_message: '系統訊息',
    com_endpoint_default_blank: '預設：空白',
    com_endpoint_default_false: '預設：否',
    com_endpoint_default_creative: '預設：創意',
    com_endpoint_default_empty: '預設：空',
    com_endpoint_default_with_num: '預設：{0}',
    com_endpoint_context: '前後文',
    com_endpoint_tone_style: '語氣風格',
    com_endpoint_token_count: 'token 數量',
    com_endpoint_output: '輸出',
    com_endpoint_google_temp:
      '較高的值表示更隨機，而較低的值表示更集中和確定。我們建議修改這個或 Top P，但不建議兩者都修改。',
    com_endpoint_google_topp:
      'Top-p 調整模型在輸出 token 時的選擇機制。從最可能的 K（見 topK 參數）開始選擇 token，直到它們的機率之和達到 top-p 值。',
    com_endpoint_google_topk:
      'Top-k 調整模型如何選取輸出的 token。當 Top-k 設為 1 時，模型會選取在其詞彙庫中機率最高的 token 進行輸出（這也被稱為貪婪解碼）。相對地，當 Top-k 設為 3 時，模型會從機率最高的三個 token 中選取下一個輸出 token（這會涉及到所謂的「溫度」調整）',
    com_endpoint_google_maxoutputtokens:
      '設定回應中可生成的最大 token 數。若希望回應簡短，請設定較低的數值；若需較長的回應，則設定較高的數值。',
    com_endpoint_google_custom_name_placeholder: '為 Google 設定自定義名稱',
    com_endpoint_prompt_prefix_placeholder: '設定自定義提示或前後文。如果為空則忽略。',
    com_endpoint_custom_name: '自定義名稱',
    com_endpoint_prompt_prefix: '提示起始字串',
    com_endpoint_temperature: '溫度',
    com_endpoint_default: '預設',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: '最大輸出 token 數',
    com_endpoint_openai_temp:
      '較高的值表示更隨機，而較低的值表示更集中和確定。我們建議修改這個或 Top P，但不建議兩者都修改。',
    com_endpoint_openai_max:
      '要生成的最大 token 數。輸入 token 和生成 token 的總長度受到模型前後文長度的限制。',
    com_endpoint_openai_topp:
      '與溫度取樣的替代方法，稱為核心取樣，其中模型考慮 top_p 機率質量的 token 結果。所以 0.1 表示只考慮佔 top 10% 機率質量的 token 。我們建議修改這個或溫度，但不建議兩者都修改。',
    com_endpoint_openai_freq:
      '數值範圍介於 -2.0 和 2.0 之間。正值會根據該 token 在目前的文字中出現的頻率進行懲罰，減少模型產生重複內容的可能性。',
    com_endpoint_openai_pres:
      '數值範圍介於 -2.0 和 2.0 之間。正值會根據該 token 是否在目前的文字中出現來進行懲罰，增加模型談及新主題的可能性。',
    com_endpoint_openai_custom_name_placeholder: '為 ChatGPT 設定自定義名稱',
    com_endpoint_openai_prompt_prefix_placeholder: '在系統訊息中設定自定義提示。',
    com_endpoint_anthropic_temp:
      '範圍從 0 到 1。對於分析/多選題，使用接近 0 的溫度，對於創意和生成式任務，使用接近 1 的溫度。我們建議修改這個或 Top P，但不建議兩者都修改。',
    com_endpoint_anthropic_topp:
      'Top-p 改變模型選擇輸出 token 的方式。從最可能的 K（見 topK 參數）開始選擇 token，直到它們的機率之和達到 top-p 值。',
    com_endpoint_anthropic_topk:
      'Top-k 改變模型選擇輸出 token 的方式。Top-k 為 1 表示所選 token 在模型詞彙表中所有 token 中最可能（也稱為貪婪解碼），而 Top-k 為 3 表示下一個 token 從最可能的 3 個 token 中選擇（使用溫度）。',
    com_endpoint_anthropic_maxoutputtokens:
      '設定回應中可生成的最大 token 數。若希望回應簡短，請設定較低的數值；若需較長的回應，則設定較高的數值。',
    com_endpoint_anthropic_custom_name_placeholder: '為 Anthropic 設定自定義名稱',
    com_endpoint_frequency_penalty: '頻率懲罰',
    com_endpoint_presence_penalty: '出現懲罰',
    com_endpoint_plug_use_functions: '使用外掛作為 OpenAI 函式',
    com_endpoint_plug_skip_completion: '跳過完成步驟',
    com_endpoint_disabled_with_tools: '與工具一起停用',
    com_endpoint_disabled_with_tools_placeholder: '選擇工具時停用',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder: '在系統訊息中新增自定義提示。',
    com_endpoint_import: '匯入',
    com_endpoint_set_custom_name: '設定自定義名稱，以便您找到此預設設定',
    com_endpoint_preset: '預設設定',
    com_endpoint_presets: '預設設定',
    com_endpoint_preset_name: '名稱',
    com_endpoint_new_topic: '新主題',
    com_endpoint: '選項',
    com_endpoint_hide: '隱藏',
    com_endpoint_show: '顯示',
    com_endpoint_examples: '預設設定',
    com_endpoint_completion: '完成',
    com_endpoint_agent: '代理',
    com_endpoint_show_what_settings: '顯示 {0} 設定',
    com_endpoint_save: '儲存',
    com_endpoint_export: '匯出',
    com_endpoint_save_as_preset: '另存為預設設定',
    com_endpoint_presets_clear_warning: '您確定要清除所有預設設定嗎？此操作無法復原。',
    com_endpoint_not_implemented: '尚未實做',
    com_endpoint_no_presets: '尚無預設設定',
    com_endpoint_not_available: '無可用選項',
    com_endpoint_view_options: '檢視選項',
    com_endpoint_save_convo_as_preset: '將對話另存為預設設定',
    com_endpoint_my_preset: '我的預設設定',
    com_endpoint_agent_model: '代理模型（建議：GPT-3.5）',
    com_endpoint_completion_model: '完成模型（建議：GPT-4）',
    com_endpoint_func_hover: '啟用將外掛用作 OpenAI 函式',
    com_endpoint_skip_hover: '啟用跳過完成步驟，評估最終答案和生成步驟',
    com_endpoint_config_key: '設定 API 金鑰',
    com_endpoint_config_key_for: '設定 API 金鑰給',
    com_endpoint_config_key_name: '金鑰',
    com_endpoint_config_value: '輸入',
    com_endpoint_config_key_name_placeholder: '請先設定 API 金鑰',
    com_endpoint_config_key_encryption: '您的金鑰將被加密並在此到期時間刪除：',
    com_endpoint_config_key_expiry: '到期時刪除',
    com_endpoint_config_key_import_json_key: '匯入服務帳戶 JSON 金鑰。',
    com_endpoint_config_key_import_json_key_success: '成功匯入服務帳戶 JSON 金鑰',
    com_endpoint_config_key_import_json_key_invalid:
      '無效的服務帳戶 JSON 金鑰，您是否匯入了正確的檔案？',
    com_endpoint_config_key_get_edge_key: '要取得 Bing 的存取權杖，請登入到',
    com_endpoint_config_key_get_edge_key_dev_tool:
      '使用開發工具或擴充套件在登入網站時複製 _U cookie 的內容。如果此方法失敗，請按照這些',
    com_endpoint_config_key_edge_instructions: '說明',
    com_endpoint_config_key_edge_full_key_string: '提供完整的 cookie 字串。',
    com_endpoint_config_key_chatgpt: "要取得 ChatGPT '免費版' 的存取權杖，請登入到",
    com_endpoint_config_key_chatgpt_then_visit: '然後造訪',
    com_endpoint_config_key_chatgpt_copy_token: '複製存取權杖。',
    com_endpoint_config_key_google_need_to: '您需要',
    com_endpoint_config_key_google_vertex_ai: '在 Google Cloud 上啟用 Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API，然後',
    com_endpoint_config_key_google_service_account: '建立一個服務帳戶',
    com_endpoint_config_key_google_vertex_api_role:
      '確保點選「建立並繼續」並至少給予「Vertex AI 使用者」角色。最後，建立一個 JSON 金鑰以在此處匯入。',
    com_nav_plugin_store: '外掛商店',
    com_nav_plugin_search: '搜尋外掛',
    com_nav_plugin_auth_error: '嘗試驗證此外掛時發生錯誤。請重試。',
    com_nav_export_filename: '檔名',
    com_nav_export_filename_placeholder: '設定檔案名稱',
    com_nav_export_type: '類型',
    com_nav_export_include_endpoint_options: '包含 AI 選項',
    com_nav_enabled: '已啟用',
    com_nav_not_supported: '不支援',
    com_nav_export_all_message_branches: '匯出所有訊息分支',
    com_nav_export_recursive_or_sequential: '遞迴還是序列？',
    com_nav_export_recursive: '遞迴',
    com_nav_export_conversation: '匯出對話',
    com_nav_export: '匯出',
    com_nav_shared_links: '共享連結',
    com_nav_shared_links_manage: '管理',
    com_nav_shared_links_empty: '您沒有任何共享連結。',
    com_nav_shared_links_name: '名称',
    com_nav_shared_links_date_shared: '共享日期',
    com_nav_theme: '主題',
    com_nav_theme_system: '跟隨系統設定',
    com_nav_theme_dark: '深色',
    com_nav_theme_light: '淺色',
    com_nav_clear_all_chats: '清除所有對話',
    com_nav_confirm_clear: '確認清除',
    com_nav_close_sidebar: '關閉側邊選單',
    com_nav_open_sidebar: '開啟側邊選單',
    com_nav_send_message: '傳送訊息',
    com_nav_log_out: '登出',
    com_nav_user: '使用者',
    com_nav_archived_chats: '封存的對話',
    com_nav_archived_chats_manage: '管理',
    com_nav_archived_chats_empty: '您沒有任何封存的對話。',
    com_nav_archive_all_chats: '封存所有對話',
    com_nav_archive_all: '封存所有',
    com_nav_archive_name: '名稱',
    com_nav_archive_created_at: '建立時間',
    com_nav_clear_conversation: '清除對話',
    com_nav_clear_conversation_confirm_message: '您確定要清除所有對話嗎？此操作無法復原。',
    com_nav_help_faq: '說明與常見問題',
    com_nav_settings: '設定',
    com_nav_search_placeholder: '搜尋訊息',
    com_nav_setting_general: '一般',
    com_nav_setting_data: '資料控制',
    com_assistants_file_search: '檔案搜尋',
    com_assistants_file_search_info:
      '目前尚不支援為檔案搜尋附加向量存儲。您可以從提供者遊樂場附加它們，或在每個主題的基礎上為檔案搜尋附加檔案。',
    com_assistants_non_retrieval_model: '此模型未啟用檔案搜尋功能。請選擇其他模型。',
    com_ui_attach_error_openai: '無法將助理檔案附加至其他端點',
    com_ui_attach_warn_endpoint: '非相容工具的非助理檔案可能會被忽略',
    com_ui_assistant_deleted: '已成功刪除助理',
    com_ui_assistant_delete_error: '刪除助理時發生錯誤',
    com_ui_copied: '已複製！',
    com_ui_copy_code: '複製程式碼',
    com_nav_source_chat: '檢視原始對話',
    com_ui_date_today: '今天',
    com_ui_date_yesterday: '昨天',
    com_ui_date_previous_7_days: '前 7 天',
    com_ui_date_previous_30_days: '過去 30 天',
    com_ui_date_january: '一月',
    com_ui_date_february: '二月',
    com_ui_date_march: '三月',
    com_ui_date_april: '四月',
    com_ui_date_may: '五月',
    com_ui_date_june: '六月',
    com_ui_date_july: '七月',
    com_ui_date_august: '八月',
    com_ui_date_september: '九月',
    com_ui_date_october: '十月',
    com_ui_date_november: '十一月',
    com_ui_date_december: '十二月',
    com_ui_nothing_found: '找不到任何內容',
    com_ui_go_to_conversation: '前往對話',
    com_error_moderation:
      '似乎您所提交的內容被我們的內容審查系統標記為不符合社群準則。我們無法就此特定主題繼續進行。如果您有任何其他問題或想要探討的主題,請編輯您的訊息或開啟新的對話。',
    com_error_no_user_key: '找不到金鑰，請提供金鑰後再試一次。',
    com_error_no_base_url: '找不到基礎 URL。請提供一個基礎 URL 後再試一次。',
    com_error_invalid_user_key: '提供的金鑰無效。請提供有效的金鑰並重試。',
    com_error_expired_user_key: '提供給 {0} 的金鑰已於 {1} 到期。請提供一個新的金鑰並重試。',
    com_files_no_results: '沒有結果。',
    com_files_filter: '篩選檔案...',
    com_files_number_selected: '已選取 {0} 個檔案，共 {1} 個檔案',
    com_sidepanel_select_assistant: '選擇一位助理',
    com_sidepanel_parameters: '參數',
    com_sidepanel_assistant_builder: '助手建構器',
    com_sidepanel_hide_panel: '隱藏側邊選單',
    com_sidepanel_attach_files: '附加檔案',
    com_sidepanel_manage_files: '管理檔案',
    com_assistants_capabilities: '功能',
    com_assistants_knowledge: '知識',
    com_assistants_knowledge_info:
      '如果您在「知識」下上傳檔案，與您的助理的對話可能會包含檔案內容。',
    com_assistants_knowledge_disabled:
      '助理必須先建立，並啟用及儲存「程式碼解譯器」或「資訊檢索」功能，才能上傳檔案作為知識庫。',
    com_assistants_image_vision: '影像視覺',
    com_assistants_code_interpreter: '程式碼解譯器',
    com_assistants_code_interpreter_files: '以下檔案僅適用於代碼解譯器：',
    com_assistants_retrieval: '檢索',
    com_assistants_search_name: '搜尋助理名稱',
    com_assistants_tools: '工具',
    com_assistants_actions: '操作',
    com_assistants_add_tools: '新增工具',
    com_assistants_add_actions: '新增操作',
    com_assistants_available_actions: '可用操作',
    com_assistants_running_action: '執行中的動作',
    com_assistants_completed_action: '與 {0} 對話完成',
    com_assistants_completed_function: '已執行 {0}',
    com_assistants_function_use: '助理使用了 {0}',
    com_assistants_domain_info: '助理將此資訊傳送給 {0}',
    com_assistants_delete_actions_success: '已成功刪除助理的操作',
    com_assistants_update_actions_success: '動作已成功建立或更新',
    com_assistants_update_actions_error: '更新或建立動作時發生錯誤。',
    com_assistants_delete_actions_error: '刪除操作時發生錯誤',
    com_assistants_actions_info: '讓您的助理透過 API 取得資訊或執行操作',
    com_assistants_name_placeholder: '選填：助理的名稱',
    com_assistants_instructions_placeholder: '系統指令是助理使用的指示',
    com_assistants_description_placeholder: '選擇性：在此描述您的助理',
    com_assistants_actions_disabled: '您需要先建立一個助手，才能新增動作。',
    com_assistants_update_success: '更新成功',
    com_assistants_update_error: '更新您的助理時發生錯誤。',
    com_assistants_create_success: '已成功建立',
    com_assistants_create_error: '建立您的助理時發生錯誤。',
    com_ui_field_required: '此欄位為必填',
    com_ui_download_error: '下載檔案時發生錯誤。該檔案可能已被刪除。',
    com_ui_attach_error_type: '不支援的檔案類型，無法上傳至端點:',
    com_ui_attach_error_size: '檔案大小超過端點的限制',
    com_ui_attach_error: '無法附加檔案。請建立或選擇對話，或嘗試重新整理頁面。',
    com_ui_experimental: '實驗性功能',
    com_ui_on: '開啟',
    com_ui_off: '關閉',
    com_ui_yes: '是',
    com_ui_no: '否',
    com_ui_ascending: '升冪',
    com_ui_descending: '遞減',
    com_ui_show_all: '顯示全部',
    com_ui_name: '名稱',
    com_ui_date: '日期',
    com_ui_storage: '儲存空間',
    com_ui_context: '情境',
    com_ui_size: '大小',
    com_ui_host: '主機',
    com_ui_update: '更新',
    com_ui_authentication: '驗證',
    com_ui_instructions: '說明',
    com_ui_description: '描述',
    com_ui_error: '錯誤',
    com_ui_select: '選擇',
    com_ui_select_search_model: '依名稱搜尋模型',
    com_ui_select_search_plugin: '依名稱搜尋外掛程式',
    com_ui_stop: '停止',
    com_ui_upload_files: '上傳檔案',
    com_ui_new_footer: '將所有 AI 對話集中在一處。',
    com_ui_none_selected: '未選取任何項目',
    com_ui_upload_error: '檔案上傳時發生錯誤',
    com_ui_save_submit: '儲存並送出',
    com_user_message: '您',
    com_ui_fork: '分支',
    com_ui_fork_info_1: '使用此設定來分支訊息，以獲得所需的行為。',
    com_ui_fork_info_2:
      '「分支」是指從目前對話中的特定訊息開始/結束，根據所選的選項建立新對話的副本。',
    com_ui_fork_info_3:
      '「目標訊息」指的是此彈出視窗所開啟的訊息，或者如果您勾選「{0}」，則是對話中最新的訊息。',
    com_ui_fork_info_visible:
      '此選項只會分支顯示的訊息，換句話說，只會顯示直接通往目標訊息的路徑，而不會顯示任何分支。',
    com_ui_fork_info_branches:
      '此選項會分叉可見的訊息，以及相關的分支；換句話說，它包含了通往目標訊息的直接路徑，包括路徑上的所有分支。',
    com_ui_fork_info_target:
      '這個選項會分叉所有導向目標訊息的訊息，包括其鄰近訊息；換句話說，不論是否可見或在同一路徑上，所有訊息分支都會包含在內。',
    com_ui_fork_info_start:
      '如果勾選，則從此訊息開始，根據上方選擇的行為，將會分支出一個新的對話直到最新的訊息。',
    com_ui_fork_info_remember:
      '勾選此項目可記住您選擇的選項，以便日後分支對話時更快速地套用您偏好的設定。',
    com_ui_fork_success: '已成功分支對話',
    com_ui_fork_processing: '分支對話中...',
    com_ui_fork_error: '分支對話時發生錯誤',
    com_ui_fork_change_default: '預設分支選項',
    com_ui_fork_default: '使用預設分支選項',
    com_ui_fork_remember: '記住',
    com_ui_fork_split_target_setting: '預設從目標訊息開始分支',
    com_ui_fork_split_target: '在此分叉',
    com_ui_fork_remember_checked: '您的選擇將在使用後被記住。您可以隨時在設定中更改。',
    com_ui_fork_all_target: '包含所有從這裡開始',
    com_ui_fork_branches: '包含相關分支',
    com_ui_fork_visible: '僅顯示分支訊息',
    com_ui_fork_from_message: '選擇分支選項',
    com_ui_mention: '提及端點、助理或預設設定以快速切換',
    com_ui_import_conversation_file_type_error: '不支援的導入檔案類型',
    com_ui_avatar: '大頭照',
    com_ui_unknown: '未知',
    com_ui_result: '結果',
    com_ui_image_gen: '圖像生成',
    com_ui_assistant: '助理',
    com_ui_assistants: '助理',
    com_ui_attachment: '附件',
    com_ui_assistants_output: '助理輸出',
    com_ui_create: '創建',
    com_ui_delete_assistant_confirm: '您確定要刪除這個助理嗎？此操作無法復原。',
    com_ui_preview: '預覽',
    com_ui_upload: '上傳',
    com_ui_connect: '連線',
    com_ui_upload_delay:
      '正在上傳 "{0}" 的過程比預期花費更多時間。請耐心等候檔案完成索引以供檢索。',
    com_ui_privacy_policy: '隱私權政策',
    com_ui_terms_of_service: '服務條款',
    com_ui_min_tags: '無法再移除更多值，至少需要 {0} 個。',
    com_ui_max_tags: '允許的最大數量為 {0}，已使用最新值。',
    com_auth_back_to_login: '返回登入',
    com_endpoint_message: '訊息',
    com_endpoint_messages: '訊息',
    com_endpoint_message_not_appendable: '無法附加訊息或重新生成。',
    com_endpoint_context_tokens: '最大前後文 Token 數',
    com_endpoint_context_info:
      '可用於上下文的最大 token 數量。用於控制每個請求發送的 token 數量。如果未指定，將根據已知模型的上下文大小使用系統預設值。設置較高的值可能會導致錯誤和/或更高的 token 成本。',
    com_endpoint_instructions_assistants_placeholder:
      '覆寫助理的指示。這對於在每次執行時修改行為很有用。',
    com_endpoint_prompt_prefix_assistants_placeholder:
      '在助手的主要指示之上設定額外的指示或上下文。如果為空白，則會被忽略。',
    com_endpoint_prompt_prefix_assistants: '提示前綴',
    com_endpoint_instructions_assistants: '覆寫指示',
    com_endpoint_stop: '停止序列',
    com_endpoint_stop_placeholder: '以 `Enter` 鍵分隔值',
    com_endpoint_openai_max_tokens:
      '可選的 `max_tokens` 欄位，代表在對話完成中可以生成的最大 token 數。\n\n輸入 token 和生成 token 的總長度受限於模型的上下文長度。如果此數字超過最大上下文 token 數，您可能會遇到錯誤。',
    com_endpoint_openai_resend:
      '重新發送之前所有附加的圖片。注意:這可能會大幅增加 token 成本,如果附加了太多圖片,您可能會遇到錯誤。',
    com_endpoint_openai_resend_files:
      '重新傳送之前附加的所有檔案。注意：這將增加 token 成本，如果附件過多，您可能會遇到錯誤。',
    com_endpoint_openai_detail:
      '「低」解析度的視覺請求較便宜且快速，「高」解析度則更詳細但成本較高，而「自動」會根據圖像解析度自動在兩者之間選擇。',
    com_endpoint_openai_stop: '最多 4 個序列，API 將在生成更多 token 時停止。',
    com_endpoint_plug_resend_files: '重新傳送檔案',
    com_endpoint_plug_resend_images: '重新傳送圖片',
    com_endpoint_plug_image_detail: '圖像詳細資訊',
    com_endpoint_preset_delete_confirm: '您確定要刪除這個預設設定嗎？',
    com_endpoint_preset_clear_all_confirm: '您確定要刪除所有的預設設定嗎？',
    com_endpoint_preset_import: '預設設定已匯入！',
    com_endpoint_preset_import_error: '匯入您的預設設定時發生錯誤。請再試一次。',
    com_endpoint_preset_save_error: '儲存您的預設設定時發生錯誤。請再試一次。',
    com_endpoint_preset_delete_error: '刪除您的預設設定時發生錯誤。請重試。',
    com_endpoint_preset_default_removed: '不再是預設設定',
    com_endpoint_preset_default_item: '預設值',
    com_endpoint_preset_default_none: '無啟用的預設設定。',
    com_endpoint_preset_title: '預設項目',
    com_endpoint_preset_saved: '已儲存！',
    com_endpoint_preset_default: '現在是預設的預設設定。',
    com_endpoint_preset_selected: '已選擇預設設定！',
    com_endpoint_preset_selected_title: '已選取！',
    com_endpoint_assistant: '助手',
    com_endpoint_use_active_assistant: '使用活躍助手',
    com_endpoint_assistant_model: 'AI 模型',
    com_endpoint_assistant_placeholder: '請從右側面板選擇一位助理',
    com_endpoint_config_placeholder: '在標頭選單中設定您的金鑰以開始對話。',
    com_endpoint_config_click_here: '點此',
    com_endpoint_config_google_service_key: 'Google 服務帳戶金鑰',
    com_endpoint_config_google_cloud_platform: 'Google 雲端平台設定',
    com_endpoint_config_google_api_key: 'Google API 金鑰',
    com_endpoint_config_google_gemini_api: 'Google Gemini API 設定',
    com_endpoint_config_google_api_info: '要取得 Generative Language API 金鑰（適用於 Gemini），',
    com_nav_welcome_assistant: '請選擇一位助理',
    com_nav_welcome_message: '您今天有什麼需要我協助的嗎？',
    com_nav_hide_panel: '隱藏最右側的面板',
    com_nav_modular_chat: '允許在對話中途切換端點',
    com_nav_latex_parsing: '解析訊息中的 LaTeX 內容（可能影響效能）',
    com_nav_profile_picture: '個人頭像',
    com_nav_change_picture: '更換圖片',
    com_nav_plugin_install: '安裝',
    com_nav_plugin_uninstall: '解除安裝',
    com_nav_tool_add: '新增',
    com_nav_tool_remove: '移除',
    com_nav_tool_dialog: 'AI 工具',
    com_nav_tool_dialog_description: '必須儲存 Assistant 才能保留工具選擇。',
    com_show_agent_settings: '顯示代理設定',
    com_show_completion_settings: '顯示完成設定',
    com_hide_examples: '隱藏範例',
    com_show_examples: '顯示範例',
    com_nav_tool_search: '搜尋工具',
    com_nav_my_files: '我的檔案',
    com_nav_enter_to_send: '按 Enter 鍵傳送訊息',
    com_nav_user_name_display: '在訊息中顯示使用者名稱',
    com_nav_save_drafts: '保存草稿本地',
    com_nav_show_code: '一律顯示使用程式碼解譯器時的程式碼',
    com_nav_setting_beta: '測試功能',
    com_nav_setting_account: '帳號',
    com_nav_language: '語言',
    com_nav_lang_auto: '自動偵測',
    com_nav_lang_english: '英文',
    com_nav_lang_chinese: '繁體中文',
    com_nav_lang_german: '德語',
    com_nav_lang_spanish: '西班牙語',
    com_nav_lang_french: '法語',
    com_nav_lang_italian: '義大利文',
    com_nav_lang_polish: '波蘭文',
    com_nav_lang_brazilian_portuguese: '葡萄牙語（巴西）',
    com_nav_lang_russian: 'Русский',
    com_nav_lang_japanese: '日本語',
    com_nav_lang_swedish: '瑞典語',
    com_nav_lang_korean: '한국어',
    com_nav_lang_vietnamese: '越南語',
    com_nav_lang_traditionalchinese: '繁體中文',
    com_nav_lang_arabic: '阿拉伯語',
    com_nav_lang_turkish: 'Türkçe',
    com_nav_lang_dutch: '荷蘭文',
    com_nav_lang_indonesia: '印尼語',
    com_nav_lang_hebrew: 'עברית',
  },
  v1 = {
    com_ui_examples: 'Ví dụ',
    com_ui_new_chat: 'Trò chuyện mới',
    com_ui_happy_birthday: 'Đây là sinh nhật đầu tiên của tôi!',
    com_ui_example_quantum_computing: 'Giải thích máy tính lượng tử theo cách đơn giản',
    com_ui_example_10_year_old_b_day:
      'Có ý tưởng sáng tạo nào cho sinh nhật của một đứa trẻ 10 tuổi không?',
    com_ui_example_http_in_js: 'Làm thế nào để thực hiện yêu cầu HTTP trong Javascript?',
    com_ui_capabilities: 'Khả năng',
    com_ui_capability_remember: 'Ghi nhớ những gì người dùng nói trước đó trong cuộc trò chuyện',
    com_ui_capability_correction: 'Cho phép người dùng cung cấp sự sửa đổi tiếp theo',
    com_ui_capability_decline_requests: 'Được đào tạo để từ chối các yêu cầu không thích hợp',
    com_ui_limitations: 'Hạn chế',
    com_ui_limitation_incorrect_info: 'Có thể đôi khi tạo ra thông tin không chính xác',
    com_ui_limitation_harmful_biased:
      'Có thể đôi khi tạo ra hướng dẫn gây hại hoặc nội dung thiên vị',
    com_ui_limitation_limited_2021: 'Kiến thức hạn chế về thế giới và sự kiện sau năm 2021',
    com_ui_input: 'Đầu vào',
    com_ui_close: 'Đóng',
    com_ui_model: 'Mô hình',
    com_ui_select_model: 'Chọn một mô hình',
    com_ui_use_prompt: 'Sử dụng gợi ý',
    com_ui_prev: 'Trước',
    com_ui_next: 'Tiếp theo',
    com_ui_prompt_templates: 'Mẫu gợi ý',
    com_ui_hide_prompt_templates: 'Ẩn mẫu gợi ý',
    com_ui_showing: 'Hiển thị',
    com_ui_of: 'của',
    com_ui_entries: 'mục',
    com_ui_pay_per_call:
      'Tất cả các cuộc hội thoại AI ở một nơi. Trả tiền cho mỗi cuộc gọi chứ không phải mỗi tháng',
    com_ui_enter: 'Nhập',
    com_ui_submit: 'Gửi',
    com_ui_upload_success: 'Tải tệp thành công',
    com_ui_upload_invalid: 'Tệp không hợp lệ để tải lên',
    com_ui_cancel: 'Hủy',
    com_ui_save: 'Lưu',
    com_ui_copy_to_clipboard: 'Sao chép vào clipboard',
    com_ui_copied_to_clipboard: 'Đã sao chép vào clipboard',
    com_ui_regenerate: 'Tạo lại',
    com_ui_continue: 'Tiếp tục',
    com_ui_edit: 'Sửa',
    com_ui_success: 'Thành công',
    com_ui_all: 'tất cả',
    com_ui_clear: 'Xóa',
    com_ui_revoke: 'Hủy bỏ',
    com_ui_revoke_info: 'Hủy bỏ tất cả các thông tin xác thực được cung cấp bởi người dùng.',
    com_ui_import_conversation: 'Nhập khẩu',
    com_ui_import_conversation_info: 'Nhập khẩu cuộc trò chuyện từ một tệp JSON',
    com_ui_import_conversation_success: 'Đã nhập khẩu cuộc trò chuyện thành công',
    com_ui_import_conversation_error: 'Đã xảy ra lỗi khi nhập khẩu cuộc trò chuyện của bạn',
    com_ui_confirm_action: 'Xác nhận hành động',
    com_ui_chats: 'cuộc trò chuyện',
    com_ui_share: 'Chia sẻ',
    com_ui_copy_link: 'Sao chép liên kết',
    com_ui_update_link: 'Cập nhật liên kết',
    com_ui_create_link: 'Tạo liên kết',
    com_ui_share_link_to_chat: 'Chia sẻ liên kết đến cuộc trò chuyện',
    com_ui_share_error: 'Có lỗi xảy ra khi chia sẻ liên kết trò chuyện',
    com_ui_share_create_message:
      'Tên của bạn và bất kỳ tin nhắn nào bạn thêm sau khi chia sẻ sẽ được giữ kín.',
    com_ui_share_created_message:
      'Liên kết chia sẻ đến cuộc trò chuyện của bạn đã được tạo. Quản lý các cuộc trò chuyện đã chia sẻ trước đây bất cứ lúc nào thông qua Cài đặt.',
    com_ui_share_update_message:
      'Tên của bạn, hướng dẫn tùy chỉnh và bất kỳ tin nhắn nào bạn thêm sau khi chia sẻ sẽ được giữ kín.',
    com_ui_share_updated_message:
      'Liên kết chia sẻ đến cuộc trò chuyện của bạn đã được cập nhật. Quản lý các cuộc trò chuyện đã chia sẻ trước đây bất cứ lúc nào thông qua Cài đặt.',
    com_ui_shared_link_not_found: 'Không tìm thấy liên kết chia sẻ',
    com_ui_delete: 'Xóa',
    com_ui_delete_conversation: 'Xóa cuộc trò chuyện?',
    com_ui_delete_conversation_confirm: 'Điều này sẽ xóa',
    com_ui_rename: 'Đổi tên',
    com_ui_archive: 'Lưu trữ',
    com_ui_archive_error: 'Không thể lưu trữ cuộc trò chuyện',
    com_ui_unarchive: 'Bỏ lưu trữ',
    com_ui_unarchive_error: 'Không thể bỏ lưu trữ cuộc trò chuyện',
    com_ui_more_options: 'Thêm',
    com_auth_error_login:
      'Không thể đăng nhập với thông tin được cung cấp. Vui lòng kiểm tra thông tin đăng nhập và thử lại.',
    com_auth_error_login_rl:
      'Quá nhiều lần đăng nhập trong một khoảng thời gian ngắn. Vui lòng thử lại sau.',
    com_auth_error_login_ban:
      'Tài khoản của bạn đã bị khóa tạm thời do vi phạm dịch vụ của chúng tôi.',
    com_auth_error_login_server:
      'Đã xảy ra lỗi máy chủ nội bộ. Vui lòng đợi một vài phút và thử lại.',
    com_auth_no_account: 'Chưa có tài khoản?',
    com_auth_sign_up: 'Đăng ký',
    com_auth_sign_in: 'Đăng nhập',
    com_auth_google_login: 'Đăng nhập bằng Google',
    com_auth_facebook_login: 'Đăng nhập bằng Facebook',
    com_auth_github_login: 'Đăng nhập bằng Github',
    com_auth_discord_login: 'Đăng nhập bằng Discord',
    com_auth_email: 'Email',
    com_auth_email_required: 'Email là bắt buộc',
    com_auth_email_min_length: 'Email phải có ít nhất 6 ký tự',
    com_auth_email_max_length: 'Email không được dài hơn 120 ký tự',
    com_auth_email_pattern: 'Bạn phải nhập địa chỉ email hợp lệ',
    com_auth_email_address: 'Địa chỉ email',
    com_auth_password: 'Mật khẩu',
    com_auth_password_required: 'Mật khẩu là bắt buộc',
    com_auth_password_min_length: 'Mật khẩu phải có ít nhất 8 ký tự',
    com_auth_password_max_length: 'Mật khẩu phải ít hơn 128 ký tự',
    com_auth_password_forgot: 'Quên mật khẩu?',
    com_auth_password_confirm: 'Xác nhận mật khẩu',
    com_auth_password_not_match: 'Mật khẩu không khớp',
    com_auth_continue: 'Tiếp tục',
    com_auth_create_account: 'Tạo tài khoản của bạn',
    com_auth_error_create: 'Có lỗi khi đăng ký tài khoản của bạn. Vui lòng thử lại.',
    com_auth_full_name: 'Họ và tên đầy đủ',
    com_auth_name_required: 'Tên là bắt buộc',
    com_auth_name_min_length: 'Tên phải có ít nhất 3 ký tự',
    com_auth_name_max_length: 'Tên phải ít hơn 80 ký tự',
    com_auth_username: 'Tên người dùng (tùy chọn)',
    com_auth_username_required: 'Tên người dùng là bắt buộc',
    com_auth_username_min_length: 'Tên người dùng phải có ít nhất 2 ký tự',
    com_auth_username_max_length: 'Tên người dùng phải ít hơn 20 ký tự',
    com_auth_already_have_account: 'Đã có tài khoản?',
    com_auth_login: 'Đăng nhập',
    com_auth_reset_password: 'Đặt lại mật khẩu',
    com_auth_click: 'Nhấp chuột',
    com_auth_here: 'VÀO ĐÂY',
    com_auth_to_reset_your_password: 'để đặt lại mật khẩu của bạn.',
    com_auth_reset_password_link_sent: 'Email đã được gửi',
    com_auth_reset_password_email_sent:
      'Một email đã được gửi đến bạn với hướng dẫn chi tiết để đặt lại mật khẩu.',
    com_auth_error_reset_password:
      'Đã xảy ra sự cố khi đặt lại mật khẩu của bạn. Không tìm thấy người dùng nào với địa chỉ email đã cung cấp. Vui lòng thử lại.',
    com_auth_reset_password_success: 'Đặt lại mật khẩu thành công',
    com_auth_login_with_new_password: 'Bây giờ bạn có thể đăng nhập bằng mật khẩu mới của mình.',
    com_auth_error_invalid_reset_token: 'Mã đặt lại mật khẩu này không còn hợp lệ.',
    com_auth_click_here: 'Nhấp vào đây',
    com_auth_to_try_again: 'để thử lại.',
    com_auth_submit_registration: 'Gửi đăng ký',
    com_auth_welcome_back: 'Chào mừng trở lại',
    com_endpoint_open_menu: 'Mở Menu',
    com_endpoint_bing_enable_sydney: 'Bật Sydney',
    com_endpoint_bing_to_enable_sydney: 'Để bật Sydney',
    com_endpoint_bing_jailbreak: 'Bẻ khóa',
    com_endpoint_bing_context_placeholder:
      "Bing có thể sử dụng tối đa 7k mã thông báo cho 'ngữ cảnh', mà nó có thể tham khảo trong cuộc trò chuyện. Giới hạn cụ thể không được biết nhưng có thể gặp lỗi vượt quá 7k mã thông báo",
    com_endpoint_bing_system_message_placeholder:
      "CẢNH BÁO: Sử dụng sai chức năng này có thể bị CẤM sử dụng Bing! Nhấp vào 'Thông điệp hệ thống' để có hướng dẫn đầy đủ và thông điệp mặc định nếu không có (mặc định là 'Sydney') được coi là an toàn.",
    com_endpoint_system_message: 'Thông điệp hệ thống',
    com_endpoint_default_blank: 'mặc định: trống',
    com_endpoint_default_false: 'mặc định: sai',
    com_endpoint_default_creative: 'mặc định: sáng tạo',
    com_endpoint_default_empty: 'mặc định: trống rỗng',
    com_endpoint_default_with_num: 'mặc định: {0}',
    com_endpoint_context: 'Ngữ cảnh',
    com_endpoint_tone_style: 'Phong cách nét',
    com_endpoint_token_count: 'Số mã thông báo',
    com_endpoint_output: 'Đầu ra',
    com_endpoint_google_temp:
      'Giá trị cao = ngẫu nhiên hơn, trong khi giá trị thấp = tập trung và xác định hơn. Chúng tôi khuyến nghị thay đổi giá trị này hoặc Top P nhưng không phải cả hai.',
    com_endpoint_google_topp:
      'Top-p thay đổi cách mô hình chọn mã thông báo để xuất. Mã thông báo được chọn từ căn cứ có xác suất cao nhất đến thấp nhất cho đến khi tổng xác suất của chúng bằng giá trị top-p.',
    com_endpoint_google_topk:
      'Top-k thay đổi cách mô hình chọn mã thông báo để xuất. Top-k là 1 có nghĩa là mã thông báo được chọn là phổ biến nhất trong tất cả các mã thông báo trong bảng từ vựng của mô hình (còn được gọi là giải mã tham lam), trong khi top-k là 3 có nghĩa là mã thông báo tiếp theo được chọn từ giữa 3 mã thông báo phổ biến nhất (sử dụng nhiệt độ).',
    com_endpoint_google_maxoutputtokens:
      'Số mã thông báo tối đa có thể được tạo ra trong phản hồi. Chỉ định một giá trị thấp hơn cho các phản hồi ngắn hơn và một giá trị cao hơn cho các phản hồi dài hơn.',
    com_endpoint_google_custom_name_placeholder: 'Đặt tên tùy chỉnh cho Google',
    com_endpoint_prompt_prefix_placeholder:
      'Đặt hướng dẫn hoặc ngữ cảnh tùy chỉnh. Bỏ qua nếu trống.',
    com_endpoint_custom_name: 'Tên tùy chỉnh',
    com_endpoint_prompt_prefix: 'Tiền tố',
    com_endpoint_temperature: 'Nhiệt độ',
    com_endpoint_default: 'mặc định',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Số mã thông báo tối đa',
    com_endpoint_openai_temp:
      'Giá trị cao = ngẫu nhiên hơn, trong khi giá trị thấp = tập trung và xác định hơn. Chúng tôi khuyến nghị thay đổi giá trị này hoặc Top P nhưng không phải cả hai.',
    com_endpoint_openai_max:
      'Số mã thông báo tối đa để tạo. Tổng chiều dài của mã thông báo đầu vào và mã thông báo đã tạo bị giới hạn bởi độ dài ngữ cảnh của mô hình.',
    com_endpoint_openai_topp:
      'Một phương pháp thay thế cho việc lấy mẫu nhiệt độ, được gọi là lấy mẫu ranh giới, nơi mô hình xem xét kết quả của các mã thông báo với khối lượng xác suất top_p. Vì vậy, giá trị 0.1 có nghĩa là chỉ các mã thông báo bao gồm 10% khối lượng xác suất top_p được xem xét. Chúng tôi khuyến nghị thay đổi giá trị này hoặc nhiệt độ nhưng không phải cả hai.',
    com_endpoint_openai_freq:
      'Số từ giữa -2.0 và 2.0. Giá trị dương trừu tượng hóa các mã thông báo mới dựa trên tần suất hiện có của chúng trong văn bản, làm giảm khả năng mô hình lặp lại cùng một dòng văn hoàn toàn.',
    com_endpoint_openai_pres:
      'Số từ giữa -2.0 và 2.0. Giá trị dương trừu tượng hóa mã thông báo mới dựa trên việc chúng có xuất hiện trong văn bản, làm tăng khả năng của mô hình để nói về các chủ đề mới.',
    com_endpoint_openai_custom_name_placeholder: 'Đặt tên tùy chỉnh cho ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Đặt hướng dẫn tùy chỉnh để bao gồm vào Thông điệp hệ thống. Mặc định: không có',
    com_endpoint_anthropic_temp:
      'Các giá trị nằm trong khoảng từ 0 đến 1. Sử dụng nhiệt độ gần 0 cho các nhiệm vụ phân tích / lựa chọn nhiều lựa chọn, và gần 1 cho các nhiệm vụ sáng tạo và tạo ra. Chúng tôi khuyến nghị thay đổi giá trị này hoặc Top P nhưng không phải cả hai.',
    com_endpoint_anthropic_topp:
      'Top-p thay đổi cách mô hình chọn mã thông báo để xuất. Mã thông báo được chọn từ căn cứ có xác suất cao nhất đến thấp nhất cho đến khi tổng xác suất của chúng bằng giá trị top-p.',
    com_endpoint_anthropic_topk:
      'Top-k thay đổi cách mô hình chọn mã thông báo để xuất. Top-k là 1 có nghĩa là mã thông báo được chọn là phổ biến nhất trong tất cả các mã thông báo trong bảng từ vựng của mô hình (còn được gọi là giải mã tham lam), trong khi top-k là 3 có nghĩa là mã thông báo tiếp theo được chọn từ giữa 3 mã thông báo phổ biến nhất (sử dụng nhiệt độ).',
    com_endpoint_anthropic_maxoutputtokens:
      'Số mã thông báo tối đa có thể được tạo ra trong phản hồi. Chỉ định một giá trị thấp hơn cho các phản hồi ngắn hơn và một giá trị cao hơn cho các phản hồi dài hơn.',
    com_endpoint_anthropic_custom_name_placeholder: 'Đặt tên tùy chỉnh cho Anthropic',
    com_endpoint_frequency_penalty: 'Hình phạt tần suất',
    com_endpoint_presence_penalty: 'Hình phạt hiện diện',
    com_endpoint_plug_use_functions: 'Sử dụng chức năng',
    com_endpoint_plug_skip_completion: 'Bỏ qua hoàn thành',
    com_endpoint_disabled_with_tools: 'bị vô hiệu hóa với các công cụ',
    com_endpoint_disabled_with_tools_placeholder: 'Bị vô hiệu hóa với các công cụ đã chọn',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Đặt hướng dẫn tùy chỉnh để bao gồm trong Thông điệp hệ thống. Mặc định: không có',
    com_endpoint_import: 'Nhập',
    com_endpoint_set_custom_name: 'Đặt tên tùy chỉnh, nếu bạn có thể tìm thấy cài đặt này',
    com_endpoint_preset: 'đặt sẵn',
    com_endpoint_presets: 'đặt sẵn',
    com_endpoint_preset_name: 'Tên đặt sẵn',
    com_endpoint_new_topic: 'Chủ đề mới',
    com_endpoint: 'Điểm kết thúc',
    com_endpoint_hide: 'Ẩn',
    com_endpoint_show: 'Hiển thị',
    com_endpoint_examples: ' Đặt sẵn',
    com_endpoint_completion: 'Hoàn thành',
    com_endpoint_agent: 'Đặc trưng',
    com_endpoint_show_what_settings: 'Hiển thị cài đặt {0}',
    com_endpoint_save: 'Lưu',
    com_endpoint_export: 'Xuất',
    com_endpoint_save_as_preset: 'Lưu dưới dạng đặt sẵn',
    com_endpoint_presets_clear_warning:
      'Bạn có chắc chắn muốn xóa tất cả các đặt sẵn? Hành động này không thể hoàn tác.',
    com_endpoint_not_implemented: 'Chưa thực hiện',
    com_endpoint_no_presets: 'Chưa có đặt sẵn',
    com_endpoint_not_available: 'Không có điểm kết thúc nào khả dụng',
    com_endpoint_view_options: 'Xem tùy chọn',
    com_endpoint_save_convo_as_preset: 'Lưu cuộc trò chuyện dưới dạng đặt sẵn',
    com_endpoint_my_preset: 'Đặt sẵn của tôi',
    com_endpoint_agent_model: 'Mô hình Đặc trưng (Đề xuất: GPT-3.5)',
    com_endpoint_completion_model: 'Mô hình Hoàn thành (Đề xuất: GPT-4)',
    com_endpoint_func_hover: 'Cho phép sử dụng Plugin như các chức năng OpenAI',
    com_endpoint_skip_hover:
      'Cho phép bỏ qua bước hoàn thành, kiểm tra câu trả lời cuối cùng và các bước đã tạo',
    com_endpoint_config_key: 'Đặt Khóa API',
    com_endpoint_config_key_for: 'Đặt Khóa API cho',
    com_endpoint_config_key_name: 'Khóa',
    com_endpoint_config_value: 'Nhập giá trị cho',
    com_endpoint_config_key_name_placeholder: 'Đặt khóa API trước',
    com_endpoint_config_key_encryption: 'Khóa của bạn sẽ được mã hóa và xóa vào lúc',
    com_endpoint_config_key_expiry: 'thời gian hết hạn',
    com_endpoint_config_key_import_json_key: 'Nhập Khóa JSON Tài khoản Dịch vụ.',
    com_endpoint_config_key_import_json_key_success: 'Nhập thành công Khóa JSON Tài khoản Dịch vụ',
    com_endpoint_config_key_import_json_key_invalid:
      'Khóa JSON Tài khoản Dịch vụ không hợp lệ, Bạn đã nhập đúng tệp không?',
    com_endpoint_config_key_get_edge_key: 'Để nhận Mã truy cập Bing của bạn, đăng nhập vào',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Sử dụng các công cụ phát triển hoặc tiện ích mở rộng trong khi đăng nhập vào trang web để sao chép nội dung của cookie _U. Nếu không thành công, làm theo',
    com_endpoint_config_key_edge_instructions: 'hướng dẫn',
    com_endpoint_config_key_edge_full_key_string: 'để cung cấp chuỗi cookie đầy đủ.',
    com_endpoint_config_key_chatgpt:
      "Để nhận Mã truy cập của bạn cho ChatGPT 'Phiên bản miễn phí', đăng nhập vào",
    com_endpoint_config_key_chatgpt_then_visit: 'sau đó truy cập',
    com_endpoint_config_key_chatgpt_copy_token: 'Sao chép mã truy cập.',
    com_endpoint_config_key_google_need_to: 'Bạn cần',
    com_endpoint_config_key_google_vertex_ai: 'Bật Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API trên Google Cloud, sau đó',
    com_endpoint_config_key_google_service_account: 'Tạo một Tài khoản Dịch vụ',
    com_endpoint_config_key_google_vertex_api_role:
      "Hãy chắc chắn nhấp vào 'Tạo và Tiếp tục' để cấp ít nhất vai trò 'Người dùng Vertex AI' thì còn lại, tạo một khóa JSON để nhập vào đây.",
    com_nav_auto_scroll: 'Cuộn tự động đến tin nhắn mới nhất khi mở',
    com_nav_plugin_store: 'Cửa hàng Plugin',
    com_nav_plugin_search: 'Tìm kiếm plugin',
    com_nav_plugin_auth_error: 'Đã xảy ra lỗi khi xác thực plugin này. Vui lòng thử lại.',
    com_nav_export_filename: 'Tên tệp',
    com_nav_export_filename_placeholder: 'Đặt tên cho tệp',
    com_nav_export_type: 'Loại',
    com_nav_export_include_endpoint_options: 'Bao gồm các tùy chọn điểm kết thúc',
    com_nav_enabled: 'Đã bật',
    com_nav_not_supported: 'Không được hỗ trợ',
    com_nav_export_all_message_branches: 'Xuất tất cả các nhánh tin nhắn',
    com_nav_export_recursive_or_sequential: 'Đệ quy hay tuần tự?',
    com_nav_export_recursive: 'Đệ quy',
    com_nav_export_conversation: 'Xuất cuộc trò chuyện',
    com_nav_export: 'Xuất',
    com_nav_shared_links: 'Liên kết được chia sẻ',
    com_nav_shared_links_manage: 'Quản l',
    com_nav_shared_links_empty: 'Bạn không có link được chia sẻ.',
    com_nav_shared_links_name: 'Tên',
    com_nav_shared_links_date_shared: 'Ngày chia sẻ',
    com_nav_theme: 'Chủ đề',
    com_nav_theme_system: 'Hệ thống',
    com_nav_theme_dark: 'Tối',
    com_nav_theme_light: 'Sáng',
    com_nav_clear_all_chats: 'Xóa tất cả cuộc trò chuyện',
    com_nav_confirm_clear: 'Xác nhận xóa',
    com_nav_close_sidebar: 'Đóng thanh bên',
    com_nav_open_sidebar: 'Mở thanh bên',
    com_nav_send_message: 'Gửi tin nhắn',
    com_nav_log_out: 'Đăng xuất',
    com_nav_user: 'NGƯỜI DÙNG',
    com_nav_clear_conversation: 'Xóa cuộc trò chuyện',
    com_nav_clear_conversation_confirm_message:
      'Bạn có chắc chắn muốn xóa tất cả cuộc trò chuyện? Hành động này không thể hoàn tác.',
    com_nav_help_faq: 'Trợ giúp & Câu hỏi thường gặp',
    com_nav_settings: 'Cài đặt',
    com_nav_search_placeholder: 'Tìm kiếm tin nhắn',
    com_nav_setting_general: 'Chung',
    com_nav_setting_data: 'Kiểm soát dữ liệu',
  },
  b1 = {
    com_ui_examples: 'Örnekler',
    com_ui_new_chat: 'Yeni Sohbet',
    com_ui_happy_birthday: 'Bu benim ilk doğum günüm!',
    com_ui_example_quantum_computing: 'Kuantum bilgisayarını basit terimlerle açıkla',
    com_ui_example_10_year_old_b_day:
      '10 yaşındaki bir çocuğun doğum günü için yaratıcı fikirlerin var mı?',
    com_ui_example_http_in_js: "Javascript'te HTTP isteği nasıl yapılır?",
    com_ui_capabilities: 'Yetenekler',
    com_ui_capability_remember: 'Kullanıcının önceki konuşmada söylediklerini hatırlar',
    com_ui_capability_correction: 'Kullanıcının düzeltme yapmasına izin verir',
    com_ui_capability_decline_requests: 'Uygunsuz talepleri reddetmeye eğitilmiştir',
    com_ui_limitations: 'Sınırlamalar',
    com_ui_limitation_incorrect_info: 'Ara sıra yanlış bilgi üretebilir',
    com_ui_limitation_harmful_biased:
      'Ara sıra zararlı talimatlar veya önyargılı içerik üretebilir',
    com_ui_limitation_limited_2021: '2021 sonrası dünya ve olaylara sınırlı bilgi',
    com_ui_input: 'Giriş',
    com_ui_close: 'Kapat',
    com_ui_model: 'Model',
    com_ui_select_model: 'Bir model seç',
    com_ui_use_prompt: 'İpucu kullan',
    com_ui_prev: 'Önceki',
    com_ui_next: 'Sonraki',
    com_ui_stop: 'Durdur',
    com_ui_prompt_templates: 'İpucu Şablonları',
    com_ui_hide_prompt_templates: 'İpucu Şablonlarını Gizle',
    com_ui_showing: 'Gösteriliyor',
    com_ui_of: 'of',
    com_ui_entries: 'Girişler',
    com_ui_pay_per_call: 'Tüm yapay zekalar bir yerde. Ayda bir değil, çağrı başına ödeme yapın',
    com_ui_new_footer: 'Tüm yapay zekalar bir arada.',
    com_ui_enter: 'Gir',
    com_ui_submit: 'Gönder',
    com_ui_upload_success: 'Dosya başarıyla yüklendi',
    com_ui_upload_invalid: 'Geçersiz dosya yükleme',
    com_ui_cancel: 'İptal',
    com_ui_save: 'Kaydet',
    com_ui_copy_to_clipboard: 'Panoya kopyala',
    com_ui_copied_to_clipboard: 'Panoya kopyalandı',
    com_ui_regenerate: 'Yeniden oluştur',
    com_ui_continue: 'Devam et',
    com_ui_edit: 'Düzenle',
    com_ui_success: 'Başarılı',
    com_ui_all: 'tümü',
    com_ui_clear: 'Temizle',
    com_ui_revoke: 'İptal et',
    com_ui_revoke_info: 'Tüm kullanıcı tarafından verilen kimlik bilgilerini iptal et.',
    com_ui_import_conversation: 'İçe Aktar',
    com_ui_import_conversation_info: 'Bir JSON dosyasından sohbetleri içe aktar',
    com_ui_import_conversation_success: 'Sohbetler başarıyla içe aktarıldı',
    com_ui_import_conversation_error: 'Sohbetlerinizi içe aktarırken bir hata oluştu',
    com_ui_confirm_action: 'İşlemi Onayla',
    com_ui_chats: 'sohbetler',
    com_ui_share: 'Paylaş',
    com_ui_copy_link: 'Bağlantıyı kopyala',
    com_ui_update_link: 'Bağlantıyı güncelle',
    com_ui_create_link: 'Bağlantı oluştur',
    com_ui_share_link_to_chat: 'Bağlantıyı sohbete paylaş',
    com_ui_share_error: 'Sohbet bağlantısını paylaşırken bir hata oluştu',
    com_ui_share_create_message:
      'Adınız ve paylaşım sonrasında eklediğiniz herhangi bir mesaj özel kalır.',
    com_ui_share_created_message:
      'Sohbetiniz için paylaşılan bir bağlantı oluşturuldu. Ayarlar aracılığıyla önceden paylaşılan sohbetleri istediğiniz zaman yönetin.',
    com_ui_share_update_message:
      'Adınız, özel talimatlarınız ve paylaşım sonrasında eklediğiniz herhangi bir mesaj özel kalır.',
    com_ui_share_updated_message:
      'Sohbetiniz için paylaşılan bir bağlantı güncellendi. Ayarlar aracılığıyla önceden paylaşılan sohbetleri istediğiniz zaman yönetin.',
    com_ui_shared_link_not_found: 'Paylaşılan bağlantı bulunamadı',
    com_ui_delete: 'Sil',
    com_ui_delete_conversation: 'Sohbet silinecek?',
    com_ui_delete_conversation_confirm: 'Bu silinecek',
    com_ui_rename: 'Yeniden adlandır',
    com_ui_archive: 'Arşivle',
    com_ui_archive_error: 'Sohbet arşivlemeye çalışırken bir hata oluştu',
    com_ui_unarchive: 'Arşivden Çıkar',
    com_ui_unarchive_error: 'Sohbet arşivden çıkarılamadı',
    com_ui_more_options: 'Daha fazla',
    com_auth_error_login:
      'Sağlanan bilgilerle giriş yapılamıyor. Lütfen kimlik bilgilerinizi kontrol edip tekrar deneyin.',
    com_auth_error_login_rl:
      'Kısa bir süre içinde çok fazla giriş denemesi. Lütfen daha sonra tekrar deneyin.',
    com_auth_error_login_ban:
      'Hesabınız servisimizin ihlaller nedeniyle geçici olarak engellenmiştir.',
    com_auth_error_login_server:
      'Dahili bir server hatası oluştu. Lütfen birkaç dakika bekleyin ve tekrar deneyin.',
    com_auth_no_account: 'Hesabınız yok mu?',
    com_auth_sign_up: 'Kayıt ol',
    com_auth_sign_in: 'Giriş yap',
    com_auth_google_login: 'Google ile giriş yap',
    com_auth_facebook_login: 'Facebook ile giriş yap',
    com_auth_github_login: 'Github ile giriş yap',
    com_auth_discord_login: 'Discord ile giriş yap',
    com_auth_email: 'E-posta',
    com_auth_email_required: 'E-posta gereklidir',
    com_auth_email_min_length: 'E-posta en az 6 karakter olmalıdır',
    com_auth_email_max_length: 'E-posta 120 karakterden uzun olmamalıdır',
    com_auth_email_pattern: 'Geçerli bir e-posta adresi girmelisiniz',
    com_auth_email_address: 'E-posta adresi',
    com_auth_password: 'Şifre',
    com_auth_password_required: 'Şifre gereklidir',
    com_auth_password_min_length: 'Şifre en az 8 karakter olmalıdır',
    com_auth_password_max_length: 'Şifre 128 karakterden kısa olmalıdır',
    com_auth_password_forgot: 'Şifreni mi unuttun?',
    com_auth_password_confirm: 'Şifreyi onayla',
    com_auth_password_not_match: 'Şifreler uyuşmuyor',
    com_auth_continue: 'Devam et',
    com_auth_create_account: 'Hesap oluşturun',
    com_auth_error_create:
      'Hesabınızı kaydetmeye çalışırken bir hata oluştu. Lütfen tekrar deneyin.',
    com_auth_full_name: 'Tam Adı',
    com_auth_name_required: 'Ad gereklidir',
    com_auth_name_min_length: 'Ad en az 3 karakter olmalıdır',
    com_auth_name_max_length: 'Ad 80 karakterden az olmalıdır',
    com_auth_username: 'Kullanıcı Adı (isteğe bağlı)',
    com_auth_username_required: 'Kullanıcı adı gereklidir',
    com_auth_username_min_length: 'Kullanıcı adı en az 2 karakter olmalıdır',
    com_auth_username_max_length: 'Kullanıcı adı 20 karakterden az olmalıdır',
    com_auth_already_have_account: 'Zaten bir hesabınız var mı?',
    com_auth_login: 'Giriş',
    com_auth_reset_password: 'Şifrenizi sıfırlayın',
    com_auth_click: 'Tıklayın',
    com_auth_here: 'BURAYA',
    com_auth_to_reset_your_password: 'şifrenizi sıfırlamak için.',
    com_auth_reset_password_link_sent: 'E-posta Gönderildi',
    com_auth_reset_password_email_sent:
      'Şifrenizi sıfırlamak için size daha fazla talimat içeren bir e-posta gönderildi.',
    com_auth_error_reset_password:
      'Şifrenizi sıfırlama konusunda bir sorun oluştu. Sağlanan e-posta adresi ile ilişkilendirilmiş bir kullanıcı bulunamadı. Lütfen tekrar deneyin.',
    com_auth_reset_password_success: 'Şifre Sıfırlama Başarılı',
    com_auth_login_with_new_password: 'Artık yeni şifrenizle giriş yapabilirsiniz.',
    com_auth_error_invalid_reset_token: 'Bu şifre sıfırlama belirteci artık geçerli değil.',
    com_auth_click_here: 'Buraya tıklayın',
    com_auth_to_try_again: 'tekrar denemek için.',
    com_auth_submit_registration: 'Kaydı Gönder',
    com_auth_welcome_back: 'Tekrar Hoş Geldiniz',
    com_endpoint_open_menu: 'Menüyü Aç',
    com_endpoint_bing_enable_sydney: "Sydney'i Etkinleştir",
    com_endpoint_bing_to_enable_sydney: "Sydney'i etkinleştirmek için",
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      'Bing, konuşma için başvurabileceği "bağlam" için 7k tokena kadar kullanabilir. Belirli bir sınır bilinmemekle birlikte, 7k tokeni aşan hatalara neden olabilir',
    com_endpoint_bing_system_message_placeholder:
      'UYARI: Bu özelliği yanlış kullanmak sizi Bing kullanımından MEN edebilir! "Sistem Mesajı" na tıklayarak tam talimatları ve varsayılan mesajı görebilirsiniz, ki bu da güvenli kabul edilen "Sydney" önceden ayarıdır.',
    com_endpoint_system_message: 'Sistem Mesajı',
    com_endpoint_message: 'Mesaj',
    com_endpoint_message_not_appendable: 'Mesajınızı düzenleyin veya Yeniden Oluşturun.',
    com_endpoint_default_blank: 'varsayılan: boş',
    com_endpoint_default_false: 'varsayılan: false',
    com_endpoint_default_creative: 'varsayılan: yaratıcı',
    com_endpoint_default_empty: 'varsayılan: boş',
    com_endpoint_default_with_num: 'varsayılan: {0}',
    com_endpoint_context: 'Bağlam',
    com_endpoint_tone_style: 'Ton Stili',
    com_endpoint_token_count: 'Token Sayısı',
    com_endpoint_output: 'Çıkış',
    com_endpoint_google_temp:
      'Daha yüksek değerler = daha rastgele, daha düşük değerler = daha odaklanmış ve belirleyici. Bunlardan birini değiştirmenizi öneririz, ancak her ikisini birden değil.',
    com_endpoint_google_topp:
      "Top-p, modelin çıkış için token seçme şeklini değiştirir. Token'lar, en yüksek K (topK parametresini görmek için) olasılıktan en düşük olasılığa kadar seçilir, toplam olasılıkları top-p değerine eşit olana kadar.",
    com_endpoint_google_topk:
      'Top-k, modelin çıkış için token seçme şeklini değiştirir. 1 top-k, seçilen tokenın modelin kelime dağarcığındaki tüm tokenlar arasında en olası olduğu anlamına gelir (ayrıca aç gözlü kod çözme denir), 3 top-k ise bir sonraki tokenın 3 en olası token arasından seçildiği anlamına gelir (sıcaklık kullanılarak).',
    com_endpoint_google_maxoutputtokens:
      'Yanıtta üretilebilecek maksimum token sayısı. Daha kısa yanıtlar için daha düşük bir değer belirtin ve daha uzun yanıtlar için daha yüksek bir değer belirtin.',
    com_endpoint_google_custom_name_placeholder: 'Google için özel bir ad belirleyin',
    com_endpoint_prompt_prefix_placeholder:
      'Özel talimatları veya bağlamı ayarlayın. Boşsa göz ardı edilir.',
    com_endpoint_custom_name: 'Özel Ad',
    com_endpoint_prompt_prefix: 'Talimat Öneki',
    com_endpoint_temperature: 'Sıcaklık',
    com_endpoint_default: 'varsayılan',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Maksimum Çıkış Tokenları',
    com_endpoint_openai_temp:
      'Daha yüksek değerler = daha rastgele, daha düşük değerler = daha odaklanmış ve belirleyici. Bunlardan birini değiştirmenizi öneririz, ancak her ikisini birden değil.',
    com_endpoint_openai_max:
      'Oluşturulacak maksimum token sayısı. Giriş tokenlarının toplam uzunluğu, modelin bağlam uzunluğu tarafından sınırlanır.',
    com_endpoint_openai_topp:
      "Sıcaklıkla örnekleme alternatifi olan bir başka seçenek, modelin top_p olasılık kütlesine sahip tokenların sonuçlarını düşünmesidir. Bu nedenle 0.1, yalnızca top 10% olasılık kütlesini oluşturan token'ların düşünüldüğü anlamına gelir. Bunları veya sıcaklığı değiştirmenizi öneririz, ancak her ikisini birden değil.",
    com_endpoint_openai_freq:
      'Metindeki mevcut frekanslarına dayanarak yeni tokenları cezalandırmak için -2.0 ile 2.0 arasında bir sayı. Pozitif değerler, modelin aynı satırı kelimesi kelimesine tekrar etme olasılığını azaltır.',
    com_endpoint_openai_pres:
      'Metindeki varolup olmadıklarına dayanarak yeni tokenları cezalandırmak için -2.0 ile 2.0 arasında bir sayı. Pozitif değerler, modelin yeni konulardan bahsetme olasılığını artırır.',
    com_endpoint_openai_custom_name_placeholder: 'ChatGPT için özel bir ad belirleyin',
    com_endpoint_openai_prompt_prefix_placeholder:
      "Sistem Mesajı'na dahil edilecek özel talimatları ayarlayın. Varsayılan: yok",
    com_endpoint_anthropic_temp:
      '0 ile 1 arasında bir değer. Analitik / çoklu seçim için daha yakın bir sıcaklık kullanın ve yaratıcı ve üretken görevler için daha yakın 1 kullanın. Bunlardan birini değiştirmenizi öneririz, ancak her ikisini birden değil.',
    com_endpoint_anthropic_topp:
      "Top-p, modelin çıkış için token seçme şeklini değiştirir. Token'lar, en yüksek K (topK parametresini görmek için) olasılıktan en düşük olasılığa kadar seçilir, toplam olasılıkları top-p değerine eşit olana kadar.",
    com_endpoint_anthropic_topk:
      'Top-k, modelin çıkış için token seçme şeklini değiştirir. 1 top-k, seçilen tokenın modelin kelime dağarcığındaki tüm tokenlar arasında en olası olduğu anlamına gelir (ayrıca aç gözlü kod çözme denir), 3 top-k ise bir sonraki tokenın 3 en olası token arasından seçildiği anlamına gelir (sıcaklık kullanılarak).',
    com_endpoint_anthropic_maxoutputtokens:
      'Yanıtta üretilebilecek maksimum token sayısı. Daha kısa yanıtlar için daha düşük bir değer belirtin ve daha uzun yanıtlar için daha yüksek bir değer belirtin.',
    com_endpoint_anthropic_custom_name_placeholder: 'Anthropic için özel bir ad belirleyin',
    com_endpoint_frequency_penalty: 'Frekans Cezası',
    com_endpoint_presence_penalty: 'Varlık Cezası',
    com_endpoint_plug_use_functions: 'Fonksiyonları Kullan',
    com_endpoint_plug_skip_completion: 'Tamamlamayı Atla',
    com_endpoint_disabled_with_tools: 'araçlarla devre dışı bırakıldı',
    com_endpoint_disabled_with_tools_placeholder: 'Araçlar Seçiliyken Devre Dışı Bırakıldı',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      "Sistem Mesajı'na dahil edilecek özel talimatları ayarlayın. Varsayılan: hiçbiri",
    com_endpoint_import: 'İçe Aktar',
    com_endpoint_set_custom_name: 'Bu ön ayarı bulabilmeniz için özel bir ad belirleyin',
    com_endpoint_preset_delete_confirm: 'Bu ön ayarı silmek istediğinizden emin misiniz?',
    com_endpoint_preset_clear_all_confirm:
      'Tüm ön ayarlarınızı silmek istediğinizden emin misiniz?',
    com_endpoint_preset_import: 'Ön Ayar İçe Aktarıldı!',
    com_endpoint_preset_import_error:
      'Ön ayarınız içe aktarılırken bir hata oluştu. Lütfen tekrar deneyin.',
    com_endpoint_preset_save_error:
      'Ön ayarınız kaydedilirken bir hata oluştu. Lütfen tekrar deneyin.',
    com_endpoint_preset_delete_error:
      'Ön ayarınız silinirken bir hata oluştu. Lütfen tekrar deneyin.',
    com_endpoint_preset_default_removed: 'artık varsayılan ön ayar değildir.',
    com_endpoint_preset_default_item: 'Varsayılan:',
    com_endpoint_preset_default_none: 'Varsayılan ön ayar etkin değil.',
    com_endpoint_preset_title: 'Ön Ayar',
    com_endpoint_preset_saved: 'Kaydedildi',
    com_endpoint_preset_default: 'artık varsayılan ön ayardır.',
    com_endpoint_preset: 'ön ayar',
    com_endpoint_presets: 'ön ayarlar',
    com_endpoint_preset_selected: 'Ön Ayar Aktif!',
    com_endpoint_preset_selected_title: 'Aktif!',
    com_endpoint_preset_name: 'Ön Ayar Adı',
    com_endpoint_new_topic: 'Yeni Konu',
    com_endpoint: 'Nokta',
    com_endpoint_hide: 'Gizle',
    com_endpoint_show: 'Göster',
    com_endpoint_examples: ' Ön Ayarlar',
    com_endpoint_completion: 'Tamamlama',
    com_endpoint_agent: 'Ajan',
    com_endpoint_show_what_settings: '{0} Ayarları Göster',
    com_endpoint_save: 'Kaydet',
    com_endpoint_export: 'Dışa Aktar',
    com_endpoint_save_as_preset: 'Ön Ayar Olarak Kaydet',
    com_endpoint_presets_clear_warning:
      'Tüm ön ayarları silmek istediğinizden emin misiniz? Bu geri alınamaz.',
    com_endpoint_not_implemented: 'Uygulanmadı',
    com_endpoint_no_presets: 'Henüz ön ayar yok',
    com_endpoint_not_available: 'Uygun bir nokta yok',
    com_endpoint_view_options: 'Seçenekleri Görüntüle',
    com_endpoint_save_convo_as_preset: 'Sohbeti Ön Ayar Olarak Kaydet',
    com_endpoint_my_preset: 'Benim Ön Ayarım',
    com_endpoint_agent_model: 'Ajan Modeli (Tavsiye Edilen: GPT-3.5)',
    com_endpoint_completion_model: 'Tamamlama Modeli (Tavsiye Edilen: GPT-4)',
    com_endpoint_func_hover: 'Eklentileri OpenAI Fonksiyonları olarak kullanmayı etkinleştir',
    com_endpoint_skip_hover:
      'Tamamlama adımını atlamayı etkinleştir, bu adım, nihai cevabı ve üretilen adımları kontrol eder',
    com_endpoint_config_key: 'API Anahtarı Ayarla',
    com_endpoint_config_placeholder: 'Sohbet etmek için Başlık menüsünde Anahtarınızı ayarlayın.',
    com_endpoint_config_key_for: 'API Anahtarını Ayarla',
    com_endpoint_config_key_name: 'Anahtar',
    com_endpoint_config_value: 'İçin değeri girin',
    com_endpoint_config_key_name_placeholder: 'Önce API anahtarını ayarlayın',
    com_endpoint_config_key_encryption: 'Anahtarınız şifreli ve silinecek',
    com_endpoint_config_key_expiry: 'süresi dolduğunda',
    com_endpoint_config_key_import_json_key: 'Servis Hesabı JSON Anahtarını İçe Aktar.',
    com_endpoint_config_key_import_json_key_success:
      'Servis Hesabı JSON Anahtarı Başarıyla İçe Aktarıldı',
    com_endpoint_config_key_import_json_key_invalid:
      'Geçersiz Servis Hesabı JSON Anahtarı, doğru dosyayı mı içe aktardınız?',
    com_endpoint_config_key_get_edge_key: 'Bing için Erişim belirtecinizi almak için giriş yapın',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Siteye giriş yapılırken dev araçları veya bir uzantı kullanarak _U çerezinin içeriğini kopyalayın. Bu başarısız olursa, bu',
    com_endpoint_config_key_edge_instructions: 'talimatları',
    com_endpoint_config_key_edge_full_key_string: 'tam çerez dizilerini sağlamak için.',
    com_endpoint_config_key_chatgpt:
      "ChatGPT 'Free Version' için Erişim belirtecinizi almak için giriş yapın",
    com_endpoint_config_key_chatgpt_then_visit: 'ardından ziyaret edin',
    com_endpoint_config_key_chatgpt_copy_token: 'Erişim belirtecini kopyalayın.',
    com_endpoint_config_key_google_need_to: 'Şunlara ihtiyacınız var:',
    com_endpoint_config_key_google_vertex_ai: "Vertex AI'yi Etkinleştir",
    com_endpoint_config_key_google_vertex_api: "Google Cloud'da API'yi Etkinleştirin, ardından",
    com_endpoint_config_key_google_service_account: 'Bir Servis Hesabı Oluşturun',
    com_endpoint_config_key_google_vertex_api_role:
      "Lütfen 'Oluştur ve Devam Et'e tıklayarak en az 'Vertex AI Kullanıcısı' rolünü verdiğinizden emin olun. Son olarak, buraya içe aktarmak için bir JSON anahtarı oluşturun.",
    com_nav_welcome_message: 'Bugün size nasıl yardımcı olabilirim?',
    com_nav_auto_scroll: 'Açıkta En Yeniye Otomatik Kaydır',
    com_nav_plugin_store: 'Eklenti Mağazası',
    com_nav_plugin_search: 'Eklentileri Ara',
    com_nav_plugin_auth_error:
      'Bu eklentiyi kimlik doğrulama girişiminde bir hata oluştu. Lütfen tekrar deneyin.',
    com_nav_export_filename: 'Dosya adı',
    com_nav_export_filename_placeholder: 'Dosya adını belirleyin',
    com_nav_export_type: 'Tür',
    com_nav_export_include_endpoint_options: 'Nokta seçeneklerini dahil et',
    com_nav_enabled: 'Etkin',
    com_nav_not_supported: 'Desteklenmiyor',
    com_nav_export_all_message_branches: 'Tüm mesaj dallarını dışa aktar',
    com_nav_export_recursive_or_sequential: 'Yinelemeli mi yoksa sıralı mı?',
    com_nav_export_recursive: 'Yinelemeli',
    com_nav_export_conversation: 'Konuşmayı dışa aktar',
    com_nav_export: 'Dışa Aktar',
    com_nav_shared_links: 'Paylaşılan linkler',
    com_nav_shared_links_manage: 'Ynetmek',
    com_nav_shared_links_empty: 'Paylaşılan linkleriniz yok.',
    com_nav_shared_links_name: 'İsim',
    com_nav_shared_links_date_shared: 'Paylaşılan tarih',
    com_nav_theme: 'Tema',
    com_nav_theme_system: 'Sistem',
    com_nav_theme_dark: 'Koyu',
    com_nav_theme_light: 'Açık',
    com_nav_clear_all_chats: 'Tüm sohbetleri temizle',
    com_nav_confirm_clear: 'Temizlemeyi Onayla',
    com_nav_close_sidebar: 'Kenar çubuğunu kapat',
    com_nav_open_sidebar: 'Kenar çubuğunu aç',
    com_nav_send_message: 'Mesaj gönder',
    com_nav_log_out: 'Çıkış yap',
    com_nav_user: 'KULLANICI',
    com_nav_archived_chats: 'Arşivlenmiş Sohbetler',
    com_nav_archived_chats_manage: 'Ynetmek',
    com_nav_archived_chats_empty: 'Sizin hiçbir arşivlenmiş sohbetiniz yok.',
    com_nav_archive_all_chats: 'Tm sohbetleri arşivle',
    com_nav_archive_all: 'Tmn arşivle',
    com_nav_archive_name: 'İsim',
    com_nav_archive_created_at: 'DateCreated',
    com_nav_clear_conversation: 'Sohbetleri Temizle',
    com_nav_clear_conversation_confirm_message:
      'Tüm sohbetleri temizlemek istediğinizden emin misiniz? Bu geri alınamaz.',
    com_nav_help_faq: 'Yardım ve SSS',
    com_nav_settings: 'Ayarlar',
    com_nav_search_placeholder: 'Mesajları ara',
    com_nav_setting_general: 'Genel',
    com_nav_setting_data: 'Veri kontrolleri',
  },
  y1 = {
    com_ui_examples: 'Voorbeelden',
    com_ui_new_chat: 'Nieuwe chat',
    com_ui_happy_birthday: 'Het is mijn eerste verjaardag!',
    com_ui_example_quantum_computing: 'Leg quantumcomputing in eenvoudige termen uit',
    com_ui_example_10_year_old_b_day:
      'Heb je creatieve ideeën voor de verjaardag van een 10-jarige?',
    com_ui_example_http_in_js: 'Hoe maak ik een HTTP-aanvraag in Javascript?',
    com_ui_capabilities: 'Mogelijkheden',
    com_ui_capability_remember: 'Onthoudt wat de gebruiker eerder in het gesprek heeft gezegd',
    com_ui_capability_correction: 'Staat de gebruiker toe om vervolgcorrigeringen te geven',
    com_ui_capability_decline_requests: 'Getraind om ongepaste verzoeken te weigeren',
    com_ui_limitations: 'Beperkingen',
    com_ui_limitation_incorrect_info: 'Kan af en toe onjuiste informatie genereren',
    com_ui_limitation_harmful_biased:
      'Kan af en toe schadelijke instructies of bevooroordeelde inhoud produceren',
    com_ui_limitation_limited_2021: 'Beperkte kennis van de wereld en gebeurtenissen na 2021',
    com_ui_input: 'Invoer',
    com_ui_close: 'Sluiten',
    com_ui_model: 'Model',
    com_ui_select_model: 'Selecteer een model',
    com_ui_use_prompt: 'Gebruik prompt',
    com_ui_prev: 'Vorige',
    com_ui_next: 'Volgende',
    com_ui_stop: 'Stop',
    com_ui_prompt_templates: 'Prompt-sjablonen',
    com_ui_hide_prompt_templates: 'Prompt-sjablonen verbergen',
    com_ui_showing: 'Tonen',
    com_ui_of: 'van',
    com_ui_entries: 'Items',
    com_ui_pay_per_call: 'Alle AI-gesprekken op één plek. Betaal per gesprek en niet per maand',
    com_ui_new_footer: 'Alle AI-gesprekken op één plek.',
    com_ui_enter: 'Invoeren',
    com_ui_submit: 'Indienen',
    com_ui_upload_success: 'Bestand succesvol geüpload',
    com_ui_upload_invalid: 'Ongeldig bestand voor uploaden',
    com_ui_cancel: 'Annuleren',
    com_ui_save: 'Opslaan',
    com_ui_copy_to_clipboard: 'Kopiëren naar klembord',
    com_ui_copied_to_clipboard: 'Gekopieerd naar klembord',
    com_ui_regenerate: 'Opnieuw genereren',
    com_ui_continue: 'Doorgaan',
    com_ui_edit: 'Bewerken',
    com_ui_success: 'Succes',
    com_ui_all: 'alle',
    com_ui_clear: 'Wissen',
    com_ui_revoke: 'Intrekken',
    com_ui_revoke_info: 'Trek alle door de gebruiker verstrekte referenties in',
    com_ui_import_conversation: 'Importeren',
    com_ui_import_conversation_info: 'Gesprekken importeren vanuit een JSON-bestand',
    com_ui_import_conversation_success: 'Gesprekken succesvol geïmporteerd',
    com_ui_import_conversation_error:
      'Er is een fout opgetreden bij het importeren van je gesprekken',
    com_ui_confirm_action: 'Bevestig actie',
    com_ui_chats: 'chats',
    com_ui_share: 'Delen',
    com_ui_copy_link: 'Link kopiëren',
    com_ui_update_link: 'Link bijwerken',
    com_ui_create_link: 'Link aanmaken',
    com_ui_share_link_to_chat: 'Deel link naar chat',
    com_ui_share_error: 'Er is een fout opgetreden bij het delen van de chatlink',
    com_ui_share_create_message:
      'Uw naam en alle berichten die u na het delen toevoegt, blijven privé.',
    com_ui_share_created_message:
      'Een gedeelde link naar uw chat is aangemaakt. Beheer eerder gedeelde chats op elk moment via Instellingen.',
    com_ui_share_update_message:
      'Uw naam, aangepaste instructies en alle berichten die u na het delen toevoegt, blijven privé.',
    com_ui_share_updated_message:
      'Een gedeelde link naar uw chat is bijgewerkt. Beheer eerder gedeelde chats op elk moment via Instellingen.',
    com_ui_shared_link_not_found: 'Gedeelde link niet gevonden',
    com_ui_delete: 'Verwijderen',
    com_ui_delete_conversation: 'Chat verwijderen?',
    com_ui_delete_conversation_confirm: 'Hiermee wordt',
    com_ui_rename: 'Hernoemen',
    com_ui_archive: 'Archiveren',
    com_ui_archive_error: 'Kan conversatie niet archiveren',
    com_ui_unarchive: 'Uit archiveren',
    com_ui_unarchive_error: 'Kan conversatie niet uit archiveren',
    com_ui_more_options: 'Meer',
    com_auth_error_login:
      'Kan niet inloggen met de verstrekte informatie. Controleer uw referenties en probeer het opnieuw.',
    com_auth_error_login_rl: 'Te veel inlogpogingen in een korte tijd. Probeer het later nog eens.',
    com_auth_error_login_ban:
      'Uw account is tijdelijk verbannen vanwege schendingen van onze service.',
    com_auth_error_login_server:
      'Er was een interne serverfout. Wacht een paar momenten en probeer het opnieuw.',
    com_auth_no_account: 'Heb je geen account?',
    com_auth_sign_up: 'Aanmelden',
    com_auth_sign_in: 'Inloggen',
    com_auth_google_login: 'Inloggen met Google',
    com_auth_facebook_login: 'Inloggen met Facebook',
    com_auth_github_login: 'Inloggen met Github',
    com_auth_discord_login: 'Inloggen met Discord',
    com_auth_email: 'E-mailadres',
    com_auth_email_required: 'E-mailadres is verplicht',
    com_auth_email_min_length: 'E-mailadres moet minstens 6 tekens bevatten',
    com_auth_email_max_length: 'E-mailadres mag niet langer zijn dan 120 tekens',
    com_auth_email_pattern: 'Je moet een geldig e-mailadres invoeren',
    com_auth_email_address: 'E-mailadres',
    com_auth_password: 'Wachtwoord',
    com_auth_password_required: 'Wachtwoord is verplicht',
    com_auth_password_min_length: 'Wachtwoord moet minstens 8 tekens bevatten',
    com_auth_password_max_length: 'Wachtwoord moet minder dan 128 tekens bevatten',
    com_auth_password_forgot: 'Wachtwoord vergeten?',
    com_auth_password_confirm: 'Bevestig wachtwoord',
    com_auth_password_not_match: 'Wachtwoorden komen niet overeen',
    com_auth_continue: 'Doorgaan',
    com_auth_create_account: 'Maak uw account aan',
    com_auth_error_create:
      'Er is een fout opgetreden bij het registreren van uw account. Probeer het opnieuw.',
    com_auth_full_name: 'Volledige naam',
    com_auth_name_required: 'Naam is verplicht',
    com_auth_name_min_length: 'Naam moet minstens 3 tekens bevatten',
    com_auth_name_max_length: 'Naam mag niet langer zijn dan 80 tekens',
    com_auth_username: 'Gebruikersnaam (optioneel)',
    com_auth_username_required: 'Gebruikersnaam is verplicht',
    com_auth_username_min_length: 'Gebruikersnaam moet minstens 2 tekens bevatten',
    com_auth_username_max_length: 'Gebruikersnaam mag niet langer zijn dan 20 tekens',
    com_auth_already_have_account: 'Heb je al een account?',
    com_auth_login: 'Inloggen',
    com_auth_reset_password: 'Stel uw wachtwoord opnieuw in',
    com_auth_click: 'Klik',
    com_auth_here: 'HIER',
    com_auth_to_reset_your_password: 'om uw wachtwoord opnieuw in te stellen.',
    com_auth_reset_password_link_sent: 'E-mail verzonden',
    com_auth_reset_password_email_sent:
      'Er is een e-mail naar je verzonden met verdere instructies om je wachtwoord opnieuw in te stellen.',
    com_auth_error_reset_password:
      'Er was een probleem met het opnieuw instellen van uw wachtwoord. Er is geen gebruiker gevonden met het opgegeven e-mailadres. Probeer het opnieuw.',
    com_auth_reset_password_success: 'Wachtwoord opnieuw ingesteld',
    com_auth_login_with_new_password: 'Je kunt nu inloggen met je nieuwe wachtwoord.',
    com_auth_error_invalid_reset_token: 'Dit wachtwoord resettoken is niet langer geldig.',
    com_auth_click_here: 'Klik hier',
    com_auth_to_try_again: 'om het opnieuw te proberen.',
    com_auth_submit_registration: 'Registratie indienen',
    com_auth_welcome_back: 'Welkom terug',
    com_endpoint_open_menu: 'Open menu',
    com_endpoint_bing_enable_sydney: 'Schakel Sydney in',
    com_endpoint_bing_to_enable_sydney: 'Om Sydney in te schakelen',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      "Bing kan maximaal 7k tokens voor 'context' gebruiken, waarnaar het kan verwijzen voor het gesprek. De specifieke limiet is niet bekend, maar kan fouten opleveren bij meer dan 7k tokens",
    com_endpoint_bing_system_message_placeholder:
      "WAARSCHUWING: Misbruik van deze functie kan ertoe leiden dat je VERBANNEN wordt van het gebruik van Bing! Klik op 'Systeembericht' voor volledige instructies en het standaardbericht indien weggelaten, wat de 'Sydney'-voorinstelling is die veilig wordt geacht.",
    com_endpoint_system_message: 'Systeembericht',
    com_endpoint_default_blank: 'standaard: leeg',
    com_endpoint_default_false: 'standaard: onwaar',
    com_endpoint_default_creative: 'standaard: creatief',
    com_endpoint_default_empty: 'standaard: leeg',
    com_endpoint_default_with_num: 'standaard: {0}',
    com_endpoint_context: 'Context',
    com_endpoint_tone_style: 'Toonstijl',
    com_endpoint_token_count: 'Aantal tokens',
    com_endpoint_output: 'Uitvoer',
    com_endpoint_google_temp:
      'Hogere waarden = meer willekeurig, terwijl lagere waarden = meer gericht en deterministisch. We raden aan dit of Top P te wijzigen, maar niet beide.',
    com_endpoint_google_topp:
      'Top-p verandert hoe het model tokens selecteert voor uitvoer. Tokens worden geselecteerd van meest K (zie topK-parameter) waarschijnlijk tot minst waarschijnlijk totdat de som van hun kansen gelijk is aan de top-p-waarde.',
    com_endpoint_google_topk:
      "Top-k verandert hoe het model tokens selecteert voor uitvoer. Een top-k van 1 betekent dat het geselecteerde token het meest waarschijnlijk is van alle tokens in de vocabulaire van het model (ook wel 'greedy decoding' genoemd), terwijl een top-k van 3 betekent dat het volgende token wordt geselecteerd uit de 3 meest waarschijnlijke tokens (met behulp van temperatuur).",
    com_endpoint_google_maxoutputtokens:
      '	Maximum aantal tokens dat kan worden gegenereerd in de reactie. Geef een lagere waarde op voor kortere reacties en een hogere waarde voor langere reacties.',
    com_endpoint_google_custom_name_placeholder: 'Stel een aangepaste naam in voor Google',
    com_endpoint_prompt_prefix_placeholder:
      'Stel aangepaste instructies of context in. Wordt genegeerd indien leeg.',
    com_endpoint_custom_name: 'Aangepaste naam',
    com_endpoint_prompt_prefix: 'Prompt-voorvoegsel',
    com_endpoint_temperature: 'Temperatuur',
    com_endpoint_default: 'standaard',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Max. uitvoertokens',
    com_endpoint_openai_temp:
      'Hogere waarden = meer willekeurig, terwijl lagere waarden = meer gericht en deterministisch. We raden aan dit of Top P te wijzigen, maar niet beide.',
    com_endpoint_openai_max:
      'Het max. aantal tokens dat kan worden gegenereerd. De totale lengte van invoer-tokens en gegenereerde tokens is beperkt door de contextlengte van het model.',
    com_endpoint_openai_topp:
      'Een alternatief voor sampling met temperatuur, genaamd nucleus sampling, waarbij het model de resultaten van de tokens met de top_p waarschijnlijkheidsmassa in overweging neemt. Dus 0,1 betekent dat alleen de tokens die de bovenste 10% waarschijnlijkheidsmassa omvatten, in overweging worden genomen. We raden aan dit of temperatuur te wijzigen, maar niet beide.',
    com_endpoint_openai_freq:
      'Getal tussen -2,0 en 2,0. Positieve waarden straffen nieuwe tokens op basis van hun bestaande frequentie in de tekst tot nu toe, waardoor de kans dat het model dezelfde regel letterlijk herhaalt, afneemt.',
    com_endpoint_openai_pres:
      'Getal tussen -2,0 en 2,0. Positieve waarden straffen nieuwe tokens op basis van of ze al voorkomen in de tekst tot nu toe, waardoor de kans dat het model over nieuwe onderwerpen praat toeneemt.',
    com_endpoint_openai_custom_name_placeholder: 'Stel een aangepaste naam in voor ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Stel aangepaste instructies in om op te nemen in Systeembericht. Standaard: geen',
    com_endpoint_anthropic_temp:
      'Varieert van 0 tot 1. Gebruik een lagere temp voor analytische / meerkeuze taken en een hogere temp voor creatieve en generatieve taken. We raden aan dit of Top P te wijzigen, maar niet beide.',
    com_endpoint_anthropic_topp:
      'Top-p verandert hoe het model tokens selecteert voor uitvoer. Tokens worden geselecteerd van meest K (zie topK-parameter) waarschijnlijk tot minst waarschijnlijk totdat de som van hun kansen gelijk is aan de top-p-waarde.',
    com_endpoint_anthropic_topk:
      "Top-k verandert hoe het model tokens selecteert voor uitvoer. Een top-k van 1 betekent dat het geselecteerde token het meest waarschijnlijk is van alle tokens in de vocabulaire van het model (ook wel 'greedy decoding' genoemd), terwijl een top-k van 3 betekent dat het volgende token wordt geselecteerd uit de 3 meest waarschijnlijke tokens (met behulp van temperatuur).",
    com_endpoint_anthropic_maxoutputtokens:
      'Maximum aantal tokens dat kan worden gegenereerd in de reactie. Geef een lagere waarde op voor kortere reacties en een hogere waarde voor langere reacties.',
    com_endpoint_anthropic_custom_name_placeholder: 'Stel een aangepaste naam in voor Anthropic',
    com_endpoint_frequency_penalty: 'Frequentiestraf',
    com_endpoint_presence_penalty: 'Aanwezigheidsstraf',
    com_endpoint_plug_use_functions: 'Gebruik functies inschakelen',
    com_endpoint_plug_skip_completion: 'Voltooiing overslaan',
    com_endpoint_disabled_with_tools: 'uitgeschakeld met tools',
    com_endpoint_disabled_with_tools_placeholder: 'Uitgeschakeld met geselecteerde tools',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Stel aangepaste instructies in om op te nemen in Systeembericht. Standaard: geen',
    com_endpoint_import: 'Importeren',
    com_endpoint_set_custom_name:
      'Stel een aangepaste naam in, voor het geval je deze voorinstelling kunt vinden',
    com_endpoint_preset: 'voorinstelling',
    com_endpoint_presets: 'voorinstellingen',
    com_endpoint_preset_selected: 'Voorinstelling actief!',
    com_endpoint_preset_name: 'Naam voorinstelling',
    com_endpoint_new_topic: 'Nieuw onderwerp',
    com_endpoint: 'Eindpunt',
    com_endpoint_hide: 'Verbergen',
    com_endpoint_show: 'Weergeven',
    com_endpoint_examples: ' Voorinstellingen',
    com_endpoint_completion: 'Voltooiing',
    com_endpoint_agent: 'Agent',
    com_endpoint_show_what_settings: '{0} instellingen weergeven',
    com_endpoint_save: 'Opslaan',
    com_endpoint_export: 'Exporteren',
    com_endpoint_save_as_preset: 'Opslaan als voorinstelling',
    com_endpoint_presets_clear_warning:
      'Weet u zeker dat u alle voorinstellingen wilt wissen? Dit is onomkeerbaar.',
    com_endpoint_not_implemented: 'Niet geïmplementeerd',
    com_endpoint_no_presets:
      'Nog geen voorinstellingen, gebruik de instellingenknop om er een te maken',
    com_endpoint_not_available: 'Geen eindpunt beschikbaar',
    com_endpoint_view_options: 'Weergaveopties',
    com_endpoint_save_convo_as_preset: 'Conversatie opslaan als voorinstelling',
    com_endpoint_my_preset: 'Mijn voorinstelling',
    com_endpoint_agent_model: 'Agentmodel (Aanbevolen: GPT-3,5)',
    com_endpoint_completion_model: 'Voltooiingsmodel (Aanbevolen: GPT-4)',
    com_endpoint_func_hover: 'Schakel het gebruik van plug-ins als OpenAI-functies in',
    com_endpoint_skip_hover:
      'Schakel het overslaan van de voltooiingsstap in, die het definitieve antwoord en gegenereerde stappen beoordeelt',
    com_endpoint_config_key: 'API-sleutel instellen',
    com_endpoint_config_key_for: 'API-sleutel instellen voor',
    com_endpoint_config_key_name: 'Sleutel',
    com_endpoint_config_value: 'Voer waarde in voor',
    com_endpoint_config_key_name_placeholder: 'Stel eerst API-sleutel in',
    com_endpoint_config_key_encryption: 'Uw sleutel wordt versleuteld en verwijderd op',
    com_endpoint_config_key_expiry: 'het vervaltijdstip',
    com_endpoint_config_key_import_json_key: 'Serviceaccount-JSON-sleutel importeren.',
    com_endpoint_config_key_import_json_key_success:
      'Serviceaccount-JSON-sleutel succesvol geïmporteerd',
    com_endpoint_config_key_import_json_key_invalid:
      'Ongeldige Serviceaccount-JSON-sleutel, heb je het juiste bestand geïmporteerd?',
    com_endpoint_config_key_get_edge_key: 'Om uw toegangstoken voor Bing te krijgen, logt u in op',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Gebruik ontwikkelhulpmiddelen of een extensie terwijl u bent ingelogd op de site om de inhoud van de _U-cookie te kopiëren. Als dit mislukt, volg dan deze',
    com_endpoint_config_key_edge_instructions: 'instructies',
    com_endpoint_config_key_edge_full_key_string:
      'om de volledige cookie-tekenreeksen te verstrekken.',
    com_endpoint_config_key_chatgpt:
      "Om uw toegangstoken voor ChatGPT 'Gratis versie' te krijgen, logt u in op",
    com_endpoint_config_key_chatgpt_then_visit: 'ga vervolgens naar',
    com_endpoint_config_key_chatgpt_copy_token: 'Kopieer toegangstoken.',
    com_endpoint_config_key_google_need_to: 'U moet',
    com_endpoint_config_key_google_vertex_ai: 'Vertex AI inschakelen',
    com_endpoint_config_key_google_vertex_api: 'API op Google Cloud, dan',
    com_endpoint_config_key_google_service_account: 'Maak een serviceaccount',
    com_endpoint_config_key_google_vertex_api_role:
      "Zorg ervoor dat u op 'Maken en doorgaan' klikt om ten minste de 'Vertex AI-gebruiker'-rol te geven. Maak ten slotte een JSON-sleutel aan om hier te importeren.",
    com_nav_auto_scroll: 'Automatisch scrollen naar Nieuwste bij openen',
    com_nav_plugin_store: 'Plugin-opslag',
    com_nav_plugin_search: 'Plugins zoeken',
    com_nav_plugin_auth_error:
      'Er trad een fout op bij het authenticeren van deze plugin. Probeer het opnieuw.',
    com_nav_export_filename: 'Bestandsnaam',
    com_nav_export_filename_placeholder: 'Stel de bestandsnaam in',
    com_nav_export_type: 'Type',
    com_nav_export_include_endpoint_options: 'Eindpuntopties opnemen',
    com_nav_enabled: 'Ingeschakeld',
    com_nav_not_supported: 'Niet ondersteund',
    com_nav_export_all_message_branches: 'Alle berichtvertakkingen exporteren',
    com_nav_export_recursive_or_sequential: 'Recursief of sequentieel?',
    com_nav_export_recursive: 'Recursief',
    com_nav_export_conversation: 'Conversatie exporteren',
    com_nav_export: 'Exporteren',
    com_nav_shared_links: 'Gedeelde links',
    com_nav_shared_links_manage: 'Beheren',
    com_nav_shared_links_empty: 'U hebt geen gedeeld links.',
    com_nav_shared_links_name: 'Naam',
    com_nav_shared_links_date_shared: 'Datum gedeeld',
    com_nav_theme: 'Thema',
    com_nav_theme_system: 'Systeem',
    com_nav_theme_dark: 'Donker',
    com_nav_theme_light: 'Licht',
    com_nav_clear_all_chats: 'Alle chats wissen',
    com_nav_confirm_clear: 'Wissen bevestigen',
    com_nav_close_sidebar: 'Zijbalk sluiten',
    com_nav_open_sidebar: 'Zijbalk openen',
    com_nav_send_message: 'Bericht verzenden',
    com_nav_log_out: 'Uitloggen',
    com_nav_user: 'GEBRUIKER',
    com_nav_archived_chats: 'Gearchiveerde chats',
    com_nav_archived_chats_manage: 'Beheren',
    com_nav_archived_chats_empty: 'Geen gearchiveerde chats',
    com_nav_archive_all_chats: 'Alle chats archiveren',
    com_nav_archive_all: 'Alle archiveren',
    com_nav_archive_name: 'Naam',
    com_nav_archive_created_at: 'Gemaakt op',
    com_nav_clear_conversation: 'Conversaties wissen',
    com_nav_clear_conversation_confirm_message:
      'Weet u zeker dat u alle conversaties wilt wissen? Dit is onomkeerbaar.',
    com_nav_help_faq: 'Help & FAQ',
    com_nav_settings: 'Instellingen',
    com_nav_search_placeholder: 'Berichten doorzoeken',
    com_nav_setting_general: 'Algemeen',
    com_nav_setting_data: 'Gegevensbesturing',
  },
  k1 = {
    com_ui_examples: 'Contoh',
    com_ui_new_chat: 'Chat Baru',
    com_ui_happy_birthday: 'Ini ulang tahun pertamaku!',
    com_ui_example_quantum_computing: 'Jelaskan komputasi kuantum dengan istilah yang sederhana',
    com_ui_example_10_year_old_b_day: 'Ada ide kreatif untuk ulang tahun anak 10 tahun?',
    com_ui_example_http_in_js: 'Bagaimana cara membuat permintaan HTTP dalam Javascript?',
    com_ui_capabilities: 'Kemampuan',
    com_ui_capability_remember: 'Mengingat apa yang pengguna katakan sebelumnya dalam percakapan',
    com_ui_capability_correction: 'Memungkinkan pengguna untuk memberikan koreksi tindak lanjut',
    com_ui_capability_decline_requests: 'Dilatih untuk menolak permintaan yang tidak pantas',
    com_ui_limitations: 'Keterbatasan',
    com_ui_limitation_incorrect_info: 'Mungkin sesekali menghasilkan informasi yang salah',
    com_ui_limitation_harmful_biased:
      'Mungkin sesekali menghasilkan instruksi yang berbahaya atau konten yang bias',
    com_ui_limitation_limited_2021: 'Pengetahuan terbatas tentang dunia dan peristiwa setelah 2021',
    com_ui_experimental: 'Fitur Eksperimental',
    com_ui_input: 'Masukan',
    com_ui_close: 'Tutup',
    com_ui_model: 'Model',
    com_ui_select_model: 'Pilih model',
    com_ui_use_prompt: 'Gunakan petunjuk',
    com_ui_prev: 'Sebelumnya',
    com_ui_next: 'Berikutnya',
    com_ui_stop: 'Berhenti',
    com_ui_prompt_templates: 'Template Petunjuk',
    com_ui_hide_prompt_templates: 'Sembunyikan Template Petunjuk',
    com_ui_showing: 'Menampilkan',
    com_ui_of: 'dari',
    com_ui_entries: 'Entri',
    com_ui_pay_per_call:
      'Semua percakapan AI di satu tempat. Bayar per panggilan dan bukan per bulan',
    com_ui_new_footer: 'Semua percakapan AI di satu tempat.',
    com_ui_enter: 'Masuk',
    com_ui_submit: 'Kirim',
    com_ui_upload_success: 'Berhasil mengunggah file',
    com_ui_upload_error: 'Ada kesalahan saat mengunggah file Anda',
    com_ui_upload_invalid:
      'File tidak valid untuk diunggah. Harus berupa gambar yang tidak melebihi 2 MB',
    com_ui_cancel: 'Batal',
    com_ui_save: 'Simpan',
    com_ui_save_submit: 'Simpan & Kirim',
    com_user_message: 'Kamu',
    com_ui_copy_to_clipboard: 'Salin ke papan klip',
    com_ui_copied_to_clipboard: 'Disalin ke papan klip',
    com_ui_regenerate: 'Regenerasi',
    com_ui_continue: 'Lanjutkan',
    com_ui_edit: 'Edit',
    com_ui_success: 'Berhasil',
    com_ui_all: 'semua',
    com_ui_clear: 'Bersihkan',
    com_ui_revoke: 'Cabut',
    com_ui_revoke_info: 'Cabut semua kredensial yang diberikan pengguna',
    com_ui_import_conversation: 'Impor',
    com_ui_import_conversation_info: 'Impor percakapan dari file JSON',
    com_ui_import_conversation_success: 'Percakapan berhasil diimpor',
    com_ui_import_conversation_error: 'Terjadi kesalahan saat mengimpor percakapan Anda',
    com_ui_confirm_action: 'Konfirmasi Aksi',
    com_ui_chats: 'chat',
    com_ui_share: 'Bagikan',
    com_ui_copy_link: 'Salin tautan',
    com_ui_update_link: 'Perbarui tautan',
    com_ui_create_link: 'Buat tautan',
    com_ui_share_link_to_chat: 'Bagikan tautan ke chat',
    com_ui_share_error: 'Terjadi kesalahan saat membagikan tautan chat',
    com_ui_share_create_message:
      'Nama Anda dan pesan apa pun yang Anda tambahkan setelah berbagi tetap pribadi.',
    com_ui_share_created_message:
      'Tautan berbagi ke chat Anda telah dibuat. Kelola chat yang pernah dibagikan kapan saja melalui Pengaturan.',
    com_ui_share_update_message:
      'Nama Anda, petunjuk khusus, dan pesan apa pun yang Anda tambahkan setelah berbagi tetap pribadi.',
    com_ui_share_updated_message:
      'Tautan berbagi ke chat Anda telah diperbarui. Kelola chat yang pernah dibagikan kapan saja melalui Pengaturan.',
    com_ui_shared_link_not_found: 'Tautan berbagi tidak ditemukan',
    com_ui_delete: 'Hapus',
    com_ui_delete_conversation: 'Hapus chat?',
    com_ui_delete_conversation_confirm: 'Ini akan menghapus',
    com_ui_rename: 'Renombrar',
    com_ui_archive: 'Arsip',
    com_ui_archive_error: 'Gagal mengarsipkan percakapan',
    com_ui_unarchive: 'Buka Arsip',
    com_ui_unarchive_error: 'Gagal membuka arsip',
    com_ui_more_options: 'Lebih',
    com_ui_preview: 'Pratinjau',
    com_ui_upload: 'Unggah',
    com_ui_connect: 'Hubungkan',
    com_auth_error_login:
      'Tidak dapat masuk dengan informasi yang diberikan. Silakan periksa kredensial Anda dan coba lagi.',
    com_auth_error_login_rl:
      'Terlalu banyak upaya masuk dalam waktu singkat. Silakan coba lagi nanti.',
    com_auth_error_login_ban: 'Akun Anda telah dilarang sementara karena pelanggaran layanan kami.',
    com_auth_error_login_server:
      'Ada kesalahan server internal. Harap tunggu beberapa saat dan coba lagi.',
    com_auth_no_account: 'Tidak memiliki akun?',
    com_auth_sign_up: 'Daftar',
    com_auth_sign_in: 'Masuk',
    com_auth_google_login: 'Masuk dengan Google',
    com_auth_facebook_login: 'Masuk dengan Facebook',
    com_auth_github_login: 'Masuk dengan Github',
    com_auth_discord_login: 'Masuk dengan Discord',
    com_auth_email: 'Email',
    com_auth_email_required: 'Email diperlukan',
    com_auth_email_min_length: 'Email harus setidaknya 6 karakter',
    com_auth_email_max_length: 'Email tidak boleh lebih dari 120 karakter',
    com_auth_email_pattern: 'Anda harus memasukkan alamat email yang valid',
    com_auth_email_address: 'Alamat email',
    com_auth_password: 'Kata sandi',
    com_auth_password_required: 'Kata sandi diperlukan',
    com_auth_password_min_length: 'Kata sandi harus setidaknya 8 karakter',
    com_auth_password_max_length: 'Kata sandi harus kurang dari 128 karakter',
    com_auth_password_forgot: 'Lupa Kata Sandi?',
    com_auth_password_confirm: 'Konfirmasi kata sandi',
    com_auth_password_not_match: 'Kata sandi tidak cocok',
    com_auth_continue: 'Lanjutkan',
    com_auth_create_account: 'Buat akun Anda',
    com_auth_error_create: 'Ada kesalahan saat mencoba mendaftarkan akun Anda. Silakan coba lagi.',
    com_auth_full_name: 'Nama lengkap',
    com_auth_name_required: 'Nama diperlukan',
    com_auth_name_min_length: 'Nama harus setidaknya 3 karakter',
    com_auth_name_max_length: 'Nama harus kurang dari 80 karakter',
    com_auth_username: 'Nama pengguna (opsional)',
    com_auth_username_required: 'Nama pengguna diperlukan',
    com_auth_username_min_length: 'Nama pengguna harus setidaknya 2 karakter',
    com_auth_username_max_length: 'Nama pengguna harus kurang dari 20 karakter',
    com_auth_already_have_account: 'Sudah memiliki akun?',
    com_auth_login: 'Masuk',
    com_auth_reset_password: 'Atur ulang kata sandi Anda',
    com_auth_click: 'Klik',
    com_auth_here: 'DI SINI',
    com_auth_to_reset_your_password: 'untuk mengatur ulang kata sandi Anda.',
    com_auth_reset_password_link_sent: 'Email Terkirim',
    com_auth_reset_password_email_sent:
      'Email telah dikirim kepada Anda dengan instruksi lebih lanjut untuk mengatur ulang kata sandi Anda.',
    com_auth_error_reset_password:
      'Ada masalah saat mengatur ulang kata sandi Anda. Tidak ada pengguna yang ditemukan dengan alamat email yang diberikan. Silakan coba lagi.',
    com_auth_reset_password_success: 'Berhasil Mengatur Ulang Kata Sandi',
    com_auth_login_with_new_password: 'Anda sekarang dapat masuk dengan kata sandi baru Anda.',
    com_auth_error_invalid_reset_token: 'Token pengaturan ulang kata sandi ini tidak lagi valid.',
    com_auth_click_here: 'Klik di sini',
    com_auth_to_try_again: 'untuk mencoba lagi.',
    com_auth_submit_registration: 'Kirim pendaftaran',
    com_auth_welcome_back: 'Selamat datang kembali',
    com_endpoint_open_menu: 'Buka Menu',
    com_endpoint_bing_enable_sydney: 'Aktifkan Sydney',
    com_endpoint_bing_to_enable_sydney: 'Untuk mengaktifkan Sydney',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      "Bing dapat menggunakan hingga 7k token untuk 'konteks', yang dapat dirujuk untuk percakapan. Batas spesifik tidak diketahui tetapi mungkin menemui kesalahan melebihi 7k token",
    com_endpoint_bing_system_message_placeholder:
      "PERINGATAN: Penyalahgunaan fitur ini dapat membuat Anda DILARANG menggunakan Bing! Klik pada 'Pesan Sistem' untuk instruksi lengkap dan pesan default jika diabaikan, yang merupakan preset 'Sydney' yang dianggap aman.",
    com_endpoint_system_message: 'Pesan Sistem',
    com_endpoint_message: 'Pesan',
    com_endpoint_message_not_appendable: 'Edit pesan Anda atau Regenerasi.',
    com_endpoint_default_blank: 'default: kosong',
    com_endpoint_default_false: 'default: salah',
    com_endpoint_default_creative: 'default: kreatif',
    com_endpoint_default_empty: 'default: kosong',
    com_endpoint_default_with_num: 'default: {0}',
    com_endpoint_context: 'Konteks',
    com_endpoint_tone_style: 'Gaya Nada',
    com_endpoint_token_count: 'Jumlah Token',
    com_endpoint_output: 'Output',
    com_endpoint_google_temp:
      'Nilai yang lebih tinggi = lebih acak, sedangkan nilai yang lebih rendah = lebih fokus dan deterministik. Kami merekomendasikan untuk mengubah ini atau Top P tetapi tidak keduanya.',
    com_endpoint_google_topp:
      'Top-p mengubah cara model memilih token untuk output. Token dipilih dari yang paling mungkin (lihat parameter topK) hingga yang paling tidak mungkin sampai jumlah probabilitas mereka sama dengan nilai top-p.',
    com_endpoint_google_topk:
      'Top-k mengubah cara model memilih token untuk output. Top-k 1 berarti token yang dipilih adalah yang paling mungkin di antara semua token dalam kosakata model (juga disebut decoding serakah), sedangkan top-k 3 berarti token berikutnya dipilih dari antara 3 token yang paling mungkin (menggunakan temperatur).',
    com_endpoint_google_maxoutputtokens:
      'Jumlah maksimum token yang dapat dihasilkan dalam respons. Tentukan nilai yang lebih rendah untuk respons yang lebih pendek dan nilai yang lebih tinggi untuk respons yang lebih panjang.',
    com_endpoint_google_custom_name_placeholder: 'Tetapkan nama kustom untuk Google',
    com_endpoint_prompt_prefix_placeholder:
      'Tetapkan instruksi kustom atau konteks. Diabaikan jika kosong.',
    com_endpoint_custom_name: 'Nama Kustom',
    com_endpoint_prompt_prefix: 'Awalan Prompt',
    com_endpoint_temperature: 'Temperatur',
    com_endpoint_default: 'default',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'Token Output Maks',
    com_endpoint_openai_temp:
      'Nilai yang lebih tinggi = lebih acak, sedangkan nilai yang lebih rendah = lebih fokus dan deterministik. Kami merekomendasikan untuk mengubah ini atau Top P tetapi tidak keduanya.',
    com_endpoint_openai_max:
      'Token maksimum yang akan dihasilkan. Panjang total token masukan dan token yang dihasilkan dibatasi oleh panjang konteks model.',
    com_endpoint_openai_topp:
      'Sebuah alternatif untuk pengambilan sampel dengan suhu, disebut pengambilan sampel inti, di mana model mempertimbangkan hasil dari token dengan massa probabilitas top_p. Jadi 0,1 berarti hanya token yang mencakup 10% massa probabilitas teratas yang dipertimbangkan. Kami merekomendasikan untuk mengubah ini atau suhu tetapi tidak keduanya.',
    com_endpoint_openai_freq:
      'Angka antara -2,0 dan 2,0. Nilai positif menghukum token baru berdasarkan frekuensi mereka yang ada dalam teks sejauh ini, mengurangi kemungkinan model untuk mengulangi baris yang sama secara harfiah.',
    com_endpoint_openai_pres:
      'Angka antara -2,0 dan 2,0. Nilai positif menghukum token baru berdasarkan apakah mereka muncul dalam teks sejauh ini, meningkatkan kemungkinan model untuk berbicara tentang topik baru.',
    com_endpoint_openai_resend:
      'Kirim ulang semua gambar yang sebelumnya dilampirkan. Catatan: ini dapat meningkatkan biaya token secara signifikan dan Anda mungkin mengalami kesalahan dengan banyak lampiran gambar.',
    com_endpoint_openai_detail:
      'Resolusi untuk permintaan Vision. "Rendah" lebih murah dan lebih cepat, "Tinggi" lebih detail dan mahal, dan "Otomatis" akan secara otomatis memilih antara keduanya berdasarkan resolusi gambar.',
    com_endpoint_openai_custom_name_placeholder: 'Tetapkan nama kustom untuk ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'Tetapkan instruksi kustom untuk dimasukkan dalam Pesan Sistem. Default: tidak ada',
    com_endpoint_anthropic_temp:
      'Berkisar dari 0 hingga 1. Gunakan temp yang lebih dekat ke 0 untuk analitis / pilihan ganda, dan lebih dekat ke 1 untuk tugas kreatif dan generatif. Kami merekomendasikan untuk mengubah ini atau Top P tetapi tidak keduanya.',
    com_endpoint_anthropic_topp:
      'Top-p mengubah cara model memilih token untuk output. Token dipilih dari yang paling mungkin (lihat parameter topK) hingga yang paling tidak mungkin sampai jumlah probabilitas mereka sama dengan nilai top-p.',
    com_endpoint_anthropic_topk:
      'Top-k mengubah cara model memilih token untuk output. Top-k 1 berarti token yang dipilih adalah yang paling mungkin di antara semua token dalam kosakata model (juga disebut decoding serakah), sedangkan top-k 3 berarti token berikutnya dipilih dari antara 3 token yang paling mungkin (menggunakan suhu).',
    com_endpoint_anthropic_maxoutputtokens:
      'Jumlah maksimum token yang dapat dihasilkan dalam respons. Tentukan nilai yang lebih rendah untuk respons yang lebih pendek dan nilai yang lebih tinggi untuk respons yang lebih panjang.',
    com_endpoint_anthropic_custom_name_placeholder: 'Tetapkan nama kustom untuk Anthropic',
    com_endpoint_frequency_penalty: 'Penalti Frekuensi',
    com_endpoint_presence_penalty: 'Penalti Kehadiran',
    com_endpoint_plug_use_functions: 'Gunakan Fungsi',
    com_endpoint_plug_resend_images: 'Kirim Ulang Gambar',
    com_endpoint_plug_image_detail: 'Rincian Gambar',
    com_endpoint_plug_skip_completion: 'Lewati Penyelesaian',
    com_endpoint_disabled_with_tools: 'dinonaktifkan dengan alat',
    com_endpoint_disabled_with_tools_placeholder: 'Dinonaktifkan dengan Alat yang Dipilih',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'Tetapkan instruksi kustom untuk dimasukkan dalam Pesan Sistem. Default: tidak ada',
    com_endpoint_import: 'Impor',
    com_endpoint_set_custom_name: 'Tetapkan nama kustom, jika Anda dapat menemukan preset ini',
    com_endpoint_preset_delete_confirm: 'Anda yakin ingin menghapus preset ini?',
    com_endpoint_preset_clear_all_confirm: 'Anda yakin ingin menghapus semua preset Anda?',
    com_endpoint_preset_import: 'Preset Diimpor!',
    com_endpoint_preset_import_error:
      'Ada kesalahan saat mengimpor preset Anda. Silakan coba lagi.',
    com_endpoint_preset_save_error: 'Ada kesalahan saat menyimpan preset Anda. Silakan coba lagi.',
    com_endpoint_preset_delete_error:
      'Ada kesalahan saat menghapus preset Anda. Silakan coba lagi.',
    com_endpoint_preset_default_removed: 'tidak lagi menjadi preset default.',
    com_endpoint_preset_default_item: 'Default:',
    com_endpoint_preset_default_none: 'Tidak ada preset default yang aktif.',
    com_endpoint_preset_title: 'Preset',
    com_endpoint_preset_saved: 'Tersimpan!',
    com_endpoint_preset_default: 'sekarang menjadi preset default.',
    com_endpoint_preset: 'preset',
    com_endpoint_presets: 'presets',
    com_endpoint_preset_selected: 'Preset Aktif!',
    com_endpoint_preset_selected_title: 'Aktif!',
    com_endpoint_preset_name: 'Nama Preset',
    com_endpoint_new_topic: 'Topik Baru',
    com_endpoint: 'Endpoint',
    com_endpoint_hide: 'Sembunyikan',
    com_endpoint_show: 'Tampilkan',
    com_endpoint_examples: ' Preset',
    com_endpoint_completion: 'Penyelesaian',
    com_endpoint_agent: 'Agen',
    com_endpoint_show_what_settings: 'Tampilkan {0} Pengaturan',
    com_endpoint_save: 'Simpan',
    com_endpoint_export: 'Ekspor',
    com_endpoint_save_as_preset: 'Simpan Sebagai Preset',
    com_endpoint_presets_clear_warning:
      'Anda yakin ingin menghapus semua preset? Ini tidak dapat dibatalkan.',
    com_endpoint_not_implemented: 'Belum diimplementasikan',
    com_endpoint_no_presets: 'Belum ada preset, gunakan tombol pengaturan untuk membuat satu',
    com_endpoint_not_available: 'Endpoint tidak tersedia',
    com_endpoint_view_options: 'Lihat Opsi',
    com_endpoint_save_convo_as_preset: 'Simpan Percakapan sebagai Preset',
    com_endpoint_my_preset: 'Preset Saya',
    com_endpoint_agent_model: 'Model Agen (Direkomendasikan: GPT-3.5)',
    com_endpoint_completion_model: 'Model Penyelesaian (Direkomendasikan: GPT-4)',
    com_endpoint_func_hover: 'Aktifkan penggunaan Plugin sebagai Fungsi OpenAI',
    com_endpoint_skip_hover:
      'Aktifkan langkah penyelesaian yang dilewati, yang meninjau jawaban akhir dan langkah yang dihasilkan',
    com_endpoint_config_key: 'Atur Kunci API',
    com_endpoint_config_placeholder: 'Atur Kunci Anda di menu Header untuk mengobrol.',
    com_endpoint_config_key_for: 'Atur Kunci API untuk',
    com_endpoint_config_key_name: 'Kunci',
    com_endpoint_config_value: 'Masukkan nilai untuk',
    com_endpoint_config_key_name_placeholder: 'Atur kunci API terlebih dahulu',
    com_endpoint_config_key_encryption: 'Kunci Anda akan dienkripsi dan dihapus pada',
    com_endpoint_config_key_expiry: 'waktu kedaluwarsa',
    com_endpoint_config_click_here: 'Klik Di Sini',
    com_endpoint_config_google_service_key: 'Kunci Akun Layanan Google',
    com_endpoint_config_google_cloud_platform: '(dari Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'Kunci API Google',
    com_endpoint_config_google_gemini_api: '(Gemini API)',
    com_endpoint_config_google_api_info:
      'Untuk mendapatkan kunci API Bahasa Generatif Anda (untuk Gemini),',
    com_endpoint_config_key_import_json_key: 'Impor Kunci JSON Akun Layanan.',
    com_endpoint_config_key_import_json_key_success: 'Berhasil Mengimpor Kunci JSON Akun Layanan',
    com_endpoint_config_key_import_json_key_invalid:
      'Kunci JSON Akun Layanan Tidak Valid, Apakah Anda mengimpor file yang benar?',
    com_endpoint_config_key_get_edge_key: 'Untuk mendapatkan token akses Anda untuk Bing, masuk ke',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'Gunakan alat pengembang atau ekstensi saat masuk ke situs untuk menyalin konten dari cookie _U. Jika ini gagal, ikuti ini',
    com_endpoint_config_key_edge_instructions: 'instruksi',
    com_endpoint_config_key_edge_full_key_string: 'untuk memberikan string cookie lengkap.',
    com_endpoint_config_key_chatgpt:
      "Untuk mendapatkan token akses Anda Untuk ChatGPT 'Versi Gratis', masuk ke",
    com_endpoint_config_key_chatgpt_then_visit: 'kemudian kunjungi',
    com_endpoint_config_key_chatgpt_copy_token: 'Salin token akses.',
    com_endpoint_config_key_google_need_to: 'Anda perlu',
    com_endpoint_config_key_google_vertex_ai: 'Aktifkan Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API di Google Cloud, kemudian',
    com_endpoint_config_key_google_service_account: 'Buat Akun Layanan',
    com_endpoint_config_key_google_vertex_api_role:
      "Pastikan untuk mengklik 'Buat dan Lanjutkan' untuk memberikan setidaknya peran 'Pengguna Vertex AI'. Terakhir, buat kunci JSON untuk diimpor di sini.",
    com_nav_welcome_message: 'Bagaimana saya bisa membantu Anda hari ini?',
    com_nav_auto_scroll: 'Otomatis gulir ke Baru saat Buka',
    com_nav_modular_chat: 'Aktifkan penggantian Endpoint di tengah percakapan',
    com_nav_latex_parsing: 'Parsing LaTeX dalam pesan (dapat memengaruhi kinerja)',
    com_nav_profile_picture: 'Foto Profil',
    com_nav_change_picture: 'Ubah foto',
    com_nav_plugin_store: 'Toko plugin',
    com_show_agent_settings: 'Tampilkan Pengaturan Agen',
    com_show_completion_settings: 'Tampilkan Pengaturan Penyelesaian',
    com_hide_examples: 'Sembunyikan Contoh',
    com_show_examples: 'Tampilkan Contoh',
    com_nav_plugin_search: 'Cari plugin',
    com_nav_plugin_auth_error:
      'Ada kesalahan saat mencoba mengautentikasi plugin ini. Silakan coba lagi.',
    com_nav_export_filename: 'Nama File',
    com_nav_export_filename_placeholder: 'Atur nama file',
    com_nav_export_type: 'Tipe',
    com_nav_export_include_endpoint_options: 'Sertakan opsi endpoint',
    com_nav_enabled: 'Diaktifkan',
    com_nav_not_supported: 'Tidak Didukung',
    com_nav_export_all_message_branches: 'Ekspor semua cabang pesan',
    com_nav_export_recursive_or_sequential: 'Rekursif atau berurutan?',
    com_nav_export_recursive: 'Rekursif',
    com_nav_export_conversation: 'Ekspor percakapan',
    com_nav_export: 'Ekspor',
    com_nav_shared_links: 'Link berbagi',
    com_nav_shared_links_manage: 'Pengeluaran',
    com_nav_shared_links_empty: 'Anda tidak memiliki link berbagi.',
    com_nav_shared_links_name: 'Nama',
    com_nav_shared_links_date_shared: 'Tanggal berbagi',
    com_nav_theme: 'Tema',
    com_nav_theme_system: 'Sistem',
    com_nav_theme_dark: 'Gelap',
    com_nav_theme_light: 'Terang',
    com_nav_user_name_display: 'Tampilkan nama pengguna dalam pesan',
    com_nav_save_drafts: 'Simpan draft',
    com_nav_clear_all_chats: 'Hapus semua obrolan',
    com_nav_confirm_clear: 'Konfirmasi Hapus',
    com_nav_close_sidebar: 'Tutup sidebar',
    com_nav_open_sidebar: 'Buka sidebar',
    com_nav_send_message: 'Kirim pesan',
    com_nav_log_out: 'Keluar',
    com_nav_user: 'PENGGUNA',
    com_nav_archived_chats: 'Percakapan Arsip',
    com_nav_archived_chats_manage: 'Pengelolaan',
    com_nav_archived_chats_empty: 'Tidak ada percakapan yang diarsipkan.',
    com_nav_archive_all_chats: 'Arsipkan semua percakapan',
    com_nav_archive_all: 'Arsipkan semua',
    com_nav_archive_name: 'Nama',
    com_nav_archive_created_at: 'TanggalDibuat',
    com_nav_clear_conversation: 'Hapus percakapan',
    com_nav_clear_conversation_confirm_message:
      'Anda yakin ingin menghapus semua percakapan? Ini tidak dapat dibatalkan.',
    com_nav_help_faq: 'Bantuan & FAQ',
    com_nav_settings: 'Pengaturan',
    com_nav_search_placeholder: 'Cari pesan',
    com_nav_setting_general: 'Umum',
    com_nav_setting_beta: 'Fitur beta',
    com_nav_setting_data: 'Kontrol data',
    com_nav_setting_account: 'Akun',
    com_nav_language: 'Bahasa',
    com_nav_lang_auto: 'Deteksi otomatis',
    com_nav_lang_english: 'English',
    com_nav_lang_chinese: '中文',
    com_nav_lang_german: 'Deutsch',
    com_nav_lang_spanish: 'Español',
    com_nav_lang_french: 'Français ',
    com_nav_lang_italian: 'Italiano',
    com_nav_lang_polish: 'Polski',
    com_nav_lang_brazilian_portuguese: 'Português Brasileiro',
    com_nav_lang_russian: 'Русский',
    com_nav_lang_japanese: '日本語',
    com_nav_lang_swedish: 'Svenska',
    com_nav_lang_korean: '한국어',
    com_nav_lang_vietnamese: 'Tiếng Việt',
    com_nav_lang_traditionalchinese: '繁體中文',
    com_nav_lang_arabic: 'العربية',
    com_nav_lang_turkish: 'Türkçe',
    com_nav_lang_dutch: 'Nederlands',
    com_nav_lang_indonesia: 'Indonesia',
  },
  w1 = {
    com_sidepanel_select_assistant: 'בחר סייען',
    com_sidepanel_assistant_builder: 'בניית סייען',
    com_sidepanel_attach_files: 'צרף קבצים',
    com_assistants_knowledge: 'ידע',
    com_assistants_knowledge_info:
      'אם אתה מעלה קבצים תחת ידע, שיחות עם ה-סייען שלך עשויות לכלול תוכן מהקובץ.',
    com_assistants_knowledge_disabled:
      'יש ליצור סייען, ויש להפעיל ולשמור את מתורגמן קוד או אחזור לפני העלאת קבצים כ-ידע.',
    com_assistants_code_interpreter: 'מתורגמן קוד',
    com_assistants_code_interpreter_files: 'הקבצים הבאים זמינים רק עבור מתורגמן קוד:',
    com_assistants_retrieval: 'אחזור',
    com_assistants_tools_section: 'פעולות, כלים',
    com_assistants_add_tools: 'הוסף כלים',
    com_assistants_add_actions: 'הוסף פעולות',
    com_assistants_name_placeholder: 'אופציונלי: שם הסייען',
    com_assistants_instructions_placeholder: 'הוראות המערכת שהסייען משתמש בהן',
    com_assistants_description_placeholder: 'אופציונלי: תאר את ה-סייען שלך כאן',
    com_assistants_actions_disabled: 'עליך ליצור סייען לפני הוספת פעולות.',
    com_assistants_update_success: 'עודכן בהצלחה',
    com_assistants_update_error: 'אירעה שגיאה בעדכון הסייען שלך.',
    com_assistants_create_success: 'נוצר בהצלחה',
    com_assistants_create_error: 'אירעה שגיאה ביצירת הסייען שלך.',
    com_ui_attach_error_type: 'סוג קובץ לא נתמך עבור נקודת קצה:',
    com_ui_attach_error_size: 'חרגת ממגבלת גודל הקובץ עבור נקודת הקצה:',
    com_ui_attach_error: 'לא ניתן לצרף קובץ. צור או בחר שיחה, או נסה לרענן את הדף.',
    com_ui_examples: 'דוגמאות',
    com_ui_new_chat: 'שיחה חדשה',
    com_ui_happy_birthday: 'זה יום ההולדת הראשון שלי!',
    com_ui_example_quantum_computing: 'הסבר מחשוב קוונטי במונחים פשוטים',
    com_ui_example_10_year_old_b_day: 'יש לך רעיונות יצירתיים ליום הולדת של ילד בן 10?',
    com_ui_example_http_in_js: 'כיצד אוכל לבצע בקשת HTTP ב-Javascript?',
    com_ui_capabilities: 'יכולות',
    com_ui_capability_remember: 'זוכר את מה שהמשתמש אמר קודם בשיחה',
    com_ui_capability_correction: 'מאפשר למשתמש לספק תיקוני המשך',
    com_ui_capability_decline_requests: 'אומן לדחות בקשות בלתי הולמות',
    com_ui_limitations: 'הגבלות',
    com_ui_limitation_incorrect_info: 'עשוי מדי פעם ליצור מידע שגוי',
    com_ui_limitation_harmful_biased: 'עלול לייצר מדי פעם הוראות מזיקות או תוכן מוטה',
    com_ui_limitation_limited_2021: 'ידע מוגבל על העולם והאירועים אחרי 2021',
    com_ui_experimental: 'מאפיינים ניסיוניים',
    com_ui_name: 'שם',
    com_ui_instructions: 'הוראות',
    com_ui_description: 'תיאור',
    com_ui_error: 'שגיאה',
    com_ui_select: 'בחר',
    com_ui_input: 'קלט',
    com_ui_close: 'סגור',
    com_ui_model: 'דגם',
    com_ui_select_model: 'בחר דגם',
    com_ui_use_prompt: 'השתמש בהודעת',
    com_ui_prev: 'הקודם',
    com_ui_next: 'הבא',
    com_ui_stop: 'עצור',
    com_ui_upload_files: 'העלה קבצים',
    com_ui_prompt_templates: 'תבניות בקשה',
    com_ui_hide_prompt_templates: 'הסתר תבניות הנחיות',
    com_ui_showing: 'מציג',
    com_ui_of: 'של',
    com_ui_entries: 'ערכים',
    com_ui_pay_per_call: 'כל שיחות הבינה המלאכותית במקום אחד. שלם לפי שיחה ולא לחודש',
    com_ui_new_footer: 'כל שיחות הבינה המלאכותית במקום אחד.',
    com_ui_enter: 'Enter',
    com_ui_submit: 'שלח',
    com_ui_upload_success: 'קובץ שהועלה בהצלחה',
    com_ui_upload_error: 'אירעה שגיאה בהעלאת הקובץ שלך',
    com_ui_upload_invalid: 'קובץ לא חוקי להעלאה. חייבת להיות תמונה שגודלה לא עולה על 2 MB',
    com_ui_cancel: 'בטל',
    com_ui_save: 'שמור',
    com_ui_save_submit: 'שמור ושלח',
    com_user_message: 'אתה',
    com_ui_copy_to_clipboard: 'העתק ללוח',
    com_ui_copied_to_clipboard: 'הועתק ללוח',
    com_ui_regenerate: 'לחדש',
    com_ui_continue: 'המשך',
    com_ui_edit: 'ערוך',
    com_ui_success: 'הצלחה',
    com_ui_all: 'הכל',
    com_ui_clear: 'נקה',
    com_ui_revoke: 'בטל',
    com_ui_revoke_info: 'בטל את כל האישורים שסופקו על ידי המשתמש',
    com_ui_import_conversation: 'יבוא',
    com_ui_import_conversation_info: 'ייבא שיחות מקובץ JSON',
    com_ui_import_conversation_success: 'השיחות יובאו בהצלחה',
    com_ui_import_conversation_error: 'אירעה שגיאה בעת ייבוא השיחות שלך',
    com_ui_confirm_action: 'אשר פעולה',
    com_ui_chats: 'צאטים',
    com_ui_assistant: 'סייען',
    com_ui_delete: 'מחק',
    com_ui_create: 'צור',
    com_ui_share: 'שתף',
    com_ui_copy_link: 'העתק קישור',
    com_ui_update_link: 'עדכן קישור',
    com_ui_create_link: 'צור קישור',
    com_ui_share_link_to_chat: "שתף קישור בצ'אט",
    com_ui_share_error: "אירעה שגיאה בעת שיתוף קישור הצ'אט",
    com_ui_share_create_message: 'שמך וכל הודעה שתוסיף לאחר השיתוף יישארו פרטיים.',
    com_ui_share_created_message:
      'A shared link to your chat has been created. Manage previously shared chats at any time via Settings.',
    com_ui_share_update_message:
      'Your name, custom instructions, and any messages you add after sharing stay private.',
    com_ui_share_updated_message:
      'A shared link to your chat has been updated. Manage previously shared chats at any time via Settings.',
    com_ui_shared_link_not_found: 'Shared link not found',
    com_ui_delete_conversation: 'למחוק את השיחה (צאט)?',
    com_ui_delete_conversation_confirm: 'זה ימחק',
    com_ui_delete_assistant_confirm:
      'האם אתה בטוח שאתה רוצה למחוק את הסייען הזה? אי אפשר לבטל את זה.',
    com_ui_rename: 'שם מחדש',
    com_ui_archive: 'ארכיון',
    com_ui_archive_error: 'אירעה שגיאה בארכיון השיחה',
    com_ui_unarchive: 'לארכיון',
    com_ui_unarchive_error: 'אירעה שגיאה בארכיון השיחה',
    com_ui_more_options: 'עוד',
    _ui_preview: 'תצוגה מקדימה',
    com_ui_upload: 'העלה',
    com_ui_connect: 'התחבר',
    com_auth_error_login: 'לא ניתן להתחבר עם המידע שסופק. אנא בדוק את האישורים שלך ונסה שוב.',
    com_auth_error_login_rl: 'יותר מדי ניסיונות כניסה בזמן קצר. בבקשה נסה שוב מאוחר יותר.',
    com_auth_error_login_ban: 'החשבון שלך נחסם באופן זמני עקב הפרות של השירות שלנו.',
    com_auth_error_login_server: 'הייתה שגיאת שרת פנימית. אנא המתן מספר רגעים ונסה שוב.',
    com_auth_no_account: 'אין לך חשבון?',
    com_auth_sign_up: 'הירשם',
    com_auth_sign_in: 'כניסה',
    com_auth_google_login: 'המשך עם Google',
    com_auth_facebook_login: 'המשך עם פייסבוק',
    com_auth_github_login: 'המשך עם Github',
    com_auth_discord_login: 'המשך עם Discord',
    com_auth_email: 'אימייל (דוא"ל)',
    com_auth_email_required: 'נדרש דוא"ל',
    com_auth_email_min_length: 'אימייל (דוא"ל) חייב להיות בן 6 תווים לפחות',
    com_auth_email_max_length: 'אימייל (דוא"ל) לא יכול להיות ארוך מ-120 תווים',
    com_auth_email_pattern: 'עליך להזין כתובת אימייל (דוא"ל) חוקית',
    com_auth_email_address: 'כתובת דואר אלקטרוני',
    com_auth_password: 'סיסמה',
    com_auth_password_required: 'נדרשת סיסמה',
    com_auth_password_min_length: 'הסיסמה חייבת להיות בת 8 תווים לפחות',
    com_auth_password_max_length: 'הסיסמה חייבת להיות פחות מ-128 תווים',
    com_auth_password_forgot: 'שכחת את הסיסמה?',
    com_auth_password_confirm: 'אשר סיסמה',
    com_auth_password_not_match: 'הסיסמאות אינן תואמות',
    com_auth_continue: 'המשך',
    com_auth_create_account: 'צור את החשבון שלך',
    com_auth_error_create: 'אירעה שגיאה בניסיון לרשום את החשבון שלך. בבקשה נסה שוב.',
    com_auth_full_name: 'שם מלא',
    com_auth_name_required: 'נדרש שם',
    com_auth_name_min_length: 'השם חייב להיות לפחות 3 תווים',
    com_auth_name_max_length: 'השם חייב להיות פחות מ-80 תווים',
    com_auth_username: 'שם משתמש (אופציונלי)',
    com_auth_username_required: 'נדרש שם משתמש',
    com_auth_username_min_length: 'שם משתמש חייב להיות לפחות 2 תווים',
    com_auth_username_max_length: 'שם המשתמש חייב להיות פחות מ-20 תווים',
    com_auth_already_have_account: 'כבר יש לך חשבון?',
    com_auth_login: 'התחבר',
    com_auth_reset_password: 'אפס את הסיסמה שלך',
    com_auth_click: 'קליק',
    com_auth_here: 'כאן',
    com_auth_to_reset_your_password: 'כדי לאפס את הסיסמה שלך.',
    com_auth_reset_password_link_sent: 'אימייל (דוא"ל) נשלח',
    com_auth_reset_password_email_sent: 'נשלח אליך הודעת דוא"ל עם הנחיות נוספות לאיפוס הסיסמה שלך.',
    com_auth_error_reset_password:
      'הייתה בעיה באיפוס הסיסמה שלך. לא נמצא משתמש עם כתובת האימייל (דוא"ל) שסופקה. בבקשה נסה שוב.',
    com_auth_reset_password_success: 'איפוס סיסמה הצליח',
    com_auth_login_with_new_password: 'עכשיו אתה יכול להתחבר עם הסיסמה החדשה שלך.',
    com_auth_error_invalid_reset_token: 'אסימון איפוס הסיסמה הזה אינו תקף עוד.',
    com_auth_click_here: 'לחץ כאן',
    com_auth_to_try_again: 'כדי לנסות שוב.',
    com_auth_submit_registration: 'שלח רישום',
    com_auth_welcome_back: 'ברוכים הבאים',
    com_auth_back_to_login: 'חזרה לכניסה',
    com_endpoint_open_menu: 'תפריט פתח',
    com_endpoint_bing_enable_sydney: 'אפשר את סידני',
    com_endpoint_bing_to_enable_sydney: 'כדי לאפשר את סידני',
    com_endpoint_bing_jailbreak: 'Jailbreak',
    com_endpoint_bing_context_placeholder:
      "בינג יכול להשתמש בעד 7,000 אסימונים עבור 'הקשר', שאליהם הוא יכול להתייחס לשיחה. המגבלה הספציפית אינה ידועה אך עשויה להיתקל בשגיאות העולות על 7,000 אסימונים",
    com_endpoint_bing_system_message_placeholder:
      "אזהרה: שימוש לרעה בתכונה זו יכול לגרום לך לאסור להשתמש ב-Bing! לחץ על 'הודעת מערכת' לקבלת הוראות מלאות והודעת ברירת המחדל אם הושמטה, שהיא הקביעה המוגדרת מראש של 'Sydney' שנחשבת בטוחה.",
    com_endpoint_system_message: 'הודעת מערכת',
    com_endpoint_message: 'הודעה',
    com_endpoint_message_not_appendable: 'ערוך את ההודעה שלך או צור מחדש.',
    com_endpoint_default_blank: 'ברירת מחדל: ריק',
    com_endpoint_default_false: 'ברירת מחדל: false',
    com_endpoint_default_creative: 'ברירת מחדל: יצירתי',
    com_endpoint_default_empty: 'ברירת מחדל: ריקה',
    com_endpoint_default_with_num: 'ברירת מחדל: {0}',
    com_endpoint_context: 'הקשר',
    com_endpoint_tone_style: 'סגנון טון',
    com_endpoint_token_count: 'ספירת אסימונים',
    com_endpoint_output: 'פלט',
    com_endpoint_google_temp:
      'ערכים גבוהים יותר = יותר אקראיים, בעוד שערכים נמוכים יותר = יותר ממוקד ודטרמיניסטי. אנו ממליצים לשנות את זה או את Top P אבל לא את שניהם.',
    com_endpoint_google_topp:
      'Top-p משנה את האופן שבו המודל בוחר אסימונים לפלט. אסימונים נבחרים מרוב K (ראה פרמטר topK) ככל הנראה לפחות עד ה-sum של ההסתברויות שלהם שווה לערך ה-p העליון.',
    com_endpoint_google_topk:
      'Top-k משנה את האופן שבו המודל בוחר אסימונים לפלט. Top-k של 1 פירושו שהאסימון שנבחר הוא הסביר ביותר מבין כל האסימונים באוצר המילים של הדגם (נקרא גם פענוח חמדן), בעוד ש-top-k של 3 פירושו שהאסימון הבא נבחר מבין 3 הכי הרבה. אסימונים סבירים (באמצעות טמפרטורה).',
    com_endpoint_google_maxoutputtokens:
      ' המספר המרבי של אסימונים שניתן להפיק בתגובה. ציין ערך נמוך יותר עבור תגובות קצרות יותר וערך גבוה יותר עבור תגובות ארוכות יותר.',
    com_endpoint_google_custom_name_placeholder: 'הגדר שם מותאם אישית עבור Google',
    com_endpoint_prompt_prefix_placeholder: 'הגדר הוראות מותאמות אישית או הקשר. התעלמו אם ריק.',
    com_endpoint_instructions_assistants_placeholder:
      'עובר את הוראות הסייען. זה שימושי לשינוי ההתנהגות על בסיס ריצה.',
    com_endpoint_prompt_prefix_assistants_placeholder:
      'הגדר הוראות נוספות או הקשר על גבי ההנחיות הראשיות של ה-סייען. התעלמו אם ריק.',
    com_endpoint_custom_name: 'שם מותאם אישית',
    com_endpoint_prompt_prefix: 'הוראות מותאמות אישית',
    com_endpoint_prompt_prefix_assistants: 'הוראות נוספות',
    com_endpoint_instructions_assistants: 'עקוף הוראות',
    com_endpoint_temperature: 'טמפרטורה',
    com_endpoint_default: 'default',
    com_endpoint_top_p: 'Top P',
    com_endpoint_top_k: 'Top K',
    com_endpoint_max_output_tokens: 'אסימוני פלט מרבי',
    com_endpoint_openai_temp:
      'ערכים גבוהים יותר = יותר אקראיים, בעוד שערכים נמוכים יותר = יותר ממוקד ודטרמיניסטי. אנו ממליצים לשנות את זה או את Top P אבל לא את שניהם.',
    com_endpoint_openai_max:
      'האסימונים המקסימליים להפיק. האורך הכולל של אסימוני קלט ואסימונים שנוצרו מוגבל על ידי אורך ההקשר של המודל.',
    com_endpoint_openai_topp:
      'חלופה לדגימה עם טמפרטורה, הנקראת דגימת גרעין, שבה המודל מחשיב את תוצאות האסימונים עם מסת ההסתברות top_p. אז 0.1 אומר שרק האסימונים המהווים את מסת ההסתברות העליונה של 10% נחשבים. אנו ממליצים לשנות את זה או את הטמפרטורה אבל לא את שניהם.',
    com_endpoint_openai_freq:
      'מספר בין -2.0 ל-2.0. ערכים חיוביים מענישים אסימונים חדשים בהתבסס על התדירות הקיימת שלהם בטקסט עד כה, ומקטינים את הסבירות של המודל לחזור על אותה שורה מילה במילה.',
    com_endpoint_openai_pres:
      'מספר בין -2.0 ל-2.0. ערכים חיוביים מענישים אסימונים חדשים על סמך האם הם מופיעים בטקסט עד כה, ומגדילים את הסבירות של המודל לדבר על נושאים חדשים.',
    com_endpoint_openai_resend:
      'שלח שוב את כל התמונות שצורפו בעבר. הערה: זה יכול להגדיל משמעותית את עלות האסימונים ואתה עלול להיתקל בשגיאות עם קבצים מצורפים רבים של תמונות.',
    com_endpoint_openai_detail:
      'ההחלטה לבקשות חזון. "נמוך" זול ומהיר יותר, "גבוה" מפורט ויקר יותר, ו"אוטומטי" יבחר אוטומטית בין השניים על סמך רזולוציית התמונה.',
    com_endpoint_openai_custom_name_placeholder: 'הגדר שם מותאם אישית עבור ChatGPT',
    com_endpoint_openai_prompt_prefix_placeholder:
      'הגדר הוראות מותאמות אישית לכלול בהודעת המערכת. ברירת מחדל: אין',
    com_endpoint_anthropic_temp:
      "נע בין 0 ל-1. השתמש בטמפ' הקרובה יותר ל-0 עבור בחירה אנליטית / מרובה, וקרוב יותר ל-1 עבור משימות יצירתיות ויצירתיות. אנו ממליצים לשנות את זה או את Top P אבל לא את שניהם.",
    com_endpoint_anthropic_topp:
      'Top-p משנה את האופן שבו המודל בוחר אסימונים לפלט. אסימונים נבחרים מבין רוב K (ראה פרמטר topK) הסביר לפחות עד שסכום ההסתברויות שלהם שווה לערך העליון-p.',
    com_endpoint_anthropic_topk:
      'Top-k משנה את האופן שבו המודל בוחר אסימונים לפלט. Top-k של 1 פירושו שהאסימון שנבחר הוא הסביר ביותר מבין כל האסימונים באוצר המילים של הדגם (נקרא גם פענוח חמדן), בעוד ש-top-k של 3 פירושו שהאסימון הבא נבחר מבין 3 הכי הרבה. אסימונים סבירים (באמצעות טמפרטורה).',
    com_endpoint_anthropic_maxoutputtokens:
      'מספר האסימונים המרבי שניתן להפיק בתגובה. ציין ערך נמוך יותר עבור תגובות קצרות יותר וערך גבוה יותר עבור תגובות ארוכות יותר.',
    com_endpoint_anthropic_custom_name_placeholder: 'הגדר שם מותאם אישית עבור Anthropic',
    com_endpoint_frequency_penalty: 'עונש תדירות',
    com_endpoint_presence_penalty: 'עונש נוכחות',
    com_endpoint_plug_use_functions: 'השתמש בפונקציות',
    com_endpoint_plug_resend_images: 'שלח שוב תמונות',
    com_endpoint_plug_image_detail: 'פרטי תמונה',
    com_endpoint_plug_skip_completion: 'השלמת דילוג',
    com_endpoint_disabled_with_tools: 'מושבת עם כלים',
    com_endpoint_disabled_with_tools_placeholder: 'מושבת עם הכלים שנבחרו',
    com_endpoint_plug_set_custom_instructions_for_gpt_placeholder:
      'הגדר הוראות מותאמות אישית לכלול בהודעת המערכת. ברירת מחדל: אין',
    com_hedpoint_import: 'ייבוא',
    com_endpoint_set_custom_name: 'הגדר שם מותאם אישית, למקרה שתוכל למצוא את הקביעה המוגדרת מראש',
    com_endpoint_preset_delete_confirm: 'האם אתה בטוח שברצונך למחוק את הקביעה המוגדרת מראש הזו?',
    com_endpoint_preset_clear_all_confirm:
      'האם אתה בטוח שברצונך למחוק את כל הקביעות המוגדרות מראש שלך?',
    com_endpoint_preset_import: 'הגדרה מראש מיובאת!',
    com_endpoint_preset_import_error: 'אירעה שגיאה בייבוא הקביעה המוגדרת מראש שלך. בבקשה נסה שוב.',
    com_endpoint_preset_save_error: 'אירעה שגיאה בשמירת ההגדרה מראש שלך. בבקשה נסה שוב.',
    com_endpoint_preset_delete_error: 'אירעה שגיאה במחיקת הקביעה המוגדרת מראש שלך. בבקשה נסה שוב.',
    com_endpoint_preset_default_removed: 'איננו עוד ברירת המחדל המוגדרת מראש.',
    com_endpoint_preset_default_item: 'ברירת מחדל:',
    com_endpoint_preset_default_none: 'אין ברירת מחדל פעילה.',
    com_endpoint_preset_title: 'הגדרה מראש',
    com_endpoint_preset_saved: 'שמור!',
    com_endpoint_preset_default: 'הוא כעת ברירת המחדל המוגדרת מראש.',
    com_endpoint_preset: 'preset',
    com_endpoint_presets: 'presets',
    com_endpoint_preset_selected: 'הגדרה מראש פעילה!',
    com_endpoint_preset_selected_title: 'פעיל!',
    com_endpoint_preset_name: 'שם מוגדר מראש',
    com_endpoint_new_topic: 'נושא חדש',
    com_endpoint: 'נקודת קצה',
    com_endpoint_hide: 'הסתר',
    com_endpoint_show: 'הצג',
    com_endpoint_examples: 'הגדרות קבועות מראש',
    com_endpoint_completion: 'השלמה',
    com_endpoint_agent: 'סוכן',
    com_endpoint_show_what_settings: 'הצג {0} הגדרות',
    com_endpoint_export: 'ייצוא',
    com_endpoint_assistant: 'סייען',
    com_endpoint_use_active_assistant: 'השתמש ב-סייען פעיל',
    com_endpoint_assistant_model: 'מודל סייען',
    com_endpoint_save_as_preset: 'שמור כ-preset',
    com_endpoint_presets_clear_warning:
      'האם אתה בטוח שאתה רוצה לנקות את כל הקביעות המוגדרות מראש? זה בלתי הפיך.',
    com_endpoint_not_implemented: 'לא מיושם',
    com_endpoint_no_presets: 'אין עדיין הגדרות מוגדרות מראש, השתמש בלחצן ההגדרות כדי ליצור אחת',
    com_endpoint_not_available: 'אין נקודת קצה זמינה',
    com_endpoint_view_options: 'אפשרויות תצוגה',
    com_endpoint_save_convo_as_preset: 'שמור שיחה כקביעה מראש',
    com_endpoint_my_preset: 'ההגדרה המוגדרת מראש שלי',
    com_endpoint_agent_model: 'מודל סוכן (מומלץ: GPT-3.5)',
    com_endpoint_completion_model: 'מודל השלמה (מומלץ: GPT-4)',
    com_endpoint_func_hover: 'אפשר שימוש בפלאגינים כפונקציות OpenAI',
    com_endpoint_skip_hover: 'אפשר דילוג על שלב ההשלמה, הסוקר את התשובה הסופית ואת השלבים שנוצרו',
    com_endpoint_config_key: 'הגדר מפתח API',
    com_endpoint_config_placeholder: 'הגדר את המפתח שלך בתפריט הכותרת לצאט.',
    com_endpoint_config_key_for: 'הגדר מפתח API עבור',
    com_endpoint_config_key_name: 'מפתח',
    com_endpoint_config_value: 'הזן ערך עבור',
    com_endpoint_config_key_name_placeholder: 'הגדר תחילה מפתח API',
    com_endpoint_config_key_encryption: 'המפתח שלך יוצפן וימחק ב',
    com_endpoint_config_key_expiry: 'זמן התפוגה',
    com_endpoint_config_click_here: 'לחץ כאן',
    com_endpoint_config_google_service_key: 'מפתח חשבון שירות Google',
    com_endpoint_config_google_cloud_platform: '(מ-Google Cloud Platform)',
    com_endpoint_config_google_api_key: 'מפתח Google API',
    com_endpoint_config_google_gemini_api: '(Gemini API)',
    com_endpoint_config_google_api_info:
      'כדי לקבל את מפתח ה-API של Generative Language (עבור תאומים),',
    com_endpoint_config_key_import_json_key: 'ייבוא מפתח JSON של חשבון שירות.',
    com_endpoint_config_key_import_json_key_success: 'מפתח JSON של חשבון שירות יובא בהצלחה',
    com_endpoint_config_key_import_json_key_invalid:
      'מפתח JSON חשבון שירות לא חוקי, האם ייבאת את הקובץ הנכון?',
    com_endpoint_config_key_get_edge_key: 'כדי לקבל את אסימון הגישה שלך ל-Bing, היכנס אל',
    com_endpoint_config_key_get_edge_key_dev_tool:
      'השתמש בכלי מפתחים או בתוסף בזמן שאתה מחובר לאתר כדי להעתיק את התוכן של קובץ ה-cookie _U. אם זה נכשל, עקוב אחר אלה',
    com_endpoint_config_key_edge_instructions: 'הוראות',
    com_endpoint_config_key_edge_full_key_string: 'כדי לספק את מחרוזות העוגיות המלאות.',
    com_endpoint_config_key_chatgpt:
      "כדי לקבל את אסימון הגישה שלך ל-ChatGPT 'גרסה חינמית', היכנס אל",
    com_endpoint_config_key_chatgpt_then_visit: 'ואז בקר',
    com_endpoint_config_key_chatgpt_copy_token: 'העתק אסימון גישה.',
    com_endpoint_config_key_google_need_to: 'אתה צריך',
    com_endpoint_config_key_google_vertex_ai: 'הפעל את Vertex AI',
    com_endpoint_config_key_google_vertex_api: 'API ב-Google Cloud, אז',
    com_endpoint_config_key_google_service_account: 'צור חשבון שירות',
    com_endpoint_config_key_google_vertex_api_role:
      "הקפד ללחוץ על 'צור והמשך' כדי לתת לפחות את התפקיד 'Vertex AI User'. לבסוף, צור מפתח JSON לייבא לכאן.",
    com_nav_welcome_message: 'איך אני יכול לעזור לך היום?',
    com_nav_auto_scroll: 'Auto-s גלול אל הכי חדש בפתיחה',
    com_nav_hide_panel: 'הסתר לוח הצד הימני ביותר',
    com_nav_modular_chat: 'אפשר החלפת נקודות קצה באמצע שיחה',
    com_nav_latex_parsing: 'ניתוח LaTeX בהודעות (עשוי להשפיע על הביצועים)',
    com_nav_profile_picture: 'תמונת פרופיל',
    com_nav_change_picture: 'שנה תמונה',
    com_nav_plugin_store: 'חנות פלאגין',
    com_nav_plugin_install: 'התקן',
    com_nav_plugin_uninstall: 'הסר התקנה',
    com_nav_tool_add: 'הוסף',
    com_nav_tool_remove: 'הסר',
    com_nav_tool_dialog: 'כלי סייען',
    com_nav_tool_dialog_description: 'יש לשמור את האסיסטנט כדי להמשיך בבחירת הכלים.',
    com_show_agent_settings: 'הצג הגדרות סוכן',
    com_show_completion_settings: 'הצג הגדרות השלמה',
    com_hide_examples: 'הסתר דוגמאות',
    com_show_examples: 'הצג דוגמאות',
    com_nav_plugin_search: 'תוספי חיפוש',
    com_nav_tool_search: 'כלי חיפוש',
    com_nav_plugin_auth_error: 'אירעה שגיאה בניסיון לאמת את הפלאגין הזה. בבקשה נסה שוב.',
    com_nav_export_filename: 'שם קובץ',
    com_nav_export_filename_placeholder: 'הגדר את שם הקובץ',
    com_nav_export_type: 'סוג',
    com_nav_export_include_endpoint_options: 'כלול אפשרויות נקודת קצה',
    com_nav_enabled: 'מופעל',
    com_nav_not_supported: 'לא נתמך',
    com_nav_export_all_message_branches: 'ייצא את כל ענפי ההודעות',
    com_nav_export_recursive_or_sequential: 'רקורסיבי או רציף?',
    com_nav_export_recursive: 'רקורסיבי',
    com_nav_export_conversation: 'ייצא שיחה',
    com_nav_export: 'ייצא',
    com_nav_shared_links: 'קישורים משותפים',
    com_nav_shared_links_manage: 'ניהול',
    com_nav_shared_links_empty: 'אין לך קישורים משותפים.',
    com_nav_shared_links_name: 'שם',
    com_nav_shared_links_date_shared: 'תאריך שיתוף',
    com_nav_theme: 'נושא',
    com_nav_theme_system: 'מערכת',
    com_nav_theme_dark: 'כהה',
    com_nav_theme_light: 'אור',
    com_nav_user_name_display: 'הצג שם משתמש בהודעות',
    com_nav_save_drafts: 'שמיר את האפצה באותו מחשב',
    com_nav_clear_all_chats: 'נקה את כל השיחות',
    com_nav_confirm_clear: 'אשר נקה',
    com_nav_close_sidebar: 'סגור סרגל צד',
    com_nav_open_sidebar: 'פתח סרגל צד',
    com_nav_send_message: 'שלח הודעה',
    com_nav_log_out: 'צא',
    com_nav_user: 'USER',
    com_nav_archived_chats: 'שיחות מארכיון',
    com_nav_archived_chats_manage: 'ניהול',
    com_nav_archived_chats_empty: 'אין שיחות מארכיון.',
    com_nav_archive_all_chats: 'ארכין כל השיחות',
    com_nav_archive_all: 'ארכין כל',
    com_nav_archive_name: 'שם',
    com_nav_archive_created_at: 'תאריך יצרן',
    com_nav_clear_conversation: 'נקה שיחות',
    com_nav_clear_conversation_confirm_message:
      'אתה בטוח שאתה רוצה לנקות את כל השיחות? זה בלתי הפיך.',
    com_nav_help_faq: 'עזרה ושאלות נפוצות',
    com_nav_settings: 'הגדרות',
    com_nav_search_placeholder: 'חפש הודעות',
    com_nav_setting_general: 'כללי',
    com_nav_setting_beta: 'תכונות ביטא',
    com_nav_setting_data: 'בקרות נתונים',
    com_nav_setting_account: 'חשבון',
  },
  ma = {
    'en-US': Gs,
    'ar-EG': s1,
    'zh-CN': r1,
    'de-DE': c1,
    'es-ES': m1,
    'fr-FR': u1,
    'it-IT': l1,
    'pl-PL': _1,
    'pt-BR': d1,
    'ru-RU': p1,
    'ja-JP': h1,
    'sv-SE': g1,
    'ko-KR': f1,
    'zh-TC': x1,
    'vi-VN': v1,
    'tr-TR': b1,
    'nl-NL': y1,
    'id-ID': k1,
    'he-HE': w1,
  };
String.prototype.format ||
  (String.prototype.format = function (...e) {
    return this.replace(/{(\d+)}/g, function (n, o) {
      return typeof e[o] < 'u' ? e[o] : n;
    });
  });
const j1 = (e) => {
    if (ma[e]) return ma[e];
    const [n] = e.split('-'),
      o = Object.keys(ma).find((a) => a.startsWith(n));
    return o ? ma[o] : Gs;
  },
  C1 = (e, n, ...o) => (j1(e)[n] || Gs[n] || '').format(...o);
function D() {
  const e = Y(O.lang);
  return p.useCallback((o, ...a) => C1(e, o, ...(a ?? [])), [e]);
}
class N1 {
  constructor(n) {
    ia(this, 'mediaSource', new MediaSource());
    ia(this, 'audioChunks', []);
    ia(this, 'sourceBuffer');
    this.mediaSource.addEventListener('sourceopen', async () => {
      (this.sourceBuffer = this.mediaSource.addSourceBuffer(n)),
        this.sourceBuffer.addEventListener('updateend', () => {
          this.tryAppendNextChunk();
        });
    });
  }
  tryAppendNextChunk() {
    this.sourceBuffer != null &&
      !this.sourceBuffer.updating &&
      this.audioChunks.length > 0 &&
      this.sourceBuffer.appendBuffer(this.audioChunks.shift());
  }
  addBase64Data(n) {
    this.addData(Uint8Array.from(atob(n), (o) => o.charCodeAt(0)).buffer);
  }
  addData(n) {
    this.audioChunks.push(n), this.tryAppendNextChunk();
  }
  close() {
    this.mediaSource.readyState === 'open' && this.mediaSource.endOfStream();
  }
  get mediaSourceUrl() {
    return URL.createObjectURL(this.mediaSource);
  }
}
function S1({ setIsPlaying: e }) {
  const n = p.useRef(null);
  return (
    p.useEffect(() => {
      let o = null,
        a = 0;
      const i = () => {
          e(!1),
            console.log('global audio ended'),
            n.current && ((n.current.customEnded = !0), URL.revokeObjectURL(n.current.src));
        },
        s = () => {
          e(!0), console.log('global audio started'), n.current && (n.current.customStarted = !0);
        },
        r = () => {
          console.log('global audio paused'), n.current && (n.current.customPaused = !0);
        },
        c = () => {
          if (n.current) {
            const d = n.current.currentTime;
            d === o ? (a += 1) : (a = 0),
              (o = d),
              a >= 1 &&
                (console.log('Detected end of audio based on time update'), n.current.pause(), i());
          }
        },
        l = n.current;
      return (
        n.current &&
          (n.current.addEventListener('ended', i),
          n.current.addEventListener('play', s),
          n.current.addEventListener('pause', r),
          n.current.addEventListener('timeupdate', c),
          (n.current.customProps = { customStarted: !1, customEnded: !1, customPaused: !1 })),
        () => {
          l &&
            (l.removeEventListener('ended', i),
            l.removeEventListener('play', s),
            l.removeEventListener('pause', r),
            l.removeEventListener('timeupdate', c),
            URL.revokeObjectURL(l.src));
        }
      );
    }, [e]),
    { audioRef: n }
  );
}
function Ks(e = 0) {
  const n = ye(O.audioRunFamily(e)),
    o = ye(O.globalAudioPlayingFamily(e)),
    a = ye(O.globalAudioFetchingFamily(e)),
    [i, s] = W(O.globalAudioURLFamily(e));
  return {
    pauseGlobalAudio: p.useCallback(() => {
      if (i) {
        const c = document.getElementById(Ha);
        c && (console.log('Pausing global audio', i), c.pause(), o(!1)),
          URL.revokeObjectURL(i),
          a(!1),
          s(null),
          n(null);
      }
    }, [i, s, o, a, n]),
  };
}
const sn = (e = 0) => {
  const n = _t(),
    { data: o } = bt(),
    a = Y(O.defaultPreset),
    { setConversation: i } = O.useCreateConversationAtom(e),
    [s, r] = W(O.filesByIndex(e)),
    c = ye(O.submissionByIndex(e)),
    l = Ma(O.latestMessageFamily(e)),
    { data: d = {} } = Se(),
    _ = Qt(),
    m = p.useRef(),
    f = so(),
    { pauseGlobalAudio: g } = Ks(e),
    h = Y(O.saveDrafts),
    { mutateAsync: v } = Wa({
      onSuccess: () => {
        console.log('Files deleted');
      },
      onError: (k) => {
        console.log('Error deleting files:', k);
      },
    }),
    x = Ea(
      () =>
        async (k, C = null, j, w, T) => {
          var R, E;
          const S = j ?? _.data,
            { endpoint: I = null } = k,
            P = I === null || w,
            F = a && !C && (a.endpoint === I || !I) && P ? a : C;
          if (P) {
            const M = Va({ convoSetup: F ?? k, endpointsConfig: d }),
              A = Ce(d, M, 'type');
            !k.endpointType && A
              ? (k.endpointType = A)
              : k.endpointType && !A && (k.endpointType = void 0);
            const q = he(M),
              $ = f[M] ?? [];
            if (
              (k.assistant_id &&
                !((R = f[M]) != null && R[k.assistant_id]) &&
                (k.assistant_id = void 0),
              !k.assistant_id &&
                q &&
                (k.assistant_id =
                  localStorage.getItem(`${te.ASST_ID_PREFIX}${e}${M}`) ??
                  ((E = $[0]) == null ? void 0 : E.id)),
              k.assistant_id && q && k.conversationId === 'new')
            ) {
              const z = $.find((B) => B.id === k.assistant_id);
              (k.model = z == null ? void 0 : z.model), hg({ endpoint: M, model: k.model });
            }
            k.assistant_id && !q && (k.assistant_id = void 0);
            const L = (S == null ? void 0 : S[M]) ?? [];
            k = Ua({ conversation: k, lastConversationSetup: F, endpoint: M, models: L });
          }
          if ((i(k), c({}), T || l(), k.conversationId === 'new' && !j)) {
            const M = localStorage.getItem(te.APP_TITLE);
            M && (document.title = M), n('/c/new');
          }
          clearTimeout(m.current),
            (m.current = setTimeout(() => {
              const M = document.getElementById($s);
              M && M.focus();
            }, 150));
        },
      [d, a, f, _.data],
    ),
    y = p.useCallback(
      ({
        template: k = {},
        preset: C,
        modelsData: j,
        buildDefault: w = !0,
        keepLatestMessage: T = !1,
      } = {}) => {
        var F, R;
        g();
        const S = {
          conversationId: 'new',
          title: 'New Chat',
          endpoint: null,
          ...k,
          createdAt: '',
          updatedAt: '',
        };
        let I = C;
        const P = es((F = o == null ? void 0 : o.modelSpecs) == null ? void 0 : F.list);
        if (
          (!I &&
            o &&
            (R = o.modelSpecs) != null &&
            R.prioritize &&
            P &&
            (I = { ...P.preset, iconURL: to(P), spec: P.name }),
          S.conversationId === 'new' && !j)
        ) {
          const E = Array.from(s.values())
            .filter((M) => M.filepath && M.source && !M.embedded && M.temp_file_id)
            .map((M) => ({
              file_id: M.file_id,
              embedded: !!M.embedded,
              filepath: M.filepath,
              source: M.source,
            }));
          r(new Map()),
            localStorage.setItem(te.FILES_TO_DELETE, JSON.stringify({})),
            !h && E.length > 0 && v({ files: E });
        }
        x(S, I, j, w, T);
      },
      [g, o, h, x, s, r, v],
    );
  return { switchToConversation: x, newConversation: y };
};
function A1() {
  const e = D(),
    n = p.useRef(!1),
    o = X(),
    { showToast: a } = Ie(),
    { user: i, isAuthenticated: s } = Re(),
    r = Y(O.modularChat),
    c = Y(O.availableTools),
    l = ye(O.presetModalVisible),
    [d, _] = W(O.defaultPreset),
    m = X_({ enabled: !!i && s }),
    { preset: f, conversation: g, index: h, setPreset: v } = me(),
    { data: x } = Qt(),
    { newConversation: y } = sn(h);
  p.useEffect(() => {
    if (x != null && x.initial) return;
    const { data: L } = m;
    if (d || !L || n.current) return;
    if (L && L.length > 0 && i && L[0].user !== (i == null ? void 0 : i.id)) {
      m.refetch();
      return;
    }
    const z = L.find((B) => B.defaultPreset);
    if (!z) {
      n.current = !0;
      return;
    }
    _(z),
      (!(g != null && g.conversationId) || g.conversationId === 'new') &&
        y({ preset: z, modelsData: x }),
      (n.current = !0);
  }, [m.data, i, x]);
  const k = p.useCallback(
      (L) => {
        o.setQueryData([G.presets], L);
      },
      [o],
    ),
    C = q0({
      onMutate: (L) => {
        if (!L) {
          k([]);
          return;
        }
        const z = m.data ?? [];
        z && k(z.filter((B) => B.presetId !== (L == null ? void 0 : L.presetId)));
      },
      onSuccess: () => {
        o.invalidateQueries([G.presets]);
      },
      onError: (L) => {
        o.invalidateQueries([G.presets]),
          console.error('Error deleting the preset:', L),
          a({ message: e('com_endpoint_preset_delete_error'), severity: ct.ERROR });
      },
    }),
    j = md(),
    w = $0({
      onSuccess: (L, z) => {
        const B = L.title ? `"${L.title}"` : e('com_endpoint_preset_title');
        let U = `${B} ${e('com_endpoint_preset_saved')}`;
        L.defaultPreset && L.presetId !== (d == null ? void 0 : d.presetId)
          ? ((U = `${B} ${e('com_endpoint_preset_default')}`), _(L), y({ preset: L }))
          : (z == null ? void 0 : z.defaultPreset) === !1 &&
            (_(null), (U = `${B} ${e('com_endpoint_preset_default_removed')}`)),
          a({ message: U }),
          o.invalidateQueries([G.presets]);
      },
      onError: (L) => {
        console.error('Error updating the preset:', L),
          a({ message: e('com_endpoint_preset_save_error'), severity: ct.ERROR });
      },
    }),
    T = Ho(),
    { endpoint: S } = g ?? {},
    I = (L) => {
      j.mutate(
        { ...L },
        {
          onSuccess: () => {
            a({ message: e('com_endpoint_preset_import') }), o.invalidateQueries([G.presets]);
          },
          onError: (z) => {
            console.error('Error uploading the preset:', z),
              a({ message: e('com_endpoint_preset_import_error'), severity: ct.ERROR });
          },
        },
      );
    };
  return {
    presetsQuery: m,
    onSetDefaultPreset: (L, z = !1) => {
      w.mutate({ ...L, defaultPreset: !z });
    },
    onFileSelected: (L) => {
      const z = { ...Xe({ preset: L }), presetId: null };
      I(z);
    },
    onSelectPreset: (L) => {
      if (!L) return;
      const z = W_(L, c),
        B = z.title ? `"${z.title}"` : e('com_endpoint_preset_title');
      a({
        message: `${B} ${e('com_endpoint_preset_selected_title')}`,
        showIcon: !1,
        duration: 750,
      });
      const U = o.getQueryData([G.endpoints]),
        V = Ce(U, S, 'type'),
        H = Ce(U, z.endpoint, 'type'),
        ne =
          he(z.endpoint) &&
          he(g == null ? void 0 : g.endpoint) &&
          (g == null ? void 0 : g.endpoint) === z.endpoint;
      if (
        (gn.has(S ?? '') || gn.has(V ?? '') || ne) &&
        (gn.has((z == null ? void 0 : z.endpoint) ?? '') || gn.has(H ?? '') || ne) &&
        (S === (z == null ? void 0 : z.endpoint) || r || ne)
      ) {
        const re = T({
          conversation: { ...(g ?? {}), endpointType: H },
          preset: { ...z, endpointType: H },
        });
        y({ template: re, preset: re, keepLatestMessage: !0 });
        return;
      }
      y({ preset: z });
    },
    onChangePreset: (L) => {
      v(L), l(!0);
    },
    clearAllPresets: () => C.mutate(void 0),
    onDeletePreset: (L) => {
      confirm(e('com_endpoint_preset_delete_confirm')) && C.mutate(L);
    },
    submitPreset: () => {
      f && w.mutate(Xe({ preset: f }));
    },
    exportPreset: () => {
      if (!f) return;
      const L = $i((f == null ? void 0 : f.title) || 'preset');
      Dt({ data: Xe({ preset: f }), fileName: L, exportType: Dt.types.json });
    },
  };
}
function jd() {
  const { data: e = {} } = Se();
  return p.useCallback(
    (n) => {
      const { modelDisplayLabel: o } = (e == null ? void 0 : e[n.endpoint ?? '']) ?? {};
      return Mh({ ...n, modelDisplayLabel: o });
    },
    [e],
  );
}
const Wo = () => {
  const e = ye(O.refreshConversationsHint);
  return {
    refreshConversations: p.useCallback(() => {
      e((o) => o + 1);
    }, [e]),
  };
};
function ke({ setOption: e, setter: n, optionKey: o, initialValue: a, delay: i = od }) {
  const [s, r] = p.useState(a),
    c = p.useCallback(Rn(e && o ? e(o) : n, i), []);
  return [
    p.useCallback(
      (d) => {
        const _ = typeof d != 'object' ? d : d == null ? void 0 : d.target.value;
        r(_), c(_);
      },
      [c],
    ),
    s,
    r,
  ];
}
const Hs = (e = 0) => {
    const n = _t(),
      o = X(),
      { setConversation: a } = O.useCreateConversationAtom(e),
      i = ye(O.submissionByIndex(e)),
      s = Ma(O.latestMessageFamily(e)),
      r = (l, d = !0) => {
        if (!l) {
          console.log('Conversation not provided');
          return;
        }
        i(null), d && s();
        let _ = { ...l };
        if (!(_ != null && _.endpoint)) {
          const m = o.getQueryData([G.models]),
            f = o.getQueryData([G.endpoints]),
            g = Va({ convoSetup: l, endpointsConfig: f }),
            h = Ce(f, g, 'type');
          !l.endpointType && h && (l.endpointType = h);
          const v = (m == null ? void 0 : m[g ?? '']) ?? [];
          _ = Ua({ conversation: l, endpoint: g, lastConversationSetup: l, models: v });
        }
        a(_), n(`/c/${_.conversationId ?? 'new'}`);
      };
    return {
      navigateToConvo: r,
      navigateWithLastTools: (l) => {
        var d;
        if ((l == null ? void 0 : l.endpoint) === N.gptPlugins) {
          let _ = [];
          try {
            _ = JSON.parse(localStorage.getItem(te.LAST_TOOLS) ?? '') ?? [];
          } catch {}
          r({
            ...l,
            tools:
              (d = l == null ? void 0 : l.tools) != null && d.length
                ? l == null
                  ? void 0
                  : l.tools
                : _,
          });
        } else r(l);
      },
    };
  },
  T1 = (e) => {
    const n = ye(O.showPluginStoreDialog),
      o = Y(O.availableTools),
      { preset: a, setPreset: i } = me();
    if (!e) return !1;
    const s = () => a,
      r = (h) => {
        const v = { ...h };
        i((x) => Xe({ preset: { ...x, ...v } }));
      },
      c = (h) => (v) => {
        const x = {};
        (x[h] = v), i((y) => Xe({ preset: { ...y, ...x } }));
      },
      l = (h, v, x = null) => {
        var j;
        const y = {},
          k = ((j = a == null ? void 0 : a.examples) == null ? void 0 : j.slice()) || [],
          C = { ...k[h] };
        (C[v] = { content: x }),
          (k[h] = C),
          (y.examples = k),
          i((w) => Xe({ preset: { ...w, ...y } }));
      },
      d = () => {
        var x;
        const h = {},
          v = ((x = a == null ? void 0 : a.examples) == null ? void 0 : x.slice()) || [];
        v.push({ input: { content: '' }, output: { content: '' } }),
          (h.examples = v),
          i((y) => Xe({ preset: { ...y, ...h } }));
      },
      _ = () => {
        var x;
        const h = {},
          v = ((x = a == null ? void 0 : a.examples) == null ? void 0 : x.slice()) || [];
        if (v.length <= 1) {
          (h.examples = [{ input: { content: '' }, output: { content: '' } }]),
            i((y) => Xe({ preset: { ...y, ...h } }));
          return;
        }
        v.pop(), (h.examples = v), i((y) => Xe({ preset: { ...y, ...h } }));
      },
      m = (h) => (v) => {
        const x = JSON.parse(JSON.stringify(e)),
          { agentOptions: y } = x;
        (y[h] = v), i((k) => Xe({ preset: { ...k, agentOptions: y } }));
      };
    function f(h) {
      return a != null && a.tools
        ? !!a.tools.find((v) => (typeof v == 'string' ? v === h : v.pluginKey === h))
        : !1;
    }
    return {
      setOption: c,
      setExample: l,
      addExample: d,
      setOptions: r,
      removeExample: _,
      getConversation: s,
      checkPluginSelection: f,
      setAgentOption: m,
      setTools: (h, v) => {
        var j, w;
        if (h === 'pluginStore') {
          n(!0);
          return;
        }
        const x = {},
          y =
            ((w =
              (j = a == null ? void 0 : a.tools) == null
                ? void 0
                : j.map((T) => (typeof T == 'string' ? o[T] : T))) == null
              ? void 0
              : w.filter((T) => !!T)) || [],
          k = f(h),
          C = o[h];
        k || v ? (x.tools = y.filter((T) => T.pluginKey !== h)) : (x.tools = [...y, C]),
          i((T) => Xe({ preset: { ...T, ...x } }));
      },
    };
  },
  rn = (e = !1) => {
    const n = ye(O.showPluginStoreDialog),
      o = Y(O.availableTools),
      { conversation: a, setConversation: i } = me(),
      s = T1(e);
    if (s && typeof s != 'boolean') return s;
    const r = (g) => (h) => {
        const v = {};
        if (((v[g] = h), g === 'presetOverride')) {
          const x = (a == null ? void 0 : a.presetOverride) || {};
          v.presetOverride = { ...x, ...h };
        }
        i((x) => Ft.parse({ ...x, ...v }));
      },
      c = (g, h, v = null) => {
        var C;
        const x = {},
          y = ((C = a == null ? void 0 : a.examples) == null ? void 0 : C.slice()) || [],
          k = { ...y[g] };
        (k[h] = { content: v }), (y[g] = k), (x.examples = y), i((j) => Ft.parse({ ...j, ...x }));
      },
      l = () => {
        var v;
        const g = {},
          h = ((v = a == null ? void 0 : a.examples) == null ? void 0 : v.slice()) || [];
        h.push({ input: { content: '' }, output: { content: '' } }),
          (g.examples = h),
          i((x) => Ft.parse({ ...x, ...g }));
      },
      d = () => {
        var v;
        const g = {},
          h = ((v = a == null ? void 0 : a.examples) == null ? void 0 : v.slice()) || [];
        if (h.length <= 1) {
          (g.examples = [{ input: { content: '' }, output: { content: '' } }]),
            i((x) => Ft.parse({ ...x, ...g }));
          return;
        }
        h.pop(), (g.examples = h), i((x) => Ft.parse({ ...x, ...g }));
      };
    function _(g) {
      return a != null && a.tools
        ? !!a.tools.find((h) => (typeof h == 'string' ? h === g : h.pluginKey === g))
        : !1;
    }
    return {
      setTools: (g, h) => {
        var C, j;
        if (g === 'pluginStore') {
          n(!0);
          return;
        }
        const v = {},
          x =
            ((j =
              (C = a == null ? void 0 : a.tools) == null
                ? void 0
                : C.map((w) => (typeof w == 'string' ? o[w] : w))) == null
              ? void 0
              : j.filter((w) => !!w)) || [],
          y = _(g),
          k = o[g];
        y || h ? (v.tools = x.filter((w) => w.pluginKey !== g)) : (v.tools = [...x, k]),
          i((w) => Ft.parse({ ...w, ...v }));
      },
      setOption: r,
      setExample: c,
      addExample: l,
      removeExample: d,
      setAgentOption: (g) => (h) => {
        const v = JSON.stringify(a),
          x = JSON.parse(v),
          { agentOptions: y } = x;
        (y[g] = h), i((k) => Ft.parse({ ...k, agentOptions: y }));
      },
      checkPluginSelection: _,
    };
  };
function I1({
  preset: e,
  settingKey: n,
  defaultValue: o,
  conversation: a,
  inputValue: i,
  setInputValue: s,
  preventDelayedUpdate: r = !1,
}) {
  const c = p.useRef(null),
    l = p.useRef(null);
  p.useEffect(() => {
    if (r) return;
    const d = setTimeout(() => {
      (a == null ? void 0 : a[n]) !== i && s(a == null ? void 0 : a[n]);
    }, od * 1.25);
    return () => clearTimeout(d);
  }, [s, r, a, i, n]),
    p.useEffect(() => {
      a != null &&
        a.conversationId &&
        c.current !== (a == null ? void 0 : a.conversationId) &&
        ((c.current = a == null ? void 0 : a.conversationId), s(o));
    }, [s, a == null ? void 0 : a.conversationId, o]),
    p.useEffect(() => {
      e != null &&
        e.presetId &&
        l.current !== (e == null ? void 0 : e.presetId) &&
        ((l.current = e == null ? void 0 : e.presetId), s(o));
    }, [s, e == null ? void 0 : e.presetId, o]);
}
function z1() {
  const e = Ea(
      ({ snapshot: o }) =>
        async (a) =>
          await o.getPromise(O.messagesSiblingIdxFamily(a)),
      [],
    ),
    n = async ({ messageId: o, message: a, messages: i, branches: s = !1, recursive: r = !1 }) => {
      let c = [];
      if (i != null && i.length)
        if (s)
          for (const l of i)
            c.push(
              await n({
                messageId: l == null ? void 0 : l.messageId,
                message: l,
                messages: (l == null ? void 0 : l.children) || [],
                branches: s,
                recursive: r,
              }),
            );
        else {
          let l = i[0];
          if ((i == null ? void 0 : i.length) > 1) {
            const d = await e(o);
            l = i[i.length - d - 1];
          }
          c = [
            await n({
              messageId: l == null ? void 0 : l.messageId,
              message: l,
              messages: (l == null ? void 0 : l.children) || [],
              branches: s,
              recursive: r,
            }),
          ];
        }
      if (r && a) return { ...a, children: c };
      {
        let l = [];
        if (a) {
          const d = { ...a };
          delete d.children, (l = [d]);
        }
        for (const d of c) l = l.concat(d);
        return l;
      }
    };
  return n;
}
const Cd = () => {
    if (typeof window < 'u' && window.localStorage) {
      const e = window.localStorage.getItem('color-theme');
      if (typeof e == 'string') return e;
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) return 'dark';
    }
    return 'light';
  },
  L1 = { theme: Cd(), setTheme: () => {} },
  Ya = p.createContext(L1),
  P1 = ({ initialTheme: e, children: n }) => {
    const [o, a] = p.useState(Cd),
      i = (s) => {
        const r = window.document.documentElement;
        let c = s === 'dark';
        s === 'system' && (c = window.matchMedia('(prefers-color-scheme: dark)').matches),
          r.classList.remove(c ? 'light' : 'dark'),
          r.classList.add(c ? 'dark' : 'light'),
          localStorage.setItem('color-theme', s);
      };
    return (
      p.useEffect(() => {
        const s = window.matchMedia('(prefers-color-scheme: dark)'),
          r = () => {
            i(s.matches ? 'dark' : 'light');
          };
        return (
          s.addEventListener('change', r),
          () => {
            s.removeEventListener('change', r);
          }
        );
      }, []),
      e && i(e),
      p.useEffect(() => {
        i(o);
      }, [o]),
      t.jsx(Ya.Provider, { value: { theme: o, setTheme: a }, children: n })
    );
  },
  Nd = p.createContext({}),
  Sd = () => {
    const { ref: e } = p.useContext(Nd),
      { theme: n } = p.useContext(Ya),
      o = async (i) => {
        if (!i) throw new Error('You should provide correct html node.');
        let s = n === 'dark';
        n === 'system' && (s = window.matchMedia('(prefers-color-scheme: dark)').matches);
        const r = s ? '#171717' : 'white',
          c = await fu(i),
          l = document.createElement('canvas'),
          d = l.getContext('2d'),
          _ = 0,
          m = 0,
          f = c.width,
          g = c.height;
        return (
          (l.width = f),
          (l.height = g),
          (d.fillStyle = r),
          d == null || d.fillRect(0, 0, f, g),
          d == null || d.drawImage(c, m, _),
          l.toDataURL('image/png', 1)
        );
      };
    return {
      screenshotTargetRef: e,
      captureScreenshot: async () => {
        if (e instanceof Function) throw new Error('Ref callback is not supported.');
        if (e != null && e.current) return o(e.current);
        throw new Error('Ref is not attached to any element.');
      },
    };
  },
  E1 = ({ children: e }) => {
    const n = p.useRef(null);
    return t.jsx(Nd.Provider, { value: { ref: n }, children: e });
  };
function M1({
  conversation: e,
  filename: n,
  type: o,
  includeOptions: a,
  exportBranches: i,
  recursive: s,
}) {
  const r = X(),
    { captureScreenshot: c } = Sd(),
    l = z1(),
    { conversationId: d } = Kt(),
    _ = p.useCallback(() => {
      const C = d === 'new' ? d : (e == null ? void 0 : e.conversationId) ?? d ?? '',
        j = r.getQueryData([G.messages, C]) ?? [],
        w = Ko({ messages: j });
      return (w == null ? void 0 : w.length) === 0 ? null : w ?? null;
    }, [d, e == null ? void 0 : e.conversationId, r]),
    m = (C, j = 'text') => {
      if (!C) return '';
      const w = (T, S) =>
        j === 'text'
          ? `>> ${T}:
${S}`
          : `**${T}**
${S}`;
      return C.content
        ? C.content.map((T) => f(C.sender, T)).map((T) => w(T[0], T[1])).join(`


`)
        : w(C.sender, C.text);
    },
    f = (C, j) => {
      if (!j) return [];
      if (j.type === ee.ERROR) return [C, j[ee.TEXT].value];
      if (j.type === ee.TEXT) return [C, j[ee.TEXT].value];
      if (j.type === ee.TOOL_CALL) {
        const w = j[ee.TOOL_CALL].type;
        if (w === dt.CODE_INTERPRETER) {
          const S = j[ee.TOOL_CALL][dt.CODE_INTERPRETER];
          return ['Code Interpreter', JSON.stringify(S)];
        }
        if (w === dt.RETRIEVAL) {
          const T = j[ee.TOOL_CALL];
          return ['Retrieval', JSON.stringify(T)];
        }
        if (w === dt.FUNCTION && R_.has(j[ee.TOOL_CALL].function.name)) {
          const T = j[ee.TOOL_CALL];
          return ['Tool', JSON.stringify(T)];
        }
        if (w === dt.FUNCTION) {
          const T = j[ee.TOOL_CALL];
          return ba(T) ? ['Tool', JSON.stringify(T)] : ['Tool', JSON.stringify(T)];
        }
      }
      if (j.type === ee.IMAGE_FILE) {
        const w = j[ee.IMAGE_FILE];
        return ['Image', JSON.stringify(w)];
      }
      return [C, JSON.stringify(j)];
    },
    g = async () => {
      let C;
      try {
        C = await c();
      } catch (j) {
        return console.error('Failed to capture screenshot'), console.error(j);
      }
      xu(C, `${n}.png`, 'image/png');
    },
    h = async () => {
      const C = [],
        j = await l({
          messageId: e == null ? void 0 : e.conversationId,
          message: null,
          messages: _(),
          branches: !!i,
          recursive: !1,
        });
      if (Array.isArray(j)) for (const w of j) C.push(w);
      else C.push(j);
      Dt({
        data: C,
        fileName: n,
        extension: 'csv',
        exportType: Dt.types.csv,
        beforeTableEncode: (w) => {
          var T, S, I, P, F, R, E, M;
          return [
            {
              fieldName: 'sender',
              fieldValues:
                ((T = w == null ? void 0 : w.find((A) => A.fieldName == 'sender')) == null
                  ? void 0
                  : T.fieldValues) ?? [],
            },
            {
              fieldName: 'text',
              fieldValues:
                ((S = w == null ? void 0 : w.find((A) => A.fieldName == 'text')) == null
                  ? void 0
                  : S.fieldValues) ?? [],
            },
            {
              fieldName: 'isCreatedByUser',
              fieldValues:
                ((I = w == null ? void 0 : w.find((A) => A.fieldName == 'isCreatedByUser')) == null
                  ? void 0
                  : I.fieldValues) ?? [],
            },
            {
              fieldName: 'error',
              fieldValues:
                ((P = w == null ? void 0 : w.find((A) => A.fieldName == 'error')) == null
                  ? void 0
                  : P.fieldValues) ?? [],
            },
            {
              fieldName: 'unfinished',
              fieldValues:
                ((F = w == null ? void 0 : w.find((A) => A.fieldName == 'unfinished')) == null
                  ? void 0
                  : F.fieldValues) ?? [],
            },
            {
              fieldName: 'messageId',
              fieldValues:
                ((R = w == null ? void 0 : w.find((A) => A.fieldName == 'messageId')) == null
                  ? void 0
                  : R.fieldValues) ?? [],
            },
            {
              fieldName: 'parentMessageId',
              fieldValues:
                ((E = w == null ? void 0 : w.find((A) => A.fieldName == 'parentMessageId')) == null
                  ? void 0
                  : E.fieldValues) ?? [],
            },
            {
              fieldName: 'createdAt',
              fieldValues:
                ((M = w == null ? void 0 : w.find((A) => A.fieldName == 'createdAt')) == null
                  ? void 0
                  : M.fieldValues) ?? [],
            },
          ];
        },
      });
    },
    v = async () => {
      let C = `# Conversation
- conversationId: ${e == null ? void 0 : e.conversationId}
- endpoint: ${e == null ? void 0 : e.endpoint}
- title: ${e == null ? void 0 : e.title}
- exportAt: ${new Date().toTimeString()}
`;
      if (a) {
        C += `
## Options
`;
        const w = Xe({ preset: e });
        for (const T of Object.keys(w))
          C += `- ${T}: ${w[T]}
`;
      }
      const j = await l({
        messageId: e == null ? void 0 : e.conversationId,
        message: null,
        messages: _(),
        branches: !1,
        recursive: !1,
      });
      if (
        ((C += `
## History
`),
        Array.isArray(j))
      )
        for (const w of j)
          (C += `${m(w, 'md')}
`),
            w.error &&
              (C += `*(This is an error message)*
`),
            w.unfinished &&
              (C += `*(This is an unfinished message)*
`),
            (C += `

`);
      else
        (C += `${m(j, 'md')}
`),
          j.error &&
            (C += `*(This is an error message)*
`),
          j.unfinished &&
            (C += `*(This is an unfinished message)*
`);
      Dt({ data: C, fileName: n, extension: 'md', exportType: Dt.types.txt });
    },
    x = async () => {
      let C = `Conversation
########################
conversationId: ${e == null ? void 0 : e.conversationId}
endpoint: ${e == null ? void 0 : e.endpoint}
title: ${e == null ? void 0 : e.title}
exportAt: ${new Date().toTimeString()}
`;
      if (a) {
        C += `
Options
########################
`;
        const w = Xe({ preset: e });
        for (const T of Object.keys(w))
          C += `${T}: ${w[T]}
`;
      }
      const j = await l({
        messageId: e == null ? void 0 : e.conversationId,
        message: null,
        messages: _(),
        branches: !1,
        recursive: !1,
      });
      if (
        ((C += `
History
########################
`),
        Array.isArray(j))
      )
        for (const w of j)
          (C += `${m(w)}
`),
            w.error &&
              (C += `(This is an error message)
`),
            w.unfinished &&
              (C += `(This is an unfinished message)
`),
            (C += `

`);
      else
        (C += `${m(j)}
`),
          j.error &&
            (C += `(This is an error message)
`),
          j.unfinished &&
            (C += `(This is an unfinished message)
`);
      Dt({ data: C, fileName: n, extension: 'txt', exportType: Dt.types.txt });
    },
    y = async () => {
      const C = {
        conversationId: e == null ? void 0 : e.conversationId,
        endpoint: e == null ? void 0 : e.endpoint,
        title: e == null ? void 0 : e.title,
        exportAt: new Date().toTimeString(),
        branches: i,
        recursive: s,
      };
      a && (C.options = Xe({ preset: e }));
      const j = await l({
        messageId: e == null ? void 0 : e.conversationId,
        message: null,
        messages: _(),
        branches: !!i,
        recursive: !!s,
      });
      s && !Array.isArray(j) ? (C.messagesTree = j.children) : (C.messages = j),
        Dt({ data: C, fileName: n, extension: 'json', exportType: Dt.types.json });
    };
  return {
    exportConversation: () => {
      o === 'json'
        ? y()
        : o == 'text'
        ? x()
        : o == 'markdown'
        ? v()
        : o == 'csv'
        ? h()
        : o == 'screenshot' && g();
    },
  };
}
function Xa({ hasNextPage: e, isFetchingNextPage: n, setShowLoading: o, fetchNextPage: a }) {
  const i = p.useRef(null),
    s = p.useRef(null),
    r = p.useCallback(
      ha(() => a(), 750, { leading: !0 }),
      [a],
    ),
    c = p.useCallback(() => {
      if (s.current) {
        const { scrollTop: d, clientHeight: _, scrollHeight: m } = s.current;
        d + _ >= m * 0.97 && e && !n ? (o(!0), r()) : o(!1);
      }
    }, [e, n, r, o]);
  p.useEffect(() => {
    const d = s.current;
    return (
      d && d.addEventListener('scroll', c),
      () => {
        d == null || d.removeEventListener('scroll', c);
      }
    );
  }, [c, r]);
  const l = p.useCallback(() => {
    const d = s.current;
    d && (i.current = d.scrollTop);
  }, [s, i]);
  return { containerRef: s, moveToTop: l };
}
function ei() {
  return (n) => localStorage.setItem(te.FILES_TO_DELETE, JSON.stringify(n));
}
const Ad = ({ mutateAsync: e, assistant_id: n, tool_resource: o }) => {
  const [a, i] = p.useState([]),
    s = ei(),
    r = p.useCallback(
      (_, m, f) => {
        console.log('Deleting files:', _, m, f),
          e({ files: _, assistant_id: m, tool_resource: f }),
          i([]);
      },
      [e],
    ),
    c = p.useCallback(Rn(r, 1e3), []);
  p.useEffect(() => () => c.cancel(), [c]);
  const l = p.useCallback(
      ({ file: _, setFiles: m }) => {
        const {
          file_id: f,
          temp_file_id: g = '',
          filepath: h = '',
          source: v = ue.local,
          embedded: x,
          attached: y,
        } = _;
        if ((_.progress ?? 1) < 1) return;
        const C = { file_id: f, embedded: x, filepath: h, source: v };
        m &&
          m((j) => {
            const w = new Map(j);
            w.delete(f), w.delete(g);
            const T = Object.fromEntries(w);
            return s(T), w;
          }),
          !y &&
            i((j) => {
              const w = [...j, C];
              return c(w, n, o), w;
            });
      },
      [c, s, n, o],
    ),
    d = p.useCallback(
      ({ files: _, setFiles: m }) => {
        const f = _.map((g) => {
          const { file_id: h, embedded: v, filepath: x = '', source: y = ue.local } = g;
          return { source: y, file_id: h, filepath: x, embedded: v };
        });
        m &&
          m((g) => {
            const h = new Map(g);
            f.forEach((x) => {
              h.delete(x.file_id);
            });
            const v = Object.fromEntries(h);
            return s(v), h;
          }),
          i((g) => {
            const h = [...g, ...f];
            return c(h, n), h;
          });
      },
      [c, s, n],
    );
  return { deleteFile: l, deleteFiles: d };
};
function R1(e) {
  const n = X(),
    o = Wa({
      onMutate: async (a) => {
        const { files: i } = a;
        return i != null && i.length
          ? { filesToDeleteMap: i.reduce((r, c) => (r.set(c.file_id, c), r), new Map()) }
          : new Map();
      },
      onSuccess: (a, i, s) => {
        console.log('Files deleted');
        const { filesToDeleteMap: r } = s;
        n.setQueryData([G.files], (c) => {
          const { files: l } = i;
          return l != null && l.length
            ? c == null
              ? void 0
              : c.filter((d) => !r.has(d.file_id))
            : c;
        }),
          e == null || e();
      },
      onError: (a) => {
        console.log('Error deleting files:', a), e == null || e();
      },
    });
  return Ad({ mutateAsync: o.mutateAsync });
}
const O1 = () => {
  const e = D(),
    { showToast: n } = Ie(),
    [o, a] = p.useState({}),
    i = (c) => 5e3 + Math.floor(c / 1e6) * 2e3;
  return {
    startUploadTimer: (c, l, d) => {
      const _ = i(d);
      o[c] && clearTimeout(o[c]);
      const m = setTimeout(() => {
        const f = e('com_ui_upload_delay', l);
        n({ message: f, status: 'warning', duration: 7e3 });
      }, _);
      a((f) => ({ ...f, [c]: m }));
    },
    clearUploadTimer: (c) => {
      o[c] &&
        (clearTimeout(o[c]),
        a((l) => {
          const { [c]: d, ..._ } = l;
          return _;
        }));
    },
  };
};
function Td(e) {
  const n = ei();
  return {
    addFile: (r) => {
      e((c) => {
        const l = new Map(c);
        return l.set(r.file_id, r), l;
      });
    },
    replaceFile: (r) => {
      e((c) => {
        const l = new Map(c);
        return l.set(r.file_id, r), l;
      });
    },
    updateFileById: (r, c, l) => {
      e((d) => {
        if (!d.has(r)) return console.warn(`File with id ${r} not found.`), d;
        const _ = new Map(d),
          m = _.get(r);
        if (!m) return console.warn(`File with id ${r} not found.`), d;
        if ((_.set(r, { ...m, ...c }), c.filepath && c.progress !== 1 && !l)) {
          const f = Object.fromEntries(_);
          n(f);
        }
        return _;
      });
    },
    deleteFileById: (r) => {
      e((c) => {
        const l = new Map(c);
        l.has(r) ? l.delete(r) : console.warn(`File with id ${r} not found.`);
        const d = Object.fromEntries(l);
        return n(d), l;
      });
    },
  };
}
const { checkType: D1 } = Lt,
  Jo = (e) => {
    const n = X(),
      { showToast: o } = Ie(),
      [a, i] = p.useState([]),
      { startUploadTimer: s, clearUploadTimer: r } = O1(),
      { files: c, setFiles: l, setFilesLoading: d, conversation: _ } = me(),
      m = (A) => i((q) => [...q, A]),
      {
        addFile: f,
        replaceFile: g,
        updateFileById: h,
        deleteFileById: v,
      } = Td((e == null ? void 0 : e.fileSetter) ?? l),
      { data: x = Lt } = wn({ select: (A) => yn(A) }),
      y =
        (e == null ? void 0 : e.overrideEndpoint) ??
        (_ == null ? void 0 : _.endpointType) ??
        (_ == null ? void 0 : _.endpoint) ??
        'default',
      {
        fileLimit: k,
        fileSizeLimit: C,
        totalSizeLimit: j,
        supportedMimeTypes: w,
      } = x.endpoints[y] ?? x.endpoints.default,
      T = p.useCallback(() => {
        if (a.length > 1) {
          const A = Array.from(new Set(a))
            .map(
              (q, $) => `${$ > 0 ? '• ' : ''}${q}
`,
            )
            .join('');
          o({ message: A, status: 'error', duration: 5e3 });
        } else a.length === 1 && o({ message: a[0], status: 'error', duration: 5e3 });
        i([]);
      }, [a, o]),
      S = Rn(T, 250);
    p.useEffect(() => (a.length > 0 && S(), () => S.cancel()), [a, S]);
    const I = B0({
        onSuccess: (A) => {
          var q;
          r(A.temp_file_id),
            console.log('upload success', A),
            h(
              A.temp_file_id,
              { progress: 0.9, filepath: A.filepath },
              !!((q = e == null ? void 0 : e.additionalMetadata) != null && q.assistant_id),
            ),
            setTimeout(() => {
              var $;
              h(
                A.temp_file_id,
                {
                  progress: 1,
                  file_id: A.file_id,
                  temp_file_id: A.temp_file_id,
                  filepath: A.filepath,
                  type: A.type,
                  height: A.height,
                  width: A.width,
                  filename: A.filename,
                  source: A.source,
                  embedded: A.embedded,
                },
                !!(($ = e == null ? void 0 : e.additionalMetadata) != null && $.assistant_id),
              );
            }, 300);
        },
        onError: (A, q) => {
          var L, z;
          console.log('upload error', A);
          const $ = q.get('file_id');
          r($),
            v($),
            m(
              ((z = (L = A == null ? void 0 : A.response) == null ? void 0 : L.data) == null
                ? void 0
                : z.message) ?? 'An error occurred while uploading the file.',
            );
        },
      }),
      P = async (A) => {
        var $, L, z, B, U;
        if (!y) {
          m('An error occurred while uploading the file: Endpoint is undefined');
          return;
        }
        s(A.file_id, (($ = A.file) == null ? void 0 : $.name) || 'File', A.size);
        const q = new FormData();
        if (
          (q.append(
            'file',
            A.file,
            encodeURIComponent(((L = A.file) == null ? void 0 : L.name) || 'File'),
          ),
          q.append('file_id', A.file_id),
          A.width && q.append('width', (z = A.width) == null ? void 0 : z.toString()),
          A.height && q.append('height', (B = A.height) == null ? void 0 : B.toString()),
          e != null && e.additionalMetadata)
        )
          for (const [V, H] of Object.entries(e.additionalMetadata)) H && q.append(V, H);
        if (he(y) && !q.get('assistant_id') && _ != null && _.assistant_id) {
          const V = n.getQueryData([G.endpoints]),
            H = ((U = V == null ? void 0 : V[y]) == null ? void 0 : U.version) ?? kn[y];
          q.append('version', H),
            q.append('assistant_id', _.assistant_id),
            q.append('model', (_ == null ? void 0 : _.model) ?? ''),
            q.append('message_file', 'true');
        }
        q.append('endpoint', y), I.mutate(q);
      },
      F = (A) => {
        const q = Array.from(c.values()),
          $ = A.reduce((U, V) => U + V.size, 0);
        if ($ === 0) return m('Empty files are not allowed.'), !1;
        const L = q.reduce((U, V) => U + V.size, 0);
        if (A.length + c.size > k) return m(`You can only upload up to ${k} files at a time.`), !1;
        for (let U = 0; U < A.length; U++) {
          let V = A[U],
            H = V.type;
          const ne = V.name.split('.').pop() ?? '',
            re = dh[ne];
          if ((re && (!H || H !== re) && (H = re), !H))
            return m('Unable to determine file type for: ' + V.name), !1;
          if (V.type !== H) {
            const Ee = new File([V], V.name, { type: H });
            (V = Ee), (A[U] = Ee);
          }
          if (!D1(V.type, w))
            return console.log(V), m('Currently, unsupported file type: ' + V.type), !1;
          if (V.size >= C) return m(`File size exceeds ${C / ya} MB.`), !1;
        }
        if (L + $ > j) return m(`The total size of the files cannot exceed ${j / ya} MB.`), !1;
        const z = [
          ...q.map((U) => {
            var V, H;
            return `${((V = U.file) == null ? void 0 : V.name) ?? U.filename}-${U.size}-${
              ((H = U.type) == null ? void 0 : H.split('/')[0]) ?? 'file'
            }`;
          }),
          ...A.map((U) => {
            var V;
            return `${U.name}-${U.size}-${
              ((V = U.type) == null ? void 0 : V.split('/')[0]) ?? 'file'
            }`;
          }),
        ];
        return new Set(z).size !== z.length ? (m('Duplicate file detected.'), !1) : !0;
      },
      R = (A, q) => {
        const $ = new Image();
        ($.onload = async () => {
          (A.width = $.width),
            (A.height = $.height),
            (A = { ...A, progress: 0.6 }),
            g(A),
            await P(A),
            URL.revokeObjectURL(q);
        }),
          ($.src = q);
      },
      E = async (A) => {
        var L;
        const q = Array.from(A);
        let $;
        try {
          $ = F(q);
        } catch (z) {
          console.error('file validation error', z),
            m('An error occurred while validating the file.');
          return;
        }
        if (!$) {
          d(!1);
          return;
        }
        for (const z of q) {
          const B = mn();
          try {
            const U = URL.createObjectURL(z),
              V = { file_id: B, file: z, type: z.type, preview: U, progress: 0.2, size: z.size };
            if ((f(V), ((L = z.type) == null ? void 0 : L.split('/')[0]) === 'image')) {
              R(V, U);
              continue;
            }
            await P(V);
          } catch (U) {
            v(B),
              console.log('file handling error', U),
              m('An error occurred while processing the file.');
          }
        }
      };
    return {
      handleFileChange: (A) => {
        A.stopPropagation(), A.target.files && (d(!0), E(A.target.files), (A.target.value = ''));
      },
      handleFiles: E,
      files: c,
      setFiles: l,
    };
  };
function F1() {
  const { files: e, handleFiles: n } = Jo(),
    [{ canDrop: o, isOver: a }, i] = vu(
      () => ({
        accept: [bu],
        drop(s) {
          console.log('drop', s.files), n(s.files);
        },
        canDrop() {
          return !0;
        },
        collect: (s) => ({ isOver: s.isOver(), canDrop: s.canDrop() }),
      }),
      [e],
    );
  return { canDrop: o, isOver: a, drop: i };
}
function B1({ isAuthenticated: e }) {
  const { data: n } = Ga({ select: Kh, enabled: e });
  return n;
}
const Qo = (e) => {
  const { data: n } = Se(),
    o = n == null ? void 0 : n[e ?? ''],
    { azure: a } = o ?? {};
  let i = e;
  a ? (i = N.azureOpenAI) : i === N.gptPlugins && (i = N.openAI);
  const s = $f(),
    r = ud(i),
    c = p.useCallback(() => {
      if (r.data) return r.data.expiresAt;
    }, [r.data]),
    l = p.useCallback(() => {
      const _ = c();
      return !(!_ || new Date(_) < new Date());
    }, [c]),
    d = p.useCallback(
      (_, m) => {
        const f = new Date(m).toISOString();
        s.mutate({ name: i, value: _, expiresAt: f });
      },
      [s, i],
    );
  return p.useMemo(() => ({ getExpiry: c, checkExpiry: l, saveUserKey: d }), [c, l, d]);
};
function $1(e, n) {
  const [o, a] = p.useState(e);
  return (
    p.useEffect(() => {
      const i = setTimeout(() => {
        a(e);
      }, n);
      return () => {
        clearTimeout(i);
      };
    }, [e, n]),
    o
  );
}
function q1({ textAreaRef: e, submitButtonRef: n, disabled: o = !1 }) {
  var M;
  const a = D(),
    i = jd(),
    s = p.useRef(!1),
    { handleFiles: r } = Jo(),
    c = Mt(),
    l = Y(O.enterToSend),
    {
      index: d,
      conversation: _,
      isSubmitting: m,
      filesLoading: f,
      latestMessage: g,
      setFilesLoading: h,
      setShowBingToneSetting: v,
    } = me(),
    x = ye(O.showMentionPopoverFamily(d)),
    { conversationId: y, jailbreak: k, endpoint: C = '', assistant_id: j } = _ || {},
    w = (((g == null ? void 0 : g.unfinished) && !m) || (g == null ? void 0 : g.error)) && !he(C),
    T = he(C) && ((M = c == null ? void 0 : c[C ?? '']) == null ? void 0 : M[j ?? '']),
    S = (T && (T == null ? void 0 : T.name)) || '';
  p.useEffect(() => {
    var A;
    y && ((y === 'new' || !k) && v(!1), y !== 'search' && ((A = e.current) == null || A.focus()));
  }, [y, k]),
    p.useEffect(() => {
      const A = setTimeout(() => {
        var q;
        (q = e.current) == null || q.focus();
      }, 100);
      return () => clearTimeout(A);
    }, [m, e]),
    p.useEffect(() => {
      var z, B;
      if ((z = e.current) != null && z.value) return;
      const A = () => {
          var ne;
          if (o) return a('com_endpoint_config_placeholder');
          const U = (_ == null ? void 0 : _.endpoint) ?? '',
            V = (_ == null ? void 0 : _.assistant_id) ?? '';
          if (he(U) && (!V || !((ne = c == null ? void 0 : c[U]) != null && ne[V ?? ''])))
            return a('com_endpoint_assistant_placeholder');
          if (w) return a('com_endpoint_message_not_appendable');
          const H = he(U) ? mg({ name: S, localize: a }) : i(_);
          return `${a('com_endpoint_message')} ${H || 'ChatGPT'}…`;
        },
        q = A();
      if (((B = e.current) == null ? void 0 : B.getAttribute('placeholder')) === q) return;
      const L = Rn(() => {
        var V, H;
        const U = A();
        ((V = e.current) == null ? void 0 : V.getAttribute('placeholder')) !== U &&
          ((H = e.current) == null || H.setAttribute('placeholder', U), hc(e));
      }, 80);
      return L(), () => L.cancel();
    }, [_, o, g, w, a, i, S, e, c]);
  const I = p.useCallback(() => {
      var z, B, U;
      const A = (z = e.current) == null ? void 0 : z.value;
      if (!(A && A[A.length - 1] === '@')) return;
      const q = (B = e.current) == null ? void 0 : B.selectionStart;
      if (!q) return;
      const $ = q === 1,
        L = ((U = e.current) == null ? void 0 : U.value.charAt(q - 2)) === ' ';
      x($ || L);
    }, [e, x]),
    P = p.useCallback(
      (A) => {
        var L;
        if (A.key === 'Enter' && m) return;
        const q = A.key === 'Enter' && !A.shiftKey,
          $ = A.key === 'Enter' && A.ctrlKey;
        if (
          (q && f && A.preventDefault(),
          q && A.preventDefault(),
          A.key === 'Enter' && !l && !$ && e.current)
        ) {
          A.preventDefault(),
            lg(
              e.current,
              `
`,
            ),
            hc(e);
          return;
        }
        if ((q || $) && !(s != null && s.current)) {
          const z = document.getElementById(Ha);
          z && (console.log('Unmuting global audio'), (z.muted = !1)),
            (L = n.current) == null || L.click();
        }
      },
      [m, f, l, e, n],
    ),
    F = () => {
      s.current = !0;
    },
    R = () => {
      s.current = !1;
    },
    E = p.useCallback(
      (A) => {
        if (e.current && A.clipboardData && A.clipboardData.files.length > 0) {
          h(!0);
          const $ = [];
          for (const L of A.clipboardData.files) {
            const z = new File([L], `clipboard_${+new Date()}_${L.name}`, { type: L.type });
            $.push(z);
          }
          r($);
        }
      },
      [r, h, e],
    );
  return {
    textAreaRef: e,
    handlePaste: E,
    handleKeyUp: I,
    handleKeyDown: P,
    handleCompositionStart: F,
    handleCompositionEnd: R,
  };
}
function Id({ value: e, options: n }) {
  const [o, a] = p.useState(!1),
    [i, s] = p.useState(''),
    r = p.useMemo(() => {
      if (!i) return n;
      const l = yu(n, i, { keys: ['label', 'value'] }),
        d = n.find((_) => _.value === e);
      return d && !l.includes(d) && l.push(d), l;
    }, [i, e, n]);
  return { open: o, setOpen: a, searchValue: i, setSearchValue: s, matches: r };
}
function U1() {
  const { conversation: e } = me(),
    { data: n } = Se(),
    { endpoint: o } = e || {},
    a = Ce(n, o, 'userProvide'),
    { getExpiry: i } = Qo(o ?? '');
  return { requiresKey: !i() && a };
}
function V1(e) {
  function n(a, i) {
    return Zi(i) ? JSON.parse(i)[a] : '';
  }
  function o(a, i, s) {
    let r = {};
    Zi(s) && (r = JSON.parse(s)), (r[a] = i), e(JSON.stringify(r));
  }
  return { getMultiKey: n, setMultiKey: o };
}
const G1 = () => {
    const { showToast: e } = Ie(),
      [n] = W(O.endpointSTT),
      {
        transcript: o,
        listening: a,
        resetTranscript: i,
        browserSupportsSpeechRecognition: s,
      } = ku.useSpeechRecognition(),
      r = () => {
        s
          ? a
            ? hi.stopListening()
            : hi.startListening()
          : e({ message: 'Browser does not support SpeechRecognition', status: 'error' });
      };
    return (
      p.useEffect(() => {
        const c = (l) => {
          l.shiftKey && l.altKey && l.code === 'KeyL' && n === 'browser' && r();
        };
        return (
          window.addEventListener('keydown', c), () => window.removeEventListener('keydown', c)
        );
      }, []),
      {
        isListening: a,
        isLoading: !1,
        text: o,
        startRecording: r,
        stopRecording: () => {
          hi.stopListening(), i();
        },
      }
    );
  },
  K1 = (e) => {
    const { showToast: n } = Ie(),
      [o] = W(O.endpointSTT),
      [a] = W(O.SpeechToText),
      [i] = W(O.autoTranscribeAudio),
      [s] = W(O.autoSendText),
      [r, c] = p.useState(''),
      [l, d] = p.useState(!1),
      [_, m] = p.useState(!1),
      [f, g] = p.useState([]),
      [h, v] = p.useState(!1),
      [x] = W(O.decibelValue),
      y = p.useRef(null),
      k = p.useRef(null),
      C = p.useRef(null),
      j = p.useRef(null),
      { mutate: w, isLoading: T } = K0({
        onSuccess: (z) => {
          const B = z.text;
          c(B),
            v(!1),
            s &&
              a &&
              B.length > 0 &&
              setTimeout(() => {
                e(B);
              }, 3e3);
        },
        onError: () => {
          n({
            message: 'An error occurred while processing the audio, maybe the audio was too short',
            status: 'error',
          }),
            v(!1);
        },
      }),
      S = () => {
        y.current &&
          (y.current.removeEventListener('dataavailable', F),
          y.current.removeEventListener('stop', R),
          (y.current = null));
      },
      I = () => {
        c('');
      },
      P = async () => {
        try {
          const z = await navigator.mediaDevices.getUserMedia({ audio: !0, video: !1 });
          m(!0), (k.current = z ?? null);
        } catch {
          m(!1);
        }
      },
      F = (z) => {
        z.data.size > 0
          ? f.push(z.data)
          : n({ message: 'No audio data available', status: 'warning' });
      },
      R = () => {
        if (f.length > 0) {
          const z = new Blob(f, { type: 'audio/wav' });
          g([]);
          const B = new FormData();
          B.append('audio', z, 'audio.wav'), v(!0), S(), w(B);
        } else n({ message: 'The audio was too short', status: 'warning' });
      },
      E = (z, B) => {
        const U = new AudioContext(),
          V = U.createMediaStreamSource(z),
          H = U.createAnalyser();
        (H.minDecibels = x), V.connect(H);
        const ne = H.frequencyBinCount,
          re = new Uint8Array(ne);
        let Ee = Date.now();
        const yt = () => {
          if (
            (H.getByteFrequencyData(re),
            re.some((li) => li > 0) && (Ee = Date.now()),
            Date.now() - Ee > 3e3)
          ) {
            B();
            return;
          }
          j.current = window.requestAnimationFrame(yt);
        };
        j.current = window.requestAnimationFrame(yt);
      },
      M = async () => {
        if (h) {
          n({ message: 'A request is already being made. Please wait.', status: 'warning' });
          return;
        }
        if ((k.current || (await P()), k.current))
          try {
            g([]),
              (y.current = new MediaRecorder(k.current)),
              y.current.addEventListener('dataavailable', F),
              y.current.addEventListener('stop', R),
              y.current.start(100),
              !C.current && i && a && E(k.current, A),
              d(!0);
          } catch (z) {
            n({ message: `Error starting recording: ${z}`, status: 'error' });
          }
        else n({ message: 'Microphone permission not granted', status: 'error' });
      },
      A = () => {
        var z;
        y.current &&
          (y.current.state === 'recording'
            ? (y.current.stop(),
              (z = k.current) == null || z.getTracks().forEach((B) => B.stop()),
              (k.current = null),
              j.current !== null && (window.cancelAnimationFrame(j.current), (j.current = null)),
              d(!1))
            : n({ message: 'MediaRecorder is not recording', status: 'error' }));
      },
      q = () => {
        if (l) {
          n({ message: 'Already listening. Please stop recording first.', status: 'warning' });
          return;
        }
        M();
      },
      $ = () => {
        if (!l) {
          n({
            message: 'Not currently recording. Please start recording first.',
            status: 'warning',
          });
          return;
        }
        A();
      },
      L = async (z) => {
        if (z.shiftKey && z.altKey && z.code === 'KeyL' && o !== 'browser') {
          if (!window.MediaRecorder) {
            n({ message: 'MediaRecorder is not supported in this browser', status: 'error' });
            return;
          }
          _ === !1 && (await P()), l ? A() : M(), z.preventDefault();
        }
      };
    return (
      p.useEffect(
        () => (
          window.addEventListener('keydown', L),
          () => {
            window.removeEventListener('keydown', L);
          }
        ),
        [l],
      ),
      {
        isListening: l,
        isLoading: T,
        text: r,
        externalStartRecording: q,
        externalStopRecording: $,
        clearText: I,
      }
    );
  },
  H1 = (e) => {
    const [n] = W(O.endpointSTT),
      o = n === 'external',
      [a, i] = p.useState(''),
      { isListening: s, isLoading: r, text: c, startRecording: l, stopRecording: d } = G1(),
      {
        isListening: _,
        isLoading: m,
        text: f,
        externalStartRecording: g,
        externalStopRecording: h,
        clearText: v,
      } = K1(e),
      x = o ? _ : s,
      y = o ? m : r,
      k = o ? f : c,
      C = o ? g : l,
      j = o ? h : d,
      w = x || (f && f.length > 0) ? f : k || '',
      T = (S) => {
        const R = Math.ceil(S.length / 119.99999999999999);
        let E = 0;
        const M = () => {
          E += R;
          const A = S.substring(0, E);
          i(A), E < S.length ? requestAnimationFrame(M) : i(S);
        };
        requestAnimationFrame(M);
      };
    return (
      p.useEffect(() => {
        w && T(w);
      }, [w]),
      {
        isListening: x,
        isLoading: y,
        startRecording: C,
        stopRecording: j,
        speechText: a,
        clearText: v,
      }
    );
  };
function W1({ setIsPlaying: e }) {
  const n = p.useRef(null);
  return (
    p.useEffect(() => {
      const o = () => {
          e(!1),
            console.log('message audio ended'),
            n.current && URL.revokeObjectURL(n.current.src);
        },
        a = () => {
          e(!0), console.log('message audio started');
        },
        i = () => {
          e(!1), console.log('message audio paused');
        },
        s = n.current;
      return (
        n.current &&
          ((n.current.muted = !0),
          n.current.addEventListener('ended', o),
          n.current.addEventListener('play', a),
          n.current.addEventListener('pause', i)),
        () => {
          s &&
            (s.removeEventListener('ended', o),
            s.removeEventListener('play', a),
            s.removeEventListener('pause', i),
            URL.revokeObjectURL(s.src));
        }
      );
    }, [e]),
    { audioRef: n }
  );
}
const J1 = (e, n) => {
  const o = new FormData();
  return o.append('input', e), o.append('voice', n), o;
};
function Q1(e, n, o = 0) {
  const a = D(),
    { showToast: i } = Ie(),
    s = Y(O.voice),
    r = Y(O.cacheTTS),
    c = Y(O.playbackRate),
    [l, d] = p.useState(!1),
    [_, m] = p.useState(!1),
    { audioRef: f } = W1({ setIsPlaying: m }),
    g = p.useRef(null),
    h = Y(O.globalAudioFetchingFamily(o)),
    v = Y(O.globalAudioPlayingFamily(o)),
    x = (E) => {
      const M = new Audio(E);
      f.current = M;
    },
    y = (E) => {
      const M = new Audio(E),
        A = () => {
          c && c !== 1 && c > 0 && (M.playbackRate = c);
        };
      A();
      const q = () => M.play().then(() => m(!0));
      q().catch(($) => {
        if (
          $ != null &&
          $.message &&
          $.message.includes('The play() request was interrupted by a call to pause()')
        )
          return (
            console.log('Play request was interrupted by a call to pause()'),
            A(),
            q().catch(console.error)
          );
        console.error($), i({ message: a('com_nav_audio_play_error', $.message), status: 'error' });
      }),
        (M.onended = () => {
          console.log('Cached message audio ended'), URL.revokeObjectURL(E), m(!1);
        }),
        (g.current = M);
    },
    k = (E) => {
      const M = document.createElement('a');
      (M.href = E), (M.download = 'audio.mp3'), M.click(), d(!1);
    },
    { mutate: C, isLoading: j } = H0({
      onMutate: (E) => {
        (E.get('input') ?? '').length >= 4096 &&
          i({ message: a('com_nav_long_audio_warning'), status: 'warning' });
      },
      onSuccess: async (E, M) => {
        try {
          const A = M.get('input') ?? '',
            q = new Blob([E], { type: 'audio/mpeg' });
          if (r && A) {
            const L = await caches.open('tts-responses'),
              z = new Request(A),
              B = new Response(q);
            L.put(z, B);
          }
          const $ = URL.createObjectURL(q);
          l && k($), x($);
        } catch (A) {
          i({ message: `Error processing audio: ${A.message}`, status: 'error' });
        }
      },
      onError: (E) => {
        i({ message: a('com_nav_audio_process_error', E.message), status: 'error' });
      },
    }),
    w = (E, M) => {
      const A = J1(E, s);
      d(M), C(A);
    },
    T = (E, M) => {
      r ? S(E, M) : w(E, M);
    },
    S = async (E, M) => {
      const A = await caches.match(E);
      if (!A) return w(E, M);
      const q = await A.blob(),
        $ = URL.createObjectURL(q);
      M ? k($) : y($);
    },
    I = () => {
      const E = document.getElementById(`audio-${e}`),
        M = (A) => {
          A && (A.pause(), A.src && URL.revokeObjectURL(A.src), (f.current = null));
        };
      M(E), M(g.current), m(!1);
    },
    P = p.useCallback(() => {
      g.current &&
        (g.current.pause(),
        g.current.src && URL.revokeObjectURL(g.current.src),
        (g.current = null),
        m(!1));
    }, []);
  p.useEffect(() => P, [P]);
  const F = p.useMemo(() => j || (n && h && !v), [j, h, v, n]),
    R = p.useMemo(() => _ || (n && v), [_, v, n]);
  return { generateSpeechExternal: T, cancelSpeech: I, isLoading: F, isSpeaking: R, audioRef: f };
}
function Z1() {
  const [e, n] = p.useState(!1);
  return {
    generateSpeechLocal: (i) => {
      const s = window.speechSynthesis;
      s.cancel();
      const r = new SpeechSynthesisUtterance(i);
      (r.onend = () => {
        n(!1);
      }),
        n(!0),
        s.speak(r);
    },
    cancelSpeechLocal: () => {
      window.speechSynthesis.cancel(), n(!1);
    },
    isSpeaking: e,
  };
}
const Y1 = (e, n, o = 0) => {
    const [a] = W(O.endpointTTS),
      i = a === 'external',
      { generateSpeechLocal: s, cancelSpeechLocal: r, isSpeaking: c } = Z1(),
      {
        generateSpeechExternal: l,
        cancelSpeech: d,
        isSpeaking: _,
        isLoading: m,
        audioRef: f,
      } = Q1(e.messageId, n, o),
      { pauseGlobalAudio: g } = Ks(o),
      h = i ? l : s,
      v = i ? d : r,
      x = i ? _ : c,
      y = p.useRef(!1),
      k = p.useRef(void 0);
    return {
      handleMouseDown: () => {
        (y.current = !0),
          (k.current = window.setTimeout(() => {
            if (y.current) {
              const T = (e == null ? void 0 : e.content) ?? (e == null ? void 0 : e.text) ?? '',
                S = typeof T == 'string' ? T : oc(T);
              h(S, !1);
            }
          }, 1e3));
      },
      handleMouseUp: () => {
        (y.current = !1), k.current && window.clearTimeout(k.current);
      },
      toggleSpeech: () => {
        if (x) console.log('canceling message audio speech'), v(), g();
        else {
          const T = (e == null ? void 0 : e.content) ?? (e == null ? void 0 : e.text) ?? '',
            S = typeof T == 'string' ? T : oc(T);
          h(S, !1);
        }
      },
      isSpeaking: x,
      isLoading: m,
      audioRef: f,
    };
  },
  zd = (e) => {
    const [n, o] = p.useState('');
    return (
      p.useEffect(() => {
        if (n.length || (e != null && e.avatar) || !(e != null && e.username)) return;
        (async () => {
          if (!e) return;
          const { username: i } = e,
            s = wu(ju, { seed: i, fontFamily: ['Verdana'], fontSize: 36 });
          try {
            const r = await s.toDataUri();
            o(r);
          } catch (r) {
            console.error('Failed to generate avatar:', r), o('');
          }
        })();
      }, [e, n.length]),
      n
    );
  };
function Zo(e = 0.01, n = 0.007, o) {
  const a = p.useCallback(
      (l) => {
        const m = l ? l / 1048576 : 0;
        return l ? (m <= 1 ? 0.1 : Math.max(0.05 / Math.sqrt(m), 0.002)) : n;
      },
      [n],
    ),
    i = p.useMemo(() => a(o), [o, a]),
    [s, r] = p.useState(e),
    c = p.useCallback((l) => (!o || l < 0.7 ? i : Math.max(5e-4, i * (1 - l))), [i, o]);
  return (
    p.useEffect(() => {
      let l, d;
      if (!(e >= 1 && s >= 1))
        return (
          e >= 1 && s < 1
            ? (r(0.99),
              (l = setTimeout(() => {
                r(1);
              }, 200)))
            : (d = setInterval(() => {
                r((_) => {
                  if (_ >= 1) return clearInterval(d), 1;
                  const m = c(_);
                  return Math.min(_ + m, 0.95);
                });
              }, 200)),
          () => {
            clearInterval(d), clearTimeout(l);
          }
        );
    }, [s, e, i, o, c]),
    s
  );
}
function Ld({ text: e, content: n }) {
  return p.useCallback(
    (a) => {
      a(!0);
      let i = e ?? '';
      n &&
        (i = n.reduce(
          (s, r, c) =>
            r.type === ee.TEXT
              ? s +
                r.text.value +
                (c === n.length - 1
                  ? ''
                  : `
`)
              : s,
          '',
        )),
        ds(i ?? ''),
        setTimeout(() => {
          a(!1);
        }, 3e3);
    },
    [e, n],
  );
}
function Pd(e) {
  var R;
  const n = p.useRef(''),
    { message: o, currentEditId: a, setCurrentEditId: i } = e,
    {
      ask: s,
      index: r,
      regenerate: c,
      isSubmitting: l,
      conversation: d,
      latestMessage: _,
      setAbortScroll: m,
      handleContinue: f,
      setLatestMessage: g,
    } = me(),
    h = Mt(),
    { text: v, content: x, children: y, messageId: k = null, isCreatedByUser: C } = o ?? {},
    j = k === a,
    w = !(y != null && y.length);
  p.useEffect(() => {
    if ((d == null ? void 0 : d.conversationId) === 'new' || !o || !w) return;
    const E = J_(o),
      M = `${(o == null ? void 0 : o.messageId) ?? ''}${dg(E)}`;
    M !== n.current && ((n.current = M), g({ ...o }));
  }, [w, o, g, d == null ? void 0 : d.conversationId]);
  const T = p.useCallback((E) => i && i(E ? -1 : k), [k, i]),
    S = p.useCallback(() => {
      m(!!l);
    }, [l, m]),
    I =
      he(d == null ? void 0 : d.endpoint) &&
      ((R = h == null ? void 0 : h[(d == null ? void 0 : d.endpoint) ?? '']) == null
        ? void 0
        : R[(o == null ? void 0 : o.model) ?? '']),
    P = () => {
      (l && C) || !o || c(o);
    },
    F = Ld({ text: v, content: x });
  return {
    ask: s,
    edit: j,
    index: r,
    isLast: w,
    assistant: I,
    enterEdit: T,
    conversation: d,
    isSubmitting: l,
    handleScroll: S,
    latestMessage: _,
    handleContinue: f,
    copyToClipboard: F,
    regenerateMessage: P,
  };
}
function X1({ targetRef: e, callback: n, smoothCallback: o }) {
  const a = (c, l) => {
      var d;
      (d = e.current) == null || d.scrollIntoView({ behavior: c }), l();
    },
    i = p.useCallback(
      ha(() => a('instant', n), 250, { leading: !0 }),
      [e],
    ),
    s = p.useCallback(
      ha(() => a('smooth', o), 750, { leading: !0 }),
      [e],
    );
  return {
    scrollToRef: i,
    handleSmoothToRef: (c) => {
      c.preventDefault(), s();
    },
  };
}
function ex(e) {
  const n = Y(O.autoScroll),
    o = p.useRef(),
    a = p.useRef(null),
    i = p.useRef(null),
    [s, r] = p.useState(!1),
    { conversation: c, setAbortScroll: l, isSubmitting: d, abortScroll: _ } = me(),
    { conversationId: m } = c ?? {},
    f = p.useCallback(() => {
      if (!a.current) return;
      const { scrollTop: y, scrollHeight: k, clientHeight: C } = a.current,
        j = Math.abs(k - y),
        w = Math.abs(C - j) / C,
        T = k > C && w >= 0.15;
      r(T);
    }, [a]);
  p.useLayoutEffect(() => {
    if (!a.current) return;
    const k = setTimeout(f, 650);
    return () => {
      clearTimeout(k);
    };
  }, [f]);
  const g = p.useCallback(() => {
      clearTimeout(o.current), (o.current = setTimeout(f, 100));
    }, [f]),
    h = () => r(!1),
    { scrollToRef: v, handleSmoothToRef: x } = X1({
      targetRef: i,
      callback: h,
      smoothCallback: () => {
        h(), l(!1);
      },
    });
  return (
    p.useEffect(() => {
      if (e)
        return (
          d && v && !_ && v(),
          () => {
            _ && v && (v == null || v.cancel());
          }
        );
    }, [d, e, v, _]),
    p.useEffect(() => {
      v && n && m !== 'new' && v();
    }, [n, m, v]),
    {
      conversation: c,
      scrollableRef: a,
      messagesEndRef: i,
      scrollToBottom: v,
      showScrollButton: s,
      handleSmoothToRef: x,
      debouncedHandleScroll: g,
    }
  );
}
function tx(e = {}) {
  const n = ye(O.availableTools),
    { onInstallError: o, onInstallSuccess: a, onUninstallError: i, onUninstallSuccess: s } = e,
    r = pd(),
    c = p.useCallback(
      (d, _) => {
        r.mutate(d, {
          onError: (m) => {
            o && o(m);
          },
          onSuccess: (...m) => {
            n((f) => ({ ...f, [_.pluginKey]: _ })), a && a(...m);
          },
        });
      },
      [r, o, a, n],
    ),
    l = p.useCallback(
      (d) => {
        r.mutate(
          { pluginKey: d, action: 'uninstall', auth: null },
          {
            onError: (_) => {
              i && i(_);
            },
            onSuccess: (..._) => {
              n((m) => {
                const f = { ...m };
                return delete f[d], f;
              }),
                s && s(..._);
            },
          },
        );
      },
      [r, i, s, n],
    );
  return { installPlugin: c, uninstallPlugin: l };
}
function Ed() {
  const [e, n] = p.useState(1),
    [o, a] = p.useState(1),
    [i, s] = p.useState(1),
    [r, c] = p.useState(!1),
    [l, d] = p.useState(''),
    [_, m] = p.useState(!1),
    [f, g] = p.useState(''),
    [h, v] = p.useState(!1),
    [x, y] = p.useState(void 0),
    k = (T) => {
      const S = T.offsetWidth;
      let I;
      if (S < 501) {
        s(8);
        return;
      } else S < 640 ? (I = 2) : S < 1024 ? (I = 3) : (I = 4);
      s(I * 2);
    },
    C = p.useCallback(
      (T) => {
        T !== null && (i === 1 && k(T), new ResizeObserver(() => k(T)).observe(T));
      },
      [i],
    );
  return {
    maxPage: e,
    setMaxPage: n,
    currentPage: o,
    setCurrentPage: a,
    itemsPerPage: i,
    setItemsPerPage: s,
    searchChanged: r,
    setSearchChanged: c,
    searchValue: l,
    setSearchValue: d,
    gridRef: C,
    handleSearch: (T) => {
      d(T.target.value), c(!0);
    },
    handleChangePage: (T) => {
      a(T);
    },
    error: _,
    setError: m,
    errorMessage: f,
    setErrorMessage: g,
    showPluginAuthForm: h,
    setShowPluginAuthForm: v,
    selectedPlugin: x,
    setSelectedPlugin: y,
  };
}
function nx({ setMessages: e, getMessages: n }) {
  const o = X(),
    a = p.useMemo(() => new Map(), []);
  return p.useCallback(
    ({ data: i, submission: s }) => {
      var k;
      const { type: r, messageId: c, thread_id: l, conversationId: d, index: _ } = i,
        m = n(),
        f =
          ((k = m == null ? void 0 : m.filter((C) => C.messageId !== c)) == null
            ? void 0
            : k.map((C) => ({ ...C, thread_id: l }))) ?? [],
        g = f[f.length - 1],
        { initialResponse: h } = s;
      let v = a.get(c);
      v ||
        ((v = {
          ...h,
          parentMessageId: g == null ? void 0 : g.messageId,
          conversationId: d,
          messageId: c,
          thread_id: l,
        }),
        a.set(c, v));
      const x = i[ee.TEXT],
        y = x && typeof x == 'string' ? { value: x } : i[r];
      r === ee.IMAGE_FILE && q_(o, y),
        (v.content = [...(v.content ?? [])]),
        (v.content[_] = { type: r, [r]: y }),
        r !== ee.TEXT &&
          h.content &&
          ((v.content[v.content.length - 1].type === ee.TOOL_CALL &&
            v.content[v.content.length - 1][ee.TOOL_CALL].progress === 1) ||
            v.content[v.content.length - 1].type === ee.IMAGE_FILE) &&
          v.content.push(h.content[0]),
        e([...f, v]);
    },
    [o, n, a, e],
  );
}
function Md(e = 0, n) {
  const o = ye(O.showStopButtonByIndex(e)),
    [a, i] = W(O.filesByIndex(e)),
    [s, r] = p.useState(!1),
    c = ei(),
    l = jd(),
    d = X(),
    { isAuthenticated: _ } = Re(),
    { newConversation: m } = sn(e),
    { useCreateConversationAtom: f } = O,
    { conversation: g, setConversation: h } = f(e),
    { conversationId: v, endpoint: x } = g ?? {},
    y = n === 'new' ? n : v ?? n ?? '';
  _d(v ?? '', { enabled: _ });
  const k = Ma(O.latestMessageFamily(e)),
    [C, j] = W(O.isSubmittingFamily(e)),
    [w, T] = W(O.latestMessageFamily(e)),
    S = ye(O.messagesSiblingIdxFamily((w == null ? void 0 : w.parentMessageId) ?? null)),
    I = p.useCallback(
      (De) => {
        d.setQueryData([G.messages, y], De);
      },
      [y, d],
    ),
    P = p.useCallback(() => d.getQueryData([G.messages, y]), [y, d]),
    { getExpiry: F } = Qo(x ?? ''),
    R = ye(O.submissionByIndex(e)),
    E = (
      { text: De, parentMessageId: Ye = null, conversationId: ot = null, messageId: Cn = null },
      {
        editedText: Ym = null,
        editedMessageId: Xm = null,
        resubmitFiles: eu = !1,
        isRegenerate: $n = !1,
        isContinued: ho = !1,
        isEdited: tu = !1,
      } = {},
    ) => {
      var kr, wr;
      if ((o(!1), C || De === '')) return;
      if (x === null) {
        console.error('No endpoint available');
        return;
      }
      if (((ot = ot ?? (g == null ? void 0 : g.conversationId) ?? null), ot == 'search')) {
        console.error('cannot send any message under search view!');
        return;
      }
      if (ho && !w) {
        console.error('cannot continue AI message without latestMessage!');
        return;
      }
      const _i = tu || ho;
      let cn = P() ?? [];
      De = De.trim();
      const di = mn();
      (Ye = Ye || (w == null ? void 0 : w.messageId) || xt.NO_PARENT),
        ot == 'new' && ((Ye = xt.NO_PARENT), (cn = []), (ot = null));
      const ln =
        cn == null
          ? void 0
          : cn.find((kt) => kt.messageId === (w == null ? void 0 : w.parentMessageId));
      let go = (ln == null ? void 0 : ln.thread_id) ?? (w == null ? void 0 : w.thread_id);
      go || (go = (kr = cn.find((kt) => kt.thread_id)) == null ? void 0 : kr.thread_id);
      const oa = d.getQueryData([G.endpoints]),
        fr = Ce(oa, x, 'type'),
        xr = Rh({ endpoint: x, endpointType: fr, conversation: g ?? {} }),
        { modelDisplayLabel: nu } = (oa == null ? void 0 : oa[x ?? '']) ?? {},
        vr = {
          ...xr,
          endpoint: x,
          endpointType: fr,
          modelDisplayLabel: nu,
          key: F(),
          thread_id: go,
        },
        ou = l({ model: g == null ? void 0 : g.model, ...vr }),
        aa = {
          text: De,
          sender: 'User',
          isCreatedByUser: !0,
          parentMessageId: Ye,
          conversationId: ot,
          messageId: ho && Cn ? Cn : di,
          thread_id: go,
          error: !1,
        };
      ($n || eu) && (ln == null ? void 0 : ln.files) && (wr = ln.files) != null && wr.length
        ? ((aa.files = ln.files), i(new Map()), c({}))
        : a.size > 0 &&
          ((aa.files = Array.from(a.values()).map((kt) => ({
            file_id: kt.file_id,
            filepath: kt.filepath,
            type: kt.type || '',
            height: kt.height,
            width: kt.width,
          }))),
          i(new Map()),
          c({}));
      const br = Ym ?? (w == null ? void 0 : w.text) ?? '',
        yr = _i ? br : '',
        mi = Xm ?? (w == null ? void 0 : w.messageId) ?? null,
        Nn = {
          sender: ou,
          text: yr,
          endpoint: x ?? '',
          parentMessageId: $n ? Cn : di,
          messageId: mi ?? `${$n ? Cn : di}_`,
          thread_id: go,
          conversationId: ot,
          unfinished: !1,
          isCreatedByUser: !1,
          isEdited: _i,
          iconURL: xr.iconURL,
          error: !1,
        };
      he(x)
        ? ((Nn.model = (g == null ? void 0 : g.assistant_id) ?? ''),
          (Nn.text = ''),
          (Nn.content = [{ type: ee.TEXT, [ee.TEXT]: { value: yr } }]))
        : o(!0),
        ho && (cn = cn.filter((kt) => kt.messageId !== mi));
      const ui = {
        conversation: { ...g, conversationId: ot },
        endpointOption: vr,
        userMessage: {
          ...aa,
          generation: br,
          responseMessageId: mi,
          overrideParentMessageId: $n ? Cn : null,
        },
        messages: cn,
        isEdited: _i,
        isContinued: ho,
        isRegenerate: $n,
        initialResponse: Nn,
      };
      I($n ? [...ui.messages, Nn] : [...ui.messages, aa, Nn]), T(Nn), R(ui);
    },
    M = ({ parentMessageId: De }) => {
      const Ye = P(),
        ot = Ye == null ? void 0 : Ye.find((Cn) => Cn.messageId == De);
      ot && ot.isCreatedByUser
        ? E({ ...ot }, { isRegenerate: !0 })
        : console.error(
            'Failed to regenerate the message: parentMessage not found or not created by user.',
          );
    },
    A = () => {
      if (!w) {
        console.error('Failed to regenerate the message: latestMessage not found.');
        return;
      }
      const De = P(),
        Ye = De == null ? void 0 : De.find((ot) => ot.messageId == w.parentMessageId);
      Ye && Ye.isCreatedByUser
        ? E({ ...Ye }, { isContinued: !0, isRegenerate: !0, isEdited: !0 })
        : console.error(
            'Failed to regenerate the message: parentMessage not found, or not created by user.',
          );
    },
    q = () => {
      R(null);
    },
    $ = (De) => {
      De.preventDefault(), q();
    },
    L = (De) => {
      De.preventDefault();
      const Ye = w == null ? void 0 : w.parentMessageId;
      if (!Ye) {
        console.error('Failed to regenerate the message: parentMessageId not found.');
        return;
      }
      M({ parentMessageId: Ye });
    },
    z = (De) => {
      De.preventDefault(), A(), S(0);
    },
    [B, U] = W(O.showBingToneSettingFamily(e)),
    [V, H] = W(O.showPopoverFamily(e)),
    [ne, re] = W(O.abortScrollFamily(e)),
    [Ee, yt] = W(O.presetByIndex(e)),
    [Yt, na] = W(O.optionSettingsFamily(e)),
    [po, li] = W(O.showAgentSettingsFamily(e));
  return {
    newConversation: m,
    conversation: g,
    setConversation: h,
    isSubmitting: C,
    setIsSubmitting: j,
    getMessages: P,
    setMessages: I,
    setSiblingIdx: S,
    latestMessage: w,
    setLatestMessage: T,
    resetLatestMessage: k,
    ask: E,
    index: e,
    regenerate: M,
    stopGenerating: q,
    handleStopGenerating: $,
    handleRegenerate: L,
    handleContinue: z,
    showPopover: V,
    setShowPopover: H,
    abortScroll: ne,
    setAbortScroll: re,
    showBingToneSetting: B,
    setShowBingToneSetting: U,
    preset: Ee,
    setPreset: yt,
    optionSettings: Yt,
    setOptionSettings: na,
    showAgentSettings: po,
    setShowAgentSettings: li,
    files: a,
    setFiles: i,
    filesLoading: s,
    setFilesLoading: r,
  };
}
function ox(e, n = 0) {
  const o = X(),
    a = z0(),
    i = ye(O.activeRunFamily(n)),
    { conversationId: s } = Kt(),
    { token: r, isAuthenticated: c } = Re(),
    [l, d] = p.useState(new Set()),
    _ = ye(O.showStopButtonByIndex(n)),
    {
      setMessages: m,
      getMessages: f,
      setConversation: g,
      setIsSubmitting: h,
      newConversation: v,
      resetLatestMessage: x,
    } = Md(n, s),
    y = nx({ setMessages: m, getMessages: f }),
    { data: k } = bt(),
    C = dd({ enabled: !!c && (k == null ? void 0 : k.checkBalance) }),
    j = p.useCallback(
      (R, E) => {
        const {
          messages: M,
          userMessage: A,
          plugin: q,
          plugins: $,
          initialResponse: L,
          isRegenerate: z = !1,
        } = E;
        m(
          z
            ? [...M, { ...L, text: R, plugin: q ?? null, plugins: $ ?? [] }]
            : [...M, A, { ...L, text: R, plugin: q ?? null, plugins: $ ?? [] }],
        );
      },
      [m],
    ),
    w = p.useCallback(
      (R, E) => {
        const { requestMessage: M, responseMessage: A, conversation: q } = R,
          { messages: $, isRegenerate: L = !1 } = E,
          z = q ?? E.conversation;
        if (L) {
          const U = [...$, A].filter((V) => V);
          m(U);
        } else {
          const U = [...$, M, A].filter((V) => V);
          m(U);
        }
        const B = q.conversationId !== E.conversation.conversationId;
        B && o.setQueryData([G.allConversations], (U) => U && Eo(U, E.conversation.conversationId)),
          B &&
            (M == null ? void 0 : M.parentMessageId) === xt.NO_PARENT &&
            setTimeout(() => {
              a.mutate({ conversationId: z.conversationId });
            }, 2500),
          g((U) => ({ ...U, ...z })),
          h(!1);
      },
      [m, g, a, o, h],
    ),
    T = p.useCallback(
      (R, E) => {
        const { conversationId: M, thread_id: A, responseMessage: q, requestMessage: $ } = R,
          { initialResponse: L, messages: z, userMessage: B } = E,
          U = z.filter((H) => H.messageId !== B.messageId);
        m([...U, $, { ...L, ...q }]);
        let V = {};
        g((H) => {
          var Ee;
          let ne = H == null ? void 0 : H.title;
          if (
            $.parentMessageId !== xt.NO_PARENT &&
            (Ee = ne == null ? void 0 : ne.toLowerCase()) != null &&
            Ee.includes('new chat')
          ) {
            const yt = o.getQueryData([G.allConversations]),
              Yt = Xi(yt, M);
            ne = Yt == null ? void 0 : Yt.title;
          }
          return (
            (V = Ft.parse({
              ...H,
              conversationId: M,
              thread_id: A,
              title: ne,
              messages: [$.messageId, q.messageId],
            })),
            V
          );
        }),
          o.setQueryData(
            [G.allConversations],
            (H) => H && ($.parentMessageId === xt.NO_PARENT ? Po(H, V) : Yi(H, V)),
          ),
          _(!0),
          x();
      },
      [m, g, o, _, x],
    ),
    S = p.useCallback(
      (R, E) => {
        const { messages: M, userMessage: A, isRegenerate: q = !1 } = E,
          $ = {
            ...E.initialResponse,
            parentMessageId: A == null ? void 0 : A.messageId,
            messageId: (A == null ? void 0 : A.messageId) + '_',
          };
        m(q ? [...M, $] : [...M, A, $]);
        const { conversationId: L, parentMessageId: z } = A;
        let B = {};
        g((U) => {
          var ne;
          let V = U == null ? void 0 : U.title;
          if (
            (q ? (A == null ? void 0 : A.overrideParentMessageId) : z) !== xt.NO_PARENT &&
            (ne = V == null ? void 0 : V.toLowerCase()) != null &&
            ne.includes('new chat')
          ) {
            const re = o.getQueryData([G.allConversations]),
              Ee = Xi(re, L);
            V = Ee == null ? void 0 : Ee.title;
          }
          return (B = Ft.parse({ ...U, conversationId: L, title: V })), B;
        }),
          o.setQueryData(
            [G.allConversations],
            (U) => U && (z === xt.NO_PARENT ? Po(U, B) : Yi(U, B)),
          ),
          x();
      },
      [m, g, o, x],
    ),
    I = p.useCallback(
      (R, E) => {
        const { requestMessage: M, responseMessage: A, conversation: q, runMessages: $ } = R,
          { messages: L, conversation: z, isRegenerate: B = !1 } = E;
        _(!1),
          d((H) => {
            var ne;
            return new Set(
              H.add((ne = E == null ? void 0 : E.initialResponse) == null ? void 0 : ne.messageId),
            );
          });
        const U = f();
        if (!(U != null && U.length)) return h(!1);
        $ ? m([...$]) : B && A ? m([...L, A]) : A && m([...L, M, A]);
        const V = q.conversationId !== z.conversationId;
        V && o.setQueryData([G.allConversations], (H) => H && Eo(H, z.conversationId)),
          V &&
            M &&
            M.parentMessageId === xt.NO_PARENT &&
            setTimeout(() => {
              a.mutate({ conversationId: q.conversationId });
            }, 2500),
          g((H) => {
            const ne = { ...H, ...q };
            return H != null && H.model && H.model !== z.model && (ne.model = H.model), ne;
          }),
          h(!1);
      },
      [a, o, f, m, g, h, _],
    ),
    P = p.useCallback(
      ({ data: R, submission: E }) => {
        const { messages: M, userMessage: A, initialResponse: q } = E;
        d((B) => new Set(B.add(q.messageId)));
        const $ =
            (A == null ? void 0 : A.conversationId) ?? (E == null ? void 0 : E.conversationId),
          L = (B) => {
            const U = B.responseMessage ?? B,
              V = { ...q, ...U, error: !0, parentMessageId: A == null ? void 0 : A.messageId };
            return V.messageId || (V.messageId = mn()), vi.parse(V);
          };
        if (!R) {
          const B = $ ?? mn(),
            U = L({
              text: 'Error connecting to server, try refreshing the page.',
              ...E,
              conversationId: B,
            });
          m([...M, A, U]),
            v({
              template: { conversationId: B },
              preset: wo.parse(E == null ? void 0 : E.conversation),
            }),
            h(!1);
          return;
        }
        if (!$ && !R.conversationId) {
          const B = mn(),
            U = L(R);
          m([...M, A, U]),
            v({
              template: { conversationId: B },
              preset: wo.parse(E == null ? void 0 : E.conversation),
            }),
            h(!1);
          return;
        } else if (!R.conversationId) {
          const B = L(R);
          m([...M, A, B]), h(!1);
          return;
        }
        console.log('Error:', R);
        const z = vi.parse({ ...R, error: !0, parentMessageId: A == null ? void 0 : A.messageId });
        m([...M, A, z]),
          R.conversationId &&
            s === 'new' &&
            v({
              template: { conversationId: R.conversationId },
              preset: wo.parse(E == null ? void 0 : E.conversation),
            }),
          h(!1);
      },
      [m, s, h, v],
    ),
    F = p.useCallback(
      async (R = '', E) => {
        var L, z, B;
        let M = '';
        try {
          const U = JSON.parse(localStorage.getItem(te.LAST_CONVO_SETUP) ?? '') ?? {},
            { conversationId: V, messages: H } = U;
          M = `${V}:${H == null ? void 0 : H[H.length - 1]}`;
        } catch (U) {
          console.error('Error getting last conversation setup'), console.error(U);
        }
        const { endpoint: A, endpointType: q } = (E == null ? void 0 : E.conversation) || {},
          $ = q ?? A;
        try {
          const U = await fetch(`${M_[$ ?? '']}/abort`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${r}` },
              body: JSON.stringify({ abortKey: he(A) ? M : R, endpoint: $ }),
            }),
            V = U.headers.get('content-type');
          if (V && V.includes('application/json')) {
            const H = await U.json();
            if ((console.log('aborted', H), U.status === 404)) {
              h(!1);
              return;
            }
            H.final ? I(H, E) : w(H, E);
          } else if (U.status === 204) {
            const H = { ...E.initialResponse },
              ne = {
                requestMessage: E.userMessage,
                responseMessage: H,
                conversation: E.conversation,
              };
            console.log('aborted', ne);
          } else
            throw new Error(
              'Unexpected response from server; Status: ' + U.status + ' ' + U.statusText,
            );
        } catch (U) {
          console.error('Error cancelling request'), console.error(U);
          const V = R ?? mn(),
            H =
              ((z = (L = E.initialResponse) == null ? void 0 : L.text) == null
                ? void 0
                : z.length) > 45
                ? (B = E.initialResponse) == null
                  ? void 0
                  : B.text
                : '',
            ne = {
              ...E,
              ...E.initialResponse,
              text: H ?? U.message ?? 'Error cancelling request',
              unfinished: !!H.length,
              error: !0,
            },
            re = vi.parse(ne);
          m([...E.messages, E.userMessage, re]),
            v({
              template: { conversationId: V },
              preset: wo.parse(E == null ? void 0 : E.conversation),
            }),
            h(!1);
        }
      },
      [r, h, I, w, m, v],
    );
  p.useEffect(() => {
    if (e === null || Object.keys(e).length === 0) return;
    let { userMessage: R } = e;
    const E = Gh(e);
    let { payload: M } = E;
    he(M.endpoint) && (M = On(M));
    const A = new Wi(E.server, {
      payload: JSON.stringify(M),
      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${r}` },
    });
    return (
      (A.onmessage = (q) => {
        const $ = JSON.parse(q.data);
        if ($.final) {
          const { plugins: L } = $;
          I($, { ...e, plugins: L }),
            k != null && k.checkBalance && C.refetch(),
            console.log('final', $);
        }
        if ($.created) {
          const L = mn();
          i(L),
            (R = {
              ...R,
              ...$.message,
              overrideParentMessageId: R == null ? void 0 : R.overrideParentMessageId,
            }),
            S($, { ...e, userMessage: R });
        } else if ($.sync) {
          const L = mn();
          i(L), T($, { ...e, userMessage: R });
        } else if ($.type) y({ data: $, submission: e });
        else {
          const L = $.text || $.response,
            { plugin: z, plugins: B } = $,
            U = {
              ...e.initialResponse,
              parentMessageId: $.parentMessageId,
              messageId: $.messageId,
            };
          $.message && j(L, { ...e, plugin: z, plugins: B, userMessage: R, initialResponse: U });
        }
      }),
      (A.onopen = () => console.log('connection is opened')),
      (A.oncancel = async () => {
        var $;
        const q = ($ = e == null ? void 0 : e.initialResponse) == null ? void 0 : $.messageId;
        if (l.has(q)) {
          h(!1), d((L) => (L.delete(q), new Set(L)));
          return;
        }
        return (
          d((L) => new Set(L.add(q))),
          await F(
            (R == null ? void 0 : R.conversationId) ?? (e == null ? void 0 : e.conversationId),
            e,
          )
        );
      }),
      (A.onerror = function (q) {
        console.log('error in server stream.'), k != null && k.checkBalance && C.refetch();
        let $;
        try {
          $ = JSON.parse(q.data);
        } catch (L) {
          console.error(L), console.log(q), h(!1);
        }
        P({ data: $, submission: { ...e, userMessage: R } });
      }),
      h(!0),
      A.stream(),
      () => {
        const q = A.readyState <= 1;
        if ((A.close(), q)) {
          const $ = new Event('cancel');
          A.dispatchEvent($);
        }
      }
    );
  }, [e]);
}
const Rd = ze.createContext(void 0),
  ax = ({ value: e, children: n }) => {
    const [o, a] = p.useState(!1);
    return t.jsx(Rd.Provider, { value: e ?? { error: o, setError: a }, children: n });
  },
  Od = () => {
    const e = ze.useContext(Rd);
    if (e === void 0)
      throw new Error('useApiErrorBoundary must be used inside ApiErrorBoundaryProvider');
    return e;
  };
function Dn(e) {
  const [n, o] = p.useState(!1);
  return (
    p.useEffect(() => {
      const a = window.matchMedia(e);
      a.matches !== n && o(a.matches);
      const i = () => o(a.matches);
      return a.addEventListener('change', i), () => a.removeEventListener('change', i);
    }, [n, e]),
    n
  );
}
function Yo(e, n) {
  const [o, a] = p.useState(n);
  return (
    p.useEffect(() => {
      const s = localStorage.getItem(e);
      s || localStorage.setItem(e, JSON.stringify(n)), a(s ? JSON.parse(s) : n);
      function r(c) {
        if (c.key !== e) return;
        const l = localStorage.getItem(e);
        a(JSON.parse(l ?? ''));
      }
      return (
        window.addEventListener('storage', r),
        () => {
          window.removeEventListener('storage', r);
        }
      );
    }, []),
    [
      o,
      (s) => {
        try {
          a(s),
            localStorage.setItem(e, JSON.stringify(s)),
            typeof window < 'u' && window.dispatchEvent(new StorageEvent('storage', { key: e }));
        } catch (r) {
          console.error(r);
        }
      },
    ]
  );
}
const ix = (e) => {
  const [n, o] = p.useState(!0);
  return (
    p.useEffect(() => {
      const a = setTimeout(() => o(!1), e);
      return () => clearTimeout(a);
    }, []),
    (a) => !n && a()
  );
};
function ro(e, n, o, a) {
  p.useEffect(() => {
    const i = (s) => {
      const r = s.target;
      (r && 'id' in r && o.includes(r.id)) ||
        (r != null && r.parentNode && 'id' in r.parentNode && o.includes(r.parentNode.id)) ||
        (a && a(r)) ||
        (e.current && !e.current.contains(r) && n());
    };
    return (
      document.addEventListener('mousedown', i),
      () => {
        document.removeEventListener('mousedown', i);
      }
    );
  }, [e, n]);
}
function sx({ endpoint: e, message: n, isSubmitting: o, isEditing: a = !1, latestMessage: i }) {
  const { error: s, messageId: r, searchResult: c, finish_reason: l, isCreatedByUser: d } = n ?? {},
    _ = !![N.openAI, N.custom, N.google, N.anthropic, N.gptPlugins, N.azureOpenAI].find(
      (x) => x === e,
    ),
    m = (i == null ? void 0 : i.messageId) === r && l && l !== 'stop' && !a && !c && _,
    f = !![
      N.azureOpenAI,
      N.openAI,
      N.custom,
      N.chatGPTBrowser,
      N.google,
      N.bingAI,
      N.gptPlugins,
      N.anthropic,
    ].find((x) => x === e),
    g = !d && !c && !a && !o && f,
    h = o || s || c || !f || (!_ && !d);
  return {
    forkingSupported: !he(e) && !c,
    continueSupported: m,
    regenerateEnabled: g,
    isEditableEndpoint: _,
    hideEditButton: h,
  };
}
function rx() {
  const { toast: e, onOpenChange: n } = fd(),
    o = {
      [ct.INFO]: 'border-gray-500 bg-gray-500',
      [ct.SUCCESS]: 'border-green-500 bg-green-500',
      [ct.WARNING]: 'border-orange-500 bg-orange-500',
      [ct.ERROR]: 'border-red-500 bg-red-500',
    };
  return t.jsx(Cu, {
    open: e.open,
    onOpenChange: n,
    className: 'toast-root',
    style: { height: '74px', marginBottom: '0px' },
    children: t.jsx('div', {
      className: 'w-full p-1 text-center md:w-auto md:text-justify',
      children: t.jsxs('div', {
        className: `alert-root pointer-events-auto inline-flex flex-row gap-2 rounded-md border px-3 py-2 text-white ${
          o[e.severity]
        }`,
        role: 'alert',
        children: [
          e.showIcon &&
            t.jsx('div', {
              className: 'mt-1 flex-shrink-0 flex-grow-0',
              children: t.jsxs('svg', {
                stroke: 'currentColor',
                fill: 'none',
                strokeWidth: '2',
                viewBox: '0 0 24 24',
                strokeLinecap: 'round',
                strokeLinejoin: 'round',
                className: 'icon-sm',
                height: '1em',
                width: '1em',
                xmlns: 'http://www.w3.org/2000/svg',
                children: [
                  t.jsx('polygon', {
                    points:
                      '7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2',
                  }),
                  t.jsx('line', { x1: '12', y1: '8', x2: '12', y2: '12' }),
                  t.jsx('line', { x1: '12', y1: '16', x2: '12.01', y2: '16' }),
                ],
              }),
            }),
          t.jsx(Nu, {
            className: 'flex-1 justify-center gap-2',
            children: t.jsx('div', {
              className: 'whitespace-pre-wrap text-left',
              children: e.message,
            }),
          }),
        ],
      }),
    }),
  });
}
const Dd = ({ children: e }) =>
    t.jsx('div', {
      className:
        'rounded-md border border-red-500 bg-red-500/10 px-3 py-2 text-sm text-gray-600 dark:text-gray-200',
      role: 'alert',
      children: e,
    }),
  cx = ({ onSubmit: e, startupConfig: n, error: o, setError: a }) => {
    const i = D(),
      {
        register: s,
        getValues: r,
        handleSubmit: c,
        formState: { errors: l },
      } = an(),
      [d, _] = p.useState(!1);
    p.useEffect(() => {
      o && o.includes('422') && !d && _(!0);
    }, [o, d]);
    const m = ad({
      onMutate: () => {
        a(void 0), _(!1);
      },
    });
    if (!n) return null;
    const f = (h) => {
        var x;
        const v = (x = l[h]) == null ? void 0 : x.message;
        return v
          ? t.jsx('span', {
              role: 'alert',
              className: 'mt-1 text-sm text-red-500 dark:text-red-900',
              children: String(v),
            })
          : null;
      },
      g = () => {
        const h = r('email');
        if (!h) return _(!1);
        m.mutate({ email: h });
      };
    return t.jsxs(t.Fragment, {
      children: [
        d &&
          t.jsxs('div', {
            className:
              'mt-2 rounded-md border border-green-500 bg-green-500/10 px-3 py-2 text-sm text-gray-600 dark:text-gray-200',
            children: [
              i('com_auth_email_verification_resend_prompt'),
              t.jsx('button', {
                type: 'button',
                className: 'ml-2 text-blue-600 hover:underline',
                onClick: g,
                disabled: m.isLoading,
                children: i('com_auth_email_resend_link'),
              }),
            ],
          }),
        t.jsxs('form', {
          className: 'mt-6',
          'aria-label': 'Login form',
          method: 'POST',
          onSubmit: c((h) => e(h)),
          children: [
            t.jsxs('div', {
              className: 'mb-2',
              children: [
                t.jsxs('div', {
                  className: 'relative',
                  children: [
                    t.jsx('input', {
                      type: 'text',
                      id: 'email',
                      autoComplete: 'email',
                      'aria-label': i('com_auth_email'),
                      ...s('email', {
                        required: i('com_auth_email_required'),
                        maxLength: { value: 120, message: i('com_auth_email_max_length') },
                        pattern: { value: /\S+@\S+\.\S+/, message: i('com_auth_email_pattern') },
                      }),
                      'aria-invalid': !!l.email,
                      className:
                        'webkit-dark-styles peer block w-full appearance-none rounded-md border border-gray-300 bg-transparent px-3.5 pb-3.5 pt-4 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0 dark:border-gray-600 dark:text-white dark:focus:border-green-500',
                      placeholder: ' ',
                    }),
                    t.jsx('label', {
                      htmlFor: 'email',
                      className:
                        'absolute start-1 top-2 z-10 origin-[0] -translate-y-4 scale-75 transform bg-white px-3 text-sm text-gray-500 duration-100 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:px-3 peer-focus:text-green-600 dark:bg-gray-900 dark:text-gray-400 dark:peer-focus:text-green-500 rtl:peer-focus:left-auto rtl:peer-focus:translate-x-1/4',
                      children: i('com_auth_email_address'),
                    }),
                  ],
                }),
                f('email'),
              ],
            }),
            t.jsxs('div', {
              className: 'mb-2',
              children: [
                t.jsxs('div', {
                  className: 'relative',
                  children: [
                    t.jsx('input', {
                      type: 'password',
                      id: 'password',
                      autoComplete: 'current-password',
                      'aria-label': i('com_auth_password'),
                      ...s('password', {
                        required: i('com_auth_password_required'),
                        minLength: { value: 8, message: i('com_auth_password_min_length') },
                        maxLength: { value: 128, message: i('com_auth_password_max_length') },
                      }),
                      'aria-invalid': !!l.password,
                      className:
                        'webkit-dark-styles peer block w-full appearance-none rounded-md border border-gray-300 bg-transparent px-3.5 pb-3.5 pt-4 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0 dark:border-gray-600 dark:text-white dark:focus:border-green-500',
                      placeholder: ' ',
                    }),
                    t.jsx('label', {
                      htmlFor: 'password',
                      className:
                        'absolute start-1 top-2 z-10 origin-[0] -translate-y-4 scale-75 transform bg-white px-3 text-sm text-gray-500 duration-100 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:px-3 peer-focus:text-green-600 dark:bg-gray-900 dark:text-gray-400 dark:peer-focus:text-green-500 rtl:peer-focus:left-auto rtl:peer-focus:translate-x-1/4',
                      children: i('com_auth_password'),
                    }),
                  ],
                }),
                f('password'),
              ],
            }),
            n.passwordResetEnabled &&
              t.jsx('a', {
                href: '/forgot-password',
                className: 'text-sm text-green-500',
                children: i('com_auth_password_forgot'),
              }),
            t.jsx('div', {
              className: 'mt-6',
              children: t.jsx('button', {
                'aria-label': 'Sign in',
                'data-testid': 'login-button',
                type: 'submit',
                className:
                  'w-full transform rounded-md bg-green-500 px-4 py-3 tracking-wide text-white transition-colors duration-200 hover:bg-green-550 focus:bg-green-550 focus:outline-none disabled:cursor-not-allowed disabled:hover:bg-green-500',
                children: i('com_auth_continue'),
              }),
            }),
          ],
        }),
      ],
    });
  };
function lx() {
  const e = D(),
    { error: n, setError: o, login: a } = Re(),
    { startupConfig: i } = qo();
  return t.jsxs(t.Fragment, {
    children: [
      n && t.jsx(Dd, { children: e(xg(n)) }),
      (i == null ? void 0 : i.emailLoginEnabled) &&
        t.jsx(cx, { onSubmit: a, startupConfig: i, error: n, setError: o }),
      (i == null ? void 0 : i.registrationEnabled) &&
        t.jsxs('p', {
          className: 'my-4 text-center text-sm font-light text-gray-700 dark:text-white',
          children: [
            ' ',
            e('com_auth_no_account'),
            ' ',
            t.jsx('a', {
              href: '/register',
              className: 'p-1 text-green-500',
              children: e('com_auth_sign_up'),
            }),
          ],
        }),
    ],
  });
}
const _x = () => {
  const e = _t(),
    n = D(),
    { startupConfig: o, startupConfigError: a, isFetching: i } = qo(),
    {
      watch: s,
      register: r,
      handleSubmit: c,
      formState: { errors: l },
    } = an({ mode: 'onChange' }),
    d = s('password'),
    [_, m] = p.useState(''),
    [f, g] = p.useState(3),
    h = Wf({
      onSuccess: () => {
        g(3);
        const x = setInterval(() => {
          g((y) => (y <= 1 ? (clearInterval(x), e('/c/new', { replace: !0 }), 0) : y - 1));
        }, 1e3);
      },
      onError: (x) => {
        var y, k, C, j;
        (k = (y = x.response) == null ? void 0 : y.data) != null &&
          k.message &&
          m(((j = (C = x.response) == null ? void 0 : C.data) == null ? void 0 : j.message) ?? '');
      },
    });
  p.useEffect(() => {
    (o == null ? void 0 : o.registrationEnabled) === !1 && e('/login');
  }, [o, e]);
  const v = (x, y, k, C) => {
    var j;
    return t.jsxs('div', {
      className: 'mb-2',
      children: [
        t.jsxs('div', {
          className: 'relative',
          children: [
            t.jsx('input', {
              id: x,
              type: k,
              autoComplete: x,
              'aria-label': n(y),
              ...r(x, C),
              'aria-invalid': !!l[x],
              className:
                'webkit-dark-styles peer block w-full appearance-none rounded-md border border-gray-300 bg-transparent px-3.5 pb-3.5 pt-4 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0 dark:border-gray-600 dark:text-white dark:focus:border-green-500',
              placeholder: ' ',
              'data-testid': x,
            }),
            t.jsx('label', {
              htmlFor: x,
              className:
                'absolute start-1 top-2 z-10 origin-[0] -translate-y-4 scale-75 transform bg-white px-3 text-sm text-gray-500 duration-100 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:px-3 peer-focus:text-green-600 dark:bg-gray-900 dark:text-gray-400 dark:peer-focus:text-green-500 rtl:peer-focus:left-auto rtl:peer-focus:translate-x-1/4',
              children: n(y),
            }),
          ],
        }),
        l[x] &&
          t.jsx('span', {
            role: 'alert',
            className: 'mt-1 text-sm text-red-500 dark:text-red-900',
            children: String((j = l[x]) == null ? void 0 : j.message) ?? '',
          }),
      ],
    });
  };
  return t.jsxs(t.Fragment, {
    children: [
      _ && t.jsxs(Dd, { children: [n('com_auth_error_create'), ' ', _] }),
      h.isSuccess &&
        f > 0 &&
        t.jsx('div', {
          className:
            'rounded-md border border-green-500 bg-green-500/10 px-3 py-2 text-sm text-gray-600 dark:text-gray-200',
          role: 'alert',
          children:
            n(
              o != null && o.emailEnabled
                ? 'com_auth_registration_success_generic'
                : 'com_auth_registration_success_insecure',
            ) +
            ' ' +
            n('com_auth_email_verification_redirecting', f.toString()),
        }),
      !a &&
        !i &&
        t.jsxs(t.Fragment, {
          children: [
            t.jsxs('form', {
              className: 'mt-6',
              'aria-label': 'Registration form',
              method: 'POST',
              onSubmit: c((x) => h.mutate(x)),
              children: [
                v('name', 'com_auth_full_name', 'text', {
                  required: n('com_auth_name_required'),
                  minLength: { value: 3, message: n('com_auth_name_min_length') },
                  maxLength: { value: 80, message: n('com_auth_name_max_length') },
                }),
                v('username', 'com_auth_username', 'text', {
                  minLength: { value: 2, message: n('com_auth_username_min_length') },
                  maxLength: { value: 80, message: n('com_auth_username_max_length') },
                }),
                v('email', 'com_auth_email', 'email', {
                  required: n('com_auth_email_required'),
                  minLength: { value: 1, message: n('com_auth_email_min_length') },
                  maxLength: { value: 120, message: n('com_auth_email_max_length') },
                  pattern: { value: /\S+@\S+\.\S+/, message: n('com_auth_email_pattern') },
                }),
                v('password', 'com_auth_password', 'password', {
                  required: n('com_auth_password_required'),
                  minLength: { value: 8, message: n('com_auth_password_min_length') },
                  maxLength: { value: 128, message: n('com_auth_password_max_length') },
                }),
                v('confirm_password', 'com_auth_password_confirm', 'password', {
                  validate: (x) => x === d || n('com_auth_password_not_match'),
                }),
                t.jsx('div', {
                  className: 'mt-6',
                  children: t.jsx('button', {
                    disabled: Object.keys(l).length > 0,
                    type: 'submit',
                    'aria-label': 'Submit registration',
                    className:
                      'w-full transform rounded-md bg-green-500 px-4 py-3 tracking-wide text-white transition-colors duration-200 hover:bg-green-550 focus:bg-green-550 focus:outline-none disabled:cursor-not-allowed disabled:hover:bg-green-500',
                    children: n('com_auth_continue'),
                  }),
                }),
              ],
            }),
            t.jsxs('p', {
              className: 'my-4 text-center text-sm font-light text-gray-700 dark:text-white',
              children: [
                n('com_auth_already_have_account'),
                ' ',
                t.jsx('a', {
                  href: '/login',
                  'aria-label': 'Login',
                  className: 'p-1 text-green-500',
                  children: n('com_auth_login'),
                }),
              ],
            }),
          ],
        }),
    ],
  });
};
function dx() {
  const e = D(),
    {
      register: n,
      handleSubmit: o,
      watch: a,
      formState: { errors: i },
    } = an(),
    s = _t(),
    [r] = jl(),
    c = a('password'),
    l = Zf(),
    { setError: d, setHeaderText: _ } = qo(),
    m = (f) => {
      l.mutate(f, {
        onError: () => {
          d('com_auth_error_invalid_reset_token');
        },
        onSuccess: () => {
          _('com_auth_reset_password_success');
        },
      });
    };
  return l.isSuccess
    ? t.jsxs(t.Fragment, {
        children: [
          t.jsx('div', {
            className:
              'relative mb-8 mt-4 rounded border border-green-400 bg-green-100 px-4 py-3 text-center text-green-700 dark:bg-gray-900 dark:text-white',
            role: 'alert',
            children: e('com_auth_login_with_new_password'),
          }),
          t.jsx('button', {
            onClick: () => s('/login'),
            'aria-label': e('com_auth_sign_in'),
            className:
              'w-full transform rounded-md bg-green-500 px-4 py-3 tracking-wide text-white transition-colors duration-200 hover:bg-green-600 focus:bg-green-600 focus:outline-none',
            children: e('com_auth_continue'),
          }),
        ],
      })
    : t.jsxs('form', {
        className: 'mt-6',
        'aria-label': 'Password reset form',
        method: 'POST',
        onSubmit: o(m),
        children: [
          t.jsxs('div', {
            className: 'mb-2',
            children: [
              t.jsxs('div', {
                className: 'relative',
                children: [
                  t.jsx('input', {
                    type: 'hidden',
                    id: 'token',
                    value: r.get('token') ?? '',
                    ...n('token', { required: 'Unable to process: No valid reset token' }),
                  }),
                  t.jsx('input', {
                    type: 'hidden',
                    id: 'userId',
                    value: r.get('userId') ?? '',
                    ...n('userId', { required: 'Unable to process: No valid user id' }),
                  }),
                  t.jsx('input', {
                    type: 'password',
                    id: 'password',
                    autoComplete: 'current-password',
                    'aria-label': e('com_auth_password'),
                    ...n('password', {
                      required: e('com_auth_password_required'),
                      minLength: { value: 8, message: e('com_auth_password_min_length') },
                      maxLength: { value: 128, message: e('com_auth_password_max_length') },
                    }),
                    'aria-invalid': !!i.password,
                    className:
                      'webkit-dark-styles peer block w-full appearance-none rounded-md border border-gray-300 bg-transparent px-3.5 pb-3.5 pt-4 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0 dark:border-gray-600 dark:text-white dark:focus:border-green-500',
                    placeholder: ' ',
                  }),
                  t.jsx('label', {
                    htmlFor: 'password',
                    className:
                      'absolute start-1 top-2 z-10 origin-[0] -translate-y-4 scale-75 transform bg-white px-3 text-sm text-gray-500 duration-100 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:px-3 peer-focus:text-green-600 dark:bg-gray-900 dark:text-gray-400 dark:peer-focus:text-green-500 rtl:peer-focus:left-auto rtl:peer-focus:translate-x-1/4',
                    children: e('com_auth_password'),
                  }),
                ],
              }),
              i.password &&
                t.jsx('span', {
                  role: 'alert',
                  className: 'mt-1 text-sm text-red-500 dark:text-red-900',
                  children: i.password.message,
                }),
            ],
          }),
          t.jsxs('div', {
            className: 'mb-2',
            children: [
              t.jsxs('div', {
                className: 'relative',
                children: [
                  t.jsx('input', {
                    type: 'password',
                    id: 'confirm_password',
                    'aria-label': e('com_auth_password_confirm'),
                    ...n('confirm_password', {
                      validate: (f) => f === c || e('com_auth_password_not_match'),
                    }),
                    'aria-invalid': !!i.confirm_password,
                    className:
                      'webkit-dark-styles peer block w-full appearance-none rounded-md border border-gray-300 bg-transparent px-3.5 pb-3.5 pt-4 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0 dark:border-gray-600 dark:text-white dark:focus:border-green-500',
                    placeholder: ' ',
                  }),
                  t.jsx('label', {
                    htmlFor: 'confirm_password',
                    className:
                      'absolute start-1 top-2 z-10 origin-[0] -translate-y-4 scale-75 transform bg-white px-3 text-sm text-gray-500 duration-100 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:px-3 peer-focus:text-green-600 dark:bg-gray-900 dark:text-gray-400 dark:peer-focus:text-green-500 rtl:peer-focus:left-auto rtl:peer-focus:translate-x-1/4',
                    children: e('com_auth_password_confirm'),
                  }),
                ],
              }),
              i.confirm_password &&
                t.jsx('span', {
                  role: 'alert',
                  className: 'mt-1 text-sm text-red-500 dark:text-red-900',
                  children: i.confirm_password.message,
                }),
              i.token &&
                t.jsx('span', {
                  role: 'alert',
                  className: 'mt-1 text-sm text-red-500 dark:text-red-900',
                  children: i.token.message,
                }),
              i.userId &&
                t.jsx('span', {
                  role: 'alert',
                  className: 'mt-1 text-sm text-red-500 dark:text-red-900',
                  children: i.userId.message,
                }),
            ],
          }),
          t.jsx('div', {
            className: 'mt-6',
            children: t.jsx('button', {
              disabled: !!i.password || !!i.confirm_password,
              type: 'submit',
              'aria-label': e('com_auth_submit_registration'),
              className:
                'w-full transform rounded-md bg-green-500 px-4 py-3 tracking-wide text-white transition-all duration-300 hover:bg-green-550 focus:bg-green-550 focus:outline-none',
              children: e('com_auth_continue'),
            }),
          }),
        ],
      });
}
const Fd = ({ className: e = '', children: n, ...o }) =>
  t.jsx(zl, {
    className: b(e),
    ...o,
    children: t.jsx('div', {
      className: 'fixed inset-0 z-50 flex items-end justify-center sm:items-center',
      children: n,
    }),
  });
Fd.displayName = zl.displayName;
const Bd = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(Cl, {
    className: b(
      'fixed inset-0 z-50 bg-gray-500/90 transition-opacity animate-in fade-in dark:bg-gray-800/90',
      e,
    ),
    ...n,
    ref: o,
  }),
);
Bd.displayName = Cl.displayName;
const mx = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsxs(Fd, {
    children: [
      t.jsx(Bd, {}),
      t.jsx(Nl, {
        ref: o,
        className: b(
          'fixed z-50 grid w-full max-w-lg scale-100 gap-4 bg-white p-6 opacity-100 animate-in fade-in-90 slide-in-from-bottom-10 sm:rounded-lg sm:zoom-in-90 sm:slide-in-from-bottom-0 md:w-full',
          'dark:bg-gray-900',
          e,
        ),
        ...n,
      }),
    ],
  }),
);
mx.displayName = Nl.displayName;
const ux = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(Sl, {
    ref: o,
    className: b('text-lg font-semibold text-gray-900', 'dark:text-gray-50', e),
    ...n,
  }),
);
ux.displayName = Sl.displayName;
const px = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(Al, { ref: o, className: b('text-sm text-gray-500', 'dark:text-gray-400', e), ...n }),
);
px.displayName = Al.displayName;
const hx = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(Tl, {
    ref: o,
    className: b(
      'inline-flex h-10 items-center justify-center rounded-md bg-gray-900 px-4 py-2 text-sm font-semibold text-white transition-colors hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:bg-gray-100 dark:text-gray-900 dark:hover:bg-gray-100 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900',
      e,
    ),
    ...n,
  }),
);
hx.displayName = Tl.displayName;
const gx = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(Il, {
    ref: o,
    className: b(
      'mt-2 inline-flex h-10 items-center justify-center rounded-md border border-gray-200 bg-transparent px-4 py-2 text-sm font-semibold text-gray-900 transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-700 dark:text-gray-100 dark:hover:bg-gray-800 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900 sm:mt-0',
      e,
    ),
    ...n,
  }),
);
gx.displayName = Il.displayName;
const ss = Su(
    'rounded-md inline-flex items-center justify-center text-sm font-medium transition-colors dark:hover:bg-gray-700 dark:hover:text-gray-100 disabled:opacity-50 disabled:pointer-events-none data-[state=open]:bg-gray-100 dark:data-[state=open]:bg-gray-700',
    {
      variants: {
        variant: {
          default: 'bg-gray-750 text-white hover:bg-gray-800 dark:bg-gray-50 dark:text-gray-900',
          destructive: 'bg-red-500 text-white hover:bg-red-600 dark:hover:bg-red-600',
          outline:
            'bg-transparent border border-gray-200 hover:bg-gray-100 dark:border-gray-700 dark:text-gray-100',
          subtle: 'bg-gray-100 text-gray-900 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-100',
          ghost:
            'bg-transparent hover:bg-gray-100 dark:hover:bg-gray-800 dark:text-gray-100 dark:hover:text-gray-100 data-[state=open]:bg-transparent dark:data-[state=open]:bg-transparent',
          link: 'bg-transparent underline-offset-4 hover:underline text-gray-900 dark:text-gray-100 hover:bg-transparent dark:hover:bg-transparent',
        },
        size: {
          default: 'h-10 py-2 px-4',
          sm: 'h-9 px-2 rounded-md',
          lg: 'h-11 px-8 rounded-md',
          icon: 'h-10 w-10',
        },
      },
      defaultVariants: { variant: 'default', size: 'default' },
    },
  ),
  Ne = p.forwardRef(({ className: e, variant: n, size: o, customId: a, ...i }, s) =>
    t.jsx('button', {
      className: b(ss({ variant: n, size: o, className: e })),
      ref: s,
      ...i,
      id: a ?? (i == null ? void 0 : i.id) ?? 'shadcn-button',
    }),
  );
Ne.displayName = 'Button';
const vt = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(Ll, {
    ref: o,
    className: b(
      'peer h-4 w-4 shrink-0 rounded-sm border border-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-500 dark:text-gray-50 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900',
      e,
    ),
    ...n,
    children: t.jsx(Au, {
      className: b('flex items-center justify-center'),
      children: t.jsx(ms, { className: 'h-4 w-4' }),
    }),
  }),
);
vt.displayName = Ll.displayName;
const $d = Lu,
  qd = Pu,
  fx = p.forwardRef(({ className: e = '', inset: n, children: o, ...a }, i) =>
    t.jsxs(Pl, {
      ref: i,
      className: b(
        'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm font-medium outline-none focus:bg-gray-100 data-[state=open]:bg-gray-100 dark:focus:bg-gray-900 dark:data-[state=open]:bg-gray-900',
        n ? 'pl-8' : '',
        e,
      ),
      ...a,
      children: [o, t.jsx(Tu, { className: 'ml-auto h-4 w-4' })],
    }),
  );
fx.displayName = Pl.displayName;
const xx = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(El, {
    ref: o,
    className: b(
      'z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-100 bg-white p-1 text-gray-700 shadow-md animate-in slide-in-from-left-1 dark:border-gray-800 dark:bg-gray-800 dark:text-gray-400',
      e,
    ),
    ...n,
  }),
);
xx.displayName = El.displayName;
const Ws = p.forwardRef(({ className: e = '', sideOffset: n = 4, ...o }, a) =>
  t.jsx(Iu, {
    children: t.jsx(Ml, {
      ref: a,
      sideOffset: n,
      className: b(
        'z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-100 bg-white p-1 text-gray-700 shadow-md animate-in data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-800 dark:text-gray-400',
        e,
      ),
      ...o,
    }),
  }),
);
Ws.displayName = Ml.displayName;
const jo = p.forwardRef(({ className: e = '', inset: n, ...o }, a) =>
  t.jsx(Rl, {
    ref: a,
    className: b(
      'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm font-medium outline-none focus:bg-gray-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-900',
      n ? 'pl-8' : '',
      e,
    ),
    ...o,
  }),
);
jo.displayName = Rl.displayName;
const Ud = p.forwardRef(({ className: e = '', children: n, checked: o, ...a }, i) =>
  t.jsxs(Ol, {
    ref: i,
    className: b(
      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm font-medium outline-none focus:bg-gray-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-900',
      e,
    ),
    checked: o,
    ...a,
    children: [
      t.jsx('span', {
        className: 'absolute left-2 flex h-3.5 w-3.5 items-center justify-center',
        children: t.jsx(Dl, { children: t.jsx(ms, { className: 'h-4 w-4' }) }),
      }),
      n,
    ],
  }),
);
Ud.displayName = Ol.displayName;
const vx = p.forwardRef(({ className: e = '', children: n, ...o }, a) =>
  t.jsxs(Fl, {
    ref: a,
    className: b(
      e,
      'relative flex cursor-pointer select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm font-medium outline-none focus:bg-gray-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800',
    ),
    ...o,
    children: [
      t.jsx('span', {
        className: 'absolute left-2 flex h-3.5 w-3.5 items-center justify-center',
        children: t.jsx(Dl, { children: t.jsx(zu, { className: 'h-2 w-2 fill-current' }) }),
      }),
      n,
    ],
  }),
);
vx.displayName = Fl.displayName;
const bx = p.forwardRef(({ className: e = '', inset: n, ...o }, a) =>
  t.jsx(Bl, {
    ref: a,
    className: b(
      'px-2 py-1.5 text-sm font-semibold text-gray-900 dark:text-gray-300',
      n ? 'pl-8' : '',
      e,
    ),
    ...o,
  }),
);
bx.displayName = Bl.displayName;
const Vd = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx($l, { ref: o, className: b('-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-900', e), ...n }),
);
Vd.displayName = $l.displayName;
const nt = Ul,
  Fn = Vl,
  Gd = ({ className: e = '', children: n, ...o }) =>
    t.jsx(hs, {
      className: b(e),
      ...o,
      children: t.jsx('div', {
        className: 'fixed inset-0 z-[999] flex items-start justify-center sm:items-center',
        children: n,
      }),
    });
Gd.displayName = hs.displayName;
const Kd = p.forwardRef(({ className: e, ...n }, o) =>
  t.jsx(us, {
    className: b(
      'fixed inset-0 z-[999] bg-gray-600/65 transition-all duration-100 data-[state=closed]:animate-out data-[state=closed]:fade-out data-[state=open]:fade-in dark:bg-black/80',
      e ?? '',
    ),
    ...n,
    ref: o,
  }),
);
Kd.displayName = us.displayName;
const Bn = p.forwardRef(({ className: e, children: n = !0, showCloseButton: o = !0, ...a }, i) => {
  const s = Dn('(max-width: 768px)');
  return t.jsxs(Gd, {
    children: [
      t.jsx(Kd, {}),
      t.jsxs(ps, {
        ref: i,
        className: b(
          'fixed z-[999] grid w-full gap-4 rounded-b-lg bg-white pb-6 animate-in data-[state=open]:fade-in-90 data-[state=open]:slide-in-from-bottom-10 sm:rounded-lg',
          'dark:bg-gray-700',
          s
            ? 'fixed left-1/2 top-1/2 z-[999] m-auto grid w-11/12 -translate-x-1/2 -translate-y-1/2 gap-4 rounded-xl bg-white pb-6'
            : '',
          e ?? '',
        ),
        ...a,
        children: [
          n,
          o &&
            t.jsxs(Ra, {
              className:
                'absolute right-6 top-[1.6rem] rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-gray-100 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900 dark:data-[state=open]:bg-gray-800',
              children: [
                t.jsx(oo, { className: 'h-5 w-5 text-black dark:text-white' }),
                t.jsx('span', { className: 'sr-only', children: 'Close' }),
              ],
            }),
        ],
      }),
    ],
  });
});
Bn.displayName = ps.displayName;
const co = ({ className: e, ...n }) =>
  t.jsx('div', {
    className: b(
      'flex flex-col space-y-2 border-b border-black/10 p-6 pb-4 text-left dark:border-white/10',
      e ?? '',
    ),
    ...n,
  });
co.displayName = 'DialogHeader';
const Hd = ({ className: e, ...n }) =>
  t.jsx('div', {
    className: b('flex flex-row justify-between space-x-2 px-6 py-4', e ?? ''),
    ...n,
  });
Hd.displayName = 'DialogFooter';
const lo = p.forwardRef(({ className: e, ...n }, o) =>
  t.jsx(Oa, {
    ref: o,
    className: b('text-lg font-semibold text-gray-900', 'dark:text-gray-50', e ?? ''),
    ...n,
  }),
);
lo.displayName = Oa.displayName;
const Wd = p.forwardRef(({ className: e, ...n }, o) =>
  t.jsx(ql, { ref: o, className: b('text-sm text-gray-500', 'dark:text-gray-400', e ?? ''), ...n }),
);
Wd.displayName = ql.displayName;
const Ta = p.forwardRef(({ className: e, ...n }, o) =>
  t.jsx(Ra, {
    ref: o,
    className: b(
      'mt-2 inline-flex h-10 items-center justify-center rounded-lg border border-gray-200 bg-transparent px-4 py-2 text-sm font-semibold text-gray-900 transition-colors hover:bg-gray-100 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-700 dark:text-gray-100 dark:hover:bg-gray-800 sm:mt-0',
      e ?? '',
      'focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900',
    ),
    ...n,
  }),
);
Ta.displayName = Oa.displayName;
const Xo = p.forwardRef(({ className: e, ...n }, o) =>
  t.jsx(Ne, {
    ref: o,
    variant: 'outline',
    className: b(
      'mt-2 inline-flex h-10 items-center justify-center rounded-lg border border-gray-200 bg-transparent px-4 py-2 text-sm font-semibold text-gray-900 transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-700 dark:text-gray-100 dark:hover:bg-gray-800 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900 sm:mt-0',
      e ?? '',
      'focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900',
    ),
    ...n,
  }),
);
Xo.displayName = Oa.displayName;
const ie = Eu,
  oe = Mu,
  ea = Ru,
  _o = p.forwardRef(({ className: e = '', align: n = 'center', sideOffset: o = 6, ...a }, i) =>
    t.jsx(Gl, {
      ref: i,
      align: n,
      sideOffset: o,
      className: b(
        'z-50 w-64 rounded-md border border-gray-200 bg-white p-4 shadow-md outline-none animate-in fade-in-0 dark:border-gray-800 dark:bg-gray-800',
        e,
      ),
      ...a,
    }),
  );
_o.displayName = Gl.displayName;
const Je = p.forwardRef(({ className: e, ...n }, o) =>
  t.jsx('input', {
    className: b(
      'dark:border-gray-00 flex h-10 w-full rounded-md border border-gray-300 bg-transparent px-3 py-2 text-sm placeholder:text-gray-400 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 dark:text-gray-50',
      e ?? '',
    ),
    ref: o,
    ...n,
  }),
);
Je.displayName = 'Input';
const ve = p.forwardRef(({ className: e, ...n }, o) =>
  t.jsx(Ou, {
    className: b(
      'flex max-h-5 w-full rounded-md border border-gray-300 bg-transparent px-3 py-2 text-sm placeholder:text-gray-400 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-700 dark:text-gray-50',
      e ?? '',
    ),
    ref: o,
    ...n,
  }),
);
ve.displayName = 'Input';
const Z = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(Kl, {
    ref: o,
    className: b(
      'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-200',
      e,
    ),
    ...n,
  }),
);
Z.displayName = Kl.displayName;
function Jd({ className: e = '' }) {
  return t.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    fill: 'none',
    viewBox: '0 0 24 24',
    strokeWidth: '1.5',
    stroke: 'currentColor',
    'aria-hidden': 'true',
    className: b('h-6 w-6', e),
    children: t.jsx('path', {
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
      d: 'M3.75 13.5l10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75z',
    }),
  });
}
const Qd = ({ className: e = '' }) =>
    t.jsx('span', {
      children: t.jsx('div', {
        className: b(
          'border-token-border-medium text-token-text-tertiary ml-2 flex h-3.5 w-3.5 cursor-default items-center justify-center rounded-full border text-[0.5rem] font-medium leading-none',
          e,
        ),
        children: '?',
      }),
    }),
  we = p.forwardRef(({ className: e, doubleClickHandler: n, ...o }, a) =>
    t.jsxs(Hl, {
      ref: a,
      className: b('relative flex w-full touch-none select-none items-center', e ?? ''),
      ...o,
      children: [
        t.jsx(Du, {
          className:
            'relative h-1 w-full grow overflow-hidden rounded-full bg-gray-200 dark:bg-gray-800',
          children: t.jsx(Fu, { className: 'absolute h-full bg-gray-400  dark:bg-gray-400' }),
        }),
        t.jsx(Bu, {
          onClick: $u(n) ?? (() => {}),
          className:
            'block h-4 w-4 cursor-pointer rounded-full border-2 border-gray-400 bg-white transition-colors focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-200 dark:bg-gray-400 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-800',
        }),
      ],
    }),
  );
we.displayName = Hl.displayName;
const rs = p.forwardRef(
  ({ className: e = '', orientation: n = 'horizontal', decorative: o = !0, ...a }, i) =>
    t.jsx(Wl, {
      ref: i,
      decorative: o,
      orientation: n,
      className: b(
        'bg-border shrink-0',
        n === 'horizontal' ? 'h-[1px] w-full' : 'h-full w-[1px]',
        e,
      ),
      ...a,
    }),
);
rs.displayName = Wl.displayName;
const Ae = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(Jl, {
    className: b(
      'focus-visible:ring-ring focus-visible:ring-offset-background peer inline-flex h-[19.2px] w-[32px] shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-green-500 data-[state=unchecked]:bg-gray-200',
      e,
    ),
    ...n,
    ref: o,
    children: t.jsx(qu, {
      className: b(
        'pointer-events-none block h-4 w-4 -translate-x-0.5 rounded-full bg-white shadow-[0_1px_2px_rgba(0,0,0,0.45)] transition-transform data-[state=checked]:translate-x-3 data-[state=unchecked]:translate-x-0',
      ),
    }),
  }),
);
Ae.displayName = Jl.displayName;
const Js = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx('table', { ref: o, className: b('w-full caption-bottom text-sm', e), ...n }),
);
Js.displayName = 'Table';
const Qs = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx('thead', { ref: o, className: b('[&_tr]:border-b', e), ...n }),
);
Qs.displayName = 'TableHeader';
const Zs = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx('tbody', { ref: o, className: b('[&_tr:last-child]:border-0', e), ...n }),
);
Zs.displayName = 'TableBody';
const yx = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx('tfoot', {
    ref: o,
    className: b('bg-primary text-primary-foreground font-medium', e),
    ...n,
  }),
);
yx.displayName = 'TableFooter';
const Mn = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx('tr', {
    ref: o,
    className: b('hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors', e),
    ...n,
  }),
);
Mn.displayName = 'TableRow';
const Ys = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx('th', {
    ref: o,
    className: b(
      'text-muted-foreground h-12 px-4 text-left align-middle font-medium [&:has([role=checkbox])]:pr-0',
      e,
    ),
    ...n,
  }),
);
Ys.displayName = 'TableHead';
const Do = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx('td', { ref: o, className: b('align-middle [&:has([role=checkbox])]:pr-0', e), ...n }),
);
Do.displayName = 'TableCell';
const kx = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx('caption', { ref: o, className: b('text-muted-foreground mt-4 text-sm', e), ...n }),
);
kx.displayName = 'TableCaption';
const wx = Ql,
  Zd = p.forwardRef(({ className: e = '', ...n }, o) =>
    t.jsx(gs, {
      ref: o,
      className: b(
        'inline-flex items-center justify-center rounded-md bg-gray-200 p-1 dark:bg-gray-800',
        e,
      ),
      ...n,
    }),
  );
Zd.displayName = gs.displayName;
const Co = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(un, {
    className: b(
      'inline-flex min-w-[100px] items-center justify-center rounded-[0.185rem] px-3 py-1.5  text-sm font-medium text-gray-700 transition-all  disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-gray-800 data-[state=active]:shadow-sm dark:text-gray-200 dark:data-[state=active]:bg-gray-700 dark:data-[state=active]:text-gray-200',
      e,
    ),
    ...n,
    ref: o,
  }),
);
Co.displayName = un.displayName;
const jx = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(bn, {
    className: b('mt-2 rounded-md border border-gray-200 p-6 dark:border-gray-700', e),
    ...n,
    ref: o,
  }),
);
jx.displayName = bn.displayName;
const Yd = p.forwardRef(
  (
    { CancelButton: e, label: n, onRemove: o, className: a = '', labelClassName: i = '', ...s },
    r,
  ) =>
    t.jsxs('div', {
      ref: r,
      ...s,
      className: b(
        'flex max-h-8 items-center overflow-y-hidden rounded rounded-3xl border-2 border-green-600 bg-green-600/20 text-sm text-xs text-green-600 dark:text-white',
        a,
      ),
      children: [
        t.jsx('div', { className: b('ml-1 whitespace-pre-wrap px-2 py-1', i), children: n }),
        e ||
          t.jsx('button', {
            onClick: (c) => {
              c.stopPropagation(), o(c);
            },
            className: 'rounded-full bg-green-600/50',
            'aria-label': `Remove ${n}`,
            children: t.jsx(oo, { className: 'm-[1.5px] p-1' }),
          }),
      ],
    }),
);
Yd.displayName = 'Tag';
const Cx = p.memo(Yd),
  Nx = p.forwardRef(({ className: e = '', ...n }, o) =>
    t.jsx('textarea', {
      className: b(
        'flex h-20 w-full resize-none rounded-md border border-gray-300 bg-transparent px-3 py-2 text-sm placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-700 dark:text-gray-50 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900',
        e,
      ),
      ref: o,
      ...n,
    }),
  );
Nx.displayName = 'Textarea';
const Sx = p.forwardRef((e, n) => {
    const [, o] = p.useState(!1);
    return p.useLayoutEffect(() => o(!0), []), t.jsx(mt, { ...e, ref: n });
  }),
  ht = Uu,
  gt = p.forwardRef((e, n) => t.jsx(Zl, { ref: n, ...e }));
gt.displayName = Zl.displayName;
const Ax = Vu,
  Xd = p.forwardRef((e, n) => t.jsx(Yl, { ref: n, ...e }));
Xd.displayName = Yl.displayName;
const ft = p.forwardRef(({ className: e = '', forceMount: n, children: o, ...a }, i) =>
  t.jsx(Ax, {
    forceMount: n,
    children: t.jsx(Xl, {
      className: b(
        'shadow-xs relative z-[1000] max-w-xs rounded-lg border border-gray-900/10 bg-gray-900 p-1 transition-opacity',
        e,
      ),
      ref: i,
      ...a,
      style: { userSelect: 'none' },
      children: t.jsxs('span', {
        className:
          'flex items-center whitespace-pre-wrap px-2 py-1 text-center text-sm font-medium normal-case text-white',
        children: [o, t.jsx(Xd, { className: 'TooltipArrow' })],
      }),
    }),
  }),
);
ft.displayName = Xl.displayName;
const pt = Gu,
  Tx = Wu,
  em = p.forwardRef(({ className: e = '', children: n, ...o }, a) =>
    t.jsxs(e_, {
      ref: a,
      className: b(
        'border-input ring-offset-background placeholder:text-muted-foreground flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-gray-200 bg-transparent px-3 py-2 text-sm shadow-sm focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-600 [&>span]:line-clamp-1',
        'rounded-lg hover:bg-gray-100/50 dark:hover:bg-gray-700',
        e,
      ),
      ...o,
      children: [
        n,
        t.jsx(Ku, { asChild: !0, children: t.jsx(t_, { className: 'h-4 w-4 opacity-50' }) }),
      ],
    }),
  );
em.displayName = e_.displayName;
const tm = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(n_, {
    ref: o,
    className: b('flex cursor-default items-center justify-center py-1 dark:text-white', e),
    ...n,
    children: t.jsx(Hu, {}),
  }),
);
tm.displayName = n_.displayName;
const Xs = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(o_, {
    ref: o,
    className: b('flex cursor-default items-center justify-center py-1 dark:text-white', e),
    ...n,
    children: t.jsx(fs, {}),
  }),
);
Xs.displayName = o_.displayName;
const Ix = p.forwardRef(({ className: e = '', children: n, position: o = 'popper', ...a }, i) =>
  t.jsx(a_, {
    children: t.jsxs(xs, {
      ref: i,
      className: b(
        'bg-popover text-popover-foreground relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-600',
        o === 'popper'
          ? 'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1'
          : '',
        e,
      ),
      position: o,
      ...a,
      children: [
        t.jsx(tm, {}),
        t.jsx(i_, {
          className: b(
            'p-1',
            o === 'popper'
              ? 'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]'
              : '',
          ),
          children: n,
        }),
        t.jsx(Xs, {}),
      ],
    }),
  }),
);
Ix.displayName = xs.displayName;
const zx = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(s_, { ref: o, className: b('px-2 py-1.5 text-sm font-semibold', e), ...n }),
);
zx.displayName = s_.displayName;
const Lx = p.forwardRef(({ className: e = '', children: n, ...o }, a) =>
  t.jsxs(vs, {
    ref: a,
    className: b(
      'focus:bg-accent focus:text-accent-foreground relative flex w-full cursor-pointer select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50',
      'rounded-lg hover:bg-gray-100/50 dark:hover:bg-gray-700',
      e,
    ),
    ...o,
    children: [
      t.jsx('span', {
        className: 'absolute right-2 flex h-3.5 w-3.5 items-center justify-center',
        children: t.jsx(r_, { children: t.jsx(c_, { className: 'h-4 w-4' }) }),
      }),
      t.jsx(l_, { children: n }),
    ],
  }),
);
Lx.displayName = vs.displayName;
const Px = p.forwardRef(({ className: e = '', ...n }, o) =>
  t.jsx(__, { ref: o, className: b('bg-muted -mx-1 my-1 h-px', e), ...n }),
);
Px.displayName = __.displayName;
function nm({
  selectedValue: e,
  displayValue: n,
  items: o,
  setValue: a,
  ariaLabel: i,
  searchPlaceholder: s,
  selectPlaceholder: r,
  isCollapsed: c,
  SelectIcon: l,
}) {
  const d = (o ?? []).map((h) => (typeof h == 'string' ? { label: h, value: h } : h)),
    { open: _, setOpen: m, setSearchValue: f, matches: g } = Id({ value: e, options: d });
  return t.jsx(Ju, {
    value: e,
    onValueChange: a,
    open: _,
    onOpenChange: m,
    children: t.jsxs(Qu, {
      open: _,
      setOpen: m,
      resetValueOnHide: !0,
      includesBaseElement: !1,
      setValue: (h) => {
        p.startTransition(() => {
          f(h);
        });
      },
      children: [
        t.jsx(em, {
          'aria-label': i,
          className: b(
            'flex items-center gap-2 [&>span]:line-clamp-1 [&>span]:flex [&>span]:w-full [&>span]:items-center [&>span]:gap-1 [&>span]:truncate [&_svg]:h-4 [&_svg]:w-4 [&_svg]:shrink-0',
            c
              ? 'flex h-9 w-9 shrink-0 items-center justify-center p-0 [&>span]:w-auto [&>svg]:hidden'
              : '',
            'bg-white text-black hover:bg-gray-50 dark:bg-gray-850 dark:text-white',
          ),
          children: t.jsxs(Tx, {
            placeholder: r,
            children: [
              t.jsx('div', {
                className:
                  'assistant-item flex items-center justify-center overflow-hidden rounded-full',
                children: l || t.jsx(fs, {}),
              }),
              t.jsx('span', {
                className: b('ml-2', c ? 'hidden' : ''),
                style: { userSelect: 'none' },
                children: e ? n ?? e : r && r,
              }),
            ],
          }),
        }),
        t.jsx(a_, {
          children: t.jsxs(xs, {
            role: 'dialog',
            'aria-label': i + 's',
            position: 'popper',
            className: b(
              'bg-popover text-popover-foreground relative z-50 max-h-[52vh] min-w-[8rem] overflow-hidden rounded-md border border-gray-200 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-600',
              'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',
              'bg-white dark:bg-gray-700',
            ),
            children: [
              t.jsxs(i_, {
                className:
                  'mb-5 h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]',
                children: [
                  t.jsxs('div', {
                    className:
                      'group sticky left-0 top-0 z-10 flex h-12 items-center gap-2 bg-white px-2 px-3 py-2 text-black duration-300 dark:bg-gray-700 dark:text-white',
                    children: [
                      t.jsx(ao, {
                        className:
                          'h-4 w-4 text-gray-500 transition-colors duration-300 dark:group-focus-within:text-gray-300 dark:group-hover:text-gray-300',
                      }),
                      t.jsx(Zu, {
                        autoSelect: !0,
                        placeholder: s,
                        className:
                          'flex-1 rounded-md border-none bg-transparent px-2.5 py-2 text-sm focus:outline-none focus:ring-1 focus:ring-gray-700/10 dark:focus:ring-gray-200/10',
                        onBlurCapture: (h) => {
                          h.preventDefault(), h.stopPropagation();
                        },
                      }),
                      t.jsx(Yu, {
                        hideWhenEmpty: !0,
                        className:
                          'relative flex h-5 w-5 items-center justify-end text-gray-500 transition-colors duration-300 dark:group-focus-within:text-gray-300 dark:group-hover:text-gray-300',
                      }),
                    ],
                  }),
                  t.jsx(Xu, {
                    className: 'overflow-y-auto p-1 py-2',
                    children: g.map(({ label: h, value: v, icon: x }) =>
                      t.jsx(
                        vs,
                        {
                          value: `${v ?? ''}`,
                          asChild: !0,
                          children: t.jsxs(ep, {
                            className: b(
                              'focus:bg-accent focus:text-accent-foreground relative flex w-full cursor-pointer select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50',
                              'rounded-lg hover:bg-gray-100/50 hover:bg-gray-50 dark:text-white dark:hover:bg-gray-600',
                            ),
                            children: [
                              t.jsx('span', {
                                className:
                                  'absolute right-2 flex h-3.5 w-3.5 items-center justify-center',
                                children: t.jsx(r_, {
                                  children: t.jsx(c_, { className: 'h-4 w-4' }),
                                }),
                              }),
                              t.jsx(l_, {
                                children: t.jsxs('div', {
                                  className:
                                    '[&_svg]:text-foreground flex items-center justify-center gap-3 dark:text-white [&_svg]:h-4 [&_svg]:w-4 [&_svg]:shrink-0',
                                  children: [
                                    t.jsx('div', {
                                      className: 'assistant-item overflow-hidden rounded-full ',
                                      children: x && x,
                                    }),
                                    h,
                                  ],
                                }),
                              }),
                            ],
                          }),
                        },
                        v,
                      ),
                    ),
                  }),
                ],
              }),
              t.jsx(Xs, { className: 'absolute bottom-0 left-0 right-0' }),
            ],
          }),
        }),
      ],
    }),
  });
}
const jn = ({
    value: e,
    label: n = '',
    onChange: o,
    options: a,
    className: i = '',
    position: s = 'right',
    width: r,
    maxHeight: c = 'auto',
    testId: l = 'dropdown-menu',
  }) => {
    var f;
    const [d, _] = p.useState(e),
      m = { right: 'origin-bottom-left left-0', left: 'origin-bottom-right right-0' };
    return t.jsx('div', {
      className: b('relative', i),
      children: t.jsx(Me, {
        value: d,
        onChange: (g) => {
          _(g), o(g);
        },
        children: t.jsxs('div', {
          className: b('relative', i),
          children: [
            t.jsxs(Me.Button, {
              'data-testid': l,
              className: b(
                'relative inline-flex items-center justify-between rounded-md border-gray-300 bg-white py-2 pl-3 pr-8 text-gray-700 hover:bg-gray-50 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:hover:bg-gray-600',
                'w-auto',
                i,
              ),
              children: [
                t.jsxs('span', {
                  className: 'block truncate',
                  children: [
                    n,
                    ((f = a
                      .map((g) => (typeof g == 'string' ? { value: g, display: g } : g))
                      .find((g) => g.value === d)) == null
                      ? void 0
                      : f.display) || d,
                  ],
                }),
                t.jsx('span', {
                  className:
                    'pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2',
                  children: t.jsx('svg', {
                    xmlns: 'http://www.w3.org/2000/svg',
                    fill: 'none',
                    viewBox: '0 0 24 24',
                    strokeWidth: '2',
                    stroke: 'currentColor',
                    className:
                      'h-4 w-5 rotate-0 transform text-gray-400 transition-transform duration-300 ease-in-out',
                    children: t.jsx('polyline', { points: '6 9 12 15 18 9' }),
                  }),
                }),
              ],
            }),
            t.jsx(Me.Options, {
              className: b(
                `absolute z-50 mt-1 flex max-h-[40vh] flex-col items-start gap-1 overflow-auto rounded-lg border border-gray-300 bg-white p-1.5 text-gray-700 shadow-lg transition-opacity focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white ${m[s]}`,
                i,
              ),
              style: { width: r ? `${r}px` : 'auto', maxHeight: c },
              children: a.map((g, h) =>
                t.jsx(
                  Me.Option,
                  {
                    value: typeof g == 'string' ? g : g.value,
                    className: b(
                      'relative cursor-pointer select-none rounded border-gray-300 bg-white py-2.5 pl-3 pr-6 text-gray-700 hover:bg-gray-100 dark:border-gray-300 dark:bg-gray-700 dark:text-white dark:hover:bg-gray-600',
                    ),
                    style: { width: '100%' },
                    'data-theme': typeof g == 'string' ? g : g.value,
                    children: t.jsx('span', {
                      className: 'block truncate',
                      children: typeof g == 'string' ? g : g.display,
                    }),
                  },
                  h,
                ),
              ),
            }),
          ],
        }),
      }),
    });
  },
  Ex = ({ handleFileChange: e, children: n, onClick: o, className: a = '' }) => {
    const i = p.useRef(null),
      s = () => {
        var r;
        o && o(), i.current && (i.current.value = ''), (r = i.current) == null || r.click();
      };
    return t.jsxs('div', {
      onClick: s,
      style: { cursor: 'pointer' },
      className: a,
      children: [
        n,
        t.jsx('input', {
          ref: i,
          multiple: !0,
          type: 'file',
          style: { display: 'none' },
          onChange: e,
        }),
      ],
    });
  },
  om = ({ delay: e, children: n }) => ix(e)(() => n),
  Mx = ({ theme: e, onChange: n }) => {
    const o = { system: t.jsx(jr, {}), dark: t.jsx(tp, { color: 'white' }), light: t.jsx(jr, {}) };
    return t.jsx('div', {
      className: 'flex items-center justify-between',
      children: t.jsx('div', {
        className: 'cursor-pointer',
        onClick: () => n(e === 'dark' ? 'light' : 'dark'),
        children: o[e],
      }),
    });
  },
  am = () => {
    const { theme: e, setTheme: n } = p.useContext(Ya),
      o = p.useCallback(
        (a) => {
          n(a);
        },
        [n],
      );
    return t.jsx('div', {
      className: 'flex flex-col items-center justify-center bg-white pt-6 dark:bg-gray-900 sm:pt-0',
      children: t.jsx('div', {
        className: 'absolute bottom-0 left-0 m-4',
        children: t.jsx(Mx, { theme: e, onChange: o }),
      }),
    });
  };
function mo({ className: e = '' }) {
  return t.jsx('svg', {
    fill: 'none',
    strokeWidth: '2',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b('h-4 w-4', e),
    height: '1em',
    width: '1em',
    xmlns: 'http://www.w3.org/2000/svg',
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M18.0633 5.67375C18.5196 5.98487 18.6374 6.607 18.3262 7.06331L10.8262 18.0633C10.6585 18.3093 10.3898 18.4678 10.0934 18.4956C9.79688 18.5234 9.50345 18.4176 9.29289 18.2071L4.79289 13.7071C4.40237 13.3166 4.40237 12.6834 4.79289 12.2929C5.18342 11.9023 5.81658 11.9023 6.20711 12.2929L9.85368 15.9394L16.6738 5.93664C16.9849 5.48033 17.607 5.36263 18.0633 5.67375Z',
      fill: 'currentColor',
    }),
  });
}
function Rx({ value: e, onChange: n, placeholder: o, className: a = '' }) {
  const i = D(),
    s = p.useCallback((r) => n(r.target.value), []);
  return t.jsxs('div', {
    className: b(
      'group sticky left-0 top-0 z-10 flex h-12 items-center gap-2 bg-gradient-to-b from-white from-65% to-transparent px-2 px-3 py-2 text-black transition-colors duration-300 focus:bg-gradient-to-b focus:from-white focus:to-white/50 dark:from-gray-700 dark:to-transparent dark:text-white dark:focus:from-white/10 dark:focus:to-white/20',
      a,
    ),
    children: [
      t.jsx(ao, {
        className:
          'h-4 w-4 text-gray-500 transition-colors duration-300 dark:group-focus-within:text-gray-300 dark:group-hover:text-gray-300',
      }),
      t.jsx('input', {
        type: 'text',
        value: e || '',
        onChange: s,
        placeholder: o || i('com_ui_select_search_model'),
        className:
          'flex-1 rounded-md border-none bg-transparent px-2.5 py-2 text-sm focus:outline-none focus:ring-1 focus:ring-gray-700/10 dark:focus:ring-gray-200/10',
      }),
      t.jsx('div', {
        className: 'relative flex h-5 w-5 items-center justify-end text-gray-500',
        children: t.jsx(oo, {
          className: b(
            'text-gray-500 dark:text-gray-300',
            e != null && e.length ? 'cursor-pointer opacity-100' : 'opacity-0',
          ),
          onClick: () => n(''),
        }),
      }),
    ],
  });
}
function Ox(e) {
  return typeof e == 'string'
    ? e.startsWith('---') && e.endsWith('---')
      ? ''
      : e.toUpperCase()
    : '';
}
function ti({
  availableOptions: e,
  placeholder: n,
  getTextKeyOverride: o,
  className: a,
  disabled: i = !1,
}) {
  const [s, r] = p.useState(null),
    c = e.length > 10 && !i,
    l = o || Ox,
    d = p.useMemo(() => {
      if (!c || !s || !e.length) return e;
      const f = s.toUpperCase();
      return e.filter((g) => l(g).includes(f));
    }, [e, l, s, c]),
    _ = p.useCallback((f) => r(f), []);
  return [d, c ? t.jsx(Rx, { value: s, className: a, onChange: _, placeholder: n }) : null];
}
function Qe({
  title: e,
  value: n,
  disabled: o,
  setValue: a,
  availableValues: i,
  showAbove: s = !1,
  showLabel: r = !0,
  emptyTitle: c = !1,
  iconSide: l = 'right',
  containerClassName: d,
  optionsListClass: _,
  optionsClass: m,
  currentValueClass: f,
  subContainerClassName: g,
  className: h,
  renderOption: v,
  searchClassName: x,
  searchPlaceholder: y,
}) {
  const k = D(),
    C = { className: 'top-full mt-3' };
  s && (C.className = 'bottom-full mb-3');
  let j = e;
  c ? (j = '') : j || (j = k('com_ui_model'));
  const [w, T] = ti({
      availableOptions: i,
      placeholder: y,
      getTextKeyOverride: (P) => ((P == null ? void 0 : P.label) || '').toUpperCase(),
      className: x,
    }),
    I = !!T ? w : i;
  return t.jsx('div', {
    className: b('flex items-center justify-center gap-2 ', d ?? ''),
    children: t.jsx('div', {
      className: b('relative w-full', g ?? ''),
      children: t.jsx(Me, {
        value: n,
        onChange: a,
        disabled: o,
        children: ({ open: P }) =>
          t.jsxs(t.Fragment, {
            children: [
              t.jsxs(Me.Button, {
                'data-testid': 'select-dropdown-button',
                className: b(
                  'relative flex w-full cursor-default flex-col rounded-md border border-black/10 bg-white py-2 pl-3 pr-10 text-left focus:outline-none focus:ring-0 focus:ring-offset-0 dark:border-gray-600 dark:bg-gray-700 sm:text-sm',
                  h ?? '',
                ),
                children: [
                  ' ',
                  r &&
                    t.jsx(Me.Label, {
                      className: 'block text-xs text-gray-700 dark:text-gray-500 ',
                      id: 'headlessui-listbox-label-:r1:',
                      'data-headlessui-state': '',
                      children: j,
                    }),
                  t.jsx('span', {
                    className: 'inline-flex w-full truncate',
                    children: t.jsxs('span', {
                      className: b(
                        'flex h-6 items-center gap-1 truncate text-sm text-gray-800 dark:text-white',
                        r ? '' : 'text-xs',
                        f ?? '',
                      ),
                      children: [
                        !r &&
                          !c &&
                          t.jsxs('span', {
                            className: 'text-xs text-gray-700 dark:text-gray-500',
                            children: [j, ':'],
                          }),
                        typeof n != 'string' && n ? (n == null ? void 0 : n.label) ?? '' : n ?? '',
                      ],
                    }),
                  }),
                  t.jsx('span', {
                    className:
                      'pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2',
                    children: t.jsx('svg', {
                      stroke: 'currentColor',
                      fill: 'none',
                      strokeWidth: '2',
                      viewBox: '0 0 24 24',
                      strokeLinecap: 'round',
                      strokeLinejoin: 'round',
                      className: 'h-4 w-4  text-gray-400',
                      height: '1em',
                      width: '1em',
                      xmlns: 'http://www.w3.org/2000/svg',
                      style: s ? { transform: 'scaleY(-1)' } : {},
                      children: t.jsx('polyline', { points: '6 9 12 15 18 9' }),
                    }),
                  }),
                ],
              }),
              t.jsx(bs, {
                show: P,
                as: ze.Fragment,
                leave: 'transition ease-in duration-100',
                leaveFrom: 'opacity-100',
                leaveTo: 'opacity-0',
                ...C,
                children: t.jsxs(Me.Options, {
                  className: b(
                    'absolute z-10 mt-2 max-h-60 w-full overflow-auto rounded border bg-white text-base text-xs ring-black/10 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:ring-white/20 md:w-[100%]',
                    _ ?? '',
                  ),
                  children: [
                    v &&
                      t.jsx(
                        Me.Option,
                        {
                          value: null,
                          className: b(
                            'group relative flex h-[42px] cursor-pointer select-none items-center overflow-hidden border-b border-black/10 pl-3 pr-9 text-gray-800 last:border-0 hover:bg-gray-20 dark:border-white/20 dark:text-white dark:hover:bg-gray-700',
                            m ?? '',
                          ),
                          children: v(),
                        },
                        'listbox-render-option',
                      ),
                    T,
                    I.map((F, R) => {
                      if (!F) return null;
                      const E = typeof F == 'string' ? F : (F == null ? void 0 : F.label) ?? '',
                        M = typeof F == 'string' ? F : (F == null ? void 0 : F.value) ?? '';
                      let A = n;
                      return (
                        typeof A != 'string' && (A = (A == null ? void 0 : A.value) ?? ''),
                        t.jsx(
                          Me.Option,
                          {
                            value: M,
                            className: b(
                              'group relative flex h-[42px] cursor-pointer select-none items-center overflow-hidden border-b border-black/10 pl-3 pr-9 text-gray-800 last:border-0 hover:bg-gray-20 dark:border-white/20 dark:text-white dark:hover:bg-gray-700',
                              m ?? '',
                            ),
                            children: t.jsxs('span', {
                              className: 'flex items-center gap-1.5 truncate',
                              children: [
                                t.jsx('span', {
                                  className: b(
                                    'flex h-6 items-center gap-1 text-gray-800 dark:text-gray-200',
                                    F === n ? 'font-semibold' : '',
                                    l === 'left' ? 'ml-4' : '',
                                  ),
                                  children: E,
                                }),
                                M === A &&
                                  t.jsx('span', {
                                    className: b(
                                      'absolute inset-y-0 flex items-center text-gray-800 dark:text-gray-200',
                                      l === 'left' ? 'left-0 pl-2' : 'right-0 pr-3',
                                    ),
                                    children: t.jsx(mo, {}),
                                  }),
                              ],
                            }),
                          },
                          R,
                        )
                      );
                    }),
                  ],
                }),
              }),
            ],
          }),
      }),
    }),
  });
}
const er = ({
  title: e,
  description: n,
  selected: o,
  icon: a,
  className: i = '',
  textClassName: s = '',
  children: r,
  onClick: c,
  ...l
}) =>
  t.jsx('div', {
    role: 'menuitem',
    className: b(
      'group m-1.5 flex cursor-pointer gap-2 rounded px-5 py-2.5 !pr-3 text-sm !opacity-100 hover:bg-black/5 focus:ring-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-gray-600 md:min-w-[240px]',
      i ?? '',
    ),
    tabIndex: -1,
    onClick: c,
    ...l,
    children: t.jsxs('div', {
      className: 'flex grow items-center justify-between gap-2',
      children: [
        t.jsx('div', {
          children: t.jsxs('div', {
            className: b('flex items-center gap-1 '),
            children: [
              a && a,
              t.jsxs('div', {
                className: b('truncate', s),
                children: [e, t.jsx('div', { className: 'text-token-text-tertiary', children: n })],
              }),
            ],
          }),
        }),
        t.jsxs('div', {
          className: 'flex items-center gap-2',
          children: [
            r,
            o &&
              t.jsx('svg', {
                width: '24',
                height: '24',
                viewBox: '0 0 24 24',
                fill: 'none',
                xmlns: 'http://www.w3.org/2000/svg',
                className: 'icon-md block ',
                children: t.jsx('path', {
                  fillRule: 'evenodd',
                  clipRule: 'evenodd',
                  d: 'M2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM16.0755 7.93219C16.5272 8.25003 16.6356 8.87383 16.3178 9.32549L11.5678 16.0755C11.3931 16.3237 11.1152 16.4792 10.8123 16.4981C10.5093 16.517 10.2142 16.3973 10.0101 16.1727L7.51006 13.4227C7.13855 13.014 7.16867 12.3816 7.57733 12.0101C7.98598 11.6386 8.61843 11.6687 8.98994 12.0773L10.6504 13.9039L14.6822 8.17451C15 7.72284 15.6238 7.61436 16.0755 7.93219Z',
                  fill: 'currentColor',
                }),
              }),
          ],
        }),
      ],
    }),
  });
function Dx({
  title: e = 'Plugins',
  value: n,
  setSelected: o,
  availableValues: a,
  showAbove: i = !1,
  showLabel: s = !0,
  containerClassName: r,
  isSelected: c,
  optionValueKey: l = 'value',
  searchPlaceholder: d,
}) {
  const _ = e,
    m = ['select-plugin', 'plugins-label', 'selected-plugins'],
    [f, g] = ti({
      availableOptions: a,
      placeholder: d,
      getTextKeyOverride: (x) => (x.name || '').toUpperCase(),
    }),
    h = !!g,
    v = h ? f : a;
  return t.jsx(Pt, {
    children: t.jsx('div', {
      className: b('flex items-center justify-center gap-2', r ?? ''),
      children: t.jsxs('div', {
        className: 'relative',
        children: [
          t.jsx(Ht, {
            asChild: !0,
            children: t.jsxs('button', {
              'data-testid': 'select-dropdown-button',
              className: b(
                'relative flex flex-col rounded-md border border-black/10 bg-white py-2 pl-3 pr-10 text-left focus:outline-none focus:ring-0 focus:ring-offset-0 dark:border-gray-700 dark:bg-gray-800 dark:bg-gray-800 sm:text-sm',
                'pointer-cursor font-normal',
                'hover:bg-gray-50 radix-state-open:bg-gray-50 dark:hover:bg-gray-700 dark:radix-state-open:bg-gray-700',
              ),
              children: [
                ' ',
                s &&
                  t.jsx('label', {
                    className: 'block text-xs text-gray-700 dark:text-gray-500 ',
                    children: _,
                  }),
                t.jsx('span', {
                  className: 'inline-flex',
                  id: m[2],
                  children: t.jsx('span', {
                    className: b(
                      'flex h-6 items-center gap-1 text-sm text-gray-800 dark:text-white',
                      s ? '' : 'text-xs',
                    ),
                    children: t.jsx('span', {
                      className: 'flex items-center gap-1 ',
                      children: t.jsxs('div', {
                        className: 'flex gap-1',
                        children: [
                          n.length === 0 && 'None selected',
                          n.map((x, y) =>
                            t.jsxs(
                              'div',
                              {
                                className: 'relative',
                                children: [
                                  x.icon
                                    ? t.jsx('img', {
                                        src: x.icon,
                                        alt: `${x} logo`,
                                        className: 'icon-lg rounded-sm',
                                      })
                                    : t.jsx(ga, { className: 'icon-lg rounded-sm bg-white' }),
                                  t.jsx('div', {
                                    className:
                                      'absolute inset-0 rounded-sm ring-1 ring-inset ring-black/10',
                                  }),
                                ],
                              },
                              y,
                            ),
                          ),
                        ],
                      }),
                    }),
                  }),
                }),
                t.jsx('span', {
                  className: 'absolute inset-y-0 right-0 flex items-center pr-2',
                  children: t.jsx('svg', {
                    stroke: 'currentColor',
                    fill: 'none',
                    strokeWidth: '2',
                    viewBox: '0 0 24 24',
                    strokeLinecap: 'round',
                    strokeLinejoin: 'round',
                    className: 'h-4 w-4  text-gray-400',
                    height: '1em',
                    width: '1em',
                    xmlns: 'http://www.w3.org/2000/svg',
                    style: i ? { transform: 'scaleY(-1)' } : {},
                    children: t.jsx('polyline', { points: '6 9 12 15 18 9' }),
                  }),
                }),
              ],
            }),
          }),
          t.jsx(Wt, {
            children: t.jsxs(Et, {
              side: 'bottom',
              align: 'center',
              className: b(
                'mt-2 max-h-[52vh] min-w-full overflow-hidden overflow-y-auto rounded-lg border border-gray-200 bg-white shadow-lg dark:border-gray-700 dark:bg-gray-700 dark:text-white',
                h && 'relative',
              ),
              children: [
                g,
                v.map((x) => {
                  if (!x) return null;
                  const y = c(x[l]);
                  return t.jsx(
                    er,
                    {
                      title: x.name,
                      value: x[l],
                      selected: y,
                      onClick: () => o(x.pluginKey),
                      icon: x.icon
                        ? t.jsx('img', {
                            src: x.icon,
                            alt: `${x.name} logo`,
                            className: 'icon-sm mr-1 rounded-sm bg-cover',
                          })
                        : t.jsx(ga, {
                            className: 'icon-sm mr-1 rounded-sm bg-white bg-cover dark:bg-gray-800',
                          }),
                    },
                    `${x[l]}`,
                  );
                }),
              ],
            }),
          }),
        ],
      }),
    }),
  });
}
function uo({
  title: e,
  value: n,
  availableValues: o,
  setValue: a,
  showAbove: i = !1,
  showLabel: s = !0,
  emptyTitle: r = !1,
}) {
  const c = D();
  let l = e;
  r ? (l = '') : l || (l = c('com_ui_model'));
  const [d, _] = ti({ availableOptions: o }),
    m = !!_,
    f = m ? d : o;
  return t.jsx(Pt, {
    children: t.jsx('div', {
      className: 'flex items-center justify-center gap-2 ',
      children: t.jsxs('div', {
        className: 'relative w-full',
        children: [
          t.jsx(Ht, {
            asChild: !0,
            children: t.jsxs('button', {
              'data-testid': 'select-dropdown-button',
              className: b(
                'pointer-cursor relative flex flex-col rounded-md border border-black/10 bg-white py-2 pl-3 pr-10 text-left focus:outline-none focus:ring-0 focus:ring-offset-0 dark:border-gray-700 dark:bg-gray-800 sm:text-sm',
                'hover:bg-gray-50 radix-state-open:bg-gray-50 dark:hover:bg-gray-700 dark:radix-state-open:bg-gray-700',
              ),
              children: [
                ' ',
                s &&
                  t.jsx('label', {
                    className: 'block text-xs text-gray-700 dark:text-gray-500 ',
                    children: l,
                  }),
                t.jsx('span', {
                  className: 'inline-flex w-full ',
                  children: t.jsx('span', {
                    className: b(
                      'flex h-6 items-center gap-1  text-sm text-gray-800 dark:text-white',
                      s ? '' : 'text-xs',
                      'min-w-[75px] font-normal',
                    ),
                    children:
                      typeof n != 'string' && n ? (n == null ? void 0 : n.label) ?? '' : n ?? '',
                  }),
                }),
                t.jsx('span', {
                  className: 'absolute inset-y-0 right-0 flex items-center pr-2',
                  children: t.jsx('svg', {
                    stroke: 'currentColor',
                    fill: 'none',
                    strokeWidth: '2',
                    viewBox: '0 0 24 24',
                    strokeLinecap: 'round',
                    strokeLinejoin: 'round',
                    className: 'h-4 w-4  text-gray-400',
                    height: '1em',
                    width: '1em',
                    xmlns: 'http://www.w3.org/2000/svg',
                    style: i ? { transform: 'scaleY(-1)' } : {},
                    children: t.jsx('polyline', { points: '6 9 12 15 18 9' }),
                  }),
                }),
              ],
            }),
          }),
          t.jsx(Wt, {
            children: t.jsxs(Et, {
              side: 'bottom',
              align: 'start',
              className: b(
                'mt-2 max-h-[52vh] min-w-full overflow-hidden overflow-y-auto rounded-lg border border-gray-200 bg-white shadow-lg dark:border-gray-700 dark:bg-gray-700 dark:text-white lg:max-h-[52vh]',
                m && 'relative',
              ),
              children: [
                _,
                f.map((g) =>
                  t.jsx(
                    er,
                    { title: g, value: g, selected: !!(n && n === g), onClick: () => a(g) },
                    g,
                  ),
                ),
              ],
            }),
          }),
        ],
      }),
    }),
  });
}
function Fx({ className: e = 'icon-md' }) {
  return t.jsx('svg', {
    width: '18',
    height: '18',
    viewBox: '0 0 18 18',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: e,
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M3.62188 3.07918C3.87597 2.571 4.39537 2.25 4.96353 2.25H13.0365C13.6046 2.25 14.124 2.571 14.3781 3.07918L15.75 5.82295V13.5C15.75 14.7426 14.7426 15.75 13.5 15.75H4.5C3.25736 15.75 2.25 14.7426 2.25 13.5V5.82295L3.62188 3.07918ZM13.0365 3.75H4.96353L4.21353 5.25H13.7865L13.0365 3.75ZM14.25 6.75H3.75V13.5C3.75 13.9142 4.08579 14.25 4.5 14.25H13.5C13.9142 14.25 14.25 13.9142 14.25 13.5V6.75ZM6.75 9C6.75 8.58579 7.08579 8.25 7.5 8.25H10.5C10.9142 8.25 11.25 8.58579 11.25 9C11.25 9.41421 10.9142 9.75 10.5 9.75H7.5C7.08579 9.75 6.75 9.41421 6.75 9Z',
      fill: 'currentColor',
    }),
  });
}
function Bx({ className: e = '' }) {
  return t.jsxs('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    stroke: 'currentColor',
    strokeWidth: '2',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    xmlns: 'http://www.w3.org/2000/svg',
    className: b('lucide lucide-blocks', e),
    children: [
      t.jsx('rect', { width: '7', height: '7', x: '14', y: '3', rx: '1' }),
      t.jsx('path', {
        d: 'M10 21V8a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1H3',
      }),
    ],
  });
}
function $x({ className: e = '', ...n }) {
  return t.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    viewBox: '0 0 16 16',
    fill: 'none',
    className: b('h-4 w-4', e),
    width: '16',
    height: '16',
    strokeWidth: '2',
    ...n,
    children: t.jsxs('g', {
      fill: 'currentColor',
      children: [
        t.jsx('path', {
          d: 'M13.164.98a.7.7 0 0 0-1.328 0l-.478 1.435a.7.7 0 0 1-.443.443l-1.436.478a.7.7 0 0 0 0 1.328l1.436.479a.7.7 0 0 1 .443.442l.478 1.436a.7.7 0 0 0 1.328 0l.478-1.436a.7.7 0 0 1 .443-.443l1.436-.478a.7.7 0 0 0 0-1.328l-1.436-.478a.7.7 0 0 1-.443-.443L13.164.979Z',
        }),
        t.jsx('path', {
          d: 'M13.237 10.534c-.228-.245-.513-.46-.847-.46a.823.823 0 0 0-.828.849c.04 1.04.128 2.067.263 3.08a.619.619 0 0 1-.528.695c-.872.121-1.748.208-2.626.262a.8.8 0 0 1-.845-.805c0-.325.21-.602.45-.82.235-.215.375-.488.375-.787 0-.683-.738-1.237-1.65-1.237-.911 0-1.65.554-1.65 1.237 0 .294.137.563.364.775.245.229.461.513.461.848a.823.823 0 0 1-.85.829 33.809 33.809 0 0 1-3.266-.278.619.619 0 0 1-.532-.532 34.099 34.099 0 0 1-.278-3.267.823.823 0 0 1 .83-.85c.333 0 .619.216.846.461.212.228.482.364.776.364.683 0 1.237-.738 1.237-1.65 0-.91-.554-1.65-1.237-1.65-.299 0-.572.142-.786.376-.219.24-.496.45-.821.45a.8.8 0 0 1-.805-.845c.054-.885.142-1.76.262-2.626a.619.619 0 0 1 .695-.528c1.022.136 2.05.224 3.08.263a.822.822 0 0 0 .85-.828c0-.334-.217-.62-.462-.847-.227-.212-.363-.482-.363-.776C5.352 1.554 6.09 1 7.002 1c.91 0 1.649.554 1.649 1.237 0 .173-.012.327-.029.473C8.258 3 8 3.41 8 4c0 1.5 1.667 1.833 2.5 2 .167.833.5 2.5 2 2.5.732 0 1.186-.397 1.479-.9l.034-.001c.683 0 1.237.738 1.237 1.65 0 .911-.554 1.65-1.237 1.65-.294 0-.564-.137-.776-.364Z',
        }),
      ],
    }),
  });
}
function Io({ size: e = 25, className: n = '' }) {
  const o = '41',
    a = e,
    i = e;
  return t.jsx('svg', {
    width: i,
    height: a,
    viewBox: `0 0 ${o} ${o}`,
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    strokeWidth: '1.5',
    className: b(n, ''),
    children: t.jsx('path', {
      d: 'M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z',
      fill: 'currentColor',
    }),
  });
}
function Ia({ className: e = 'icon-md', size: n = '1.2em' }) {
  return t.jsx('svg', {
    fill: 'none',
    strokeWidth: '2',
    xmlns: 'http://www.w3.org/2000/svg',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    height: n,
    width: n,
    className: b(e),
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M13.2929 4.29291C15.0641 2.52167 17.9359 2.52167 19.7071 4.2929C21.4783 6.06414 21.4783 8.93588 19.7071 10.7071L18.7073 11.7069L11.1603 19.2539C10.7182 19.696 10.1489 19.989 9.53219 20.0918L4.1644 20.9864C3.84584 21.0395 3.52125 20.9355 3.29289 20.7071C3.06453 20.4788 2.96051 20.1542 3.0136 19.8356L3.90824 14.4678C4.01103 13.8511 4.30396 13.2818 4.7461 12.8397L13.2929 4.29291ZM13 7.41422L6.16031 14.2539C6.01293 14.4013 5.91529 14.591 5.88102 14.7966L5.21655 18.7835L9.20339 18.119C9.40898 18.0847 9.59872 17.9871 9.7461 17.8397L16.5858 11L13 7.41422ZM18 9.5858L14.4142 6.00001L14.7071 5.70712C15.6973 4.71693 17.3027 4.71693 18.2929 5.70712C19.2831 6.69731 19.2831 8.30272 18.2929 9.29291L18 9.5858Z',
      fill: 'currentColor',
    }),
  });
}
function im({ className: e = 'icon-sm' }) {
  return t.jsx('svg', {
    width: '18',
    height: '18',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: e,
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M6.00633 5.5C6.02321 5.53319 6.07042 5.60366 6.19525 5.70906C6.42458 5.9027 6.81573 6.12215 7.38659 6.32603C8.5196 6.73067 10.1506 7 12 7C13.8494 7 15.4804 6.73067 16.6134 6.32603C17.1843 6.12215 17.5754 5.9027 17.8048 5.70906C17.9296 5.60366 17.9768 5.53319 17.9937 5.5C17.9768 5.46681 17.9296 5.39634 17.8048 5.29094C17.5754 5.0973 17.1843 4.87785 16.6134 4.67397C15.4804 4.26933 13.8494 4 12 4C10.1506 4 8.5196 4.26933 7.38659 4.67397C6.81573 4.87785 6.42458 5.0973 6.19525 5.29094C6.07042 5.39634 6.02321 5.46681 6.00633 5.5ZM18 7.91726C17.7726 8.02403 17.5333 8.12123 17.2861 8.20951C15.8856 8.70968 14.0166 9 12 9C9.98341 9 8.1144 8.70968 6.71392 8.20951C6.46674 8.12123 6.22738 8.02403 6 7.91726V11.9866C6.00813 12.0073 6.03931 12.0661 6.14259 12.1624C6.31976 12.3277 6.63181 12.5252 7.10609 12.7189C8.04837 13.1039 9.43027 13.3932 11.051 13.476C11.6026 13.5042 12.0269 13.9741 11.9987 14.5257C11.9705 15.0773 11.5005 15.5016 10.949 15.4734C9.17744 15.3829 7.55934 15.0646 6.34969 14.5704C6.23097 14.5219 6.11419 14.4709 6 14.4173V18.4866C6.00813 18.5073 6.03931 18.5661 6.14259 18.6624C6.31976 18.8277 6.63181 19.0252 7.10609 19.2189C8.04837 19.6039 9.43027 19.8932 11.051 19.976C11.6026 20.0042 12.0269 20.4741 11.9987 21.0257C11.9705 21.5773 11.5005 22.0016 10.949 21.9734C9.17744 21.8829 7.55934 21.5646 6.34969 21.0704C5.74801 20.8246 5.19611 20.5146 4.77833 20.1249C4.35948 19.7341 4 19.1866 4 18.5V5.5C4 4.74631 4.43048 4.16346 4.90494 3.76283C5.38405 3.35829 6.01803 3.03902 6.71392 2.79049C8.1144 2.29032 9.98341 2 12 2C14.0166 2 15.8856 2.29032 17.2861 2.79049C17.982 3.03902 18.616 3.35829 19.0951 3.76283C19.5695 4.16346 20 4.74631 20 5.5V10C20 10.5523 19.5523 11 19 11C18.4477 11 18 10.5523 18 10V7.91726ZM17.5 13C18.0523 13 18.5 13.4477 18.5 14V14.6707C18.851 14.7948 19.172 14.9823 19.4492 15.2195L20.0308 14.8837C20.5091 14.6075 21.1207 14.7714 21.3968 15.2497C21.673 15.728 21.5091 16.3396 21.0308 16.6157L20.4499 16.9511C20.4828 17.1291 20.5 17.3125 20.5 17.5C20.5 17.6873 20.4828 17.8707 20.45 18.0485L21.0308 18.3838C21.5091 18.6599 21.6729 19.2715 21.3968 19.7498C21.1206 20.2281 20.5091 20.392 20.0308 20.1158L19.4495 19.7803C19.1722 20.0176 18.8511 20.2052 18.5 20.3293V21C18.5 21.5523 18.0523 22 17.5 22C16.9477 22 16.5 21.5523 16.5 21V20.3293C16.1489 20.2052 15.8277 20.0176 15.5504 19.7802L14.969 20.1159C14.4907 20.392 13.8791 20.2282 13.603 19.7499C13.3269 19.2716 13.4907 18.66 13.969 18.3839L14.55 18.0484C14.5172 17.8706 14.5 17.6873 14.5 17.5C14.5 17.3127 14.5172 17.1294 14.55 16.9515L13.9691 16.6161C13.4908 16.34 13.3269 15.7284 13.6031 15.2501C13.8792 14.7718 14.4908 14.608 14.9691 14.8841L15.5504 15.2197C15.8278 14.9824 16.1489 14.7948 16.5 14.6707V14C16.5 13.4477 16.9477 13 17.5 13ZM16.624 17.0174C16.6274 17.0117 16.6308 17.0059 16.6342 17.0001C16.6374 16.9946 16.6405 16.989 16.6436 16.9834C16.8187 16.6937 17.1367 16.5 17.5 16.5C17.8645 16.5 18.1835 16.6951 18.3583 16.9865C18.3607 16.9909 18.3632 16.9953 18.3658 16.9997C18.3685 17.0044 18.3713 17.0091 18.3741 17.0138C18.4543 17.1577 18.5 17.3235 18.5 17.5C18.5 17.6737 18.4557 17.8371 18.3778 17.9794C18.3737 17.9861 18.3697 17.9929 18.3657 17.9998C18.3619 18.0064 18.3581 18.0131 18.3545 18.0198C18.1789 18.3077 17.8619 18.5 17.5 18.5C17.1362 18.5 16.8178 18.3058 16.6428 18.0154C16.64 18.0102 16.6371 18.005 16.6341 17.9999C16.631 17.9945 16.6278 17.9891 16.6246 17.9838C16.5452 17.8404 16.5 17.6755 16.5 17.5C16.5 17.325 16.545 17.1605 16.624 17.0174Z',
      fill: 'currentColor',
    }),
  });
}
function Oe({ className: e = 'm-auto', size: n = '1em' }) {
  return t.jsxs('svg', {
    stroke: 'currentColor',
    fill: 'none',
    strokeWidth: '2',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b(e, 'animate-spin text-center'),
    height: n,
    width: n,
    xmlns: 'http://www.w3.org/2000/svg',
    children: [
      t.jsx('line', { x1: '12', y1: '2', x2: '12', y2: '6' }),
      t.jsx('line', { x1: '12', y1: '18', x2: '12', y2: '22' }),
      t.jsx('line', { x1: '4.93', y1: '4.93', x2: '7.76', y2: '7.76' }),
      t.jsx('line', { x1: '16.24', y1: '16.24', x2: '19.07', y2: '19.07' }),
      t.jsx('line', { x1: '2', y1: '12', x2: '6', y2: '12' }),
      t.jsx('line', { x1: '18', y1: '12', x2: '22', y2: '12' }),
      t.jsx('line', { x1: '4.93', y1: '19.07', x2: '7.76', y2: '16.24' }),
      t.jsx('line', { x1: '16.24', y1: '7.76', x2: '19.07', y2: '4.93' }),
    ],
  });
}
function tr({ className: e = 'icon-md-heavy', size: n = '1em' }) {
  return t.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    height: n,
    width: n,
    fill: 'none',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b(e),
    children: t.jsx('path', {
      fill: 'currentColor',
      fillRule: 'evenodd',
      d: 'M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z',
      clipRule: 'evenodd',
    }),
  });
}
function sm({ className: e = '' }) {
  return t.jsxs('svg', {
    stroke: 'currentColor',
    fill: 'none',
    strokeWidth: '2',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b(e, 'h-4 w-4'),
    height: '1em',
    width: '1em',
    xmlns: 'http://www.w3.org/2000/svg',
    children: [
      t.jsx('line', { x1: '18', y1: '6', x2: '6', y2: '18' }),
      t.jsx('line', { x1: '6', y1: '6', x2: '18', y2: '18' }),
    ],
  });
}
function qx() {
  return t.jsxs('svg', {
    width: '18',
    height: '18',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: 'icon-md',
    children: [
      t.jsx('path', {
        d: 'M11 3H7C5.89543 3 5 3.89543 5 5V19C5 20.1046 5.89543 21 7 21H11',
        stroke: 'currentColor',
        strokeWidth: '2',
        strokeLinecap: 'round',
      }),
      t.jsx('path', {
        d: 'M20 12H11M20 12L16 16M20 12L16 8',
        stroke: 'currentColor',
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    ],
  });
}
function Fo({ size: e = 25, className: n = '' }) {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: e,
    height: e,
    viewBox: '0 0 24 24',
    fill: 'none',
    stroke: 'currentColor',
    strokeWidth: '2',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b('lucide lucide-bot', n),
    children: [
      t.jsx('path', { d: 'M12 8V4H8' }),
      t.jsx('rect', { width: '16', height: '12', x: '4', y: '8', rx: '2' }),
      t.jsx('path', { d: 'M2 14h2' }),
      t.jsx('path', { d: 'M20 14h2' }),
      t.jsx('path', { d: 'M15 13v2' }),
      t.jsx('path', { d: 'M9 13v2' }),
    ],
  });
}
function rm({ className: e = '' }) {
  return t.jsx('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: e,
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M9 7C9 4.23858 11.2386 2 14 2C16.7614 2 19 4.23858 19 7V15C19 18.866 15.866 22 12 22C8.13401 22 5 18.866 5 15V9C5 8.44772 5.44772 8 6 8C6.55228 8 7 8.44772 7 9V15C7 17.7614 9.23858 20 12 20C14.7614 20 17 17.7614 17 15V7C17 5.34315 15.6569 4 14 4C12.3431 4 11 5.34315 11 7V15C11 15.5523 11.4477 16 12 16C12.5523 16 13 15.5523 13 15V9C13 8.44772 13.4477 8 14 8C14.5523 8 15 8.44772 15 9V15C15 16.6569 13.6569 18 12 18C10.3431 18 9 16.6569 9 15V7Z',
      fill: 'currentColor',
    }),
  });
}
function Ux({ className: e }) {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    stroke: 'currentColor',
    strokeWidth: '2',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b(e ?? '', 'lucide lucide-messages-square'),
    children: [
      t.jsx('path', { d: 'M14 9a2 2 0 0 1-2 2H6l-4 4V4c0-1.1.9-2 2-2h8a2 2 0 0 1 2 2v5Z' }),
      t.jsx('path', { d: 'M18 9h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1' }),
    ],
  });
}
function Vx({ className: e = '', size: n = '1em' }) {
  return t.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    height: n,
    width: n,
    fill: 'none',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b('icon-md-heavy', e),
    children: t.jsx('path', {
      fill: 'currentColor',
      d: 'M3.07 10.876C3.623 6.436 7.41 3 12 3a9.15 9.15 0 0 1 6.012 2.254V4a1 1 0 1 1 2 0v4a1 1 0 0 1-1 1H15a1 1 0 1 1 0-2h1.957A7.15 7.15 0 0 0 12 5a7 7 0 0 0-6.946 6.124 1 1 0 1 1-1.984-.248m16.992 1.132a1 1 0 0 1 .868 1.116C20.377 17.564 16.59 21 12 21a9.15 9.15 0 0 1-6-2.244V20a1 1 0 1 1-2 0v-4a1 1 0 0 1 1-1h4a1 1 0 1 1 0 2H7.043A7.15 7.15 0 0 0 12 19a7 7 0 0 0 6.946-6.124 1 1 0 0 1 1.116-.868',
    }),
  });
}
function Gx({ className: e = '' }) {
  return t.jsxs('svg', {
    stroke: 'currentColor',
    fill: 'none',
    strokeWidth: '2',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b('h-3 w-3 -rotate-180', e),
    height: '1em',
    width: '1em',
    xmlns: 'http://www.w3.org/2000/svg',
    children: [
      t.jsx('polygon', { points: '11 19 2 12 11 5 11 19' }),
      t.jsx('polygon', { points: '22 19 13 12 22 5 22 19' }),
    ],
  });
}
function Kx() {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    viewBox: '0 0 512 512',
    id: 'google',
    className: 'h-5 w-5',
    children: [
      t.jsx('path', {
        fill: '#fbbb00',
        d: 'M113.47 309.408 95.648 375.94l-65.139 1.378C11.042 341.211 0 299.9 0 256c0-42.451 10.324-82.483 28.624-117.732h.014L86.63 148.9l25.404 57.644c-5.317 15.501-8.215 32.141-8.215 49.456.002 18.792 3.406 36.797 9.651 53.408z',
      }),
      t.jsx('path', {
        fill: '#518ef8',
        d: 'M507.527 208.176C510.467 223.662 512 239.655 512 256c0 18.328-1.927 36.206-5.598 53.451-12.462 58.683-45.025 109.925-90.134 146.187l-.014-.014-73.044-3.727-10.338-64.535c29.932-17.554 53.324-45.025 65.646-77.911h-136.89V208.176h245.899z',
      }),
      t.jsx('path', {
        fill: '#28b446',
        d: 'm416.253 455.624.014.014C372.396 490.901 316.666 512 256 512c-97.491 0-182.252-54.491-225.491-134.681l82.961-67.91c21.619 57.698 77.278 98.771 142.53 98.771 28.047 0 54.323-7.582 76.87-20.818l83.383 68.262z',
      }),
      t.jsx('path', {
        fill: '#f14336',
        d: 'm419.404 58.936-82.933 67.896C313.136 112.246 285.552 103.82 256 103.82c-66.729 0-123.429 42.957-143.965 102.724l-83.397-68.276h-.014C71.23 56.123 157.06 0 256 0c62.115 0 119.068 22.126 163.404 58.936z',
      }),
    ],
  });
}
function Hx() {
  return t.jsxs('svg', {
    viewBox: '0 0 40 40',
    width: '25',
    height: '25',
    children: [
      t.jsxs('linearGradient', {
        id: 'a',
        x1: -277.375,
        x2: -277.375,
        y1: 406.602,
        y2: 407.573,
        gradientTransform: 'matrix(40 0 0 -39.7778 11115.001 16212.334)',
        gradientUnits: 'userSpaceOnUse',
        children: [
          t.jsx('stop', { offset: 0, stopColor: '#0062e0' }),
          t.jsx('stop', { offset: 1, stopColor: '#19afff' }),
        ],
      }),
      t.jsx('path', {
        fill: 'url(#a)',
        d: 'M16.7 39.8C7.2 38.1 0 29.9 0 20 0 9 9 0 20 0s20 9 20 20c0 9.9-7.2 18.1-16.7 19.8l-1.1-.9h-4.4l-1.1.9z',
      }),
      t.jsx('path', {
        fill: '#fff',
        d: 'm27.8 25.6.9-5.6h-5.3v-3.9c0-1.6.6-2.8 3-2.8H29V8.2c-1.4-.2-3-.4-4.4-.4-4.6 0-7.8 2.8-7.8 7.8V20h-5v5.6h5v14.1c1.1.2 2.2.3 3.3.3 1.1 0 2.2-.1 3.3-.3V25.6h4.4z',
      }),
    ],
  });
}
function Wx() {
  return t.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    viewBox: '0 0 448 512',
    id: 'openid',
    className: 'h-5 w-5',
    children: t.jsx('path', {
      fill: 'currentColor',
      d: 'M271.5 432l-68 32C88.5 453.7 0 392.5 0 318.2c0-71.5 82.5-131 191.7-144.3v43c-71.5 12.5-124 53-124 101.3 0 51 58.5 93.3 135.7 103v-340l68-33.2v384zM448 291l-131.3-28.5 36.8-20.7c-19.5-11.5-43.5-20-70-24.8v-43c46.2 5.5 87.7 19.5 120.3 39.3l35-19.8L448 291z',
    }),
  });
}
function Jx() {
  return t.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '25',
    height: '25',
    fill: 'none',
    children: t.jsx('path', {
      fill: 'currentColor',
      d: 'M12 0a12 12 0 0 0-3.84 23.399c.608.112.832-.256.832-.576v-2.015c-3.395.736-4.115-1.632-4.115-1.632a3.241 3.241 0 0 0-1.359-1.792c-1.104-.736.064-.736.064-.736a2.566 2.566 0 0 1 1.824 1.216a2.638 2.638 0 0 0 3.616 1.024a2.607 2.607 0 0 1 .768-1.6c-2.688-.32-5.504-1.344-5.504-5.984a4.677 4.677 0 0 1 1.216-3.168a4.383 4.383 0 0 1 .128-3.136s1.024-.32 3.36 1.216a11.66 11.66 0 0 1 6.112 0c2.336-1.536 3.36-1.216 3.36-1.216a4.354 4.354 0 0 1 .128 3.136a4.628 4.628 0 0 1 1.216 3.168c0 4.672-2.848 5.664-5.536 5.952a2.881 2.881 0 0 1 .832 2.24v3.36c0 .32.224.672.832.576A12 12 0 0 0 12 0z',
    }),
  });
}
function Qx() {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    viewBox: '0 0 1024 1024',
    id: 'discord',
    className: 'h-6 w-6',
    children: [
      t.jsx('circle', { cx: '512', cy: '512', r: '512', fill: '#5865f2' }),
      t.jsx('path', {
        fill: '#fff',
        d: 'M689.43 349a422.21 422.21 0 0 0-104.22-32.32 1.58 1.58 0 0 0-1.68.79 294.11 294.11 0 0 0-13 26.66 389.78 389.78 0 0 0-117.05 0 269.75 269.75 0 0 0-13.18-26.66 1.64 1.64 0 0 0-1.68-.79A421 421 0 0 0 334.44 349a1.49 1.49 0 0 0-.69.59c-66.37 99.17-84.55 195.9-75.63 291.41a1.76 1.76 0 0 0 .67 1.2 424.58 424.58 0 0 0 127.85 64.63 1.66 1.66 0 0 0 1.8-.59 303.45 303.45 0 0 0 26.15-42.54 1.62 1.62 0 0 0-.89-2.25 279.6 279.6 0 0 1-39.94-19 1.64 1.64 0 0 1-.16-2.72c2.68-2 5.37-4.1 7.93-6.22a1.58 1.58 0 0 1 1.65-.22c83.79 38.26 174.51 38.26 257.31 0a1.58 1.58 0 0 1 1.68.2c2.56 2.11 5.25 4.23 8 6.24a1.64 1.64 0 0 1-.14 2.72 262.37 262.37 0 0 1-40 19 1.63 1.63 0 0 0-.87 2.28 340.72 340.72 0 0 0 26.13 42.52 1.62 1.62 0 0 0 1.8.61 423.17 423.17 0 0 0 128-64.63 1.64 1.64 0 0 0 .67-1.18c10.68-110.44-17.88-206.38-75.7-291.42a1.3 1.3 0 0 0-.63-.63zM427.09 582.85c-25.23 0-46-23.16-46-51.6s20.38-51.6 46-51.6c25.83 0 46.42 23.36 46 51.6.02 28.44-20.37 51.6-46 51.6zm170.13 0c-25.23 0-46-23.16-46-51.6s20.38-51.6 46-51.6c25.83 0 46.42 23.36 46 51.6.01 28.44-20.17 51.6-46 51.6z',
      }),
    ],
  });
}
function nr({ size: e = 25, className: n = '' }) {
  return t.jsxs('svg', {
    viewBox: '0 0 24 16',
    overflow: 'visible',
    width: e,
    height: e,
    className: b('fill-current text-black', n),
    children: [
      t.jsx('g', {
        style: {
          transform: 'translateX(13px) rotateZ(0deg)',
          transformOrigin: '4.775px 7.73501px',
        },
        children: t.jsx('path', {
          shapeRendering: 'geometricPrecision',
          fillOpacity: '1',
          d: ' M0,0 C0,0 6.1677093505859375,15.470022201538086 6.1677093505859375,15.470022201538086 C6.1677093505859375,15.470022201538086 9.550004005432129,15.470022201538086 9.550004005432129,15.470022201538086 C9.550004005432129,15.470022201538086 3.382294178009033,0 3.382294178009033,0 C3.382294178009033,0 0,0 0,0 C0,0 0,0 0,0z',
        }),
      }),
      t.jsx('g', {
        style: { transform: 'none', transformOrigin: '7.935px 7.73501px' },
        opacity: '1',
        children: t.jsx('path', {
          shapeRendering: 'geometricPrecision',
          fillOpacity: '1',
          d: ' M5.824605464935303,9.348296165466309 C5.824605464935303,9.348296165466309 7.93500280380249,3.911694288253784 7.93500280380249,3.911694288253784 C7.93500280380249,3.911694288253784 10.045400619506836,9.348296165466309 10.045400619506836,9.348296165466309 C10.045400619506836,9.348296165466309 5.824605464935303,9.348296165466309 5.824605464935303,9.348296165466309 C5.824605464935303,9.348296165466309 5.824605464935303,9.348296165466309 5.824605464935303,9.348296165466309z M6.166755199432373,0 C6.166755199432373,0 0,15.470022201538086 0,15.470022201538086 C0,15.470022201538086 3.4480772018432617,15.470022201538086 3.4480772018432617,15.470022201538086 C3.4480772018432617,15.470022201538086 4.709278583526611,12.22130012512207 4.709278583526611,12.22130012512207 C4.709278583526611,12.22130012512207 11.16093635559082,12.22130012512207 11.16093635559082,12.22130012512207 C11.16093635559082,12.22130012512207 12.421928405761719,15.470022201538086 12.421928405761719,15.470022201538086 C12.421928405761719,15.470022201538086 15.87000560760498,15.470022201538086 15.87000560760498,15.470022201538086 C15.87000560760498,15.470022201538086 9.703250885009766,0 9.703250885009766,0 C9.703250885009766,0 6.166755199432373,0 6.166755199432373,0 C6.166755199432373,0 6.166755199432373,0 6.166755199432373,0z',
        }),
      }),
    ],
  });
}
function Zx({ size: e = 24, className: n = '' }) {
  return t.jsx('svg', {
    width: e,
    height: e,
    viewBox: '0 0 24 24',
    fill: 'none',
    className: b('text-white dark:text-black', n),
    children: t.jsx('path', {
      d: 'M7 11L12 6L17 11M12 18V7',
      stroke: 'currentColor',
      strokeWidth: '2',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    }),
  });
}
function Yx() {
  return t.jsx('svg', {
    width: '18',
    height: '18',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: 'icon-md',
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M15 5C14.4477 5 14 4.55228 14 4C14 3.44772 14.4477 3 15 3H20C20.5523 3 21 3.44772 21 4V9C21 9.55228 20.5523 10 20 10C19.4477 10 19 9.55228 19 9V6.41421L13.7071 11.7071C13.3166 12.0976 12.6834 12.0976 12.2929 11.7071C11.9024 11.3166 11.9024 10.6834 12.2929 10.2929L17.5858 5H15ZM4 7C4 5.34315 5.34315 4 7 4H10C10.5523 4 11 4.44772 11 5C11 5.55228 10.5523 6 10 6H7C6.44772 6 6 6.44772 6 7V17C6 17.5523 6.44772 18 7 18H17C17.5523 18 18 17.5523 18 17V14C18 13.4477 18.4477 13 19 13C19.5523 13 20 13.4477 20 14V17C20 18.6569 18.6569 20 17 20H7C5.34315 20 4 18.6569 4 17V7Z',
      fill: 'currentColor',
    }),
  });
}
function Xx({ className: e = 'h-4 w-4 flex-shrink-0 text-gray-500' }) {
  return t.jsxs('svg', {
    stroke: 'currentColor',
    fill: 'none',
    strokeWidth: '2',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: e,
    height: '1em',
    width: '1em',
    xmlns: 'http://www.w3.org/2000/svg',
    children: [
      t.jsx('circle', { cx: '12', cy: '12', r: '1' }),
      t.jsx('circle', { cx: '19', cy: '12', r: '1' }),
      t.jsx('circle', { cx: '5', cy: '12', r: '1' }),
    ],
  });
}
const ni = ({ className: e = '' }) =>
  t.jsxs('svg', {
    className: e,
    width: '17',
    height: '16',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    children: [
      t.jsx('path', {
        d: 'M11.6439 3C10.9352 3 10.2794 3.37508 9.92002 3.98596L9.49644 4.70605C8.96184 5.61487 7.98938 6.17632 6.93501 6.18489L6.09967 6.19168C5.39096 6.19744 4.73823 6.57783 4.38386 7.19161L4.02776 7.80841C3.67339 8.42219 3.67032 9.17767 4.01969 9.7943L4.43151 10.5212C4.95127 11.4386 4.95127 12.5615 4.43151 13.4788L4.01969 14.2057C3.67032 14.8224 3.67339 15.5778 4.02776 16.1916L4.38386 16.8084C4.73823 17.4222 5.39096 17.8026 6.09966 17.8083L6.93502 17.8151C7.98939 17.8237 8.96185 18.3851 9.49645 19.294L9.92002 20.014C10.2794 20.6249 10.9352 21 11.6439 21H12.3561C13.0648 21 13.7206 20.6249 14.08 20.014L14.5035 19.294C15.0381 18.3851 16.0106 17.8237 17.065 17.8151L17.9004 17.8083C18.6091 17.8026 19.2618 17.4222 19.6162 16.8084L19.9723 16.1916C20.3267 15.5778 20.3298 14.8224 19.9804 14.2057L19.5686 13.4788C19.0488 12.5615 19.0488 11.4386 19.5686 10.5212L19.9804 9.7943C20.3298 9.17767 20.3267 8.42219 19.9723 7.80841L19.6162 7.19161C19.2618 6.57783 18.6091 6.19744 17.9004 6.19168L17.065 6.18489C16.0106 6.17632 15.0382 5.61487 14.5036 4.70605L14.08 3.98596C13.7206 3.37508 13.0648 3 12.3561 3H11.6439Z',
        stroke: 'currentColor',
        strokeWidth: '2',
        strokeLinejoin: 'round',
      }),
      t.jsx('circle', { cx: '12', cy: '12', r: '2.5', stroke: 'currentColor', strokeWidth: '2' }),
    ],
  });
function ev({ unpin: e = !1 }) {
  return e
    ? t.jsxs('svg', {
        width: '24',
        height: '24',
        viewBox: '0 0 24 24',
        fill: 'none',
        xmlns: 'http://www.w3.org/2000/svg',
        className: 'icon-sm',
        children: [
          t.jsx('path', {
            d: 'M15 15V17.5585C15 18.4193 14.4491 19.1836 13.6325 19.4558L13.1726 19.6091C12.454 19.8487 11.6616 19.6616 11.126 19.126L4.87403 12.874C4.33837 12.3384 4.15132 11.546 4.39088 10.8274L4.54415 10.3675C4.81638 9.55086 5.58066 9 6.44152 9H9M12 6.2L13.6277 3.92116C14.3461 2.91549 15.7955 2.79552 16.6694 3.66942L20.3306 7.33058C21.2045 8.20448 21.0845 9.65392 20.0788 10.3723L18 11.8571',
            stroke: 'currentColor',
            strokeWidth: '2',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
          }),
          t.jsx('path', {
            d: 'M8 16L3 21',
            stroke: 'currentColor',
            strokeWidth: '2',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
          }),
          t.jsx('path', {
            d: 'M4 4L20 20',
            stroke: 'currentColor',
            strokeWidth: '2',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
          }),
        ],
      })
    : t.jsx('svg', {
        className: 'icon-sm',
        width: '24',
        height: '24',
        viewBox: '0 0 24 24',
        fill: 'none',
        xmlns: 'http://www.w3.org/2000/svg',
        children: t.jsx('path', {
          fillRule: 'evenodd',
          clipRule: 'evenodd',
          d: 'M17.4845 2.8798C16.1773 1.57258 14.0107 1.74534 12.9272 3.24318L9.79772 7.56923C9.60945 7.82948 9.30775 7.9836 8.98654 7.9836H6.44673C3.74061 7.9836 2.27414 11.6759 4.16948 13.5713L6.59116 15.993L2.29324 20.2909C1.90225 20.6819 1.90225 21.3158 2.29324 21.7068C2.68422 22.0977 3.31812 22.0977 3.70911 21.7068L8.00703 17.4088L10.4287 19.8305C12.3241 21.7259 16.0164 20.2594 16.0164 17.5533V15.0135C16.0164 14.6923 16.1705 14.3906 16.4308 14.2023L20.7568 11.0728C22.2547 9.98926 22.4274 7.8227 21.1202 6.51549L17.4845 2.8798ZM11.8446 18.4147C12.4994 19.0694 14.0141 18.4928 14.0141 17.5533V15.0135C14.0141 14.0499 14.4764 13.1447 15.2572 12.58L19.5832 9.45047C20.0825 9.08928 20.1401 8.3671 19.7043 7.93136L16.0686 4.29567C15.6329 3.85993 14.9107 3.91751 14.5495 4.4168L11.4201 8.74285C10.8553 9.52359 9.95016 9.98594 8.98654 9.98594H6.44673C5.5072 9.98594 4.93059 11.5006 5.58535 12.1554L11.8446 18.4147Z',
          fill: 'currentColor',
        }),
      });
}
function za({ className: e = '' }) {
  return t.jsx('svg', {
    fill: 'none',
    strokeWidth: '2',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b('icon-md', e),
    height: '1em',
    width: '1em',
    xmlns: 'http://www.w3.org/2000/svg',
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M10.5555 4C10.099 4 9.70052 4.30906 9.58693 4.75114L9.29382 5.8919H14.715L14.4219 4.75114C14.3083 4.30906 13.9098 4 13.4533 4H10.5555ZM16.7799 5.8919L16.3589 4.25342C16.0182 2.92719 14.8226 2 13.4533 2H10.5555C9.18616 2 7.99062 2.92719 7.64985 4.25342L7.22886 5.8919H4C3.44772 5.8919 3 6.33961 3 6.8919C3 7.44418 3.44772 7.8919 4 7.8919H4.10069L5.31544 19.3172C5.47763 20.8427 6.76455 22 8.29863 22H15.7014C17.2354 22 18.5224 20.8427 18.6846 19.3172L19.8993 7.8919H20C20.5523 7.8919 21 7.44418 21 6.8919C21 6.33961 20.5523 5.8919 20 5.8919H16.7799ZM17.888 7.8919H6.11196L7.30423 19.1057C7.3583 19.6142 7.78727 20 8.29863 20H15.7014C16.2127 20 16.6417 19.6142 16.6958 19.1057L17.888 7.8919ZM10 10C10.5523 10 11 10.4477 11 11V16C11 16.5523 10.5523 17 10 17C9.44772 17 9 16.5523 9 16V11C9 10.4477 9.44772 10 10 10ZM14 10C14.5523 10 15 10.4477 15 11V16C15 16.5523 14.5523 17 14 17C13.4477 17 13 16.5523 13 16V11C13 10.4477 13.4477 10 14 10Z',
      fill: 'currentColor',
    }),
  });
}
function or({ className: e = 'icon-md' }) {
  return t.jsx('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: e,
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M10.5555 4C10.099 4 9.70052 4.30906 9.58693 4.75114L9.29382 5.8919H14.715L14.4219 4.75114C14.3083 4.30906 13.9098 4 13.4533 4H10.5555ZM16.7799 5.8919L16.3589 4.25342C16.0182 2.92719 14.8226 2 13.4533 2H10.5555C9.18616 2 7.99062 2.92719 7.64985 4.25342L7.22886 5.8919H4C3.44772 5.8919 3 6.33961 3 6.8919C3 7.44418 3.44772 7.8919 4 7.8919H4.10069L5.31544 19.3172C5.47763 20.8427 6.76455 22 8.29863 22H15.7014C17.2354 22 18.5224 20.8427 18.6846 19.3172L19.8993 7.8919H20C20.5523 7.8919 21 7.44418 21 6.8919C21 6.33961 20.5523 5.8919 20 5.8919H16.7799ZM17.888 7.8919H6.11196L7.30423 19.1057C7.3583 19.6142 7.78727 20 8.29863 20H15.7014C16.2127 20 16.6417 19.6142 16.6958 19.1057L17.888 7.8919ZM10 10C10.5523 10 11 10.4477 11 11V16C11 16.5523 10.5523 17 10 17C9.44772 17 9 16.5523 9 16V11C9 10.4477 9.44772 10 10 10ZM14 10C14.5523 10 15 10.4477 15 11V16C15 16.5523 14.5523 17 14 17C13.4477 17 13 16.5523 13 16V11C13 10.4477 13.4477 10 14 10Z',
      fill: 'currentColor',
    }),
  });
}
function cm({ size: e, className: n = 'icon-md' }) {
  return t.jsx('svg', {
    width: e,
    height: e,
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: n,
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M15.4646 19C15.2219 20.6961 13.7632 22 12 22C10.2368 22 8.77806 20.6961 8.53544 19H6C4.34315 19 3 17.6569 3 16V13.5C3 12.9477 3.44772 12.5 4 12.5H4.5C5.32843 12.5 6 11.8284 6 11C6 10.1716 5.32843 9.5 4.5 9.5H4C3.44772 9.5 3 9.05229 3 8.5L3 6C3 4.34315 4.34315 3 6 3L18 3C19.6569 3 21 4.34315 21 6L21 16C21 17.6569 19.6569 19 18 19H15.4646ZM12 20C12.8284 20 13.5 19.3284 13.5 18.5V18C13.5 17.4477 13.9477 17 14.5 17H18C18.5523 17 19 16.5523 19 16L19 6C19 5.44772 18.5523 5 18 5L6 5C5.44772 5 5 5.44772 5 6V7.53544C6.69615 7.77806 8 9.23676 8 11C8 12.7632 6.69615 14.2219 5 14.4646L5 16C5 16.5523 5.44771 17 6 17H9.5C10.0523 17 10.5 17.4477 10.5 18V18.5C10.5 19.3284 11.1716 20 12 20Z',
      fill: 'currentColor',
    }),
  });
}
function oi({ size: e = 25, className: n = 'h-4 w-4' }) {
  const o = e,
    a = e;
  return t.jsxs('svg', {
    stroke: 'currentColor',
    fill: 'none',
    strokeWidth: '2',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b(n, ''),
    width: a,
    height: o,
    xmlns: 'http://www.w3.org/2000/svg',
    children: [
      t.jsx('path', {
        d: 'm8.0458 0.81981a1.1197 1.1197 0 0 0-1.0608 0.76184l-6.7912 20.123a1.1178 1.1178 0 0 0 1.0592 1.4751h5.4647a1.1197 1.1197 0 0 0 1.0608-0.7615l1.3528-4.0084-2.3684-2.2107a0.51536 0.51536 0 0 1 0.35193-0.8923h3.0639l1.8213-5.3966-2.8111-8.3294a1.1181 1.1181 0 0 0-1.0595-0.76049h-0.0836z',
      }),
      t.jsx('path', {
        d: 'm7.1147 15.307a0.51536 0.51536 0 0 0-0.35193 0.8923l7.1552 6.6782a1.1248 1.1248 0 0 0 0.76724 0.30238h0.2417a1.1181 1.1181 0 0 0 1.0534-1.4755l-2.1591-6.3974z',
      }),
      t.jsx('path', {
        d: 'm17.015 1.5807a1.1178 1.1178 0 0 0-1.0593-0.76049h-7.8258a1.1181 1.1181 0 0 1 1.0593 0.76049l6.7916 20.123a1.1181 1.1181 0 0 1-1.0593 1.4757h7.8261a1.1181 1.1181 0 0 0 1.059-1.4757z',
      }),
    ],
  });
}
function lm({ className: e = 'h-4 w-4' }) {
  return t.jsx('svg', {
    stroke: 'currentColor',
    fill: 'currentColor',
    strokeWidth: '1',
    viewBox: '0 0 40 40',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: e,
    height: '1em',
    width: '1em',
    xmlns: 'http://www.w3.org/2000/svg',
    children: t.jsx('path', {
      d: 'M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z',
    }),
  });
}
function _m({ className: e = '' }) {
  return t.jsxs('svg', {
    stroke: 'currentColor',
    fill: 'none',
    strokeWidth: '1',
    viewBox: '0 0 24 24',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b('h-4 w-4', e),
    height: '1em',
    width: '1em',
    xmlns: 'http://www.w3.org/2000/svg',
    children: [
      t.jsx('path', {
        d: 'm12.648 7.5685c-0.50544 0.051397-0.89091 0.41065-0.92674 0.8637-0.01545 0.19521-0.0106 0.20845 0.49497 1.3471 1.1502 2.5905 1.4289 3.214 1.4758 3.3018 0.11355 0.21251 0.27321 0.41243 0.47269 0.59187 0.15307 0.1377 0.25403 0.21173 0.42478 0.31156 0.3001 0.17541 0.44902 0.2239 1.6168 0.5265 1.1375 0.29477 1.759 0.49069 2.2945 0.7233 0.69376 0.30136 1.1778 0.64416 1.484 1.0509 0.21968 0.29184 0.41423 0.81518 0.49888 1.342 0.0331 0.20592 0.03332 0.66112 4.01e-4 0.84729-0.07142 0.40404-0.21408 0.74262-0.43231 1.026-0.11606 0.15068-0.07568 0.12546 0.09306-0.05817 0.47754-0.51963 0.96399-1.4077 1.2122-2.2131 0.30039-0.9747 0.34126-2.0213 0.11759-3.012-0.43558-1.9291-1.8271-3.594-3.7869-4.5307-0.12313-0.058878-0.59216-0.27403-1.228-0.56337-0.096488-0.043922-0.22806-0.10404-0.29238-0.13359-0.064327-0.029581-0.1959-0.089695-0.29238-0.13359-0.096489-0.043895-0.37425-0.17055-0.61725-0.28144-0.243-0.11091-0.5149-0.23498-0.60423-0.27574-0.27232-0.12427-0.45504-0.20775-0.59127-0.27016-0.63008-0.28868-0.89678-0.40538-0.9728-0.42563-0.07975-0.021233-0.28234-0.048493-0.33317-0.044835-0.01071 7.938e-4 -0.05937 0.00549-0.10814 0.010432z',
      }),
      t.jsx('path', {
        d: 'm14.021 17.239c-0.03492 0.01809-0.08393 0.0443-0.10894 0.0582-0.02504 0.01392-0.08058 0.04413-0.12346 0.06717-0.15738 0.08454-0.57595 0.31026-0.93564 0.50458-0.23638 0.12771-0.27147 0.14674-0.57175 0.30984-0.10723 0.05822-0.22126 0.11958-0.25342 0.13636-0.03216 0.01678-0.16957 0.09084-0.30537 0.16458-0.1358 0.07371-0.37261 0.20168-0.52628 0.28434-0.15366 0.08264-0.4285 0.23102-0.61074 0.32972-0.18226 0.09867-0.42202 0.22807-0.53278 0.28753-0.11079 0.05944-0.21311 0.11686-0.22741 0.12759-0.021237 0.01594-1.0065 0.5501-1.5009 0.8137-0.37548 0.20018-0.80985 0.33408-1.2545 0.38667-0.20701 0.02447-0.59874 0.02456-0.80516 1.4e-4 -0.55972-0.066143-1.0754-0.24884-1.517-0.5374-0.17322-0.1132-0.49933-0.39839-0.62401-0.54572-0.2938-0.34713-0.48386-0.71948-0.58229-1.1408-0.02265-0.09696-0.044078-0.17883-0.047599-0.18197-0.0092-0.0081 0.00742 0.13833 0.037398 0.32981 0.031175 0.19915 0.097605 0.4872 0.16915 0.73355 0.55368 1.9065 2.1292 3.4572 4.2621 4.195 0.61417 0.21234 1.2339 0.34617 1.9083 0.4118 0.25339 0.02484 0.97064 0.03469 1.2351 0.01711 1.2128-0.08039 2.2688-0.39281 3.3521-0.99199 0.09649-0.05337 0.27776-0.1534 0.40282-0.22233 0.12509-0.06891 0.28296-0.15652 0.35087-0.19465 0.06789-0.03815 0.14975-0.08323 0.18192-0.10015 0.03216-0.01695 0.09649-0.05231 0.14295-0.07863 0.04646-0.02629 0.24528-0.13636 0.44181-0.24457l1.0558-0.58364 0.0097-0.0054 0.02973-0.01643 0.01414-0.0078 0.88532-0.4894c0.8749-0.48115 1.1358-0.65006 1.5423-0.99853 0.16946-0.14524 0.42494-0.39321 0.43764-0.42469 0.0026-0.0064 0.04799-0.06771 0.10091-0.13624 0.2151-0.27856 0.35853-0.61978 0.42966-1.0222 0.03291-0.18616 0.0327-0.64137-4.02e-4 -0.84729-0.06398-0.39813-0.20934-0.84973-0.36605-1.1373-0.25701-0.47152-0.80449-0.89995-1.591-1.245-0.21716-0.09527-0.44141-0.18246-0.46645-0.18131-0.01187 5.39e-4 -0.74376 0.39206-1.6264 0.87009-0.88266 0.47803-1.6487 0.89294-1.7023 0.92205-0.05362 0.02913-0.14571 0.07838-0.20468 0.10941z',
      }),
      t.jsx('path', {
        d: 'm3.481 14.946 0.00378 3.3294 0.049238 0.19334c0.15396 0.60448 0.42072 1.0403 0.88446 1.4451 0.21813 0.19041 0.38493 0.3052 0.62131 0.42762 0.50018 0.25906 1.0385 0.38686 1.6281 0.38663 0.61757-2.82e-4 1.1518-0.1351 1.7023-0.42959 0.092899-0.04969 0.45692-0.24584 0.80891-0.43589l0.63999-0.34554v-7.9005l-1.874e-4 -3.6137c-1.339e-4 -2.3055-0.0049543-3.6747-0.013283-3.7821-0.052488-0.67502-0.37505-1.2956-0.91745-1.765-0.16646-0.14405-0.30869-0.24027-0.7324-0.49545-0.21084-0.12699-0.59679-0.35962-0.85765-0.51695-0.26086-0.15734-0.69065-0.41654-0.9551-0.57601-0.26445-0.15946-0.64162-0.38697-0.83816-0.50557-0.40945-0.24708-0.4415-0.26426-0.56527-0.30302-0.16099-0.050404-0.3316-0.068919-0.4938-0.053589-0.47275 0.044684-0.85119 0.34342-0.94956 0.74955-0.015308 0.063187-0.018128 0.90411-0.018323 5.4682l-2.205e-4 5.3936h-5.06e-4z',
      }),
    ],
  });
}
function tv({ size: e = 25, className: n = '' }) {
  return t.jsxs('svg', {
    width: e,
    height: e,
    className: n,
    viewBox: '0 0 19 17',
    fill: 'none',
    preserveAspectRatio: 'xMidYMid meet',
    focusable: 'false',
    children: [
      t.jsx('path', {
        d: 'M9.62674 16.2202H9.7049C10.4225 16.2202 11.0016 15.6412 11.0016 14.9236V4.04224H8.33008V14.92C8.33008 15.6376 8.90914 16.2202 9.62674 16.2202Z',
        fill: '#F9AB00',
      }),
      t.jsx('path', {
        d: 'M14.6819 8.02813C13.3249 6.66752 11.2964 6.39398 9.66577 7.2004L15.0585 12.5931C15.2823 12.8169 15.6624 12.7281 15.7583 12.4297C16.2308 10.927 15.8756 9.21822 14.6819 8.02813Z',
        fill: '#5BB974',
      }),
      t.jsx('path', {
        d: 'M4.64953 8.02813C6.00659 6.66752 8.03507 6.39398 9.66567 7.2004L4.27297 12.5931C4.04916 12.8169 3.66904 12.7281 3.57312 12.4297C3.10064 10.927 3.45589 9.21822 4.64953 8.02813Z',
        fill: '#129EAF',
      }),
      t.jsx('path', {
        d: 'M14.284 3.84326C12.1383 3.84326 10.3159 5.25005 9.66577 7.20038H18.1918C18.5399 7.20038 18.7744 6.83092 18.6145 6.5183C17.8081 4.93033 16.1704 3.84326 14.284 3.84326Z',
        fill: '#AF5CF7',
      }),
      t.jsx('path', {
        d: 'M10.5574 1.55901C9.04053 3.07593 8.74567 5.36019 9.66577 7.20039L15.6944 1.17179C15.943 0.923113 15.8436 0.496814 15.5132 0.390239C13.8151 -0.1604 11.8896 0.226822 10.5574 1.55901Z',
        fill: '#FF8BCB',
      }),
      t.jsx('path', {
        d: 'M8.77408 1.55901C10.291 3.07593 10.5859 5.36019 9.66576 7.20039L3.63716 1.17179C3.38848 0.923113 3.48795 0.496814 3.81833 0.390239C5.51643 -0.1604 7.44189 0.226822 8.77408 1.55901Z',
        fill: '#FA7B17',
      }),
      t.jsx('path', {
        d: 'M5.04752 3.84326C7.19323 3.84326 9.01566 5.25005 9.66577 7.20038H1.13976C0.791616 7.20038 0.55715 6.83092 0.717013 6.5183C1.52343 4.93033 3.16114 3.84326 5.04752 3.84326Z',
        fill: '#4285F4',
      }),
    ],
  });
}
function nv({ size: e = 25, className: n = '' }) {
  return t.jsx('svg', {
    width: e,
    height: e,
    className: b('dark:fill-white', n),
    viewBox: '0 0 18 18',
    preserveAspectRatio: 'xMidYMid meet',
    focusable: 'false',
    children: t.jsx('path', {
      d: 'M2 4.006C2 2.898 2.897 2 4.006 2h9.988C15.102 2 16 2.897 16 4.006v9.988A2.005 2.005 0 0 1 13.994 16H4.006A2.005 2.005 0 0 1 2 13.994V4.006zM13.992 9l.003-.003L10.997 6 9.75 7.247 11.503 9 9.75 10.753 10.997 12l2.997-2.997L13.992 9zm-9.99 0L4 8.997 6.997 6l1.247 1.247L6.492 9l1.753 1.753L6.997 12 4 9.003 4.003 9z',
      fillRule: 'evenodd',
    }),
  });
}
function ov({ size: e = 25, className: n = '' }) {
  return t.jsxs('svg', {
    width: e,
    height: e,
    className: n,
    viewBox: '0 0 18 18',
    preserveAspectRatio: 'xMidYMid meet',
    focusable: 'false',
    children: [
      t.jsx('path', {
        fill: 'url(#_4rif_paint0_radial_897_42)',
        d: 'M9 18c0-1.245-.24-2.415-.72-3.51a8.934 8.934 0 00-1.912-2.857A8.934 8.934 0 003.51 9.72 8.646 8.646 0 000 9a8.886 8.886 0 003.51-.697 9.247 9.247 0 002.857-1.936A8.934 8.934 0 008.28 3.51C8.76 2.415 9 1.245 9 0c0 1.245.232 2.415.697 3.51a9.247 9.247 0 001.936 2.857 9.247 9.247 0 002.857 1.936A8.886 8.886 0 0018 9c-1.245 0-2.415.24-3.51.72a8.934 8.934 0 00-2.857 1.912 9.247 9.247 0 00-1.935 2.858A8.886 8.886 0 009 18z',
      }),
      t.jsx('defs', {
        children: t.jsxs('radialGradient', {
          id: '_4rif_paint0_radial_897_42',
          cx: '0',
          cy: '0',
          r: '1',
          gradientUnits: 'userSpaceOnUse',
          gradientTransform: 'rotate(135 9 3.728) scale(25.4558 12.7279)',
          children: [
            t.jsx('stop', { offset: '.325', stopColor: '#FFDDB7' }),
            t.jsx('stop', { offset: '.706', stopColor: '#076EFF' }),
          ],
        }),
      }),
    ],
  });
}
function dm({ className: e = '' }) {
  return t.jsx('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    fill: 'currentColor',
    width: '800px',
    height: '800px',
    viewBox: '0 0 512 512',
    className: b('h-4 w-4', e),
    children: t.jsx('path', {
      d: 'M473.16,221.48l-2.26-9.59H262.46v88.22H387c-12.93,61.4-72.93,93.72-121.94,93.72-35.66,0-73.25-15-98.13-39.11a140.08,140.08,0,0,1-41.8-98.88c0-37.16,16.7-74.33,41-98.78s61-38.13,97.49-38.13c41.79,0,71.74,22.19,82.94,32.31l62.69-62.36C390.86,72.72,340.34,32,261.6,32h0c-60.75,0-119,23.27-161.58,65.71C58,139.5,36.25,199.93,36.25,256S56.83,369.48,97.55,411.6C141.06,456.52,202.68,480,266.13,480c57.73,0,112.45-22.62,151.45-63.66,38.34-40.4,58.17-96.3,58.17-154.9C475.75,236.77,473.27,222.12,473.16,221.48Z',
    }),
  });
}
function Zc({ className: e }) {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    className: b(e),
    strokeWidth: '2',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    children: [
      t.jsx('path', { d: 'M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z' }),
      t.jsx('path', { d: 'M19 10v2a7 7 0 0 1-14 0v-2' }),
      t.jsx('line', { x1: '12', x2: '12', y1: '19', y2: '22' }),
    ],
  });
}
function av({ className: e = '', size: n = '1em' }) {
  return t.jsx('svg', {
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    height: n,
    width: n,
    className: b(e),
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z',
      fill: 'currentColor',
    }),
  });
}
function iv({ className: e = '', size: n = '1em' }) {
  return t.jsx('svg', {
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    height: n,
    width: n,
    className: b(e),
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM9.5 8.5C8.94772 8.5 8.5 8.94772 8.5 9.5V14.5C8.5 15.0523 8.94772 15.5 9.5 15.5H14.5C15.0523 15.5 15.5 15.0523 15.5 14.5V9.5C15.5 8.94772 15.0523 8.5 14.5 8.5H9.5Z',
      fill: 'currentColor',
    }),
  });
}
function ai() {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '18',
    height: '18',
    viewBox: '0 0 24 24',
    fill: 'none',
    stroke: 'currentColor',
    strokeWidth: '2',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    children: [
      t.jsx('path', { d: 'M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2' }),
      t.jsx('circle', { cx: '12', cy: '7', r: '4' }),
    ],
  });
}
function Yc() {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '16',
    height: '16',
    viewBox: '0 0 24 24',
    fill: 'none',
    stroke: 'currentColor',
    strokeWidth: '2',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: 'lucide lucide-lock',
    children: [
      t.jsx('rect', { width: '18', height: '11', x: '3', y: '11', rx: '2', ry: '2' }),
      t.jsx('path', { d: 'M7 11V7a5 5 0 0 1 10 0v4' }),
    ],
  });
}
function mm({ className: e = '' }) {
  return t.jsx('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: b('text-black dark:text-white', e),
    children: t.jsx('path', {
      fillRule: 'evenodd',
      clipRule: 'evenodd',
      d: 'M16.7929 2.79289C18.0118 1.57394 19.9882 1.57394 21.2071 2.79289C22.4261 4.01184 22.4261 5.98815 21.2071 7.20711L12.7071 15.7071C12.5196 15.8946 12.2652 16 12 16H9C8.44772 16 8 15.5523 8 15V12C8 11.7348 8.10536 11.4804 8.29289 11.2929L16.7929 2.79289ZM19.7929 4.20711C19.355 3.7692 18.645 3.7692 18.2071 4.2071L10 12.4142V14H11.5858L19.7929 5.79289C20.2308 5.35499 20.2308 4.64501 19.7929 4.20711ZM6 5C5.44772 5 5 5.44771 5 6V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V14C19 13.4477 19.4477 13 20 13C20.5523 13 21 13.4477 21 14V18C21 19.6569 19.6569 21 18 21H6C4.34315 21 3 19.6569 3 18V6C3 4.34314 4.34315 3 6 3H10C10.5523 3 11 3.44771 11 4C11 4.55228 10.5523 5 10 5H6Z',
      fill: 'currentColor',
    }),
  });
}
function sv() {
  return t.jsxs('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: 'icon-sm',
    children: [
      t.jsx('path', {
        d: 'M9 3H15M9 3V9.2759C9 9.74377 8.83597 10.1968 8.53644 10.5563L4.85085 14.979C4.30108 15.6387 4 16.4703 4 17.3291V17.3291C4 19.3565 5.64353 21 7.67094 21H16.3291C18.3565 21 20 19.3565 20 17.3291V17.3291C20 16.4703 19.6989 15.6387 19.1492 14.979L15.4636 10.5563C15.164 10.1968 15 9.74377 15 9.2759V3M9 3H8M15 3H16',
        stroke: 'currentColor',
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
      t.jsx('path', {
        d: 'M5 14.774C11.5 12.839 12.15 16.7089 18 14',
        stroke: 'currentColor',
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    ],
  });
}
function rv({ className: e = '' }) {
  return t.jsxs('svg', {
    version: '1.1',
    viewBox: '0 0 233.33 290',
    xmlns: 'http://www.w3.org/2000/svg',
    xmlnsXlink: 'http://www.w3.org/1999/xlink',
    className: b('h-11 w-11', e),
    children: [
      t.jsx('defs', {
        children: t.jsxs('linearGradient', {
          id: 'linearGradient1842',
          x1: '163.92',
          x2: '173.66',
          y1: '22.212',
          y2: '-6.5784',
          gradientTransform: 'translate(.10391 .050143)',
          gradientUnits: 'userSpaceOnUse',
          children: [
            t.jsx('stop', { stopColor: '#640a62', offset: '0' }),
            t.jsx('stop', { stopColor: '#852283', offset: '.49917' }),
            t.jsx('stop', { stopColor: '#640a62', offset: '1' }),
          ],
        }),
      }),
      t.jsxs('g', {
        children: [
          t.jsx('path', {
            transform: 'matrix(.43416 .90084 -.89966 .4366 0 0)',
            d: 'm259.29-126.03a232.2 237.56 0 0 1-17.412 231.34l-193.32-131.59z',
            fill: 'url(#linearGradient1842)',
          }),
          t.jsx('path', {
            transform: 'matrix(.6967 .051926 -.051926 .6967 35.578 23.196)',
            d: 'm50.818 31.415c-1.4654 2.4749-10.838 2.4195-12.997 4.3204-2.1584 1.9009-3.288 11.206-5.9282 12.347-2.6402 1.1409-10.191-4.4132-13.054-4.1441-2.8636 0.26917-9.2466 7.133-12.053 6.5041-2.8066-0.62889-5.6503-9.5602-8.1252-11.026-2.4749-1.4654-11.673 0.33572-13.574-1.8227s1.0482-11.056-0.0927-13.696c-1.1409-2.6402-9.6412-6.5898-9.9104-9.4533-0.26917-2.8636 7.3463-8.328 7.9752-11.135 0.62889-2.8066-3.9265-10.998-2.4612-13.473 1.4654-2.4749 10.838-2.4195 12.997-4.3204 2.1584-1.9009 3.288-11.206 5.9282-12.347 2.6402-1.1409 10.191 4.4132 13.054 4.1441 2.8636-0.26917 9.2466-7.133 12.053-6.5041 2.8066 0.62889 5.6503 9.5602 8.1252 11.026s11.673-0.33572 13.574 1.8227c1.9009 2.1584-1.0482 11.056 0.0927 13.696 1.1409 2.6402 9.6412 6.5898 9.9104 9.4533 0.26917 2.8635-7.3463 8.328-7.9752 11.135-0.62889 2.8066 3.9265 10.998 2.4612 13.473z',
            fill: '#ff9d78',
            stroke: '#f29472',
            strokeWidth: '4.7877',
          }),
          t.jsx('circle', { cx: '170.36', cy: '215.76', r: '12.903', fill: '#cfffff' }),
          t.jsx('path', {
            d: 'm220.77 174.77c-88.526 101.03-191.21 85.731-209.5 82.142-2.2101-2e-5 -2.6686 0.42426-3.437 2.0021l-1.7042 7.5028c0.056197 2.3603 0.37544 2.6428 1.9121 3.5409 18.396 3.3746 130.27 19.488 223.46-86.881 0.64011-1.5095 0.46653-3.1324-0.59137-4.7337l-5.1558-3.6482c-1.586-0.8743-3.9524-0.94332-4.9837 0.0751z',
            color: '#000000',
            fill: '#ff9d78',
            stroke: '#f29472',
            strokeLinejoin: 'round',
            strokeWidth: '2.8913',
          }),
          t.jsxs('g', {
            fill: '#cfffff',
            children: [
              t.jsx('circle', { cx: '72.684', cy: '99.47', r: '12.903' }),
              t.jsx('circle', { cx: '99.144', cy: '172.32', r: '12.903' }),
              t.jsx('circle', { cx: '59.617', cy: '214.78', r: '12.903' }),
              t.jsx('circle', { cx: '135.4', cy: '118.42', r: '12.903' }),
              t.jsx('path', {
                transform: 'rotate(38.66)',
                d: 'm254.21-1.9608a12.903 12.903 0 0 1-6.4852 11.194 12.903 12.903 0 0 1-12.937-0.0582 12.903 12.903 0 0 1-6.3843-11.252l12.903 0.1161z',
              }),
              t.jsx('path', {
                d: 'm29.476 158.16a12.903 12.903 0 0 0-3.6562 0.5293l-3.3691 23.189a12.903 12.903 0 0 0 7.0254 2.0879 12.903 12.903 0 0 0 12.904-12.904 12.903 12.903 0 0 0-12.904-12.902z',
              }),
            ],
          }),
        ],
      }),
    ],
  });
}
function ar({ className: e = '', size: n = '1em' }) {
  const a = n,
    i = n;
  return t.jsxs('svg', {
    width: i,
    height: a,
    viewBox: '0 0 24 24',
    stroke: 'currentColor',
    fill: 'none',
    strokeWidth: '2',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b('text-token-secondary h-2/3 w-2/3', e),
    xmlns: 'http://www.w3.org/2000/svg',
    children: [
      t.jsx('path', {
        d: 'M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z',
      }),
      t.jsx('polyline', { points: '3.27 6.96 12 12.01 20.73 6.96' }),
      t.jsx('line', { x1: '12', y1: '22.08', x2: '12', y2: '12' }),
    ],
  });
}
function cs({ className: e = '' }) {
  return t.jsxs('svg', {
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg',
    className: b('icon-md shrink-0', e),
    children: [
      t.jsx('path', {
        d: 'M19.3975 1.35498C19.3746 1.15293 19.2037 1.00021 19.0004 1C18.7971 0.999793 18.6259 1.15217 18.6026 1.35417C18.4798 2.41894 18.1627 3.15692 17.6598 3.65983C17.1569 4.16274 16.4189 4.47983 15.3542 4.60264C15.1522 4.62593 14.9998 4.79707 15 5.00041C15.0002 5.20375 15.1529 5.37457 15.355 5.39746C16.4019 5.51605 17.1562 5.83304 17.6716 6.33906C18.1845 6.84269 18.5078 7.57998 18.6016 8.63539C18.6199 8.84195 18.7931 9.00023 19.0005 9C19.2078 8.99977 19.3806 8.84109 19.3985 8.6345C19.4883 7.59673 19.8114 6.84328 20.3273 6.32735C20.8433 5.81142 21.5967 5.48834 22.6345 5.39851C22.8411 5.38063 22.9998 5.20782 23 5.00045C23.0002 4.79308 22.842 4.61992 22.6354 4.60157C21.58 4.50782 20.8427 4.18447 20.3391 3.67157C19.833 3.15623 19.516 2.40192 19.3975 1.35498Z',
        fill: 'currentColor',
      }),
      t.jsx('path', {
        fillRule: 'evenodd',
        clipRule: 'evenodd',
        d: 'M11 3C11.4833 3 11.8974 3.34562 11.9839 3.82111C12.4637 6.46043 13.279 8.23983 14.5196 9.48039C15.7602 10.721 17.5396 11.5363 20.1789 12.0161C20.6544 12.1026 21 12.5167 21 13C21 13.4833 20.6544 13.8974 20.1789 13.9839C17.5396 14.4637 15.7602 15.279 14.5196 16.5196C13.279 17.7602 12.4637 19.5396 11.9839 22.1789C11.8974 22.6544 11.4833 23 11 23C10.5167 23 10.1026 22.6544 10.0161 22.1789C9.53625 19.5396 8.72096 17.7602 7.48039 16.5196C6.23983 15.279 4.46043 14.4637 1.82111 13.9839C1.34562 13.8974 1 13.4833 1 13C1 12.5167 1.34562 12.1026 1.82111 12.0161C4.46043 11.5363 6.23983 10.721 7.48039 9.48039C8.72096 8.23983 9.53625 6.46043 10.0161 3.82111C10.1026 3.34562 10.5167 3 11 3ZM5.66618 13C6.9247 13.5226 7.99788 14.2087 8.89461 15.1054C9.79134 16.0021 10.4774 17.0753 11 18.3338C11.5226 17.0753 12.2087 16.0021 13.1054 15.1054C14.0021 14.2087 15.0753 13.5226 16.3338 13C15.0753 12.4774 14.0021 11.7913 13.1054 10.8946C12.2087 9.99788 11.5226 8.9247 11 7.66618C10.4774 8.9247 9.79134 9.99788 8.89461 10.8946C7.99788 11.7913 6.9247 12.4774 5.66618 13Z',
        fill: 'currentColor',
      }),
    ],
  });
}
function cv({ className: e }) {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    width: '24',
    height: '24',
    viewBox: '0 0 24 24',
    fill: 'none',
    stroke: 'currentColor',
    strokeWidth: '2',
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
    className: b(e),
    children: [
      t.jsx('path', { d: 'M2 10v3' }),
      t.jsx('path', { d: 'M6 6v11' }),
      t.jsx('path', { d: 'M10 3v18' }),
      t.jsx('path', { d: 'M14 8v7' }),
      t.jsx('path', { d: 'M18 5v13' }),
      t.jsx('path', { d: 'M22 10v3' }),
    ],
  });
}
function um({
  title: e = 'Plugins',
  value: n,
  disabled: o,
  setSelected: a,
  availableValues: i,
  showAbove: s = !1,
  showLabel: r = !0,
  containerClassName: c,
  optionsClassName: l = '',
  labelClassName: d = '',
  isSelected: _,
  className: m,
  searchPlaceholder: f,
  optionValueKey: g = 'value',
}) {
  const [h, v] = p.useState(!1),
    x = p.useRef(null),
    y = ['select-plugin', 'plugins-label', 'selected-plugins'];
  ro(x, () => v(!1), y);
  const k = (P) => {
      a(P), v(!0);
    },
    [C, j] = ti({
      availableOptions: i,
      placeholder: f,
      getTextKeyOverride: (P) => (P.name || '').toUpperCase(),
    }),
    T = !!j ? C : i,
    S = { className: 'top-full mt-3' };
  s && (S.className = 'bottom-full mb-3');
  const I = { open: h };
  return t.jsx('div', {
    className: b('flex items-center justify-center gap-2', c ?? ''),
    children: t.jsx('div', {
      className: 'relative w-full',
      children: t.jsx(Me, {
        value: n,
        onChange: k,
        disabled: o,
        children: () =>
          t.jsxs(t.Fragment, {
            children: [
              t.jsxs(Me.Button, {
                className: b(
                  'relative flex w-full cursor-default flex-col rounded-md border border-black/10 bg-white py-2 pl-3 pr-10 text-left focus:outline-none focus:ring-0 focus:ring-offset-0 dark:border-gray-600 dark:border-white/20 dark:bg-gray-800 sm:text-sm',
                  m ?? '',
                ),
                id: y[0],
                onClick: () => v((P) => !P),
                ...I,
                children: [
                  ' ',
                  r &&
                    t.jsx(Me.Label, {
                      className: b('block text-xs text-gray-700 dark:text-gray-500', d),
                      id: y[1],
                      'data-headlessui-state': '',
                      children: e,
                    }),
                  t.jsx('span', {
                    className: 'inline-flex w-full truncate',
                    id: y[2],
                    children: t.jsxs('span', {
                      className: b(
                        'flex h-6 items-center gap-1 truncate text-sm text-gray-800 dark:text-white',
                        r ? '' : 'text-xs',
                      ),
                      children: [
                        !r &&
                          e.length > 0 &&
                          t.jsxs('span', {
                            className: 'text-xs text-gray-700 dark:text-gray-500',
                            children: [e, ':'],
                          }),
                        t.jsx('span', {
                          className: 'flex h-6 items-center gap-1 truncate',
                          children: t.jsx('div', {
                            className: 'flex gap-1',
                            children: n.map((P, F) =>
                              t.jsxs(
                                'div',
                                {
                                  className: 'relative',
                                  style: { width: '16px', height: '16px' },
                                  children: [
                                    P.icon
                                      ? t.jsx('img', {
                                          src: P.icon,
                                          alt: `${P} logo`,
                                          className: 'h-full w-full rounded-sm bg-white',
                                        })
                                      : t.jsx(ga, {
                                          className: 'h-full w-full rounded-sm bg-white',
                                        }),
                                    t.jsx('div', {
                                      className:
                                        'absolute inset-0 rounded-sm ring-1 ring-inset ring-black/10',
                                    }),
                                  ],
                                },
                                F,
                              ),
                            ),
                          }),
                        }),
                      ],
                    }),
                  }),
                  t.jsx('span', {
                    className:
                      'pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2',
                    children: t.jsx('svg', {
                      stroke: 'currentColor',
                      fill: 'none',
                      strokeWidth: '2',
                      viewBox: '0 0 24 24',
                      strokeLinecap: 'round',
                      strokeLinejoin: 'round',
                      className: 'h-4 w-4  text-gray-400',
                      height: '1em',
                      width: '1em',
                      xmlns: 'http://www.w3.org/2000/svg',
                      style: s ? { transform: 'scaleY(-1)' } : {},
                      children: t.jsx('polyline', { points: '6 9 12 15 18 9' }),
                    }),
                  }),
                ],
              }),
              t.jsx(bs, {
                show: h,
                as: ze.Fragment,
                leave: 'transition ease-in duration-150',
                leaveFrom: 'opacity-100',
                leaveTo: 'opacity-0',
                ...S,
                children: t.jsxs(Me.Options, {
                  ref: x,
                  className: b(
                    'absolute z-50 mt-2 max-h-60 w-full overflow-auto rounded bg-white text-base text-xs ring-1 ring-black/10 focus:outline-none dark:bg-gray-800 dark:ring-white/20 dark:last:border-0 md:w-[100%]',
                    l,
                  ),
                  children: [
                    j,
                    T.map((P, F) => {
                      if (!P) return null;
                      const R = _(P[g]);
                      return t.jsx(
                        Me.Option,
                        {
                          value: P[g],
                          className:
                            'group relative flex h-[42px] cursor-pointer select-none items-center overflow-hidden border-b border-black/10 pl-3 pr-9 text-gray-800 last:border-0 hover:bg-gray-20 dark:border-white/20 dark:text-white dark:hover:bg-gray-700',
                          children: t.jsxs('span', {
                            className: 'flex items-center gap-1.5 truncate',
                            children: [
                              !P.isButton &&
                                t.jsx('span', {
                                  className: 'h-6 w-6 shrink-0',
                                  children: t.jsxs('div', {
                                    className: 'relative',
                                    style: { width: '100%', height: '100%' },
                                    children: [
                                      P.icon
                                        ? t.jsx('img', {
                                            src: P.icon,
                                            alt: `${P.name} logo`,
                                            className: 'h-full w-full rounded-sm bg-white',
                                          })
                                        : t.jsx(ga, {
                                            className: 'h-full w-full rounded-sm bg-white',
                                          }),
                                      t.jsx('div', {
                                        className:
                                          'absolute inset-0 rounded-sm ring-1 ring-inset ring-black/10',
                                      }),
                                    ],
                                  }),
                                }),
                              t.jsx('span', {
                                className: b(
                                  'flex h-6 items-center gap-1 text-gray-800 dark:text-gray-200',
                                  R ? 'font-semibold' : '',
                                ),
                                children: P.name,
                              }),
                              P.isButton &&
                                t.jsx('span', {
                                  className:
                                    'absolute inset-y-0 right-0 flex items-center pr-3 text-gray-800 dark:text-gray-200',
                                  children: t.jsx(np, {}),
                                }),
                              R &&
                                !P.isButton &&
                                t.jsx('span', {
                                  className:
                                    'absolute inset-y-0 right-0 flex items-center pr-3 text-gray-800 dark:text-gray-200',
                                  children: t.jsx(mo, {}),
                                }),
                            ],
                          }),
                        },
                        F,
                      );
                    }),
                  ],
                }),
              }),
            ],
          }),
      }),
    }),
  });
}
function lv() {
  const e = _t(),
    n = D(),
    [o] = jl(),
    [a, i] = p.useState(3),
    [s, r] = p.useState(''),
    [c, l] = p.useState(!1),
    [d, _] = p.useState(!1),
    m = p.useMemo(() => o.get('token') || '', [o]),
    f = p.useMemo(() => o.get('email') || '', [o]),
    g = p.useCallback(() => {
      i(3);
      const C = setInterval(() => {
        i((j) => (j <= 1 ? (clearInterval(C), e('/c/new', { replace: !0 }), 0) : j - 1));
      }, 1e3);
    }, [e]),
    h = ef({
      onSuccess: () => {
        r(n('com_auth_email_verification_success') + ' 🎉'), _(!0), g();
      },
      onError: () => {
        l(!0), _(!0), r(n('com_auth_email_verification_failed') + ' 😢'), i(0);
      },
    }),
    v = ad({
      onSuccess: () => {
        r(n('com_auth_email_resent_success') + ' 📧'), g();
      },
      onError: () => {
        r(n('com_auth_email_resent_failed') + ' 😢'), g();
      },
      onMutate: () => l(!1),
    }),
    x = () => {
      v.mutate({ email: f });
    };
  p.useEffect(() => {
    if (!(h.isLoading || d)) {
      if (m && f) {
        h.mutate({ email: f, token: m });
        return;
      } else
        r(
          f
            ? n('com_auth_email_verification_failed_token_missing') + ' 😢'
            : n('com_auth_email_verification_invalid') + ' 🤨',
        );
      l(!0), _(!0), i(0);
    }
  }, [n, m, f, d, h]);
  const y = () =>
      t.jsxs('div', {
        className: 'flex flex-col items-center justify-center',
        children: [
          t.jsx('h1', {
            className: 'mb-4 text-center text-3xl font-semibold text-black dark:text-white',
            children: s,
          }),
          a > 0 &&
            t.jsx('p', {
              className: 'text-center text-lg text-gray-600 dark:text-gray-400',
              children: n('com_auth_email_verification_redirecting', a.toString()),
            }),
          c &&
            a === 0 &&
            t.jsxs('p', {
              className: 'text-center text-lg text-gray-600 dark:text-gray-400',
              children: [
                n('com_auth_email_verification_resend_prompt'),
                t.jsx('button', {
                  className: 'ml-2 text-blue-600 hover:underline',
                  onClick: x,
                  disabled: v.isLoading,
                  children: n('com_auth_email_resend_link'),
                }),
              ],
            }),
        ],
      }),
    k = () =>
      t.jsxs('div', {
        className: 'flex flex-col items-center justify-center',
        children: [
          t.jsx('h1', {
            className: 'mb-4 text-center text-3xl font-semibold text-black dark:text-white',
            children: n('com_auth_email_verification_in_progress'),
          }),
          t.jsx('div', {
            className: 'mt-4 flex justify-center',
            children: t.jsx(Oe, { className: 'h-8 w-8 text-green-500' }),
          }),
        ],
      });
  return t.jsxs('div', {
    className:
      'flex min-h-screen flex-col items-center justify-center bg-white pt-6 dark:bg-gray-900 sm:pt-0',
    children: [
      t.jsx('div', { className: 'absolute bottom-0 left-0 m-4', children: t.jsx(am, {}) }),
      d ? t.jsx(y, {}) : t.jsx(k, {}),
    ],
  });
}
const _v = () => {
    const { error: e } = Od(),
      n = _t();
    return (
      ze.useEffect(() => {
        var o;
        (o = e == null ? void 0 : e.response) == null || o.status;
      }, [e, n]),
      null
    );
  },
  dv = ({ children: e }) =>
    t.jsx('div', {
      className:
        'relative mt-4 rounded border border-green-400 bg-green-100 px-4 py-3 text-green-700 dark:bg-green-900 dark:text-white',
      role: 'alert',
      children: e,
    }),
  Xc = () => {
    const e = D();
    return t.jsxs('div', {
      className: 'flex flex-col',
      children: [
        e('com_auth_reset_password_if_email_exists'),
        t.jsx('span', {
          children: t.jsx('a', {
            className: 'text-sm text-green-500 hover:underline',
            href: '/login',
            children: e('com_auth_back_to_login'),
          }),
        }),
      ],
    });
  };
function mv() {
  const e = D(),
    {
      register: n,
      handleSubmit: o,
      formState: { errors: a },
    } = an(),
    [i, s] = p.useState(void 0),
    { startupConfig: r, setHeaderText: c } = qo(),
    l = Qf(),
    d = (_) => {
      l.mutate(_, {
        onSuccess: (m) => {
          m.link && !(r != null && r.emailEnabled)
            ? (c('com_auth_reset_password'),
              s(
                t.jsxs('span', {
                  children: [
                    e('com_auth_click'),
                    ' ',
                    t.jsx('a', {
                      className: 'text-green-500 hover:underline',
                      href: m.link,
                      children: e('com_auth_here'),
                    }),
                    ' ',
                    e('com_auth_to_reset_your_password'),
                  ],
                }),
              ))
            : (c('com_auth_reset_password_link_sent'), s(t.jsx(Xc, {})));
        },
        onError: () => {
          c('com_auth_reset_password_link_sent'), s(t.jsx(Xc, {}));
        },
      });
    };
  return i
    ? t.jsx(dv, { children: i })
    : t.jsxs('form', {
        className: 'mt-6',
        'aria-label': 'Password reset form',
        method: 'POST',
        onSubmit: o(d),
        children: [
          t.jsxs('div', {
            className: 'mb-2',
            children: [
              t.jsxs('div', {
                className: 'relative',
                children: [
                  t.jsx('input', {
                    type: 'email',
                    id: 'email',
                    autoComplete: 'off',
                    'aria-label': e('com_auth_email'),
                    ...n('email', {
                      required: e('com_auth_email_required'),
                      minLength: { value: 3, message: e('com_auth_email_min_length') },
                      maxLength: { value: 120, message: e('com_auth_email_max_length') },
                      pattern: { value: /\S+@\S+\.\S+/, message: e('com_auth_email_pattern') },
                    }),
                    'aria-invalid': !!a.email,
                    className:
                      'webkit-dark-styles peer block w-full appearance-none rounded-md border border-gray-300 bg-transparent px-3.5 pb-3.5 pt-4 text-sm text-gray-900 focus:border-green-500 focus:outline-none focus:ring-0 dark:border-gray-600 dark:text-white dark:focus:border-green-500',
                    placeholder: ' ',
                  }),
                  t.jsx('label', {
                    htmlFor: 'email',
                    className:
                      'absolute start-1 top-2 z-10 origin-[0] -translate-y-4 scale-75 transform bg-white px-3 text-sm text-gray-500 duration-100 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:px-3 peer-focus:text-green-600 dark:bg-gray-900 dark:text-gray-400 dark:peer-focus:text-green-500 rtl:peer-focus:left-auto rtl:peer-focus:translate-x-1/4',
                    children: e('com_auth_email_address'),
                  }),
                ],
              }),
              a.email &&
                t.jsx('span', {
                  role: 'alert',
                  className: 'mt-1 text-sm text-red-500 dark:text-red-900',
                  children: a.email.message,
                }),
            ],
          }),
          t.jsxs('div', {
            className: 'mt-6',
            children: [
              t.jsx('button', {
                type: 'submit',
                disabled: !!a.email,
                className:
                  'w-full transform rounded-md bg-green-500 px-4 py-3 tracking-wide text-white transition-colors duration-200 hover:bg-green-550 focus:bg-green-550 focus:outline-none disabled:cursor-not-allowed disabled:hover:bg-green-500',
                children: e('com_auth_continue'),
              }),
              t.jsx('div', {
                className: 'mt-4 flex justify-center',
                children: t.jsx('a', {
                  href: '/login',
                  className: 'text-sm text-green-500',
                  children: e('com_auth_back_to_login'),
                }),
              }),
            ],
          }),
        ],
      });
}
const uv = ({ active: e, children: n }) => {
    const o = `
  @keyframes blink-animation {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }`;
    return e
      ? t.jsxs(t.Fragment, {
          children: [
            t.jsx('style', { children: o }),
            t.jsx('div', { style: { animation: 'blink-animation 3s infinite' }, children: n }),
          ],
        })
      : t.jsx(t.Fragment, { children: n });
  },
  pm = ({ currentPage: e, maxPage: n, onChangePage: o }) => {
    const a = [...Array(n).keys()].map((s) => s + 1),
      i = (s) => {
        s < 1 || s > n || o(s);
      };
    return t.jsxs('div', {
      className: 'flex gap-2 text-sm text-black/60 dark:text-white/70',
      children: [
        t.jsxs('div', {
          role: 'button',
          'aria-label': 'Previous page',
          onClick: () => i(e - 1),
          className: `flex cursor-default items-center text-sm ${
            e === 1
              ? 'text-black/70 opacity-50 dark:text-white/70'
              : 'text-black/70 hover:text-black/50 dark:text-white/70 dark:hover:text-white/50'
          }`,
          style: { userSelect: 'none' },
          children: [
            t.jsx('svg', {
              stroke: 'currentColor',
              fill: 'none',
              strokeWidth: '2',
              viewBox: '0 0 24 24',
              strokeLinecap: 'round',
              strokeLinejoin: 'round',
              className: 'h-4 w-4',
              height: '1em',
              width: '1em',
              xmlns: 'http://www.w3.org/2000/svg',
              children: t.jsx('polyline', { points: '15 18 9 12 15 6' }),
            }),
            'Prev',
          ],
        }),
        a.map((s) =>
          t.jsx(
            'div',
            {
              role: 'button',
              className: `flex h-5 w-5 items-center justify-center text-sm ${
                e === s
                  ? 'text-blue-600 hover:text-blue-600 dark:text-blue-600 dark:hover:text-blue-600'
                  : 'text-black/70 hover:text-black/50 dark:text-white/70 dark:hover:text-white/50'
              }`,
              style: { userSelect: 'none' },
              onClick: () => o(s),
              children: s,
            },
            s,
          ),
        ),
        t.jsxs('div', {
          role: 'button',
          'aria-label': 'Next page',
          onClick: () => i(e + 1),
          className: `flex cursor-default items-center text-sm ${
            e === n
              ? 'text-black/70 opacity-50 dark:text-white/70'
              : 'text-black/70 hover:text-black/50 dark:text-white/70 dark:hover:text-white/50'
          }`,
          style: { userSelect: 'none' },
          children: [
            'Next',
            t.jsx('svg', {
              stroke: 'currentColor',
              fill: 'none',
              strokeWidth: '2',
              viewBox: '0 0 24 24',
              strokeLinecap: 'round',
              strokeLinejoin: 'round',
              className: 'h-4 w-4',
              height: '1em',
              width: '1em',
              xmlns: 'http://www.w3.org/2000/svg',
              children: t.jsx('polyline', { points: '9 18 15 12 9 6' }),
            }),
          ],
        }),
      ],
    });
  };
function pv({ plugin: e, onInstall: n, onUninstall: o, isInstalled: a }) {
  const i = D(),
    s = () => {
      a ? o() : n();
    };
  return t.jsx(t.Fragment, {
    children: t.jsxs('div', {
      className:
        'flex flex-col gap-4 rounded border border-black/10 bg-white p-6 dark:border-gray-500 dark:bg-gray-700',
      children: [
        t.jsxs('div', {
          className: 'flex gap-4',
          children: [
            t.jsx('div', {
              className: 'h-[70px] w-[70px] shrink-0',
              children: t.jsxs('div', {
                className: 'relative h-full w-full',
                children: [
                  t.jsx('img', {
                    src: e.icon,
                    alt: `${e.name} logo`,
                    className: 'h-full w-full rounded-[5px]',
                  }),
                  t.jsx('div', {
                    className: 'absolute inset-0 rounded-[5px] ring-1 ring-inset ring-black/10',
                  }),
                ],
              }),
            }),
            t.jsxs('div', {
              className: 'flex min-w-0 flex-col items-start justify-between',
              children: [
                t.jsx('div', {
                  className:
                    'mb-2 line-clamp-1 max-w-full text-lg leading-5 text-gray-700/80 dark:text-gray-50',
                  children: e.name,
                }),
                a
                  ? t.jsx('button', {
                      className:
                        'btn relative bg-gray-300 hover:bg-gray-400 dark:bg-gray-50 dark:hover:bg-gray-200',
                      onClick: s,
                      'aria-label': `${i('com_nav_plugin_uninstall')} ${e.name}`,
                      children: t.jsxs('div', {
                        className: 'flex w-full items-center justify-center gap-2',
                        children: [
                          i('com_nav_plugin_uninstall'),
                          t.jsx(d_, { className: 'flex h-4 w-4 items-center stroke-2' }),
                        ],
                      }),
                    })
                  : t.jsx('button', {
                      className: 'btn btn-primary relative',
                      'aria-label': `${i('com_nav_plugin_install')} ${e.name}`,
                      onClick: s,
                      children: t.jsxs('div', {
                        className: 'flex w-full items-center justify-center gap-2',
                        children: [
                          i('com_nav_plugin_install'),
                          t.jsx(op, { className: 'flex h-4 w-4 items-center stroke-2' }),
                        ],
                      }),
                    }),
              ],
            }),
          ],
        }),
        t.jsx('div', {
          className: 'line-clamp-3 h-[60px] text-sm text-gray-700/70 dark:text-gray-50/70',
          children: e.description,
        }),
      ],
    }),
  });
}
function hv({ content: e, position: n }) {
  return t.jsx(ea, {
    children: t.jsx(_o, {
      side: n,
      className: 'w-80 ',
      children: t.jsx('div', {
        className: 'space-y-2',
        children: t.jsx('div', {
          className: 'text-sm text-gray-600 dark:text-gray-300',
          children: t.jsx('div', { dangerouslySetInnerHTML: { __html: e } }),
        }),
      }),
    }),
  });
}
function hm({ plugin: e, onSubmit: n, isAssistantTool: o }) {
  var d;
  const {
    register: a,
    handleSubmit: i,
    formState: { errors: s, isDirty: r, isValid: c, isSubmitting: l },
  } = an();
  return t.jsx('div', {
    className: 'flex w-full flex-col items-center gap-2',
    children: t.jsx('div', {
      className: 'grid w-full gap-6 sm:grid-cols-2',
      children: t.jsxs('form', {
        className: 'col-span-1 flex w-full flex-col items-start justify-start gap-2',
        method: 'POST',
        onSubmit: i((_) =>
          n({
            pluginKey: (e == null ? void 0 : e.pluginKey) ?? '',
            action: 'install',
            auth: _,
            isAssistantTool: o,
          }),
        ),
        children: [
          (d = e == null ? void 0 : e.authConfig) == null
            ? void 0
            : d.map((_, m) => {
                const f = _.authField.split('||')[0];
                return t.jsxs(
                  'div',
                  {
                    className: 'flex w-full flex-col gap-1',
                    children: [
                      t.jsx('label', {
                        htmlFor: f,
                        className:
                          'mb-1 text-left text-sm font-medium text-gray-700/70 dark:text-gray-50/70',
                        children: _.label,
                      }),
                      t.jsxs(ie, {
                        openDelay: 300,
                        children: [
                          t.jsx(oe, {
                            className: 'grid w-full items-center gap-2',
                            children: t.jsx('input', {
                              type: 'text',
                              autoComplete: 'off',
                              id: f,
                              'aria-invalid': !!s[f],
                              'aria-describedby': `${f}-error`,
                              'aria-label': _.label,
                              'aria-required': 'true',
                              ...a(f, {
                                required: `${_.label} is required.`,
                                minLength: {
                                  value: 10,
                                  message: `${_.label} must be at least 10 characters long`,
                                },
                              }),
                              className:
                                'flex h-10 max-h-10 w-full resize-none rounded-md border border-gray-200 bg-transparent px-3 py-2 text-sm text-gray-700 shadow-[0_0_10px_rgba(0,0,0,0.05)] outline-none placeholder:text-gray-400 focus:border-gray-400 focus:bg-gray-50 focus:outline-none focus:ring-0 focus:ring-gray-400 focus:ring-opacity-0 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-500 dark:bg-gray-700 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-400 focus:dark:bg-gray-600 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-400 dark:focus:ring-offset-0',
                            }),
                          }),
                          t.jsx(hv, { content: _.description, position: 'right' }),
                        ],
                      }),
                      s[f] &&
                        t.jsx('span', {
                          role: 'alert',
                          className: 'mt-1 text-sm text-red-400',
                          children: s[f].message,
                        }),
                    ],
                  },
                  `${f}-${m}`,
                );
              }),
          t.jsx('button', {
            disabled: !r || !c || l,
            type: 'submit',
            className: 'btn btn-primary relative',
            children: t.jsxs('div', {
              className: 'flex items-center justify-center gap-2',
              children: ['Save', t.jsx(m_, { className: 'flex h-4 w-4 items-center stroke-2' })],
            }),
          }),
        ],
      }),
    }),
  });
}
function gv({ isOpen: e, setIsOpen: n }) {
  const o = D(),
    { user: a } = Re(),
    { data: i } = Qa(),
    { setTools: s } = rn(),
    [r, c] = p.useState([]),
    {
      maxPage: l,
      setMaxPage: d,
      currentPage: _,
      setCurrentPage: m,
      itemsPerPage: f,
      searchChanged: g,
      setSearchChanged: h,
      searchValue: v,
      setSearchValue: x,
      gridRef: y,
      handleSearch: k,
      handleChangePage: C,
      error: j,
      setError: w,
      errorMessage: T,
      setErrorMessage: S,
      showPluginAuthForm: I,
      setShowPluginAuthForm: P,
      selectedPlugin: F,
      setSelectedPlugin: R,
    } = Ed(),
    E = p.useCallback(
      (z) => {
        var B, U, V, H;
        w(!0),
          (U = (B = z.response) == null ? void 0 : B.data) != null &&
            U.message &&
            S((H = (V = z.response) == null ? void 0 : V.data) == null ? void 0 : H.message),
          setTimeout(() => {
            w(!1), S('');
          }, 5e3);
      },
      [w, S],
    ),
    { installPlugin: M, uninstallPlugin: A } = tx({
      onInstallError: E,
      onUninstallError: E,
      onUninstallSuccess: (z, B) => {
        s(B.pluginKey, !0);
      },
    }),
    q = (z, B) => {
      B && (M(z, B), P(!1));
    },
    $ = (z) => {
      const B = i == null ? void 0 : i.find((H) => H.pluginKey === z);
      if (!B) return;
      R(B);
      const { authConfig: U, authenticated: V } = B ?? {};
      U && U.length > 0 && !V ? P(!0) : q({ pluginKey: z, action: 'install', auth: null }, B);
    },
    L = i == null ? void 0 : i.filter((z) => z.name.toLowerCase().includes(v.toLowerCase()));
  return (
    p.useEffect(() => {
      a && a.plugins && c(a.plugins), L && (d(Math.ceil(L.length / f)), g && (m(1), h(!1)));
    }, [i, f, a, v, L, g, d, m, h]),
    t.jsxs(Ln, {
      open: e,
      onClose: () => {
        n(!1), m(1), x('');
      },
      className: 'relative z-[102]',
      children: [
        t.jsx('div', {
          className: 'fixed inset-0 bg-gray-600/65 transition-opacity dark:bg-black/80',
        }),
        t.jsx('div', {
          className: 'fixed inset-0 flex items-center justify-center p-4',
          children: t.jsxs(Ln.Panel, {
            className:
              'relative w-full transform overflow-hidden overflow-y-auto rounded-lg bg-white text-left shadow-xl transition-all dark:bg-gray-700 max-sm:h-full sm:mx-7 sm:my-8 sm:max-w-2xl lg:max-w-5xl xl:max-w-7xl',
            style: { minHeight: '610px' },
            children: [
              t.jsxs('div', {
                className:
                  'flex items-center justify-between border-b-[1px] border-black/10 p-6 pb-4 dark:border-white/10',
                children: [
                  t.jsx('div', {
                    className: 'flex items-center',
                    children: t.jsx('div', {
                      className: 'text-center sm:text-left',
                      children: t.jsx(Ln.Title, {
                        className: 'text-lg font-medium leading-6 text-gray-800 dark:text-gray-200',
                        children: o('com_nav_plugin_store'),
                      }),
                    }),
                  }),
                  t.jsx('div', {
                    children: t.jsx('div', {
                      className: 'sm:mt-0',
                      children: t.jsx('button', {
                        onClick: () => {
                          n(!1), m(1);
                        },
                        className: 'inline-block text-gray-500 hover:text-gray-200',
                        tabIndex: 0,
                        children: t.jsx(oo, {}),
                      }),
                    }),
                  }),
                ],
              }),
              j &&
                t.jsxs('div', {
                  className:
                    'relative m-4 rounded border border-red-400 bg-red-100 px-4 py-3 text-red-700',
                  role: 'alert',
                  children: [o('com_nav_plugin_auth_error'), ' ', T],
                }),
              I &&
                t.jsx('div', {
                  className: 'p-4 sm:p-6 sm:pt-4',
                  children: t.jsx(hm, { plugin: F, onSubmit: (z) => q(z, F) }),
                }),
              t.jsxs('div', {
                className: 'p-4 sm:p-6 sm:pt-4',
                children: [
                  t.jsxs('div', {
                    className: 'mt-4 flex flex-col gap-4',
                    children: [
                      t.jsx('div', {
                        className: 'flex items-center',
                        children: t.jsxs('div', {
                          className: 'relative flex items-center',
                          children: [
                            t.jsx(ao, { className: 'absolute left-2 h-6 w-6 text-gray-500' }),
                            t.jsx('input', {
                              type: 'text',
                              value: v,
                              onChange: k,
                              placeholder: o('com_nav_plugin_search'),
                              className:
                                'flex rounded-md border border-gray-200 bg-transparent py-2 pl-10 pr-2 shadow-[0_0_10px_rgba(0,0,0,0.05)] outline-none placeholder:text-gray-400 focus:border-gray-400 focus:bg-gray-50 focus:outline-none focus:ring-0 focus:ring-gray-400 focus:ring-opacity-0 focus:ring-offset-0 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-50 dark:shadow-[0_0_15px_rgba(0,0,0,0.10)] dark:focus:border-gray-500 focus:dark:bg-gray-600 dark:focus:outline-none dark:focus:ring-0 dark:focus:ring-gray-500 dark:focus:ring-offset-0 dark:focus:ring-offset-gray-900',
                            }),
                          ],
                        }),
                      }),
                      t.jsx('div', {
                        ref: y,
                        className:
                          'grid grid-cols-1 grid-rows-2 gap-3 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4',
                        style: { minHeight: '410px' },
                        children:
                          L &&
                          L.slice((_ - 1) * f, _ * f).map((z, B) =>
                            t.jsx(
                              pv,
                              {
                                plugin: z,
                                isInstalled: r.includes(z.pluginKey),
                                onInstall: () => $(z.pluginKey),
                                onUninstall: () => A(z.pluginKey),
                              },
                              B,
                            ),
                          ),
                      }),
                    ],
                  }),
                  t.jsx('div', {
                    className:
                      'mt-2 flex flex-col items-center gap-2 sm:flex-row sm:justify-between',
                    children:
                      l > 0
                        ? t.jsx(pm, { currentPage: _, maxPage: l, onChangePage: C })
                        : t.jsx('div', { style: { height: '21px' } }),
                  }),
                ],
              }),
            ],
          }),
        }),
      ],
    })
  );
}
const xo = ({ id: e, enabled: n, serverDomain: o, oauthPath: a, Icon: i, label: s }) => {
  const [r, c] = p.useState(!1),
    [l, d] = p.useState(!1),
    [_, m] = p.useState(null);
  if (!n) return null;
  const f = () => {
      c(!0);
    },
    g = () => {
      c(!1), l && d(!1);
    },
    h = () => {
      d(!0), m(e);
    },
    v = () => {
      d(!1);
    },
    x = () =>
      `border border-solid border-gray-300 dark:border-gray-600 transition-colors ${
        l && _ === e
          ? 'bg-blue-200 border-blue-200 dark:bg-blue-900 dark:border-blue-600'
          : r
          ? 'bg-gray-100 dark:bg-gray-700'
          : ''
      }`;
  return t.jsx('div', {
    className: 'mt-2 flex gap-x-2',
    children: t.jsxs('a', {
      'aria-label': `${s}`,
      className: `${x()} flex w-full items-center space-x-3 rounded-md px-5 py-3 text-black transition-colors dark:text-white`,
      href: `${o}/oauth/${a}`,
      'data-testid': e,
      onMouseEnter: f,
      onMouseLeave: g,
      onMouseDown: h,
      onMouseUp: v,
      children: [t.jsx(i, {}), t.jsx('p', { children: s })],
    }),
  });
};
function fv({ startupConfig: e }) {
  var a;
  const n = D();
  if (!e) return null;
  const o = {
    discord:
      (e == null ? void 0 : e.discordLoginEnabled) &&
      t.jsx(
        xo,
        {
          enabled: e.discordLoginEnabled,
          serverDomain: e.serverDomain,
          oauthPath: 'discord',
          Icon: Qx,
          label: n('com_auth_discord_login'),
          id: 'discord',
        },
        'discord',
      ),
    facebook:
      (e == null ? void 0 : e.facebookLoginEnabled) &&
      t.jsx(
        xo,
        {
          enabled: e.facebookLoginEnabled,
          serverDomain: e.serverDomain,
          oauthPath: 'facebook',
          Icon: Hx,
          label: n('com_auth_facebook_login'),
          id: 'facebook',
        },
        'facebook',
      ),
    github:
      (e == null ? void 0 : e.githubLoginEnabled) &&
      t.jsx(
        xo,
        {
          enabled: e.githubLoginEnabled,
          serverDomain: e.serverDomain,
          oauthPath: 'github',
          Icon: Jx,
          label: n('com_auth_github_login'),
          id: 'github',
        },
        'github',
      ),
    google:
      (e == null ? void 0 : e.googleLoginEnabled) &&
      t.jsx(
        xo,
        {
          enabled: e.googleLoginEnabled,
          serverDomain: e.serverDomain,
          oauthPath: 'google',
          Icon: Kx,
          label: n('com_auth_google_login'),
          id: 'google',
        },
        'google',
      ),
    openid:
      (e == null ? void 0 : e.openidLoginEnabled) &&
      t.jsx(
        xo,
        {
          enabled: e.openidLoginEnabled,
          serverDomain: e.serverDomain,
          oauthPath: 'openid',
          Icon: () =>
            e.openidImageUrl
              ? t.jsx('img', { src: e.openidImageUrl, alt: 'OpenID Logo', className: 'h-5 w-5' })
              : t.jsx(Wx, {}),
          label: e.openidLabel,
          id: 'openid',
        },
        'openid',
      ),
  };
  return (
    e.socialLoginEnabled &&
    t.jsxs(t.Fragment, {
      children: [
        e.emailLoginEnabled &&
          t.jsxs(t.Fragment, {
            children: [
              t.jsx('div', {
                className:
                  'relative mt-6 flex w-full items-center justify-center border border-t border-gray-300 uppercase dark:border-gray-600',
                children: t.jsx('div', {
                  className:
                    'absolute bg-white px-3 text-xs text-black dark:bg-gray-900 dark:text-white',
                  children: 'Or',
                }),
              }),
              t.jsx('div', { className: 'mt-8' }),
            ],
          }),
        t.jsx('div', {
          className: 'mt-2',
          children: (a = e.socialLogins) == null ? void 0 : a.map((i) => o[i] || null),
        }),
      ],
    })
  );
}
function xv({ startupConfig: e }) {
  var r, c;
  const n = D();
  if (!e) return null;
  const o = (r = e.interface) == null ? void 0 : r.privacyPolicy,
    a = (c = e.interface) == null ? void 0 : c.termsOfService,
    i =
      (o == null ? void 0 : o.externalUrl) &&
      t.jsx('a', {
        className: 'text-sm text-green-500',
        href: o.externalUrl,
        target: o.openNewTab ? '_blank' : void 0,
        rel: 'noreferrer',
        children: n('com_ui_privacy_policy'),
      }),
    s =
      (a == null ? void 0 : a.externalUrl) &&
      t.jsx('a', {
        className: 'text-sm text-green-500',
        href: a.externalUrl,
        target: a.openNewTab ? '_blank' : void 0,
        rel: 'noreferrer',
        children: n('com_ui_terms_of_service'),
      });
  return t.jsxs('div', {
    className: 'align-end m-4 flex justify-center gap-2',
    children: [
      i,
      i && s && t.jsx('div', { className: 'border-r-[1px] border-gray-300 dark:border-gray-600' }),
      s,
    ],
  });
}
const Ei = ({ children: e }) =>
  t.jsx('div', {
    className: 'mt-16 flex justify-center',
    children: t.jsx('div', {
      className:
        'rounded-md border border-red-500 bg-red-500/10 px-3 py-2 text-sm text-gray-600 dark:text-gray-200',
      role: 'alert',
      children: e,
    }),
  });
function vv({
  children: e,
  header: n,
  isFetching: o,
  startupConfig: a,
  startupConfigError: i,
  pathname: s,
  error: r,
}) {
  const c = D(),
    l = () =>
      i != null
        ? t.jsx(Ei, { children: c('com_auth_error_login_server') })
        : r === 'com_auth_error_invalid_reset_token'
        ? t.jsxs(Ei, {
            children: [
              c('com_auth_error_invalid_reset_token'),
              ' ',
              t.jsx('a', {
                className: 'font-semibold text-green-600 hover:underline',
                href: '/forgot-password',
                children: c('com_auth_click_here'),
              }),
              ' ',
              c('com_auth_to_try_again'),
            ],
          })
        : r
        ? t.jsx(Ei, { children: c(r) })
        : null;
  return t.jsxs('div', {
    className: 'relative flex min-h-screen flex-col bg-white dark:bg-gray-900',
    children: [
      t.jsx(uv, {
        active: o,
        children: t.jsx('div', {
          className: 'mt-12 h-24 w-full bg-cover',
          children: t.jsx('img', {
            src: '/assets/logo.svg',
            className: 'h-full w-full object-contain',
            alt: 'Logo',
          }),
        }),
      }),
      t.jsx(l, {}),
      t.jsx('div', { className: 'absolute bottom-0 left-0 md:m-4', children: t.jsx(am, {}) }),
      t.jsx('div', {
        className: 'flex flex-grow items-center justify-center',
        children: t.jsxs('div', {
          className:
            'w-authPageWidth overflow-hidden bg-white px-6 py-4 dark:bg-gray-900 sm:max-w-md sm:rounded-lg',
          children: [
            !i &&
              !o &&
              t.jsx('h1', {
                className: 'mb-4 text-center text-3xl font-semibold text-black dark:text-white',
                style: { userSelect: 'none' },
                children: n,
              }),
            e,
            (s.includes('login') || s.includes('register')) && t.jsx(fv, { startupConfig: a }),
          ],
        }),
      }),
      t.jsx(xv, { startupConfig: a }),
    ],
  });
}
const bv = {
  '/login': 'com_auth_welcome_back',
  '/register': 'com_auth_create_account',
  '/forgot-password': 'com_auth_reset_password',
  '/reset-password': 'com_auth_reset_password',
};
function gm({ isAuthenticated: e }) {
  const [n, o] = p.useState(null),
    [a, i] = p.useState(null),
    [s, r] = p.useState(null),
    { data: c, isFetching: l, error: d } = bt({ enabled: e ? s === null : !0 }),
    _ = D(),
    m = _t(),
    f = wl();
  p.useEffect(() => {
    e && m('/c/new', { replace: !0 }), c && r(c);
  }, [e, m, c]),
    p.useEffect(() => {
      document.title = (s == null ? void 0 : s.appTitle) || 'LibreChat';
    }, [s == null ? void 0 : s.appTitle]),
    p.useEffect(() => {
      o(null), i(null);
    }, [f.pathname]);
  const g = {
    error: n,
    setError: o,
    headerText: a,
    setHeaderText: i,
    startupConfigError: d,
    startupConfig: s,
    isFetching: l,
  };
  return t.jsx(vv, {
    header: _(a || bv[f.pathname]),
    isFetching: l,
    startupConfig: s,
    startupConfigError: d,
    pathname: f.pathname,
    error: n,
    children: t.jsx(ys, { context: g }),
  });
}
function yv() {
  const { isAuthenticated: e } = Re();
  return t.jsx(gm, { isAuthenticated: e });
}
function fm({ message: e }) {
  const n = D(),
    [o, a] = p.useState(!1),
    i = Ld({ text: e.text, content: e.content });
  return t.jsx('div', {
    className: 'visible mt-0 flex justify-center gap-1 self-end text-gray-400 lg:justify-start',
    children: t.jsx('button', {
      className:
        'ml-0 flex items-center gap-1.5 rounded-md p-1 text-xs hover:text-gray-900 dark:text-gray-400/70 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:group-hover:visible md:group-[.final-completion]:visible',
      onClick: () => i(a),
      type: 'button',
      title: n(o ? 'com_ui_copied_to_clipboard' : 'com_ui_copy_to_clipboard'),
      children: o ? t.jsx(mo, { className: 'h-[18px] w-[18px]' }) : t.jsx(tr, {}),
    }),
  });
}
const kv = ze.memo(({ lang: e, codeRef: n, error: o, plugin: a = null }) => {
    const i = D(),
      [s, r] = p.useState(!1);
    return t.jsxs('div', {
      className:
        'relative flex items-center rounded-tl-md rounded-tr-md bg-gray-700 px-4 py-2 font-sans text-xs text-gray-200 dark:bg-gray-700',
      children: [
        t.jsx('span', { className: '', children: e }),
        a
          ? t.jsx(u_, { className: 'ml-auto flex h-4 w-4 gap-2 text-white/50' })
          : t.jsx('button', {
              className: b('ml-auto flex gap-2', o ? 'h-4 w-4 items-start text-white/50' : ''),
              onClick: async () => {
                var l;
                const c = (l = n.current) == null ? void 0 : l.textContent;
                c &&
                  (r(!0),
                  ds(c),
                  setTimeout(() => {
                    r(!1);
                  }, 3e3));
              },
              children: s
                ? t.jsxs(t.Fragment, {
                    children: [
                      t.jsx(mo, { className: 'h-[18px] w-[18px]' }),
                      o ? '' : i('com_ui_copied'),
                    ],
                  })
                : t.jsxs(t.Fragment, { children: [t.jsx(tr, {}), o ? '' : i('com_ui_copy_code')] }),
            }),
      ],
    });
  }),
  Bo = ({ lang: e, codeChildren: n, classProp: o = '', plugin: a = null, error: i }) => {
    const s = p.useRef(null),
      r = a || i ? 'json' : e;
    return t.jsxs('div', {
      className: 'w-full rounded-md bg-gray-900 text-xs text-white/80',
      children: [
        t.jsx(kv, { lang: e, codeRef: s, plugin: !!a, error: i }),
        t.jsx('div', {
          className: b(o, 'overflow-y-auto p-4'),
          children: t.jsx('code', {
            ref: s,
            className: b(a || i ? '!whitespace-pre-wrap' : `hljs language-${r} !whitespace-pre`),
            children: n,
          }),
        }),
      ],
    });
  };
function wv(e) {
  var o;
  let n = '';
  for (let a = 0; a < e.length; a++) {
    const i = Rs(`${((o = e[a]) == null ? void 0 : o.inputStr) ?? e[a]}`);
    (n += i),
      e.length > 1 &&
        a !== e.length - 1 &&
        (n += `,
`);
  }
  return n;
}
const jv = ({ plugin: e }) => {
    const { isSharedConvo: n } = o1(),
      { data: o = {} } = Se({
        enabled: !n,
        select: (r) => {
          var c;
          return (c = r == null ? void 0 : r.gptPlugins) == null ? void 0 : c.plugins;
        },
      }),
      a = p.useCallback(
        (r) =>
          r
            ? r === 'n/a' || r === 'self reflection'
              ? r
              : (o == null ? void 0 : o[r]) ?? 'self reflection'
            : null,
        [o],
      );
    if (!e || !e.latest) return null;
    const i = a(e.latest);
    if (!i || (i && i === 'n/a')) return null;
    const s = () =>
      !e.loading && i === 'self reflection'
        ? 'Finished'
        : i === 'self reflection'
        ? "I'm  thinking..."
        : t.jsxs(t.Fragment, {
            children: [
              e.loading ? 'Using' : 'Used',
              ' ',
              t.jsx('b', { children: i }),
              e.loading ? '...' : '',
            ],
          });
    return t.jsx('div', {
      className: 'my-2 flex flex-col items-start',
      children: t.jsx(gi, {
        children: ({ open: r }) => {
          const c = { className: b(r ? 'rotate-180 transform' : '', 'h-4 w-4') };
          return t.jsxs(t.Fragment, {
            children: [
              t.jsxs('div', {
                className: b(
                  e.loading ? 'bg-green-100' : 'bg-gray-20',
                  'my-1 flex items-center rounded p-3 text-xs text-gray-800',
                ),
                children: [
                  t.jsx('div', {
                    children: t.jsx('div', {
                      className: 'flex items-center gap-3',
                      children: t.jsx('div', { children: s() }),
                    }),
                  }),
                  e.loading && t.jsx(Oe, { className: 'ml-1 text-black' }),
                  t.jsx(gi.Button, {
                    className: 'ml-12 flex items-center gap-2',
                    children: t.jsx(p_, { ...c }),
                  }),
                ],
              }),
              t.jsxs(gi.Panel, {
                className: 'mt-3 flex max-w-full flex-col gap-3',
                children: [
                  t.jsx(Bo, {
                    lang: i ? `REQUEST TO ${i == null ? void 0 : i.toUpperCase()}` : 'REQUEST',
                    codeChildren: wv(e.inputs ?? []),
                    plugin: !0,
                    classProp: 'max-h-[450px]',
                  }),
                  e.outputs &&
                    e.outputs.length > 0 &&
                    t.jsx(Bo, {
                      lang: i
                        ? `RESPONSE FROM ${i == null ? void 0 : i.toUpperCase()}`
                        : 'RESPONSE',
                      codeChildren: Rs(e.outputs ?? ''),
                      plugin: !0,
                      classProp: 'max-h-[450px]',
                    }),
                ],
              }),
            ],
          });
        },
      }),
    });
  },
  ir = p.memo(jv),
  Cv = 'com_error',
  vo = {
    [zn.MODERATION]: 'com_error_moderation',
    [zn.NO_USER_KEY]: 'com_error_no_user_key',
    [zn.INVALID_USER_KEY]: 'com_error_invalid_user_key',
    [zn.NO_BASE_URL]: 'com_error_no_base_url',
    [zn.EXPIRED_USER_KEY]: (e, n) => {
      const { expiredAt: o, endpoint: a } = e;
      return n('com_error_expired_user_key', a, o);
    },
    [Gi.BAN]: 'Your account has been temporarily banned due to violations of our service.',
    invalid_api_key:
      'Invalid API key. Please check your API key and try again. You can do this by clicking on the model logo in the left corner of the textbox and selecting "Set Token" for the current selected endpoint. Thank you for your understanding.',
    insufficient_quota:
      'We apologize for any inconvenience caused. The default API key has reached its limit. To continue using this service, please set up your own API key. You can do this by clicking on the model logo in the left corner of the textbox and selecting "Set Token" for the current selected endpoint. Thank you for your understanding.',
    concurrent: (e) => {
      const { limit: n } = e,
        o = n > 1 ? 's' : '';
      return `Only ${n} message${o} at a time. Please allow any other responses to complete before sending another message, or wait one minute.`;
    },
    message_limit: (e) => {
      const { max: n, windowInMinutes: o } = e,
        a = n > 1 ? 's' : '';
      return `You hit the message limit. You have a cap of ${n} message${a} per ${
        o > 1 ? `${o} minutes` : 'minute'
      }.`;
    },
    token_balance: (e) => {
      const { balance: n, tokenCost: o, promptTokens: a, generations: i } = e,
        s = `Insufficient Funds! Balance: ${n}. Prompt tokens: ${a}. Cost: ${o}.`;
      return t.jsxs(t.Fragment, {
        children: [
          s,
          i && t.jsxs(t.Fragment, { children: [t.jsx('br', {}), t.jsx('br', {})] }),
          i && t.jsx(Bo, { lang: 'Generations', error: !0, codeChildren: Rs(JSON.stringify(i)) }),
        ],
      });
    },
  },
  Nv = ({ text: e }) => {
    const n = D(),
      o = Hh(e),
      i = `Something went wrong. Here's the specific error message we encountered: ${
        e.length > 512 && !o ? e.slice(0, 512) + '...' : e
      }`;
    if (!Zi(o)) return i;
    const s = JSON.parse(o),
      r = s.code || s.type,
      c = r && vo[r];
    return c && typeof vo[r] == 'function'
      ? vo[r](s, n)
      : c && c.startsWith(Cv)
      ? n(vo[r])
      : c
      ? vo[r]
      : i;
  };
function Sv({ file: e, fileType: n }) {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    viewBox: '0 0 36 36',
    fill: 'none',
    className: 'h-10 w-10 flex-shrink-0',
    width: '36',
    height: '36',
    children: [
      t.jsx('rect', { width: '36', height: '36', rx: '6', fill: n.fill }),
      ((e == null ? void 0 : e.progress) ?? 1) >= 1 &&
        t.jsx(t.Fragment, { children: t.jsx(n.paths, {}) }),
    ],
  });
}
function xm({ circumference: e, offset: n, circleCSSProperties: o }) {
  return t.jsx('div', {
    className: 'absolute inset-0 flex items-center justify-center bg-black/5 text-white',
    children: t.jsxs('svg', {
      width: '120',
      height: '120',
      viewBox: '0 0 120 120',
      className: 'h-6 w-6',
      children: [
        t.jsx('circle', {
          className: 'origin-[50%_50%] -rotate-90 stroke-gray-400',
          strokeWidth: '10',
          fill: 'transparent',
          r: '55',
          cx: '60',
          cy: '60',
        }),
        t.jsx('circle', {
          className: 'origin-[50%_50%] -rotate-90 transition-[stroke-dashoffset]',
          stroke: 'currentColor',
          strokeWidth: '10',
          strokeDasharray: `${e} ${e}`,
          strokeDashoffset: n,
          fill: 'transparent',
          r: '55',
          cx: '60',
          cy: '60',
          style: o,
        }),
      ],
    }),
  });
}
const Av = {
    [Ve.anyscale]: '/assets/anyscale.png',
    [Ve.apipie]: '/assets/apipie.png',
    [Ve.cohere]: '/assets/cohere.png',
    [Ve.fireworks]: '/assets/fireworks.png',
    [Ve.groq]: '/assets/groq.png',
    [Ve.huggingface]: '/assets/huggingface.svg',
    [Ve.mistral]: '/assets/mistral.png',
    [Ve.mlx]: '/assets/mlx.png',
    [Ve.ollama]: '/assets/ollama.png',
    [Ve.openrouter]: '/assets/openrouter.png',
    [Ve.perplexity]: '/assets/perplexity.png',
    [Ve.shuttleai]: '/assets/shuttleai.png',
    [Ve['together.ai']]: '/assets/together.png',
  },
  Tv = { [Ve.cohere]: { [qs.landing]: 'p-2' } },
  Iv = ({ currentEndpoint: e, context: n = '', className: o }) => {
    var s;
    if (e === Ve.openrouter) return o;
    const a = (s = Tv[e]) == null ? void 0 : s[n],
      i = n === qs.landing ? '' : o;
    return a ?? i;
  };
function sr({ className: e = '', endpoint: n, iconURL: o, context: a }) {
  if (!n) return t.jsx(Fo, { className: e });
  const i = n.toLowerCase();
  if (o) return t.jsx('img', { className: e, src: o, alt: `${n} Icon` });
  const s = Av[i];
  return s
    ? t.jsx('img', {
        className: Iv({ currentEndpoint: i, context: a, className: e }),
        src: s,
        alt: `${i} Icon`,
      })
    : t.jsx(Fo, { className: e });
}
const vm = (e) => {
    var h, v, x, y;
    const {
        error: n,
        button: o,
        iconURL: a,
        endpoint: i,
        jailbreak: s,
        size: r = 30,
        model: c = '',
        assistantName: l,
      } = e,
      d = {
        icon: e.iconURL
          ? t.jsx('div', {
              className: 'relative flex h-6 w-6 items-center justify-center',
              children: t.jsx('div', {
                title: l,
                style: { width: r, height: r },
                className: b('overflow-hidden rounded-full', e.className ?? ''),
                children: t.jsx('img', {
                  className: 'shadow-stroke h-full w-full object-cover',
                  src: e.iconURL,
                  alt: l,
                  style: { height: '80', width: '80' },
                }),
              }),
            })
          : t.jsx('div', {
              className: 'h-6 w-6',
              children: t.jsx('div', {
                className:
                  'shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full',
                children: t.jsx(ar, { className: 'h-2/3 w-2/3 text-gray-400' }),
              }),
            }),
        name: i,
      },
      _ = {
        [N.assistants]: d,
        [N.azureAssistants]: d,
        [N.azureOpenAI]: {
          icon: t.jsx(oi, { size: r * 0.5555555555555556 }),
          bg: 'linear-gradient(0.375turn, #61bde2, #4389d0)',
          name: 'ChatGPT',
        },
        [N.openAI]: {
          icon: t.jsx(Io, { size: r * 0.5555555555555556 }),
          bg: typeof c == 'string' && c.toLowerCase().includes('gpt-4') ? '#AB68FF' : '#19C37D',
          name: 'ChatGPT',
        },
        [N.gptPlugins]: {
          icon: t.jsx($x, { size: r * 0.7 }),
          bg: `rgba(69, 89, 164, ${o ? 0.75 : 1})`,
          name: 'Plugins',
        },
        [N.google]: {
          icon:
            (h = c == null ? void 0 : c.toLowerCase()) != null && h.includes('code')
              ? t.jsx(nv, { size: r * 0.75 })
              : (v = c == null ? void 0 : c.toLowerCase()) != null && v.includes('gemini')
              ? t.jsx(ov, { size: r * 0.7 })
              : t.jsx(tv, { size: r * 0.7 }),
          name:
            (x = c == null ? void 0 : c.toLowerCase()) != null && x.includes('code')
              ? 'Codey'
              : (y = c == null ? void 0 : c.toLowerCase()) != null && y.includes('gemini')
              ? 'Gemini'
              : 'PaLM2',
        },
        [N.anthropic]: {
          icon: t.jsx(nr, { size: r * 0.5555555555555556 }),
          bg: '#d09a74',
          name: 'Claude',
        },
        [N.bingAI]: {
          icon: s
            ? t.jsx('img', { src: '/assets/bingai-jb.png', alt: 'Bing Icon' })
            : t.jsx('img', { src: '/assets/bingai.png', alt: 'Sydney Icon' }),
          name: s ? 'Sydney' : 'BingAI',
        },
        [N.chatGPTBrowser]: {
          icon: t.jsx(Io, { size: r * 0.5555555555555556 }),
          bg:
            typeof c == 'string' && c.toLowerCase().includes('gpt-4')
              ? '#AB68FF'
              : `rgba(0, 163, 255, ${o ? 0.75 : 1})`,
          name: 'ChatGPT',
        },
        [N.custom]: { icon: t.jsx(Fo, { size: r * 0.7 }), name: 'Custom' },
        null: { icon: t.jsx(Io, { size: r * 0.7 }), bg: 'grey', name: 'N/A' },
        default: {
          icon: t.jsx('div', {
            className: 'h-6 w-6',
            children: t.jsx('div', {
              className: 'overflow-hidden rounded-full',
              children: t.jsx(sr, {
                iconURL: e.iconURL,
                endpoint: i ?? '',
                className: 'h-full w-full object-contain',
                context: 'message',
              }),
            }),
          }),
          name: i,
        },
      };
    let { icon: m, bg: f, name: g } = i && _[i] ? _[i] : _.default;
    return (
      a && _[a] && ({ icon: m, bg: f, name: g } = _[a]),
      he(i)
        ? m
        : t.jsxs('div', {
            title: g,
            style: { background: f || 'transparent', width: r, height: r },
            className: b(
              'relative flex h-9 w-9 items-center justify-center rounded-sm p-1 text-white',
              e.className || '',
            ),
            children: [
              m,
              n &&
                t.jsx('span', {
                  className:
                    'absolute right-0 top-[20px] -mr-2 flex h-3 w-3 items-center justify-center rounded-full border border-white bg-red-500 text-[10px] text-white',
                  children: '!',
                }),
            ],
          })
    );
  },
  ls = (e) => {
    const { user: n } = Re(),
      { size: o = 30, isCreatedByUser: a } = e,
      i = zd(n),
      s = D();
    if (a) {
      const r =
        (n == null ? void 0 : n.name) || (n == null ? void 0 : n.username) || s('com_nav_user');
      return t.jsx('div', {
        title: r,
        style: { width: o, height: o },
        className: b('relative flex items-center justify-center', e.className ?? ''),
        children:
          !(n != null && n.avatar) && !(n != null && n.username)
            ? t.jsx('div', {
                style: {
                  backgroundColor: 'rgb(121, 137, 255)',
                  width: '20px',
                  height: '20px',
                  boxShadow: 'rgba(240, 246, 252, 0.1) 0px 0px 0px 1px',
                },
                className:
                  'relative flex h-9 w-9 items-center justify-center rounded-sm p-1 text-white',
                children: t.jsx(ai, {}),
              })
            : t.jsx('img', {
                className: 'rounded-full',
                src: (n == null ? void 0 : n.avatar) || i,
                alt: 'avatar',
              }),
      });
    }
    return t.jsx(vm, { ...e });
  },
  rr = (e) => {
    const { size: n = 30, iconClassName: o, error: a } = e;
    let i = 'default';
    typeof e.endpoint == 'string' && (i = e.endpoint);
    const s = {
      [N.azureOpenAI]: { icon: t.jsx(oi, { className: o }), name: e.chatGptLabel || 'ChatGPT' },
      [N.openAI]: { icon: t.jsx(lm, { className: o }), name: e.chatGptLabel || 'ChatGPT' },
      [N.gptPlugins]: { icon: t.jsx(cm, {}), name: 'Plugins' },
      [N.google]: { icon: t.jsx(dm, {}), name: e.modelLabel || 'Google' },
      [N.anthropic]: {
        icon: t.jsx(nr, { className: 'icon-md shrink-0 dark:text-white' }),
        name: e.modelLabel || 'Claude',
      },
      [N.custom]: { icon: t.jsx(Fo, {}), name: 'Custom' },
      [N.bingAI]: { icon: t.jsx(_m, {}), name: 'BingAI' },
      [N.chatGPTBrowser]: { icon: t.jsx(Jd, {}), name: 'ChatGPT' },
      [N.assistants]: { icon: t.jsx(cs, { className: 'icon-sm' }), name: 'Assistant' },
      [N.azureAssistants]: { icon: t.jsx(cs, { className: 'icon-sm' }), name: 'Assistant' },
      default: {
        icon: t.jsx(sr, { iconURL: e.iconURL, endpoint: i, className: 'icon-sm', context: 'nav' }),
        name: i,
      },
    };
    let { icon: r, name: c } = s[i] ?? s.default;
    return (
      e.iconURL && s[e.iconURL] && ({ icon: r, name: c } = s[e.iconURL]),
      t.jsxs('div', {
        'data-testid': 'convo-icon',
        title: c,
        style: { width: n, height: n },
        className: b(
          'relative flex items-center justify-center rounded-sm text-black dark:text-white',
          e.className || '',
        ),
        children: [
          r,
          a &&
            t.jsx('span', {
              className:
                'absolute right-0 top-[20px] -mr-2 flex h-4 w-4 items-center justify-center rounded-full border border-white bg-red-500 text-[10px] text-black dark:text-white',
              children: '!',
            }),
        ],
      })
    );
  },
  el = ({ className: e = '', assistantName: n, avatar: o, size: a }) =>
    n && o
      ? t.jsx('img', {
          src: o,
          className:
            'bg-token-surface-secondary dark:bg-token-surface-tertiary h-full w-full rounded-full object-cover',
          alt: n,
          width: '80',
          height: '80',
        })
      : n
      ? t.jsx(ar, { className: b('text-token-secondary', e), size: a })
      : t.jsx(cs, { className: b(n === '' ? 'icon-2xl' : '', e) }),
  $t = {
    [N.azureOpenAI]: oi,
    [N.openAI]: Io,
    [N.gptPlugins]: cm,
    [N.anthropic]: nr,
    [N.chatGPTBrowser]: Jd,
    [N.google]: dm,
    [N.bingAI]: _m,
    [N.custom]: Fo,
    [N.assistants]: el,
    [N.azureAssistants]: el,
    unknown: sr,
  },
  tl = {
    'menu-item': 'relative flex h-full items-center justify-center overflow-hidden rounded-full',
    message: 'icon-md',
    default: 'icon-xl relative flex h-full overflow-hidden rounded-full',
  },
  nl = {
    'menu-item': { width: '20px', height: '20px' },
    default: { width: '100%', height: '100%' },
  },
  ol = { default: { width: '100%', height: '100%' } },
  ta = ({ preset: e, endpointIconURL: n, assistantAvatar: o, assistantName: a, context: i }) => {
    const { iconURL: s = '' } = e ?? {};
    let r;
    if (!(s && (s.includes('http') || s.startsWith('/images/')))) r = $t[s] ?? $t.unknown;
    else
      return (
        (r = () =>
          t.jsx('div', {
            className: tl[i ?? 'default'] ?? tl.default,
            style: nl[i ?? 'default'] ?? nl.default,
            children: t.jsx('img', {
              src: s,
              alt:
                (e == null ? void 0 : e.chatGptLabel) ?? (e == null ? void 0 : e.modelLabel) ?? '',
              style: ol[i ?? 'default'] ?? ol.default,
              className: 'object-cover',
            }),
          })),
        t.jsx(r, {})
      );
    return t.jsx('div', {
      className:
        'shadow-stroke relative flex h-full items-center justify-center rounded-full bg-white text-black',
      children: t.jsx(r, {
        size: 41,
        context: i,
        className: 'h-2/3 w-2/3',
        iconURL: n,
        assistantName: a,
        avatar: o,
      }),
    });
  };
function zv({
  conversation: e,
  endpointsConfig: n,
  assistantMap: o,
  className: a = '',
  containerClassName: i = '',
  context: s,
  size: r,
}) {
  var v, x;
  const c = e == null ? void 0 : e.iconURL;
  let l = e == null ? void 0 : e.endpoint;
  l = io({ endpointsConfig: n, iconURL: c, endpoint: l });
  const d =
      he(l) &&
      ((v = o == null ? void 0 : o[l]) == null
        ? void 0
        : v[(e == null ? void 0 : e.assistant_id) ?? '']),
    _ = (d && (d == null ? void 0 : d.name)) || '',
    m = (d && ((x = d == null ? void 0 : d.metadata) == null ? void 0 : x.avatar)) || '',
    f = Ce(n, l, 'iconURL'),
    g = Go({ endpoint: l, endpointsConfig: n, endpointIconURL: f }),
    h = $t[g];
  return t.jsx(t.Fragment, {
    children:
      c && c.includes('http')
        ? t.jsx(ta, {
            preset: e,
            endpointIconURL: f,
            assistantName: _,
            assistantAvatar: m,
            context: s,
          })
        : t.jsx('div', {
            className: i,
            children:
              l &&
              h &&
              h({
                size: r,
                context: s,
                className: a,
                iconURL: f,
                assistantName: _,
                endpoint: l,
                avatar: m,
              }),
          }),
  });
}
function zo({
  conversation: e,
  endpointsConfig: n,
  className: o = 'mr-0',
  assistantMap: a,
  context: i,
}) {
  var h, v;
  const s = (e == null ? void 0 : e.iconURL) ?? '';
  let r = e == null ? void 0 : e.endpoint;
  r = io({ endpointsConfig: n, iconURL: s, endpoint: r });
  const c = Ce(n, r, 'type'),
    l = Ce(n, r, 'iconURL'),
    d =
      he(r) &&
      ((h = a == null ? void 0 : a[r]) == null
        ? void 0
        : h[(e == null ? void 0 : e.assistant_id) ?? '']),
    _ = (d && ((v = d == null ? void 0 : d.metadata) == null ? void 0 : v.avatar)) || '',
    m = (d && (d == null ? void 0 : d.name)) || '',
    f = _ || s;
  let g = null;
  return (
    f && (f.includes('http') || f.startsWith('/images/'))
      ? (g = ta({
          preset: { ...e, iconURL: f },
          context: i,
          endpointIconURL: l,
          assistantAvatar: _,
          assistantName: m,
        }))
      : (g = rr({
          size: 20,
          iconURL: l,
          endpoint: r,
          endpointType: c,
          model: e == null ? void 0 : e.model,
          error: !1,
          className: o,
          isCreatedByUser: !1,
          chatGptLabel: void 0,
          modelLabel: void 0,
          jailbreak: void 0,
        })),
    g
  );
}
const ua = {
    max: 'com_endpoint_openai_max',
    temp: 'com_endpoint_openai_temp',
    topp: 'com_endpoint_openai_topp',
    freq: 'com_endpoint_openai_freq',
    pres: 'com_endpoint_openai_pres',
    resend: 'com_endpoint_openai_resend_files',
    detail: 'com_endpoint_openai_detail',
  },
  Mi = {
    anthropic: {
      temp: 'com_endpoint_anthropic_temp',
      topp: 'com_endpoint_anthropic_topp',
      topk: 'com_endpoint_anthropic_topk',
      maxoutputtokens: 'com_endpoint_anthropic_maxoutputtokens',
      resend: ua.resend,
    },
    google: {
      temp: 'com_endpoint_google_temp',
      topp: 'com_endpoint_google_topp',
      topk: 'com_endpoint_google_topk',
      maxoutputtokens: 'com_endpoint_google_maxoutputtokens',
    },
    openAI: ua,
    azureOpenAI: ua,
    gptPlugins: { func: 'com_endpoint_func_hover', skip: 'com_endpoint_skip_hover', ...ua },
  };
function be({ endpoint: e, type: n, side: o }) {
  var s;
  const a = D(),
    i = (s = Mi == null ? void 0 : Mi[e]) == null ? void 0 : s[n];
  return i
    ? t.jsx(ea, {
        children: t.jsx(_o, {
          side: o,
          className: 'z-[999] w-80',
          children: t.jsx('div', {
            className: 'space-y-2',
            children: t.jsx('p', {
              className: 'text-sm text-gray-600 dark:text-gray-300',
              children: a(i),
            }),
          }),
        }),
      })
    : null;
}
function Lv({ conversation: e, setOption: n, readonly: o }) {
  const a = D(),
    {
      endpoint: i,
      endpointType: s,
      chatGptLabel: r,
      promptPrefix: c,
      temperature: l,
      top_p: d,
      frequency_penalty: _,
      presence_penalty: m,
      resendFiles: f,
      imageDetail: g,
    } = e ?? {},
    [h, v] = ke({ setOption: n, optionKey: 'chatGptLabel', initialValue: r }),
    [x, y] = ke({ setOption: n, optionKey: 'promptPrefix', initialValue: c }),
    [k, C] = ke({ setOption: n, optionKey: 'temperature', initialValue: l }),
    [j, w] = ke({ setOption: n, optionKey: 'top_p', initialValue: d }),
    [T, S] = ke({ setOption: n, optionKey: 'frequency_penalty', initialValue: _ }),
    [I, P] = ke({ setOption: n, optionKey: 'presence_penalty', initialValue: m });
  if (!e) return null;
  const F = n('resendFiles'),
    R = n('imageDetail'),
    E = s ?? i;
  return t.jsxs('div', {
    className: 'grid grid-cols-5 gap-6',
    children: [
      t.jsxs('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 sm:col-span-3',
        children: [
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'chatGptLabel',
                className: 'text-left text-sm font-medium',
                children: [
                  a('com_endpoint_custom_name'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', a('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(Je, {
                id: 'chatGptLabel',
                disabled: o,
                value: v || '',
                onChange: h,
                placeholder: a('com_endpoint_openai_custom_name_placeholder'),
                className: b(Q, 'flex h-10 max-h-10 w-full resize-none px-3 py-2', tt),
              }),
            ],
          }),
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'promptPrefix',
                className: 'text-left text-sm font-medium',
                children: [
                  a('com_endpoint_prompt_prefix'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', a('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(mt, {
                id: 'promptPrefix',
                disabled: o,
                value: y || '',
                onChange: x,
                placeholder: a('com_endpoint_openai_prompt_prefix_placeholder'),
                className: b(Q, 'flex max-h-[138px] min-h-[100px] w-full resize-none px-3 py-2 '),
              }),
            ],
          }),
        ],
      }),
      t.jsxs('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 px-3 sm:col-span-2',
        children: [
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'temp-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          a('com_endpoint_temperature'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', a('com_endpoint_default_with_num', '1'), ')'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'temp-int',
                        disabled: o,
                        value: C,
                        onChange: k,
                        max: 2,
                        min: 0,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: o,
                    value: [C ?? 1],
                    onValueChange: (M) => k(M[0]),
                    doubleClickHandler: () => k(1),
                    max: 2,
                    min: 0,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, { endpoint: E ?? '', type: 'temp', side: ce.Left }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'top-p-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          a('com_endpoint_top_p'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', a('com_endpoint_default'), ': 1)'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'top-p-int',
                        disabled: o,
                        value: w,
                        onChange: (M) => j(Number(M)),
                        max: 1,
                        min: 0,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: o,
                    value: [w ?? 1],
                    onValueChange: (M) => j(M[0]),
                    doubleClickHandler: () => j(1),
                    max: 1,
                    min: 0,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, { endpoint: E ?? '', type: 'topp', side: ce.Left }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'freq-penalty-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          a('com_endpoint_frequency_penalty'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', a('com_endpoint_default'), ': 0)'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'freq-penalty-int',
                        disabled: o,
                        value: S,
                        onChange: (M) => T(Number(M)),
                        max: 2,
                        min: -2,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: o,
                    value: [S ?? 0],
                    onValueChange: (M) => T(M[0]),
                    doubleClickHandler: () => T(0),
                    max: 2,
                    min: -2,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, { endpoint: E ?? '', type: 'freq', side: ce.Left }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'pres-penalty-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          a('com_endpoint_presence_penalty'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', a('com_endpoint_default'), ': 0)'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'pres-penalty-int',
                        disabled: o,
                        value: P,
                        onChange: (M) => I(Number(M)),
                        max: 2,
                        min: -2,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: o,
                    value: [P ?? 0],
                    onValueChange: (M) => I(M[0]),
                    doubleClickHandler: () => I(0),
                    max: 2,
                    min: -2,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, { endpoint: E ?? '', type: 'pres', side: ce.Left }),
            ],
          }),
          t.jsxs('div', {
            className: 'w-full',
            children: [
              t.jsxs('div', {
                className: 'mb-2 flex w-full justify-between gap-2',
                children: [
                  t.jsx('label', {
                    htmlFor: 'resend-files',
                    className:
                      'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                    children: t.jsx('small', { children: a('com_endpoint_plug_resend_files') }),
                  }),
                  t.jsx('label', {
                    htmlFor: 'image-detail-value',
                    className:
                      'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                    children: t.jsx('small', { children: a('com_endpoint_plug_image_detail') }),
                  }),
                  t.jsx(Je, {
                    id: 'image-detail-value',
                    disabled: !0,
                    value: g ?? He.auto,
                    className: b(
                      Q,
                      ge,
                      'flex rounded-md bg-transparent py-2 text-xs focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 dark:border-gray-700',
                      'pointer-events-none max-h-5 w-12 border-0 group-hover/temp:border-gray-200',
                    ),
                  }),
                ],
              }),
              t.jsxs('div', {
                className: 'flex w-full justify-between gap-2',
                children: [
                  t.jsx(ie, {
                    openDelay: 500,
                    children: t.jsxs(oe, {
                      children: [
                        t.jsx(Ae, {
                          id: 'resend-files',
                          checked: f ?? !0,
                          onCheckedChange: (M) => F(M),
                          disabled: o,
                          className: 'flex',
                        }),
                        t.jsx(be, { endpoint: E ?? '', type: 'resend', side: ce.Bottom }),
                      ],
                    }),
                  }),
                  t.jsx(ie, {
                    openDelay: 500,
                    children: t.jsxs(oe, {
                      className: 'flex w-[52%] md:w-[125px]',
                      children: [
                        t.jsx(we, {
                          id: 'image-detail-slider',
                          disabled: o,
                          value: [va[g ?? ''] ?? va[He.auto]],
                          onValueChange: (M) => R(S_[M[0]]),
                          doubleClickHandler: () => R(He.auto),
                          max: 2,
                          min: 0,
                          step: 1,
                        }),
                        t.jsx(be, { endpoint: E ?? '', type: 'detail', side: ce.Bottom }),
                      ],
                    }),
                  }),
                ],
              }),
            ],
          }),
        ],
      }),
    ],
  });
}
function al({ conversation: e, setOption: n, models: o, readonly: a }) {
  const i = D(),
    s = p.useMemo(() => ({ label: i('com_endpoint_use_active_assistant'), value: '' }), [i]),
    r = so((F) => ja(F.data)),
    {
      model: c,
      endpoint: l,
      assistant_id: d,
      endpointType: _,
      promptPrefix: m,
      instructions: f,
    } = e ?? {},
    g = p.useMemo(() => Object.values((r == null ? void 0 : r[l ?? '']) ?? {}), [r, l]),
    h = p.useMemo(() => {
      const F = (g ?? []).map(({ id: R, name: E }) => ({ label: E, value: R }));
      return [s, ...F].filter(Boolean);
    }, [g, s]),
    [v, x] = ke({ setOption: n, optionKey: 'promptPrefix', initialValue: m }),
    [y, k] = ke({ setOption: n, optionKey: 'instructions', initialValue: f }),
    C = p.useMemo(() => {
      var F;
      return d ? ((F = r[l ?? '']) == null ? void 0 : F[d]) : null;
    }, [d, r, l]),
    j = p.useMemo(
      () =>
        o.map((F) => ({
          label:
            F === (C == null ? void 0 : C.model)
              ? `${F} (${i('com_endpoint_assistant_model')})`
              : F,
          value: F,
        })),
      [o, C, i],
    ),
    [w, T] = p.useState(C ? { label: C.name, value: C.id } : s);
  if (
    (p.useEffect(() => {
      w && w.value === '' && n('presetOverride')({ assistant_id: w.value });
    }, [w]),
    !e)
  )
    return null;
  const S = n('model'),
    I = (F) => {
      var E;
      if (!F) {
        T(s);
        return;
      }
      const R = (E = r[l ?? '']) == null ? void 0 : E[F];
      if (!R) {
        T(s);
        return;
      }
      T({ label: R.name ?? '', value: R.id ?? '' }), n('assistant_id')(R.id), R.model && S(R.model);
    },
    P = _ ?? l;
  return t.jsxs('div', {
    className: 'grid grid-cols-6 gap-6',
    children: [
      t.jsx('div', {
        className: 'col-span-6 flex flex-col items-center justify-start gap-6 sm:col-span-3',
        children: t.jsx('div', {
          className: 'grid w-full items-center gap-2',
          children: t.jsx(Qe, {
            value: c ?? '',
            setValue: S,
            availableValues: j,
            disabled: a,
            className: b(Q, 'flex w-full resize-none', Vt),
            containerClassName: 'flex w-full resize-none',
          }),
        }),
      }),
      t.jsx('div', {
        className: 'col-span-6 flex flex-col items-center justify-start gap-6 px-3 sm:col-span-3',
        children: t.jsxs(ie, {
          openDelay: 300,
          children: [
            t.jsx(oe, {
              className: 'grid w-full items-center gap-2',
              children: t.jsx('div', {
                className: 'grid w-full items-center gap-2',
                children: t.jsx(Qe, {
                  title: i('com_endpoint_assistant'),
                  value: w,
                  setValue: I,
                  availableValues: h,
                  disabled: a,
                  className: b(Q, 'flex w-full resize-none', Vt),
                  containerClassName: 'flex w-full resize-none',
                }),
              }),
            }),
            t.jsx(be, { endpoint: P ?? '', type: 'temp', side: ce.Left }),
          ],
        }),
      }),
      t.jsxs('div', {
        className: 'col-span-6 flex flex-col items-center justify-start gap-6',
        children: [
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'promptPrefix',
                className: 'text-left text-sm font-medium',
                children: [
                  i('com_endpoint_prompt_prefix_assistants'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', i('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(mt, {
                id: 'promptPrefix',
                disabled: a,
                value: x ?? '',
                onChange: v,
                placeholder: i('com_endpoint_prompt_prefix_assistants_placeholder'),
                className: b(Q, 'flex max-h-[240px] min-h-[80px] w-full resize-none px-3 py-2 '),
              }),
            ],
          }),
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'instructions',
                className: 'text-left text-sm font-medium',
                children: [
                  i('com_endpoint_instructions_assistants'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', i('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(mt, {
                id: 'instructions',
                disabled: a,
                value: k ?? '',
                onChange: y,
                placeholder: i('com_endpoint_instructions_assistants_placeholder'),
                className: b(Q, 'flex max-h-[240px] min-h-[80px] w-full resize-none px-3 py-2 '),
              }),
            ],
          }),
        ],
      }),
    ],
  });
}
function on({ side: e, description: n, disabled: o, langCode: a, sideOffset: i = 30 }) {
  const s = D();
  if (o) return null;
  const r = a ? s(n) : n;
  return t.jsx(ea, {
    children: t.jsx(_o, {
      side: e,
      className: 'z-[999] w-80 dark:bg-gray-700',
      sideOffset: i,
      children: t.jsx('div', {
        className: 'space-y-2',
        children: t.jsx('p', {
          className: 'text-sm text-gray-600 dark:text-gray-300',
          children: r,
        }),
      }),
    }),
  });
}
function Pv({
  label: e,
  settingKey: n,
  defaultValue: o = [],
  description: a,
  columnSpan: i,
  setOption: s,
  optionType: r,
  placeholder: c,
  readonly: l = !1,
  showDefault: d = !0,
  labelCode: _,
  descriptionCode: m,
  placeholderCode: f,
  descriptionSide: g = ce.Left,
  conversation: h,
  minTags: v,
  maxTags: x,
}) {
  const y = D(),
    { preset: k } = me(),
    { showToast: C } = Ie(),
    j = p.useRef(null),
    [w, T] = p.useState(''),
    [S, I] = p.useState(o ?? []),
    P = p.useCallback(
      (A) => {
        if (r === wa.Custom) {
          I(A);
          return;
        }
        s(n)(A);
      },
      [r, s, n],
    ),
    F = p.useCallback(() => {
      j.current && j.current.focus();
    }, [j]),
    R = p.useMemo(
      () => (r === wa.Custom ? S : h != null && h[n] ? (h == null ? void 0 : h[n]) : o ?? []),
      [h, o, r, n, S],
    ),
    E = p.useCallback(
      (A) => {
        if (!R) return;
        if (v && R.length <= v) {
          C({ message: y('com_ui_min_tags', v + ''), status: 'warning' });
          return;
        }
        const q = R.filter(($, L) => L !== A);
        P(q);
      },
      [y, v, R, C, P],
    ),
    M = p.useCallback(() => {
      if (!w) return;
      let A = [...(R ?? []), w];
      x &&
        A.length > x &&
        (C({ message: y('com_ui_max_tags', x + ''), status: 'warning' }), (A = A.slice(-x))),
        P(A),
        T('');
    }, [w, R, P, x, C, y]);
  return (
    I1({
      preset: k,
      settingKey: n,
      defaultValue: typeof o > 'u' ? [] : o,
      inputValue: S,
      setInputValue: I,
      preventDelayedUpdate: !0,
      conversation: h,
    }),
    t.jsx('div', {
      className: `flex flex-col items-center justify-start gap-6 ${
        i ? `col-span-${i}` : 'col-span-full'
      }`,
      children: t.jsxs(ie, {
        openDelay: 300,
        children: [
          t.jsxs(oe, {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsx('div', {
                className: 'flex w-full justify-between',
                children: t.jsxs(Z, {
                  htmlFor: `${n}-dynamic-input`,
                  className: 'text-left text-sm font-medium',
                  children: [
                    _ ? y(e ?? '') || e : e ?? n,
                    ' ',
                    d &&
                      t.jsxs('small', {
                        className: 'opacity-40',
                        children: [
                          '(',
                          typeof o > 'u' || !(o != null && o.length)
                            ? y('com_endpoint_default_blank')
                            : `${y('com_endpoint_default')}: ${o}`,
                          ')',
                        ],
                      }),
                  ],
                }),
              }),
              t.jsx('div', {
                children: t.jsxs('div', {
                  className: 'bg-muted mb-2 flex flex-wrap gap-1 break-all rounded-lg',
                  children: [
                    R == null
                      ? void 0
                      : R.map((A, q) =>
                          t.jsx(
                            Cx,
                            {
                              label: A,
                              onClick: F,
                              onRemove: () => {
                                E(q), j.current && j.current.focus();
                              },
                            },
                            `${A}-${q}`,
                          ),
                        ),
                    t.jsx(Je, {
                      ref: j,
                      id: `${n}-dynamic-input`,
                      disabled: l,
                      value: w,
                      onKeyDown: (A) => {
                        R &&
                          (A.key === 'Backspace' && !w && E(R.length - 1),
                          A.key === 'Enter' && M());
                      },
                      onChange: (A) => T(A.target.value),
                      placeholder: (f && y(c ?? '')) || c,
                      className: b(Q, 'flex h-10 max-h-10 px-3 py-2'),
                    }),
                  ],
                }),
              }),
            ],
          }),
          a && t.jsx(on, { description: (m && y(a)) || a, side: g }),
        ],
      }),
    })
  );
}
function Ri({ conversation: e, setOption: n, models: o, readonly: a }) {
  const i = D(),
    {
      endpoint: s,
      endpointType: r,
      model: c,
      modelLabel: l,
      chatGptLabel: d,
      promptPrefix: _,
      temperature: m,
      top_p: f,
      frequency_penalty: g,
      presence_penalty: h,
      resendFiles: v,
      imageDetail: x,
      maxContextTokens: y,
      max_tokens: k,
    } = e ?? {},
    [C, j] = ke({ setOption: n, optionKey: 'chatGptLabel', initialValue: l ?? d }),
    [w, T] = ke({ setOption: n, optionKey: 'promptPrefix', initialValue: _ }),
    [S, I] = ke({ setOption: n, optionKey: 'temperature', initialValue: m }),
    [P, F] = ke({ setOption: n, optionKey: 'top_p', initialValue: f }),
    [R, E] = ke({ setOption: n, optionKey: 'frequency_penalty', initialValue: g }),
    [M, A] = ke({ setOption: n, optionKey: 'presence_penalty', initialValue: h }),
    [q, $] = ke({ setOption: n, optionKey: 'maxContextTokens', initialValue: y }),
    [L, z] = ke({ setOption: n, optionKey: 'max_tokens', initialValue: k }),
    B = p.useMemo(() => r ?? s, [s, r]),
    U = p.useMemo(() => B === N.openAI || B === N.azureOpenAI, [B]);
  if (!e) return null;
  const V = n('model'),
    H = n('resendFiles'),
    ne = n('imageDetail');
  return t.jsxs('div', {
    className: 'grid grid-cols-5 gap-6',
    children: [
      t.jsxs('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 sm:col-span-3',
        children: [
          t.jsx('div', {
            className: 'grid w-full items-center gap-2',
            children: t.jsx(Qe, {
              value: c ?? '',
              setValue: V,
              availableValues: o,
              disabled: a,
              className: b(Q, 'flex w-full resize-none', Vt),
              containerClassName: 'flex w-full resize-none',
            }),
          }),
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'chatGptLabel',
                className: 'text-left text-sm font-medium',
                children: [
                  i('com_endpoint_custom_name'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', i('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(Je, {
                id: 'chatGptLabel',
                disabled: a,
                value: j || '',
                onChange: C,
                placeholder: i('com_endpoint_openai_custom_name_placeholder'),
                className: b(Q, 'flex h-10 max-h-10 w-full resize-none px-3 py-2', tt),
              }),
            ],
          }),
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'promptPrefix',
                className: 'text-left text-sm font-medium',
                children: [
                  i('com_endpoint_prompt_prefix'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', i('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(mt, {
                id: 'promptPrefix',
                disabled: a,
                value: T || '',
                onChange: w,
                placeholder: i('com_endpoint_openai_prompt_prefix_placeholder'),
                className: b(Q, 'flex max-h-[138px] min-h-[100px] w-full resize-none px-3 py-2 '),
              }),
            ],
          }),
          t.jsx('div', {
            className: 'grid w-full items-start gap-2',
            children: t.jsx(Pv, {
              settingKey: 'stop',
              setOption: n,
              label: 'com_endpoint_stop',
              labelCode: !0,
              description: 'com_endpoint_openai_stop',
              descriptionCode: !0,
              placeholder: 'com_endpoint_stop_placeholder',
              placeholderCode: !0,
              descriptionSide: 'right',
              maxTags: U ? 4 : void 0,
              conversation: e,
              readonly: a,
            }),
          }),
        ],
      }),
      t.jsxs('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 px-3 sm:col-span-2',
        children: [
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsx(oe, {
                className: 'grid w-full items-center gap-2',
                children: t.jsxs('div', {
                  className: 'mt-1 flex w-full justify-between',
                  children: [
                    t.jsxs(Z, {
                      htmlFor: 'max-context-tokens',
                      className: 'text-left text-sm font-medium',
                      children: [i('com_endpoint_context_tokens'), ' '],
                    }),
                    t.jsx(ve, {
                      id: 'max-context-tokens',
                      stringMode: !1,
                      disabled: a,
                      value: $,
                      onChange: q,
                      placeholder: i('com_nav_theme_system'),
                      min: 10,
                      max: 2e6,
                      step: 1e3,
                      controls: !1,
                      className: b(
                        Q,
                        b(
                          ge,
                          'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          'w-1/3',
                        ),
                      ),
                    }),
                  ],
                }),
              }),
              t.jsx(on, { description: 'com_endpoint_context_info', langCode: !0, side: ce.Left }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsx(oe, {
                className: 'grid w-full items-center gap-2',
                children: t.jsxs('div', {
                  className: 'mt-1 flex w-full justify-between',
                  children: [
                    t.jsxs(Z, {
                      htmlFor: 'max-output-tokens',
                      className: 'text-left text-sm font-medium',
                      children: [i('com_endpoint_max_output_tokens'), ' '],
                    }),
                    t.jsx(ve, {
                      id: 'max-output-tokens',
                      stringMode: !1,
                      disabled: a,
                      value: z,
                      onChange: L,
                      placeholder: i('com_nav_theme_system'),
                      min: 10,
                      max: 2e6,
                      step: 1e3,
                      controls: !1,
                      className: b(
                        Q,
                        b(
                          ge,
                          'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          'w-1/3',
                        ),
                      ),
                    }),
                  ],
                }),
              }),
              t.jsx(on, {
                description: 'com_endpoint_openai_max_tokens',
                langCode: !0,
                side: ce.Left,
              }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'temp-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_temperature'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', i('com_endpoint_default_with_num', '1'), ')'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'temp-int',
                        stringMode: !1,
                        disabled: a,
                        value: I,
                        onChange: S,
                        max: 2,
                        min: 0,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [I ?? 1],
                    onValueChange: (re) => S(re[0]),
                    doubleClickHandler: () => S(1),
                    max: 2,
                    min: 0,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, { endpoint: B ?? '', type: 'temp', side: ce.Left }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'top-p-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_top_p'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', i('com_endpoint_default'), ': 1)'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'top-p-int',
                        disabled: a,
                        value: F,
                        onChange: (re) => P(Number(re)),
                        max: 1,
                        min: 0,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [F ?? 1],
                    onValueChange: (re) => P(re[0]),
                    doubleClickHandler: () => P(1),
                    max: 1,
                    min: 0,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, { endpoint: B ?? '', type: 'topp', side: ce.Left }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'freq-penalty-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_frequency_penalty'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', i('com_endpoint_default'), ': 0)'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'freq-penalty-int',
                        disabled: a,
                        value: E,
                        onChange: (re) => R(Number(re)),
                        max: 2,
                        min: -2,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [E ?? 0],
                    onValueChange: (re) => R(re[0]),
                    doubleClickHandler: () => R(0),
                    max: 2,
                    min: -2,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, { endpoint: B ?? '', type: 'freq', side: ce.Left }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'pres-penalty-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_presence_penalty'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', i('com_endpoint_default'), ': 0)'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'pres-penalty-int',
                        disabled: a,
                        value: A,
                        onChange: (re) => M(Number(re)),
                        max: 2,
                        min: -2,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [A ?? 0],
                    onValueChange: (re) => M(re[0]),
                    doubleClickHandler: () => M(0),
                    max: 2,
                    min: -2,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, { endpoint: B ?? '', type: 'pres', side: ce.Left }),
            ],
          }),
          t.jsxs('div', {
            className: 'w-full',
            children: [
              t.jsxs('div', {
                className: 'mb-2 flex w-full justify-between gap-2',
                children: [
                  t.jsx('label', {
                    htmlFor: 'resend-files',
                    className:
                      'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                    children: t.jsx('small', { children: i('com_endpoint_plug_resend_files') }),
                  }),
                  t.jsx('label', {
                    htmlFor: 'image-detail-value',
                    className:
                      'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                    children: t.jsx('small', { children: i('com_endpoint_plug_image_detail') }),
                  }),
                  t.jsx(Je, {
                    id: 'image-detail-value',
                    disabled: !0,
                    value: x ?? He.auto,
                    className: b(
                      Q,
                      ge,
                      'flex rounded-md bg-transparent py-2 text-xs focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 dark:border-gray-700',
                      'pointer-events-none max-h-5 w-12 border-0 group-hover/temp:border-gray-200',
                    ),
                  }),
                ],
              }),
              t.jsxs('div', {
                className: 'flex w-full justify-between gap-2',
                children: [
                  t.jsx(ie, {
                    openDelay: 500,
                    children: t.jsxs(oe, {
                      children: [
                        t.jsx(Ae, {
                          id: 'resend-files',
                          checked: v ?? !0,
                          onCheckedChange: (re) => H(re),
                          disabled: a,
                          className: 'flex',
                        }),
                        t.jsx(be, { endpoint: B ?? '', type: 'resend', side: ce.Bottom }),
                      ],
                    }),
                  }),
                  t.jsx(ie, {
                    openDelay: 500,
                    children: t.jsxs(oe, {
                      className: 'flex w-[52%] md:w-[125px]',
                      children: [
                        t.jsx(we, {
                          id: 'image-detail-slider',
                          disabled: a,
                          value: [va[x ?? ''] ?? va[He.auto]],
                          onValueChange: (re) => ne(S_[re[0]]),
                          doubleClickHandler: () => ne(He.auto),
                          max: 2,
                          min: 0,
                          step: 1,
                        }),
                        t.jsx(be, { endpoint: B ?? '', type: 'detail', side: ce.Bottom }),
                      ],
                    }),
                  }),
                ],
              }),
            ],
          }),
        ],
      }),
    ],
  });
}
function Ev({ conversation: e, setOption: n, readonly: o }) {
  var y;
  const a = D(),
    [i, s] = p.useState(0),
    r = $1(((y = e == null ? void 0 : e.context) == null ? void 0 : y.trim()) ?? '', 250),
    c = Kf();
  if (
    (p.useEffect(() => {
      if (!r || r === '') {
        s(0);
        return;
      }
      ((C) => {
        c.mutate(
          { text: C },
          {
            onSuccess: (j) => {
              s(j.count);
            },
          },
        );
      })(r);
    }, [r]),
    !e)
  )
    return null;
  const { context: l, systemMessage: d, jailbreak: _, toneStyle: m } = e,
    f = _,
    g = n('context'),
    h = n('systemMessage'),
    v = n('jailbreak'),
    x = (k) => n('toneStyle')(k.toLowerCase());
  return t.jsxs('div', {
    className: 'grid gap-6 sm:grid-cols-2',
    children: [
      t.jsxs('div', {
        className: 'col-span-1 flex flex-col items-center justify-start gap-6',
        children: [
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'toneStyle-dropdown',
                className: 'text-left text-sm font-medium',
                children: [
                  a('com_endpoint_tone_style'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', a('com_endpoint_default_creative'), ')'],
                  }),
                ],
              }),
              t.jsx(Qe, {
                id: 'toneStyle-dropdown',
                title: '',
                value: `${m == null ? void 0 : m.charAt(0).toUpperCase()}${
                  m == null ? void 0 : m.slice(1)
                }`,
                setValue: x,
                availableValues: ['Creative', 'Fast', 'Balanced', 'Precise'],
                disabled: o,
                className: b(Q, 'flex w-full resize-none', Vt),
                containerClassName: 'flex w-full resize-none',
              }),
            ],
          }),
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'context',
                className: 'text-left text-sm font-medium',
                children: [
                  a('com_endpoint_context'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', a('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(mt, {
                id: 'context',
                disabled: o,
                value: l || '',
                onChange: (k) => g(k.target.value ?? null),
                placeholder: a('com_endpoint_bing_context_placeholder'),
                className: b(Q, 'flex max-h-[138px] min-h-[100px] w-full resize-none px-3 py-2'),
              }),
              t.jsx('small', {
                className: 'mb-5 text-black dark:text-white',
                children: `${a('com_endpoint_token_count')}: ${i}`,
              }),
            ],
          }),
        ],
      }),
      t.jsxs('div', {
        className: 'col-span-1 flex flex-col items-center justify-start gap-6',
        children: [
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'jailbreak',
                className: 'text-left text-sm font-medium',
                children: [
                  a('com_endpoint_bing_enable_sydney'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', a('com_endpoint_default_false'), ')'],
                  }),
                ],
              }),
              t.jsxs('div', {
                className: 'flex h-[40px] w-full items-center space-x-3',
                children: [
                  t.jsx(vt, {
                    id: 'jailbreak',
                    disabled: o,
                    checked: _,
                    className:
                      'focus:ring-opacity-20 dark:border-gray-500 dark:bg-gray-700 dark:text-gray-50 dark:focus:ring-gray-600 dark:focus:ring-opacity-50 dark:focus:ring-offset-0',
                    onCheckedChange: v,
                  }),
                  t.jsxs('label', {
                    htmlFor: 'jailbreak',
                    className:
                      'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                    children: [
                      a('com_endpoint_bing_jailbreak'),
                      ' ',
                      t.jsx('small', { children: a('com_endpoint_bing_to_enable_sydney') }),
                    ],
                  }),
                ],
              }),
            ],
          }),
          f &&
            t.jsxs('div', {
              className: 'grid w-full items-center gap-2',
              children: [
                t.jsxs(Z, {
                  htmlFor: 'systemMessage',
                  className: 'text-left text-sm font-medium',
                  style: { opacity: f ? '1' : '0' },
                  children: [
                    t.jsx('a', {
                      href: 'https://github.com/danny-avila/LibreChat/blob/main/docs/features/bing_jailbreak.md#default-system-message-for-jailbreak-mode-sydney',
                      target: '_blank',
                      className:
                        'text-blue-500 transition-colors duration-200 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-500',
                      rel: 'noreferrer',
                      children: a('com_endpoint_system_message'),
                    }),
                    ' ',
                    t.jsxs('small', {
                      className: 'opacity-40 dark:text-gray-50',
                      children: ['( ', a('com_endpoint_default_blank'), ')'],
                    }),
                  ],
                }),
                t.jsx(mt, {
                  id: 'systemMessage',
                  disabled: o,
                  value: d || '',
                  onChange: (k) => h(k.target.value ?? null),
                  placeholder: a('com_endpoint_bing_system_message_placeholder'),
                  className: b(
                    Q,
                    'flex max-h-[300px] min-h-[100px] w-full resize-none px-3 py-2 placeholder:text-red-400',
                  ),
                }),
              ],
            }),
        ],
      }),
    ],
  });
}
function Mv({ conversation: e, setOption: n, models: o, readonly: a }) {
  const i = D(),
    s = T_[N.google],
    {
      model: r,
      modelLabel: c,
      promptPrefix: l,
      temperature: d,
      topP: _,
      topK: m,
      maxContextTokens: f,
      maxOutputTokens: g,
    } = e ?? {},
    [h, v] = ke({ setOption: n, optionKey: 'maxContextTokens', initialValue: f });
  if (!e) return null;
  const x = n('model'),
    y = n('modelLabel'),
    k = n('promptPrefix'),
    C = n('temperature'),
    j = n('topP'),
    w = n('topK'),
    T = n('maxOutputTokens');
  return t.jsxs('div', {
    className: 'grid grid-cols-5 gap-6',
    children: [
      t.jsxs('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 sm:col-span-3',
        children: [
          t.jsx('div', {
            className: 'grid w-full items-center gap-2',
            children: t.jsx(Qe, {
              value: r ?? '',
              setValue: x,
              availableValues: o,
              disabled: a,
              className: b(Q, 'flex w-full resize-none', Vt),
              containerClassName: 'flex w-full resize-none',
            }),
          }),
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'modelLabel',
                className: 'text-left text-sm font-medium',
                children: [
                  i('com_endpoint_custom_name'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', i('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(Je, {
                id: 'modelLabel',
                disabled: a,
                value: c || '',
                onChange: (S) => y(S.target.value ?? null),
                placeholder: i('com_endpoint_google_custom_name_placeholder'),
                className: b(Q, 'flex h-10 max-h-10 w-full resize-none px-3 py-2', tt),
              }),
            ],
          }),
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'promptPrefix',
                className: 'text-left text-sm font-medium',
                children: [
                  i('com_endpoint_prompt_prefix'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', i('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(mt, {
                id: 'promptPrefix',
                disabled: a,
                value: l || '',
                onChange: (S) => k(S.target.value ?? null),
                placeholder: i('com_endpoint_prompt_prefix_placeholder'),
                className: b(Q, 'flex max-h-[138px] min-h-[100px] w-full resize-none px-3 py-2 '),
              }),
            ],
          }),
        ],
      }),
      t.jsxs('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 px-3 sm:col-span-2',
        children: [
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsx(oe, {
                className: 'grid w-full items-center gap-2',
                children: t.jsxs('div', {
                  className: 'mt-1 flex w-full justify-between',
                  children: [
                    t.jsxs(Z, {
                      htmlFor: 'max-context-tokens',
                      className: 'text-left text-sm font-medium',
                      children: [i('com_endpoint_context_tokens'), ' '],
                    }),
                    t.jsx(ve, {
                      id: 'max-context-tokens',
                      stringMode: !1,
                      disabled: a,
                      value: v,
                      onChange: h,
                      placeholder: i('com_nav_theme_system'),
                      min: 10,
                      max: 2e6,
                      step: 1e3,
                      controls: !1,
                      className: b(
                        Q,
                        b(
                          ge,
                          'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          'w-1/3',
                        ),
                      ),
                    }),
                  ],
                }),
              }),
              t.jsx(on, { description: 'com_endpoint_context_info', langCode: !0, side: ce.Left }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'temp-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_temperature'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: [
                              '(',
                              i('com_endpoint_default'),
                              ': ',
                              s.temperature.default,
                              ')',
                            ],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'temp-int',
                        disabled: a,
                        value: d,
                        onChange: (S) => C(S ?? s.temperature.default),
                        max: s.temperature.max,
                        min: s.temperature.min,
                        step: s.temperature.step,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [d ?? s.temperature.default],
                    onValueChange: (S) => C(S[0]),
                    doubleClickHandler: () => C(s.temperature.default),
                    max: s.temperature.max,
                    min: s.temperature.min,
                    step: s.temperature.step,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, {
                endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                type: 'temp',
                side: ce.Left,
              }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'top-p-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_top_p'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: [
                              '(',
                              i('com_endpoint_default_with_num', s.topP.default + ''),
                              ')',
                            ],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'top-p-int',
                        disabled: a,
                        value: _,
                        onChange: (S) => j(S ?? s.topP.default),
                        max: s.topP.max,
                        min: s.topP.min,
                        step: s.topP.step,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [_ ?? s.topP.default],
                    onValueChange: (S) => j(S[0]),
                    doubleClickHandler: () => j(s.topP.default),
                    max: s.topP.max,
                    min: s.topP.min,
                    step: s.topP.step,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, {
                endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                type: 'topp',
                side: ce.Left,
              }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'top-k-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_top_k'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: [
                              '(',
                              i('com_endpoint_default_with_num', s.topK.default + ''),
                              ')',
                            ],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'top-k-int',
                        disabled: a,
                        value: m,
                        onChange: (S) => w(S ?? s.topK.default),
                        max: s.topK.max,
                        min: s.topK.min,
                        step: s.topK.step,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [m ?? s.topK.default],
                    onValueChange: (S) => w(S[0]),
                    doubleClickHandler: () => w(s.topK.default),
                    max: s.topK.max,
                    min: s.topK.min,
                    step: s.topK.step,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, {
                endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                type: 'topk',
                side: ce.Left,
              }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'max-tokens-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_max_output_tokens'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: [
                              '(',
                              i('com_endpoint_default_with_num', s.maxOutputTokens.default + ''),
                              ')',
                            ],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'max-tokens-int',
                        disabled: a,
                        value: g,
                        onChange: (S) => T(Number(S)),
                        max: s.maxOutputTokens.max,
                        min: s.maxOutputTokens.min,
                        step: s.maxOutputTokens.step,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [g ?? s.maxOutputTokens.default],
                    onValueChange: (S) => T(S[0]),
                    doubleClickHandler: () => T(s.maxOutputTokens.default),
                    max: s.maxOutputTokens.max,
                    min: s.maxOutputTokens.min,
                    step: s.maxOutputTokens.step,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, {
                endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                type: 'maxoutputtokens',
                side: ce.Left,
              }),
            ],
          }),
        ],
      }),
    ],
  });
}
function Rv({
  conversation: e,
  setOption: n,
  setTools: o,
  checkPluginSelection: a,
  models: i,
  readonly: s,
}) {
  const r = D(),
    c = Y(O.availableTools),
    { data: l } = Qa({ select: Es }),
    d = p.useMemo(
      () => (e != null && e.tools ? Ms(e.tools, l == null ? void 0 : l.map) : []),
      [e, l],
    ),
    _ = p.useMemo(() => (c ? Object.values(c) : []), [c]),
    {
      model: m,
      modelLabel: f,
      chatGptLabel: g,
      promptPrefix: h,
      temperature: v,
      top_p: x,
      frequency_penalty: y,
      presence_penalty: k,
      maxContextTokens: C,
    } = e ?? {},
    [j, w] = ke({ setOption: n, optionKey: 'chatGptLabel', initialValue: f ?? g }),
    [T, S] = ke({ setOption: n, optionKey: 'promptPrefix', initialValue: h }),
    [I, P] = ke({ setOption: n, optionKey: 'temperature', initialValue: v }),
    [F, R] = ke({ setOption: n, optionKey: 'top_p', initialValue: x }),
    [E, M] = ke({ setOption: n, optionKey: 'frequency_penalty', initialValue: y }),
    [A, q] = ke({ setOption: n, optionKey: 'presence_penalty', initialValue: k }),
    [$, L] = ke({ setOption: n, optionKey: 'maxContextTokens', initialValue: C }),
    z = n('model');
  return e
    ? t.jsxs('div', {
        className: 'grid grid-cols-5 gap-6',
        children: [
          t.jsxs('div', {
            className: 'col-span-5 flex flex-col items-center justify-start gap-6 sm:col-span-3',
            children: [
              t.jsx('div', {
                className: 'grid w-full items-center gap-2',
                children: t.jsx(Qe, {
                  title: r('com_endpoint_completion_model'),
                  value: m ?? '',
                  setValue: z,
                  availableValues: i,
                  disabled: s,
                  className: b(Q, 'flex w-full resize-none', Vt),
                  containerClassName: 'flex w-full resize-none',
                }),
              }),
              t.jsxs(t.Fragment, {
                children: [
                  t.jsxs('div', {
                    className: 'grid w-full items-center gap-2',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'chatGptLabel',
                        className: 'text-left text-sm font-medium',
                        children: [
                          r('com_endpoint_custom_name'),
                          ' ',
                          t.jsx('small', {
                            className: 'opacity-40',
                            children: r('com_endpoint_default_empty'),
                          }),
                        ],
                      }),
                      t.jsx(Je, {
                        id: 'chatGptLabel',
                        disabled: s,
                        value: w || '',
                        onChange: (B) => j(B.target.value ?? null),
                        placeholder: r('com_endpoint_openai_custom_name_placeholder'),
                        className: b(Q, 'flex h-10 max-h-10 w-full resize-none px-3 py-2', tt),
                      }),
                    ],
                  }),
                  t.jsxs('div', {
                    className: 'grid w-full items-center gap-2',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'promptPrefix',
                        className: 'text-left text-sm font-medium',
                        children: [
                          r('com_endpoint_prompt_prefix'),
                          ' ',
                          t.jsx('small', {
                            className: 'opacity-40',
                            children: r('com_endpoint_default_empty'),
                          }),
                        ],
                      }),
                      t.jsx(mt, {
                        id: 'promptPrefix',
                        disabled: s,
                        value: S || '',
                        onChange: (B) => T(B.target.value ?? null),
                        placeholder: r(
                          'com_endpoint_plug_set_custom_instructions_for_gpt_placeholder',
                        ),
                        className: b(
                          Q,
                          'flex max-h-[138px] min-h-[100px] w-full resize-none px-3 py-2 ',
                        ),
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
          t.jsxs('div', {
            className:
              'col-span-5 flex flex-col items-center justify-start gap-6 px-3 sm:col-span-2',
            children: [
              t.jsx(um, {
                showAbove: !1,
                showLabel: !1,
                setSelected: o,
                value: d,
                optionValueKey: 'pluginKey',
                availableValues: _,
                isSelected: a,
                searchPlaceholder: r('com_ui_select_search_plugin'),
                className: b(Q, 'flex w-full resize-none', tt),
                optionsClassName:
                  'w-full max-h-[275px] dark:bg-gray-700 z-10 border dark:border-gray-600',
                containerClassName: 'flex w-full resize-none border border-transparent',
                labelClassName: 'dark:text-white',
              }),
              t.jsxs(ie, {
                openDelay: 300,
                children: [
                  t.jsx(oe, {
                    className: 'grid w-full items-center gap-2',
                    children: t.jsxs('div', {
                      className: 'mt-1 flex w-full justify-between',
                      children: [
                        t.jsxs(Z, {
                          htmlFor: 'max-context-tokens',
                          className: 'text-left text-sm font-medium',
                          children: [r('com_endpoint_context_tokens'), ' '],
                        }),
                        t.jsx(ve, {
                          id: 'max-context-tokens',
                          stringMode: !1,
                          disabled: s,
                          value: L,
                          onChange: $,
                          placeholder: r('com_nav_theme_system'),
                          min: 10,
                          max: 2e6,
                          step: 1e3,
                          controls: !1,
                          className: b(
                            Q,
                            b(
                              ge,
                              'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                              'w-1/3',
                            ),
                          ),
                        }),
                      ],
                    }),
                  }),
                  t.jsx(on, {
                    description: 'com_endpoint_context_info',
                    langCode: !0,
                    side: ce.Left,
                  }),
                ],
              }),
              t.jsxs(ie, {
                openDelay: 300,
                children: [
                  t.jsxs(oe, {
                    className: 'grid w-full items-center gap-2',
                    children: [
                      t.jsxs('div', {
                        className: 'flex justify-between',
                        children: [
                          t.jsxs(Z, {
                            htmlFor: 'temp-int',
                            className: 'text-left text-sm font-medium',
                            children: [
                              r('com_endpoint_temperature'),
                              ' ',
                              t.jsxs('small', {
                                className: 'opacity-40',
                                children: ['(', r('com_endpoint_default_with_num', '0.8'), ')'],
                              }),
                            ],
                          }),
                          t.jsx(ve, {
                            id: 'temp-int',
                            disabled: s,
                            value: P,
                            onChange: (B) => I(Number(B)),
                            max: 2,
                            min: 0,
                            step: 0.01,
                            controls: !1,
                            className: b(
                              Q,
                              b(
                                ge,
                                'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                              ),
                            ),
                          }),
                        ],
                      }),
                      t.jsx(we, {
                        disabled: s,
                        value: [P ?? 0.8],
                        onValueChange: (B) => I(B[0]),
                        doubleClickHandler: () => I(0.8),
                        max: 2,
                        min: 0,
                        step: 0.01,
                        className: 'flex h-4 w-full',
                      }),
                    ],
                  }),
                  t.jsx(be, {
                    endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                    type: 'temp',
                    side: ce.Left,
                  }),
                ],
              }),
              t.jsxs(ie, {
                openDelay: 300,
                children: [
                  t.jsxs(oe, {
                    className: 'grid w-full items-center gap-2',
                    children: [
                      t.jsxs('div', {
                        className: 'flex justify-between',
                        children: [
                          t.jsxs(Z, {
                            htmlFor: 'top-p-int',
                            className: 'text-left text-sm font-medium',
                            children: [
                              r('com_endpoint_top_p'),
                              ' ',
                              t.jsxs('small', {
                                className: 'opacity-40',
                                children: ['(', r('com_endpoint_default_with_num', '1'), ')'],
                              }),
                            ],
                          }),
                          t.jsx(ve, {
                            id: 'top-p-int',
                            disabled: s,
                            value: R,
                            onChange: (B) => F(Number(B)),
                            max: 1,
                            min: 0,
                            step: 0.01,
                            controls: !1,
                            className: b(
                              Q,
                              b(
                                ge,
                                'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                              ),
                            ),
                          }),
                        ],
                      }),
                      t.jsx(we, {
                        disabled: s,
                        value: [R ?? 1],
                        onValueChange: (B) => F(B[0]),
                        doubleClickHandler: () => F(1),
                        max: 1,
                        min: 0,
                        step: 0.01,
                        className: 'flex h-4 w-full',
                      }),
                    ],
                  }),
                  t.jsx(be, {
                    endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                    type: 'topp',
                    side: ce.Left,
                  }),
                ],
              }),
              t.jsxs(ie, {
                openDelay: 300,
                children: [
                  t.jsxs(oe, {
                    className: 'grid w-full items-center gap-2',
                    children: [
                      t.jsxs('div', {
                        className: 'flex justify-between',
                        children: [
                          t.jsxs(Z, {
                            htmlFor: 'freq-penalty-int',
                            className: 'text-left text-sm font-medium',
                            children: [
                              r('com_endpoint_frequency_penalty'),
                              ' ',
                              t.jsxs('small', {
                                className: 'opacity-40',
                                children: ['(', r('com_endpoint_default_with_num', '0'), ')'],
                              }),
                            ],
                          }),
                          t.jsx(ve, {
                            id: 'freq-penalty-int',
                            disabled: s,
                            value: M,
                            onChange: (B) => E(Number(B)),
                            max: 2,
                            min: -2,
                            step: 0.01,
                            controls: !1,
                            className: b(
                              Q,
                              b(
                                ge,
                                'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                              ),
                            ),
                          }),
                        ],
                      }),
                      t.jsx(we, {
                        disabled: s,
                        value: [M ?? 0],
                        onValueChange: (B) => E(B[0]),
                        doubleClickHandler: () => E(0),
                        max: 2,
                        min: -2,
                        step: 0.01,
                        className: 'flex h-4 w-full',
                      }),
                    ],
                  }),
                  t.jsx(be, {
                    endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                    type: 'freq',
                    side: ce.Left,
                  }),
                ],
              }),
              t.jsxs(ie, {
                openDelay: 300,
                children: [
                  t.jsxs(oe, {
                    className: 'grid w-full items-center gap-2',
                    children: [
                      t.jsxs('div', {
                        className: 'flex justify-between',
                        children: [
                          t.jsxs(Z, {
                            htmlFor: 'pres-penalty-int',
                            className: 'text-left text-sm font-medium',
                            children: [
                              r('com_endpoint_presence_penalty'),
                              ' ',
                              t.jsxs('small', {
                                className: 'opacity-40',
                                children: ['(', r('com_endpoint_default_with_num', '0'), ')'],
                              }),
                            ],
                          }),
                          t.jsx(ve, {
                            id: 'pres-penalty-int',
                            disabled: s,
                            value: q,
                            onChange: (B) => A(Number(B)),
                            max: 2,
                            min: -2,
                            step: 0.01,
                            controls: !1,
                            className: b(
                              Q,
                              b(
                                ge,
                                'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                              ),
                            ),
                          }),
                        ],
                      }),
                      t.jsx(we, {
                        disabled: s,
                        value: [q ?? 0],
                        onValueChange: (B) => A(B[0]),
                        doubleClickHandler: () => A(0),
                        max: 2,
                        min: -2,
                        step: 0.01,
                        className: 'flex h-4 w-full',
                      }),
                    ],
                  }),
                  t.jsx(be, {
                    endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                    type: 'pres',
                    side: ce.Left,
                  }),
                ],
              }),
            ],
          }),
        ],
      })
    : null;
}
function Ov({ readonly: e, examples: n, setExample: o, addExample: a, removeExample: i }) {
  const s = D();
  return t.jsxs(t.Fragment, {
    children: [
      t.jsx('div', {
        id: 'examples-grid',
        className: 'grid gap-6 sm:grid-cols-2',
        children: n.map((r, c) => {
          var l, d;
          return t.jsxs(
            ze.Fragment,
            {
              children: [
                t.jsx('div', {
                  className: `col-span-${
                    n.length === 1 ? '1' : 'full'
                  } flex flex-col items-center justify-start gap-6 sm:col-span-1`,
                  children: t.jsxs('div', {
                    className: 'grid w-full items-center gap-2',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: `input-${c}`,
                        className: 'text-left text-sm font-medium',
                        children: [
                          s('com_ui_input'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', s('com_endpoint_default_blank'), ')'],
                          }),
                        ],
                      }),
                      t.jsx(mt, {
                        id: `input-${c}`,
                        disabled: e,
                        value:
                          ((l = r == null ? void 0 : r.input) == null ? void 0 : l.content) || '',
                        onChange: (_) => o(c, 'input', _.target.value ?? null),
                        placeholder: 'Set example input. Example is ignored if empty.',
                        className: b(
                          Q,
                          'flex max-h-[138px] min-h-[75px] w-full resize-none px-3 py-2 ',
                        ),
                      }),
                    ],
                  }),
                }),
                t.jsx('div', {
                  className: `col-span-${
                    n.length === 1 ? '1' : 'full'
                  } flex flex-col items-center justify-start gap-6 sm:col-span-1`,
                  children: t.jsxs('div', {
                    className: 'grid w-full items-center gap-2',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: `output-${c}`,
                        className: 'text-left text-sm font-medium',
                        children: [
                          s('com_endpoint_output'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', s('com_endpoint_default_blank'), ')'],
                          }),
                        ],
                      }),
                      t.jsx(mt, {
                        id: `output-${c}`,
                        disabled: e,
                        value:
                          ((d = r == null ? void 0 : r.output) == null ? void 0 : d.content) || '',
                        onChange: (_) => o(c, 'output', _.target.value ?? null),
                        placeholder: 'Set example output. Example is ignored if empty.',
                        className: b(
                          Q,
                          'flex max-h-[300px] min-h-[75px] w-full resize-none px-3 py-2 ',
                        ),
                      }),
                    ],
                  }),
                }),
              ],
            },
            c,
          );
        }),
      }),
      t.jsxs('div', {
        className: 'flex justify-center',
        children: [
          t.jsx(Ne, {
            type: 'button',
            className:
              'mr-2 mt-1 h-auto items-center justify-center bg-transparent px-3 py-2 text-xs font-medium font-normal text-black hover:bg-gray-100 hover:text-black focus:ring-0 focus:ring-offset-0 dark:bg-transparent dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:outline-none dark:focus:ring-offset-0',
            onClick: i,
            children: t.jsx(ap, { className: 'w-[16px]' }),
          }),
          t.jsx(Ne, {
            type: 'button',
            className:
              'mt-1 h-auto items-center justify-center bg-transparent px-3 py-2 text-xs font-medium font-normal text-black hover:bg-gray-100 hover:text-black focus:ring-0 focus:ring-offset-0 dark:bg-transparent dark:text-white dark:hover:bg-gray-700 dark:hover:text-white dark:focus:outline-none dark:focus:ring-offset-0',
            onClick: a,
            children: t.jsx(h_, { className: 'w-[16px]' }),
          }),
        ],
      }),
    ],
  });
}
function Dv({ conversation: e, setOption: n, models: o, readonly: a }) {
  const i = D();
  if (!e) return null;
  const { agent: s, skipCompletion: r, model: c, temperature: l } = e.agentOptions ?? {},
    d = n('model'),
    _ = n('temperature'),
    m = n('agent'),
    f = n('skipCompletion'),
    g = (v) => {
      m(v ? 'functions' : 'classic');
    },
    h = (v) => {
      f(v);
    };
  return t.jsxs('div', {
    className: 'grid grid-cols-5 gap-6',
    children: [
      t.jsx('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 sm:col-span-3',
        children: t.jsx('div', {
          className: 'grid w-full items-center gap-2',
          children: t.jsx(Qe, {
            title: i('com_endpoint_agent_model'),
            value: c ?? '',
            setValue: d,
            availableValues: o,
            disabled: a,
            className: b(Q, 'flex w-full resize-none', Vt),
            containerClassName: 'flex w-full resize-none',
          }),
        }),
      }),
      t.jsxs('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 px-3 sm:col-span-2',
        children: [
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'temp-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_temperature'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', i('com_endpoint_default'), ': 0)'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'temp-int',
                        disabled: a,
                        value: l,
                        onChange: (v) => _(Number(v)),
                        max: 2,
                        min: 0,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [l ?? 0],
                    onValueChange: (v) => _(v[0]),
                    doubleClickHandler: () => _(1),
                    max: 2,
                    min: 0,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, { endpoint: e.endpoint ?? '', type: 'temp', side: ce.Left }),
            ],
          }),
          t.jsxs('div', {
            className: 'grid w-full grid-cols-2 items-center gap-10',
            children: [
              t.jsxs(ie, {
                openDelay: 500,
                children: [
                  t.jsxs(oe, {
                    className: 'flex w-[100px] flex-col items-center space-y-4 text-center',
                    children: [
                      t.jsx('label', {
                        htmlFor: 'functions-agent',
                        className:
                          'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                        children: t.jsx('small', {
                          children: i('com_endpoint_plug_use_functions'),
                        }),
                      }),
                      t.jsx(Ae, {
                        id: 'functions-agent',
                        checked: s === 'functions',
                        onCheckedChange: g,
                        disabled: a,
                        className: 'ml-4 mt-2',
                      }),
                    ],
                  }),
                  t.jsx(be, { endpoint: e.endpoint ?? '', type: 'func', side: ce.Bottom }),
                ],
              }),
              t.jsxs(ie, {
                openDelay: 500,
                children: [
                  t.jsxs(oe, {
                    className:
                      'ml-[-60px] flex w-[100px] flex-col items-center space-y-4 text-center',
                    children: [
                      t.jsx('label', {
                        htmlFor: 'skip-completion',
                        className:
                          'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                        children: t.jsx('small', {
                          children: i('com_endpoint_plug_skip_completion'),
                        }),
                      }),
                      t.jsx(Ae, {
                        id: 'skip-completion',
                        checked: r === !0,
                        onCheckedChange: h,
                        disabled: a,
                        className: 'ml-4 mt-2',
                      }),
                    ],
                  }),
                  t.jsx(be, { endpoint: e.endpoint ?? '', type: 'skip', side: ce.Bottom }),
                ],
              }),
            ],
          }),
        ],
      }),
    ],
  });
}
function Fv({ conversation: e, setOption: n, models: o, readonly: a }) {
  const i = D(),
    {
      model: s,
      modelLabel: r,
      promptPrefix: c,
      temperature: l,
      topP: d,
      topK: _,
      maxOutputTokens: m,
      maxContextTokens: f,
      resendFiles: g,
    } = e ?? {},
    [h, v] = ke({ setOption: n, optionKey: 'maxContextTokens', initialValue: f });
  if (!e) return null;
  const x = n('model'),
    y = n('modelLabel'),
    k = n('promptPrefix'),
    C = n('temperature'),
    j = n('topP'),
    w = n('topK'),
    T = n('maxOutputTokens'),
    S = n('resendFiles');
  return t.jsxs('div', {
    className: 'grid grid-cols-5 gap-6',
    children: [
      t.jsxs('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 sm:col-span-3',
        children: [
          t.jsx('div', {
            className: 'grid w-full items-center gap-2',
            children: t.jsx(Qe, {
              value: s ?? '',
              setValue: x,
              availableValues: o,
              disabled: a,
              className: b(Q, 'flex w-full resize-none', Vt),
              containerClassName: 'flex w-full resize-none',
            }),
          }),
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'modelLabel',
                className: 'text-left text-sm font-medium',
                children: [
                  i('com_endpoint_custom_name'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', i('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(Je, {
                id: 'modelLabel',
                disabled: a,
                value: r || '',
                onChange: (I) => y(I.target.value ?? null),
                placeholder: i('com_endpoint_anthropic_custom_name_placeholder'),
                className: b(Q, 'flex h-10 max-h-10 w-full resize-none px-3 py-2', tt),
              }),
            ],
          }),
          t.jsxs('div', {
            className: 'grid w-full items-center gap-2',
            children: [
              t.jsxs(Z, {
                htmlFor: 'promptPrefix',
                className: 'text-left text-sm font-medium',
                children: [
                  i('com_endpoint_prompt_prefix'),
                  ' ',
                  t.jsxs('small', {
                    className: 'opacity-40',
                    children: ['(', i('com_endpoint_default_blank'), ')'],
                  }),
                ],
              }),
              t.jsx(mt, {
                id: 'promptPrefix',
                disabled: a,
                value: c || '',
                onChange: (I) => k(I.target.value ?? null),
                placeholder: i('com_endpoint_prompt_prefix_placeholder'),
                className: b(Q, 'flex max-h-[138px] min-h-[100px] w-full resize-none px-3 py-2 '),
              }),
            ],
          }),
        ],
      }),
      t.jsxs('div', {
        className: 'col-span-5 flex flex-col items-center justify-start gap-6 px-3 sm:col-span-2',
        children: [
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsx(oe, {
                className: 'grid w-full items-center gap-2',
                children: t.jsxs('div', {
                  className: 'mt-1 flex w-full justify-between',
                  children: [
                    t.jsxs(Z, {
                      htmlFor: 'max-context-tokens',
                      className: 'text-left text-sm font-medium',
                      children: [i('com_endpoint_context_tokens'), ' '],
                    }),
                    t.jsx(ve, {
                      id: 'max-context-tokens',
                      stringMode: !1,
                      disabled: a,
                      value: v,
                      onChange: h,
                      placeholder: i('com_nav_theme_system'),
                      min: 10,
                      max: 2e6,
                      step: 1e3,
                      controls: !1,
                      className: b(
                        Q,
                        b(
                          ge,
                          'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          'w-1/3',
                        ),
                      ),
                    }),
                  ],
                }),
              }),
              t.jsx(on, { description: 'com_endpoint_context_info', langCode: !0, side: ce.Left }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'temp-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_temperature'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', i('com_endpoint_default'), ': 1)'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'temp-int',
                        disabled: a,
                        value: l,
                        onChange: (I) => C(Number(I)),
                        max: 1,
                        min: 0,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [l ?? 1],
                    onValueChange: (I) => C(I[0]),
                    doubleClickHandler: () => C(1),
                    max: 1,
                    min: 0,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, {
                endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                type: 'temp',
                side: ce.Left,
              }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'top-p-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_top_p'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', i('com_endpoint_default_with_num', '0.7'), ')'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'top-p-int',
                        disabled: a,
                        value: d,
                        onChange: (I) => j(Number(I)),
                        max: 1,
                        min: 0,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [d ?? 0.7],
                    onValueChange: (I) => j(I[0]),
                    doubleClickHandler: () => j(1),
                    max: 1,
                    min: 0,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, {
                endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                type: 'topp',
                side: ce.Left,
              }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'top-k-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_top_k'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', i('com_endpoint_default_with_num', '5'), ')'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'top-k-int',
                        disabled: a,
                        value: _,
                        onChange: (I) => w(Number(I)),
                        max: 40,
                        min: 1,
                        step: 0.01,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [_ ?? 5],
                    onValueChange: (I) => w(I[0]),
                    doubleClickHandler: () => w(0),
                    max: 40,
                    min: 1,
                    step: 0.01,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, {
                endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                type: 'topk',
                side: ce.Left,
              }),
            ],
          }),
          t.jsxs(ie, {
            openDelay: 300,
            children: [
              t.jsxs(oe, {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsxs('div', {
                    className: 'flex justify-between',
                    children: [
                      t.jsxs(Z, {
                        htmlFor: 'max-tokens-int',
                        className: 'text-left text-sm font-medium',
                        children: [
                          i('com_endpoint_max_output_tokens'),
                          ' ',
                          t.jsxs('small', {
                            className: 'opacity-40',
                            children: ['(', i('com_endpoint_default_with_num', '4000'), ')'],
                          }),
                        ],
                      }),
                      t.jsx(ve, {
                        id: 'max-tokens-int',
                        disabled: a,
                        value: m,
                        onChange: (I) => T(Number(I)),
                        max: 4e3,
                        min: 1,
                        step: 1,
                        controls: !1,
                        className: b(
                          Q,
                          b(
                            ge,
                            'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
                          ),
                        ),
                      }),
                    ],
                  }),
                  t.jsx(we, {
                    disabled: a,
                    value: [m ?? 4e3],
                    onValueChange: (I) => T(I[0]),
                    doubleClickHandler: () => T(0),
                    max: 4e3,
                    min: 1,
                    step: 1,
                    className: 'flex h-4 w-full',
                  }),
                ],
              }),
              t.jsx(be, {
                endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                type: 'maxoutputtokens',
                side: ce.Left,
              }),
            ],
          }),
          t.jsx(ie, {
            openDelay: 500,
            children: t.jsx(oe, {
              className: 'grid w-full',
              children: t.jsxs('div', {
                className: 'flex justify-between',
                children: [
                  t.jsxs(Z, {
                    htmlFor: 'resend-files',
                    className: 'text-left text-sm font-medium',
                    children: [i('com_endpoint_plug_resend_files'), ' '],
                  }),
                  t.jsx(Ae, {
                    id: 'resend-files',
                    checked: g ?? !0,
                    onCheckedChange: (I) => S(I),
                    disabled: a,
                    className: 'flex',
                  }),
                  t.jsx(be, {
                    endpoint: (e == null ? void 0 : e.endpoint) ?? '',
                    type: 'resend',
                    side: ce.Bottom,
                  }),
                ],
              }),
            }),
          }),
        ],
      }),
    ],
  });
}
function Bv({ conversation: e, models: n, isPreset: o = !1 }) {
  var h, v;
  const { optionSettings: a } = me(),
    { setOption: i, setExample: s, addExample: r, removeExample: c } = rn(o ? e : null);
  if (!e) return null;
  const { examples: l, model: d } = e,
    _ = (h = d == null ? void 0 : d.toLowerCase()) == null ? void 0 : h.includes('gemini'),
    m = !_ && ((v = d == null ? void 0 : d.toLowerCase()) == null ? void 0 : v.includes('chat')),
    f = !_ && !m && /code|text/.test(d ?? ''),
    { showExamples: g } = a;
  return g && m && !f
    ? t.jsx(Ov, {
        examples: l ?? [{ input: { content: '' }, output: { content: '' } }],
        setExample: s,
        addExample: r,
        removeExample: c,
      })
    : t.jsx(Mv, { conversation: e, setOption: i, models: n });
}
function $v({ conversation: e, models: n, isPreset: o = !1 }) {
  const { showAgentSettings: a } = me(),
    { setOption: i, setTools: s, setAgentOption: r, checkPluginSelection: c } = rn(o ? e : null);
  return e
    ? a
      ? t.jsx(Dv, { conversation: e, setOption: r, models: n })
      : t.jsx(Rv, {
          conversation: e,
          setOption: i,
          setTools: s,
          checkPluginSelection: c,
          models: n,
        })
    : null;
}
const qv = {
    [N.assistants]: al,
    [N.azureAssistants]: al,
    [N.openAI]: Ri,
    [N.custom]: Ri,
    [N.azureOpenAI]: Ri,
    [N.bingAI]: Ev,
    [N.anthropic]: Fv,
  },
  Uv = () => ({ settings: qv, multiViewSettings: { [N.google]: Bv, [N.gptPlugins]: $v } });
function bm({ conversation: e, setOption: n, isPreset: o = !1, className: a = '' }) {
  var h;
  const i = Qt(),
    s = Y(O.currentSettingsView);
  if (!(e != null && e.endpoint) || s !== zt.default) return null;
  const { settings: r, multiViewSettings: c } = Uv(),
    { endpoint: l, endpointType: d } = e,
    _ = ((h = i == null ? void 0 : i.data) == null ? void 0 : h[l]) ?? [],
    m = d ?? l,
    f = r[m];
  if (f)
    return t.jsx('div', {
      className: b('h-[500px] overflow-y-auto md:mb-2 md:h-[350px]', a),
      children: t.jsx(f, { conversation: e, setOption: n, models: _, isPreset: o }),
    });
  const g = c[m];
  return g
    ? t.jsx('div', {
        className: b('hide-scrollbar h-[500px] overflow-y-auto md:mb-2 md:h-[350px]', a),
        children: t.jsx(g, { conversation: e, models: _, isPreset: o }),
      })
    : null;
}
const Zt = p.forwardRef((e, n) => {
    const o = D(),
      {
        title: a,
        description: i,
        main: s,
        buttons: r,
        leftButtons: c,
        selection: l,
        className: d,
        headerClassName: _,
        footerClassName: m,
        showCloseButton: f,
        showCancelButton: g = !0,
      } = e,
      { selectHandler: h, selectClasses: v, selectText: x } = l || {},
      y = o('com_ui_cancel');
    return t.jsxs(Bn, {
      showCloseButton: f,
      ref: n,
      className: b('shadow-2xl dark:bg-gray-700', d || ''),
      onClick: (C) => C.stopPropagation(),
      children: [
        t.jsxs(co, {
          className: b(_ ?? ''),
          children: [
            t.jsx(lo, {
              className: 'text-lg font-medium leading-6 text-gray-800 dark:text-gray-200',
              children: a,
            }),
            i && t.jsx(Wd, { className: 'text-gray-600 dark:text-gray-300', children: i }),
          ],
        }),
        t.jsx('div', { className: 'px-6', children: s || null }),
        t.jsxs(Hd, {
          className: m,
          children: [
            t.jsx('div', { children: c || null }),
            t.jsxs('div', {
              className: 'flex h-auto gap-3',
              children: [
                g &&
                  t.jsx(Ta, {
                    className:
                      'border-gray-100 hover:bg-gray-100 dark:border-gray-600 dark:hover:bg-gray-600',
                    children: y,
                  }),
                r || null,
                l
                  ? t.jsx(Ta, {
                      onClick: h,
                      className: `${
                        v ||
                        'bg-gray-800 text-white transition-colors hover:bg-gray-700 disabled:cursor-not-allowed disabled:opacity-50 dark:bg-gray-200 dark:text-gray-800 dark:hover:bg-gray-200'
                      } inline-flex h-10 items-center justify-center rounded-lg border-none px-4 py-2 text-sm`,
                      children: x,
                    })
                  : null,
              ],
            }),
          ],
        }),
      ],
    });
  }),
  Vv = ({ open: e, onOpenChange: n, preset: o }) => {
    const [a, i] = p.useState((o == null ? void 0 : o.title) || 'My Preset'),
      s = md(),
      { showToast: r } = Ie(),
      c = D(),
      l = () => {
        const d = Xe({ preset: { ...o, title: a } }),
          _ = d.title ? `\`${d.title}\`` : c('com_endpoint_preset_title');
        s.mutate(d, {
          onSuccess: () => {
            r({ message: `${_} ${c('com_endpoint_preset_saved')}` });
          },
          onError: () => {
            r({ message: c('com_endpoint_preset_save_error'), severity: ct.ERROR });
          },
        });
      };
    return (
      p.useEffect(() => {
        i((o == null ? void 0 : o.title) || c('com_endpoint_my_preset'));
      }, [e]),
      t.jsx(nt, {
        open: e,
        onOpenChange: n,
        children: t.jsx(Zt, {
          title: c('com_endpoint_save_as_preset'),
          className: 'w-11/12 sm:w-1/4',
          showCloseButton: !1,
          main: t.jsx('div', {
            className: 'flex w-full flex-col items-center gap-2',
            children: t.jsxs('div', {
              className: 'grid w-full items-center gap-2',
              children: [
                t.jsx(Z, {
                  htmlFor: 'chatGptLabel',
                  className: 'text-left text-sm font-medium',
                  children: c('com_endpoint_preset_name'),
                }),
                t.jsx(Je, {
                  id: 'chatGpt',
                  value: a || '',
                  onChange: (d) => i(d.target.value || ''),
                  placeholder: 'Set a custom name for this preset',
                  className: b(
                    Q,
                    'flex h-10 max-h-10 w-full resize-none border-gray-100 px-3 py-2 dark:border-gray-600',
                    tt,
                  ),
                }),
              ],
            }),
          }),
          selection: {
            selectHandler: l,
            selectClasses: 'bg-green-500 hover:bg-green-600 dark:hover:bg-green-600 text-white',
            selectText: c('com_ui_save'),
          },
        }),
      })
    );
  };
function Gv({ conversation: e, setOption: n, isPreset: o = !1, className: a = '' }) {
  const i = Y(O.currentSettingsView);
  return !(e != null && e.endpoint) || i === zt.default
    ? null
    : t.jsx('div', {
        className: b('hide-scrollbar h-[500px] overflow-y-auto md:mb-2 md:h-[350px]', a),
        children: t.jsx(Lv, { conversation: e, setOption: n, isPreset: o }),
      });
}
const Kv = { [ue.openai]: N.openAI, [ue.azure]: N.azureOpenAI },
  Hv = { [ue.openai]: 'bg-black/65', [ue.azure]: 'azure-bg-color opacity-85' },
  Wv = 'absolute right-0 bottom-0 rounded-full p-[0.15rem] text-gray-600 transition-colors';
function ym({ source: e, className: n = Wv }) {
  if (e === ue.local || e === ue.firebase) return null;
  const o = Kv[e ?? ''];
  return o
    ? t.jsx('button', {
        type: 'button',
        className: b(n, Hv[e ?? ''] ?? ''),
        children: t.jsx('span', {
          className: 'flex items-center justify-center',
          children: t.jsx(rr, {
            endpoint: o,
            size: 14,
            isCreatedByUser: !1,
            iconClassName: 'h-3 w-3',
          }),
        }),
      })
    : null;
}
const cr = ({ file: e, fileType: n, className: o = '' }) => {
  const i = 2 * Math.PI * 55,
    s = Zo((e == null ? void 0 : e.progress) ?? 1, 0.001, (e == null ? void 0 : e.size) ?? 1),
    r = i - s * i,
    c = { transition: 'stroke-dashoffset 0.5s linear' };
  return t.jsxs('div', {
    className: b('h-10 w-10 shrink-0 overflow-hidden rounded-md', o),
    children: [
      t.jsx(Sv, { file: e, fileType: n }),
      t.jsx(ym, { source: e == null ? void 0 : e.source }),
      s < 1 && t.jsx(xm, { circumference: i, offset: r, circleCSSProperties: c }),
    ],
  });
};
function km({ onRemove: e }) {
  return t.jsx('button', {
    type: 'button',
    className:
      'absolute right-1 top-1 -translate-y-1/2 translate-x-1/2 rounded-full border border-white bg-gray-500 p-0.5 text-white transition-colors hover:bg-black hover:opacity-100 group-hover:opacity-100 md:opacity-0',
    onClick: e,
    children: t.jsx('span', {
      children: t.jsxs('svg', {
        stroke: 'currentColor',
        fill: 'none',
        strokeWidth: '2',
        viewBox: '0 0 24 24',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
        className: 'icon-sm',
        xmlns: 'http://www.w3.org/2000/svg',
        children: [
          t.jsx('line', { x1: '18', y1: '6', x2: '6', y2: '18' }),
          t.jsx('line', { x1: '6', y1: '6', x2: '18', y2: '18' }),
        ],
      }),
    }),
  });
}
const wm = ({ file: e, onDelete: n }) => {
  const o = Os(e.type);
  return t.jsxs('div', {
    className: 'group relative inline-block text-sm text-black/70 dark:text-white/90',
    children: [
      t.jsx('div', {
        className:
          'relative overflow-hidden rounded-xl border border-gray-200 dark:border-gray-600',
        children: t.jsx('div', {
          className: 'w-60 p-2 dark:bg-gray-600',
          children: t.jsxs('div', {
            className: 'flex flex-row items-center gap-2',
            children: [
              t.jsx(cr, { file: e, fileType: o, className: 'relative' }),
              t.jsxs('div', {
                className: 'overflow-hidden',
                children: [
                  t.jsx('div', { className: 'truncate font-medium', children: e.filename }),
                  t.jsx('div', { className: 'truncate text-gray-300', children: o.title }),
                ],
              }),
            ],
          }),
        }),
      }),
      n && t.jsx(km, { onRemove: n }),
    ],
  });
};
function Jv({ src: e = '', width: n = 1920, height: o = 1080 }) {
  return t.jsx(hs, {
    children: t.jsxs(us, {
      className:
        'radix-state-open:animate-show fixed inset-0 z-[100] flex items-center justify-center overflow-hidden bg-black/90 dark:bg-black/80',
      style: { pointerEvents: 'auto' },
      children: [
        t.jsx(Ra, {
          asChild: !0,
          children: t.jsx('button', {
            className: 'absolute right-4 top-4 text-gray-50 transition hover:text-gray-200',
            type: 'button',
            children: t.jsxs('svg', {
              stroke: 'currentColor',
              fill: 'none',
              strokeWidth: '2',
              viewBox: '0 0 24 24',
              strokeLinecap: 'round',
              strokeLinejoin: 'round',
              className: 'h-5 w-5',
              height: '1em',
              width: '1em',
              xmlns: 'http://www.w3.org/2000/svg',
              children: [
                t.jsx('line', { x1: '18', y1: '6', x2: '6', y2: '18' }),
                t.jsx('line', { x1: '6', y1: '6', x2: '18', y2: '18' }),
              ],
            }),
          }),
        }),
        t.jsx(ps, {
          className:
            'radix-state-open:animate-contentShow relative max-h-[85vh] max-w-[90vw] shadow-xl focus:outline-none',
          tabIndex: -1,
          style: { pointerEvents: 'auto', aspectRatio: o > n ? 1 / 1.75 : 1.75 / 1 },
          children: t.jsx('img', {
            src: e,
            alt: 'Uploaded image',
            className: 'h-full w-full object-contain',
          }),
        }),
      ],
    }),
  });
}
const Qv = ({ originalWidth: e, originalHeight: n, containerRef: o }) => {
    var c;
    const a = ((c = o.current) == null ? void 0 : c.offsetWidth) ?? 0;
    if (a === 0 || e === void 0 || n === void 0) return { width: 'auto', height: 'auto' };
    const i = e / n,
      s = Math.min(a, e),
      r = s / i;
    return { width: `${s}px`, height: `${r}px` };
  },
  jm = ({ imagePath: e, altText: n, height: o, width: a, placeholderDimensions: i }) => {
    const [s, r] = p.useState(!1),
      c = p.useRef(null),
      l = () => r(!0),
      { width: d, height: _ } = p.useMemo(() => {
        var m, f;
        return Qv({
          originalWidth:
            Number((m = i == null ? void 0 : i.width) == null ? void 0 : m.split('px')[0]) ?? a,
          originalHeight:
            Number((f = i == null ? void 0 : i.height) == null ? void 0 : f.split('px')[0]) ?? o,
          containerRef: c,
        });
      }, [i, o, a]);
    return t.jsxs(Ul, {
      children: [
        t.jsx('div', {
          ref: c,
          children: t.jsx('div', {
            className:
              'relative mt-1 flex h-auto w-full max-w-lg items-center justify-center overflow-hidden bg-gray-200 text-gray-500 dark:bg-gray-700 dark:text-gray-400',
            children: t.jsx(Vl, {
              asChild: !0,
              children: t.jsx('button', {
                type: 'button',
                'aria-haspopup': 'dialog',
                'aria-expanded': 'false',
                children: t.jsx(ip.LazyLoadImage, {
                  alt: n,
                  onLoad: l,
                  visibleByDefault: !0,
                  className: b(
                    'opacity-100 transition-opacity duration-100',
                    s ? 'opacity-100' : 'opacity-0',
                  ),
                  src: e,
                  style: { width: d, height: 'auto', color: 'transparent' },
                  placeholder: t.jsx('div', { style: { width: d, height: _ } }),
                }),
              }),
            }),
          }),
        }),
        s && t.jsx(Jv, { src: e, height: o, width: a }),
      ],
    });
  },
  Zv = ({ message: e }) => {
    const n = p.useMemo(() => {
        var a;
        return (
          ((a = e == null ? void 0 : e.files) == null
            ? void 0
            : a.filter((i) => {
                var s;
                return (s = i.type) == null ? void 0 : s.startsWith('image/');
              })) || []
        );
      }, [e == null ? void 0 : e.files]),
      o = p.useMemo(() => {
        var a;
        return (
          ((a = e == null ? void 0 : e.files) == null
            ? void 0
            : a.filter((i) => {
                var s;
                return !((s = i.type) != null && s.startsWith('image/'));
              })) || []
        );
      }, [e == null ? void 0 : e.files]);
    return t.jsxs(t.Fragment, {
      children: [
        o.length > 0 && o.map((a) => t.jsx(wm, { file: a }, a.file_id)),
        n &&
          n.map((a) =>
            t.jsx(
              jm,
              {
                imagePath: (a == null ? void 0 : a.preview) ?? a.filepath ?? '',
                height: a.height ?? 1920,
                width: a.width ?? 1080,
                altText: a.filename ?? 'Uploaded Image',
                placeholderDimensions: {
                  height: `${a.height ?? 1920}px`,
                  width: `${a.height ?? 1080}px`,
                },
              },
              a.file_id,
            ),
          ),
      ],
    });
  },
  Yv = p.memo(Zv),
  $o = ({ children: e, message: n }) =>
    t.jsxs('div', {
      className:
        'text-message flex min-h-[20px] flex-col items-start gap-3 overflow-x-auto [.text-message+&]:mt-5',
      children: [n.isCreatedByUser && t.jsx(Yv, { message: n }), e],
    }),
  Xv = ({
    text: e,
    message: n,
    isSubmitting: o,
    ask: a,
    enterEdit: i,
    siblingIdx: s,
    setSiblingIdx: r,
  }) => {
    const { getMessages: c, setMessages: l, conversation: d } = me(),
      [_, m] = p.useState(e ?? ''),
      f = p.useRef(null),
      { conversationId: g, parentMessageId: h, messageId: v } = n,
      { endpoint: x, endpointType: y } = d ?? { endpoint: null },
      k = y ?? x,
      C = Bf(g ?? ''),
      j = D();
    p.useEffect(() => {
      const I = f.current;
      if (I) {
        const P = I.value.length;
        I.focus(), I.setSelectionRange(P, P);
      }
    }, []);
    const w = () => {
        if (n.isCreatedByUser)
          a({ text: _, parentMessageId: h, conversationId: g }, { resubmitFiles: !0 }),
            r((s ?? 0) - 1);
        else {
          const I = c(),
            P = I == null ? void 0 : I.find((F) => F.messageId === h);
          if (!P) return;
          a({ ...P }, { editedText: _, editedMessageId: v, isRegenerate: !0, isEdited: !0 }),
            r((s ?? 0) - 1);
        }
        i(!0);
      },
      T = () => {
        const I = c();
        I &&
          (C.mutate({
            conversationId: g ?? '',
            model: (d == null ? void 0 : d.model) ?? 'gpt-3.5-turbo',
            text: _,
            messageId: v,
          }),
          l(I.map((P) => (P.messageId === v ? { ...P, text: _, isEdited: !0 } : P))),
          i(!0));
      },
      S = p.useCallback(
        (I) => {
          I.key === 'Escape' && (I.preventDefault(), i(!0));
        },
        [i],
      );
    return t.jsxs($o, {
      message: n,
      children: [
        t.jsx('div', {
          className:
            'bg-token-main-surface-primary relative flex w-full flex-grow flex-col overflow-hidden rounded-2xl border dark:border-gray-600 dark:text-white [&:has(textarea:focus)]:border-gray-300 [&:has(textarea:focus)]:shadow-[0_2px_6px_rgba(0,0,0,.05)] dark:[&:has(textarea:focus)]:border-gray-500',
          children: t.jsx(mt, {
            ref: f,
            onChange: (I) => {
              m(I.target.value);
            },
            onKeyDown: S,
            'data-testid': 'message-text-editor',
            className: b(
              'markdown prose dark:prose-invert light whitespace-pre-wrap break-words',
              'pl-3 md:pl-4',
              'm-0 w-full resize-none border-0 bg-transparent py-[10px]',
              'placeholder-black/50 focus:ring-0 focus-visible:ring-0 dark:bg-transparent dark:placeholder-white/50 md:py-3.5  ',
              'pr-3 md:pr-4',
              'max-h-[65vh] md:max-h-[75vh]',
              Vt,
            ),
            onPaste: (I) => {
              I.preventDefault();
              const P = I.clipboardData.getData('text/plain'),
                F = f.current;
              if (!F) return;
              const R = F.selectionStart,
                E = F.selectionEnd,
                M = F.value.substring(0, R) + P + F.value.substring(E);
              m(M);
            },
            contentEditable: !0,
            value: _,
            suppressContentEditableWarning: !0,
          }),
        }),
        t.jsxs('div', {
          className: 'mt-2 flex w-full justify-center text-center',
          children: [
            t.jsx('button', {
              className: 'btn btn-primary relative mr-2',
              disabled: o || (k === N.google && !n.isCreatedByUser),
              onClick: w,
              children: j('com_ui_save_submit'),
            }),
            t.jsx('button', {
              className: 'btn btn-secondary relative mr-2',
              disabled: o,
              onClick: T,
              children: j('com_ui_save'),
            }),
            t.jsx('button', {
              className: 'btn btn-neutral relative',
              onClick: () => i(!0),
              children: j('com_ui_cancel'),
            }),
          ],
        }),
      ],
    });
  },
  Cm = p.memo(({ inline: e, className: n, children: o }) => {
    const a = /language-(\w+)/.exec(n || ''),
      i = a && a[1];
    return e
      ? t.jsx('code', { className: n, children: o })
      : t.jsx(Bo, { lang: i || 'text', codeChildren: o });
  }),
  Nm = p.memo(({ href: e, children: n }) => {
    const o = Y(O.user),
      { showToast: a } = Ie(),
      i = D(),
      {
        file_id: s,
        filename: r,
        filepath: c,
      } = p.useMemo(() => {
        const m = new RegExp(`(?:files|outputs)/${o == null ? void 0 : o.id}/([^\\s]+)`),
          f = e.match(m);
        if (f && f[0]) {
          const g = f[0],
            h = g.split('/'),
            v = h.pop();
          return { file_id: h.pop(), filename: v, filepath: g };
        }
        return { file_id: '', filename: '', filepath: '' };
      }, [o == null ? void 0 : o.id, e]),
      { refetch: l } = Sg((o == null ? void 0 : o.id) ?? '', s),
      d = { target: '_new' };
    if (!s || !r) return t.jsx('a', { href: e, ...d, children: n });
    const _ = async (m) => {
      m.preventDefault();
      try {
        const f = await l();
        if (!f.data) {
          console.error('Error downloading file: No data found'),
            a({ status: 'error', message: i('com_ui_download_error') });
          return;
        }
        const g = document.createElement('a');
        (g.href = f.data),
          g.setAttribute('download', r),
          document.body.appendChild(g),
          g.click(),
          document.body.removeChild(g),
          window.URL.revokeObjectURL(f.data);
      } catch (f) {
        console.error('Error downloading file:', f);
      }
    };
    return (
      (d.onClick = _),
      (d.target = '_blank'),
      t.jsx('a', {
        href: c.startsWith('files/') ? `/api/${c}` : `/api/files/${c}`,
        ...d,
        children: n,
      })
    );
  }),
  Sm = p.memo(({ children: e }) =>
    t.jsx('p', { className: 'mb-2 whitespace-pre-wrap', children: e }),
  ),
  eb = ' ',
  Am = p.memo(({ content: e, message: n, showCursor: o }) => {
    const { isSubmitting: a, latestMessage: i } = me(),
      s = Y(O.LaTeXParsing),
      r = e === '',
      { isEdited: c, messageId: l } = n ?? {},
      d = l === (i == null ? void 0 : i.messageId);
    let _ = e;
    r || ((_ = (_ == null ? void 0 : _.replace('z-index: 1;', '')) ?? ''), (_ = s ? ag(_) : _));
    const m = [
      [Cs, { output: 'mathml' }],
      [Ns, { detect: !0, ignoreMissing: !0, subset: Ds }],
      [g_],
    ];
    if (r)
      return (
        m.pop(),
        t.jsx('div', {
          className: 'absolute',
          children: t.jsx('p', {
            className: 'relative',
            children: t.jsx('span', { className: b(a ? 'result-thinking' : '') }),
          }),
        })
      );
    let f = !1;
    return (
      c || (f = Z_(_)),
      (c || ((!r || !d) && !f)) && m.pop(),
      t.jsx(Da, {
        remarkPlugins: [ks, ws, [js, { singleDollarTextMath: !0 }]],
        rehypePlugins: m,
        linkTarget: '_new',
        components: { code: Cm, a: Nm, p: Sm },
        children: d && a && !r && o ? _ + eb : _,
      })
    );
  }),
  lr = ({ text: e, message: n, className: o = '' }) =>
    t.jsx($o, {
      message: n,
      children: t.jsx('div', {
        className: b(
          'rounded-md border border-red-500 bg-red-500/10 px-3 py-2 text-sm text-gray-600 dark:text-gray-200',
          o,
        ),
        children: t.jsx(Nv, { text: e }),
      }),
    }),
  tb = ({ text: e, isCreatedByUser: n, message: o, showCursor: a }) =>
    t.jsx($o, {
      message: o,
      children: t.jsx('div', {
        className: b(
          a && e != null && e.length ? 'result-streaming' : '',
          'markdown prose dark:prose-invert light w-full break-words',
          n ? 'whitespace-pre-wrap dark:text-gray-20' : 'dark:text-gray-100',
        ),
        children: n
          ? t.jsx(t.Fragment, { children: e })
          : t.jsx(Am, { content: e, message: o, showCursor: a }),
      }),
    }),
  Tm = ({ message: e }) =>
    t.jsx(lr, {
      message: e,
      text: "The response is incomplete; it's either still processing, was cancelled, or censored. Refresh or try a different prompt.",
    }),
  Im = ({ text: e, edit: n, error: o, unfinished: a, isSubmitting: i, isLast: s, ...r }) => {
    if (o) return t.jsx(lr, { message: r.message, text: e });
    if (n) return t.jsx(Xv, { text: e, isSubmitting: i, ...r });
    {
      const l = e.split(`:::plugin:::
`),
        { message: d } = r,
        { plugins: _, messageId: m } = d,
        f = new Set(),
        g = (h) => {
          for (let v = h + 1; v < l.length; v++) {
            if (v === l.length - 1) return h;
            if (l[v].trim() !== '' && !f.has(v)) return v;
          }
          return h;
        };
      return l.map((h, v) => {
        let x = h.trim(),
          y = null;
        _ && (y = _[v]);
        const k = x === '' ? g(v) : v;
        x = l[k];
        const C = k === l.length - 1,
          j = x.trim() === '',
          w = (x && !j && !f.has(k)) || (j && C);
        return (
          f.add(k),
          t.jsxs(
            p.Fragment,
            {
              children: [
                y && t.jsx(ir, { plugin: y }, `plugin-${m}-${v}`),
                w
                  ? t.jsx(tb, { showCursor: C && s && i, text: x, ...r }, `display-${m}-${v}`)
                  : null,
                !i &&
                  a &&
                  t.jsx(p.Suspense, {
                    children: t.jsx(om, {
                      delay: 250,
                      children: t.jsx(Tm, { message: d }, `unfinished-${m}-${v}`),
                    }),
                  }),
              ],
            },
            v,
          )
        );
      });
    }
  },
  zm = p.memo(({ content: e = '' }) => {
    const n = [
      [Cs, { output: 'mathml' }],
      [Ns, { detect: !0, ignoreMissing: !0, subset: Ds }],
    ];
    return t.jsx(Da, {
      remarkPlugins: [ks, ws, [js, { singleDollarTextMath: !0 }]],
      rehypePlugins: n,
      linkTarget: '_new',
      components: { code: Cm, a: Nm, p: Sm },
      children: e,
    });
  });
function ii({ radius: e, circumference: n, offset: o }) {
  return t.jsxs('svg', {
    width: '120',
    height: '120',
    viewBox: '0 0 120 120',
    className:
      'absolute left-1/2 top-1/2 h-[23px] w-[23px] -translate-x-1/2 -translate-y-1/2 text-brand-purple',
    children: [
      t.jsx('circle', {
        className: 'origin-[50%_50%] -rotate-90 stroke-brand-purple/25 dark:stroke-brand-purple/50',
        strokeWidth: '7.826086956521739',
        fill: 'transparent',
        r: e,
        cx: '60',
        cy: '60',
      }),
      t.jsx('circle', {
        className: 'origin-[50%_50%] -rotate-90 transition-[stroke-dashoffset]',
        stroke: 'currentColor',
        strokeWidth: '7.826086956521739',
        strokeDasharray: `${n} ${n}`,
        strokeDashoffset: o,
        fill: 'transparent',
        r: e,
        cx: '60',
        cy: '60',
      }),
    ],
  });
}
function si() {
  return t.jsx('div', {
    className:
      'absolute left-0 top-0 flex h-full w-full items-center justify-center rounded-full bg-gray-300 text-white',
    style: { opacity: 1, transform: 'none' },
    children: t.jsx('svg', {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 8 9',
      fill: 'none',
      width: '8',
      height: '9',
      children: t.jsx('path', {
        fillRule: 'evenodd',
        clipRule: 'evenodd',
        d: 'M7.32256 1.48447C7.59011 1.16827 7.55068 0.695034 7.23447 0.427476C6.91827 0.159918 6.44503 0.199354 6.17748 0.515559L4.00002 3.08892L1.82256 0.515559C1.555 0.199354 1.08176 0.159918 0.765559 0.427476C0.449355 0.695034 0.409918 1.16827 0.677476 1.48447L3.01755 4.25002L0.677476 7.01556C0.409918 7.33176 0.449354 7.805 0.765559 8.07256C1.08176 8.34011 1.555 8.30068 1.82256 7.98447L4.00002 5.41111L6.17748 7.98447C6.44503 8.30068 6.91827 8.34011 7.23447 8.07256C7.55068 7.805 7.59011 7.33176 7.32256 7.01556L4.98248 4.25002L7.32256 1.48447Z',
        fill: 'currentColor',
      }),
    }),
  });
}
function Lm({ error: e, isSubmitting: n, progress: o, children: a }) {
  return (!n && o < 1) || e ? t.jsx(si, {}) : t.jsx(t.Fragment, { children: a });
}
function nb() {
  return t.jsxs('svg', {
    xmlns: 'http://www.w3.org/2000/svg',
    xmlnsXlink: 'http://www.w3.org/1999/xlink',
    viewBox: '0 0 20 20',
    width: '20',
    height: '20',
    style: { width: '100%', height: '100%', transform: 'translate3d(0px, 0px, 0px)' },
    preserveAspectRatio: 'xMidYMid meet',
    children: [
      t.jsxs('defs', {
        children: [
          t.jsx('clipPath', {
            id: '__lottie_element_258',
            children: t.jsx('rect', { width: '20', height: '20', x: '0', y: '0' }),
          }),
          t.jsx('clipPath', {
            id: '__lottie_element_263',
            children: t.jsx('path', { d: 'M0,0 L20000,0 L20000,20000 L0,20000z' }),
          }),
          t.jsx('clipPath', {
            id: '__lottie_element_270',
            children: t.jsx('path', { d: 'M0,0 L20000,0 L20000,20000 L0,20000z' }),
          }),
        ],
      }),
      t.jsx('g', {
        clipPath: 'url(#__lottie_element_258)',
        children: t.jsxs('g', {
          clipPath: 'url(#__lottie_element_263)',
          style: { display: 'block' },
          transform: 'matrix(0.9999999403953552,0,0,0.9999999403953552,-10000,-10000)',
          opacity: '1',
          children: [
            t.jsxs('g', {
              clipPath: 'url(#__lottie_element_270)',
              style: { display: 'block' },
              transform:
                'matrix(0.9999988675117493,0,0,0.9999988675117493,10.01171875,10.01171875)',
              opacity: '1',
              children: [
                t.jsx('g', {
                  style: { display: 'block' },
                  transform: 'matrix(1,0,0,1,10000,10000)',
                  opacity: '1',
                  children: t.jsx('g', {
                    opacity: '1',
                    transform: 'matrix(1,0,0,1,-3.25,-2.125)',
                    children: t.jsx('path', {
                      fill: 'rgb(177,97,253)',
                      fillOpacity: '1',
                      d: ' M0,0.75 C0,0.3357900083065033 0.3357900083065033,8.881784197001252e-16 0.75,8.881784197001252e-16 C2.4166667461395264,8.881784197001252e-16 4.083333492279053,8.881784197001252e-16 5.75,8.881784197001252e-16 C6.1641998291015625,8.881784197001252e-16 6.5,0.3357900083065033 6.5,0.75 C6.5,1.1642099618911743 6.1641998291015625,1.5 5.75,1.5 C4.083333492279053,1.5 2.4166667461395264,1.5 0.75,1.5 C0.3357900083065033,1.5 0,1.1642099618911743 0,0.75 C0,0.75 0,0.75 0,0.75 C0,0.75 0,0.75 0,0.75',
                    }),
                  }),
                }),
                t.jsx('g', {
                  style: { display: 'block' },
                  transform: 'matrix(1,0,0,1,10000,10000)',
                  opacity: '1',
                  children: t.jsx('g', {
                    opacity: '1',
                    transform: 'matrix(1,0,0,1,-3.25,0.625)',
                    children: t.jsx('path', {
                      fill: 'rgb(177,97,253)',
                      fillOpacity: '1',
                      d: ' M0,0.75 C0,0.3357999920845032 0.3357900083065033,0 0.75,0 C1.9166666269302368,0 3.0833332538604736,0 4.25,0 C4.6641998291015625,0 5,0.3357999920845032 5,0.75 C5,1.164199948310852 4.6641998291015625,1.5 4.25,1.5 C3.0833332538604736,1.5 1.9166666269302368,1.5 0.75,1.5 C0.3357900083065033,1.5 0,1.164199948310852 0,0.75 C0,0.75 0,0.75 0,0.75 C0,0.75 0,0.75 0,0.75',
                    }),
                  }),
                }),
              ],
            }),
            t.jsx('g', {
              style: { display: 'block' },
              transform: 'matrix(1,0,0,1,10000,10000)',
              opacity: '1',
              children: t.jsxs('g', {
                opacity: '1',
                transform: 'matrix(1,0,0,1,10,10)',
                children: [
                  t.jsx('path', {
                    fill: 'rgb(177,97,253)',
                    fillOpacity: '1',
                    d: ' M-3.13,-5.25 C-3.09,-5.25 -3.04,-5.25 -3,-5.25 C-2.59,-5.25 -2.25,-4.91 -2.25,-4.5 C-2.25,-4.09 -2.59,-3.75 -3,-3.75 C-3.03,-3.75 -3.07,-3.75 -3.1,-3.75 C-3.53,-3.75 -3.81,-3.75 -4.02,-3.73 C-4.23,-3.72 -4.3,-3.69 -4.34,-3.67 C-4.48,-3.6 -4.6,-3.48 -4.67,-3.34 C-4.69,-3.3 -4.72,-3.23 -4.73,-3.02 C-4.75,-2.81 -4.75,-2.53 -4.75,-2.1 C-4.75,-2.07 -4.75,-2.03 -4.75,-2 C-4.75,-1.59 -5.09,-1.25 -5.5,-1.25 C-5.91,-1.25 -6.25,-1.59 -6.25,-2 C-6.25,-2.04 -6.25,-2.09 -6.25,-2.13 C-6.25,-2.52 -6.25,-2.87 -6.23,-3.15 C-6.2,-3.44 -6.15,-3.74 -6,-4.02 C-5.79,-4.44 -5.44,-4.79 -5.02,-5 C-4.74,-5.15 -4.44,-5.2 -4.15,-5.23 C-3.87,-5.25 -3.52,-5.25 -3.13,-5.25 C-3.13,-5.25 -3.13,-5.25 -3.13,-5.25 C-3.13,-5.25 -3.13,-5.25 -3.13,-5.25 M6.25,-2.13 C6.25,-2.09 6.25,-2.04 6.25,-2 C6.25,-1.59 5.91,-1.25 5.5,-1.25 C5.09,-1.25 4.75,-1.59 4.75,-2 C4.75,-2.03 4.75,-2.07 4.75,-2.1 C4.75,-2.53 4.75,-2.81 4.73,-3.02 C4.72,-3.23 4.69,-3.3 4.67,-3.34 C4.6,-3.48 4.48,-3.6 4.34,-3.67 C4.3,-3.69 4.23,-3.72 4.02,-3.73 C3.81,-3.75 3.53,-3.75 3.1,-3.75 C3.07,-3.75 3.03,-3.75 3,-3.75 C2.59,-3.75 2.25,-4.09 2.25,-4.5 C2.25,-4.91 2.59,-5.25 3,-5.25 C3.04,-5.25 3.09,-5.25 3.13,-5.25 C3.52,-5.25 3.87,-5.25 4.15,-5.23 C4.44,-5.2 4.74,-5.15 5.02,-5 C5.44,-4.79 5.79,-4.44 6,-4.02 C6.15,-3.74 6.2,-3.44 6.23,-3.15 C6.25,-2.87 6.25,-2.52 6.25,-2.13 C6.25,-2.13 6.25,-2.13 6.25,-2.13 C6.25,-2.13 6.25,-2.13 6.25,-2.13 M-3.13,5.25 C-3.09,5.25 -3.04,5.25 -3,5.25 C-2.59,5.25 -2.25,4.91 -2.25,4.5 C-2.25,4.09 -2.59,3.75 -3,3.75 C-3.03,3.75 -3.07,3.75 -3.1,3.75 C-3.53,3.75 -3.81,3.75 -4.02,3.73 C-4.23,3.72 -4.3,3.69 -4.34,3.67 C-4.48,3.6 -4.6,3.48 -4.67,3.34 C-4.69,3.3 -4.72,3.23 -4.73,3.02 C-4.75,2.81 -4.75,2.53 -4.75,2.1 C-4.75,2.07 -4.75,2.03 -4.75,2 C-4.75,1.59 -5.09,1.25 -5.5,1.25 C-5.91,1.25 -6.25,1.59 -6.25,2 C-6.25,2.04 -6.25,2.09 -6.25,2.13 C-6.25,2.52 -6.25,2.87 -6.23,3.15 C-6.2,3.44 -6.15,3.74 -6,4.02 C-5.79,4.44 -5.44,4.79 -5.02,5 C-4.74,5.15 -4.44,5.2 -4.15,5.23 C-3.87,5.25 -3.52,5.25 -3.13,5.25 C-3.13,5.25 -3.13,5.25 -3.13,5.25 C-3.13,5.25 -3.13,5.25 -3.13,5.25 M6.25,2.13 C6.25,2.09 6.25,2.04 6.25,2 C6.25,1.59 5.91,1.25 5.5,1.25 C5.09,1.25 4.75,1.59 4.75,2 C4.75,2.03 4.75,2.07 4.75,2.1 C4.75,2.53 4.75,2.81 4.73,3.02 C4.72,3.23 4.69,3.3 4.67,3.34 C4.6,3.48 4.48,3.6 4.34,3.67 C4.3,3.69 4.23,3.72 4.02,3.73 C3.81,3.75 3.53,3.75 3.1,3.75 C3.07,3.75 3.03,3.75 3,3.75 C2.59,3.75 2.25,4.09 2.25,4.5 C2.25,4.91 2.59,5.25 3,5.25 C3.04,5.25 3.09,5.25 3.13,5.25 C3.52,5.25 3.87,5.25 4.15,5.23 C4.44,5.2 4.74,5.15 5.02,5 C5.44,4.79 5.79,4.44 6,4.02 C6.15,3.74 6.2,3.44 6.23,3.15 C6.25,2.87 6.25,2.52 6.25,2.13 C6.25,2.13 6.25,2.13 6.25,2.13 C6.25,2.13 6.25,2.13 6.25,2.13',
                  }),
                  t.jsx('g', {
                    opacity: '1',
                    transform: 'matrix(1,0,0,1,-6.250000476837158,-5.250000476837158)',
                    children: t.jsx('path', {
                      fill: 'rgb(177,97,253)',
                      fillOpacity: '1',
                      d: 'M0 0',
                    }),
                  }),
                  t.jsx('g', {
                    opacity: '1',
                    transform: 'matrix(1,0,0,1,2.25,-5.250000476837158)',
                    children: t.jsx('path', {
                      fill: 'rgb(177,97,253)',
                      fillOpacity: '1',
                      d: 'M0 0',
                    }),
                  }),
                  t.jsx('g', {
                    opacity: '1',
                    transform: 'matrix(1,0,0,1,-6.250000476837158,1.25)',
                    children: t.jsx('path', {
                      fill: 'rgb(177,97,253)',
                      fillOpacity: '1',
                      d: 'M0 0',
                    }),
                  }),
                  t.jsx('g', {
                    opacity: '1',
                    transform: 'matrix(1,0,0,1,2.25,1.25)',
                    children: t.jsx('path', {
                      fill: 'rgb(177,97,253)',
                      fillOpacity: '1',
                      d: 'M0 0',
                    }),
                  }),
                ],
              }),
            }),
          ],
        }),
      }),
    ],
  });
}
const ob = ({ popover: e, children: n }) =>
  e
    ? t.jsx('div', {
        className: 'text-token-text-secondary relative -mt-[0.75px] h-5 w-full leading-5',
        children: t.jsx(Ht, {
          asChild: !0,
          children: t.jsx('div', {
            className: 'absolute left-0 top-0 line-clamp-1 overflow-visible',
            style: { opacity: 1, transform: 'none' },
            'data-projection-id': '78',
            children: n,
          }),
        }),
      })
    : t.jsx('div', {
        className: 'text-token-text-secondary relative -mt-[0.75px] h-5 w-full leading-5',
        children: t.jsx('div', {
          className: 'absolute left-0 top-0 line-clamp-1 overflow-visible',
          style: { opacity: 1, transform: 'none' },
          'data-projection-id': '78',
          children: n,
        }),
      });
function ri({
  progress: e,
  onClick: n,
  inProgressText: o,
  finishedText: a,
  hasInput: i = !0,
  popover: s = !1,
}) {
  return t.jsx(ob, {
    popover: s,
    children: t.jsxs('button', {
      type: 'button',
      className: b('inline-flex items-center gap-1', i ? '' : 'pointer-events-none'),
      disabled: !i,
      onClick: n,
      children: [
        e < 1 ? o : a,
        t.jsx('svg', {
          width: '16',
          height: '17',
          viewBox: '0 0 16 17',
          fill: 'none',
          children: t.jsx('path', {
            className: i ? '' : 'stroke-transparent',
            d: 'M11.3346 7.83203L8.00131 11.1654L4.66797 7.83203',
            stroke: 'currentColor',
            strokeWidth: '2',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
          }),
        }),
      ],
    }),
  });
}
function _r() {
  return t.jsx('div', {
    className:
      'absolute left-0 top-0 flex h-full w-full items-center justify-center rounded-full bg-brand-purple text-white',
    style: { opacity: 1, transform: 'none' },
    'data-projection-id': '162',
    children: t.jsx('svg', {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 8 9',
      fill: 'none',
      width: '8',
      height: '9',
      children: t.jsx('path', {
        fillRule: 'evenodd',
        clipRule: 'evenodd',
        d: 'M7.66607 0.376042C8.01072 0.605806 8.10385 1.07146 7.87408 1.4161L3.54075 7.9161C3.40573 8.11863 3.18083 8.24304 2.93752 8.24979C2.69421 8.25654 2.46275 8.1448 2.31671 7.95008L0.150044 5.06119C-0.098484 4.72982 -0.0313267 4.25972 0.300044 4.01119C0.631415 3.76266 1.10152 3.82982 1.35004 4.16119L2.88068 6.20204L6.62601 0.584055C6.85577 0.239408 7.32142 0.146278 7.66607 0.376042Z',
        fill: 'currentColor',
      }),
    }),
  });
}
function ab({ initialProgress: e = 0.1, isSubmitting: n }) {
  const o = Zo(e),
    a = 56.08695652173913,
    i = 2 * Math.PI * a,
    s = i - o * i,
    r = o >= 2;
  return t.jsxs('div', {
    className: 'my-2.5 flex items-center gap-2.5',
    children: [
      t.jsx('div', {
        className: 'relative h-5 w-5 shrink-0',
        children:
          o < 1
            ? t.jsx(Lm, {
                progress: o,
                isSubmitting: n,
                error: r,
                children: t.jsxs('div', {
                  className:
                    'absolute left-0 top-0 flex h-full w-full items-center justify-center rounded-full bg-transparent text-white',
                  style: { opacity: 1, transform: 'none' },
                  children: [
                    t.jsx('div', { children: t.jsx(nb, {}) }),
                    t.jsx(ii, { radius: a, circumference: i, offset: s }),
                  ],
                }),
              })
            : r
            ? t.jsx(si, {})
            : t.jsx(_r, {}),
      }),
      t.jsx(ri, {
        progress: o,
        onClick: () => ({}),
        inProgressText: 'Searching my knowledge',
        finishedText: 'Used Retrieval',
        hasInput: !1,
        popover: !1,
      }),
    ],
  });
}
function ib({ initialProgress: e = 0.1, code: n, outputs: o = [], isSubmitting: a }) {
  const i = Y(O.showCode),
    [s, r] = p.useState(i),
    c = Zo(e),
    l = 56.08695652173913,
    d = 2 * Math.PI * l,
    _ = d - c * d,
    m = o.reduce(
      (f, g) =>
        g.logs
          ? f +
            g.logs +
            `
`
          : f,
      '',
    );
  return t.jsxs(t.Fragment, {
    children: [
      t.jsxs('div', {
        className: 'my-2.5 flex items-center gap-2.5',
        children: [
          t.jsx('div', {
            className: 'relative h-5 w-5 shrink-0',
            children:
              c < 1
                ? t.jsx(sb, {
                    offset: _,
                    radius: l,
                    progress: c,
                    isSubmitting: a,
                    circumference: d,
                  })
                : t.jsx(_r, {}),
          }),
          t.jsx(ri, {
            progress: c,
            onClick: () => r((f) => !f),
            inProgressText: 'Analyzing',
            finishedText: 'Finished analyzing',
            hasInput: !!(n != null && n.length),
          }),
        ],
      }),
      s &&
        t.jsxs('div', {
          className: 'mb-3 mt-0.5 overflow-hidden rounded-xl bg-black',
          children: [
            t.jsx(zm, {
              content: n
                ? `\`\`\`python
${n}
\`\`\``
                : '',
            }),
            m &&
              t.jsxs('div', {
                className: 'bg-gray-700 p-4 text-xs',
                children: [
                  t.jsx('div', { className: 'mb-1 text-gray-400', children: 'Result' }),
                  t.jsx('div', {
                    className: 'prose flex flex-col-reverse text-white',
                    style: { color: 'white' },
                    children: t.jsx('pre', { className: 'shrink-0', children: m }),
                  }),
                ],
              }),
          ],
        }),
    ],
  });
}
const sb = ({ offset: e, circumference: n, radius: o, isSubmitting: a, progress: i }) =>
  i < 1 && !a
    ? t.jsx(si, {})
    : t.jsxs('div', {
        className:
          'absolute left-0 top-0 flex h-full w-full items-center justify-center rounded-full bg-transparent text-white',
        style: { opacity: 1, transform: 'none' },
        'data-projection-id': '77',
        children: [
          t.jsx('div', {
            className: 'absolute bottom-[1.5px] right-[1.5px]',
            children: t.jsxs('svg', {
              xmlns: 'http://www.w3.org/2000/svg',
              xmlnsXlink: 'http://www.w3.org/1999/xlink',
              viewBox: '0 0 20 20',
              width: '20',
              height: '20',
              style: { transform: 'translate3d(0px, 0px, 0px)' },
              preserveAspectRatio: 'xMidYMid meet',
              children: [
                t.jsx('defs', {
                  children: t.jsx('clipPath', {
                    id: '__lottie_element_11',
                    children: t.jsx('rect', { width: '20', height: '20', x: '0', y: '0' }),
                  }),
                }),
                t.jsxs('g', {
                  clipPath: 'url(#__lottie_element_11)',
                  children: [
                    t.jsx('g', {
                      style: { display: 'block', transform: 'matrix(1,0,0,1,-2,-2)', opacity: 1 },
                      className: 'slide-from-left',
                      children: t.jsxs('g', {
                        opacity: '1',
                        transform: 'matrix(1,0,0,1,7.026679992675781,8.834091186523438)',
                        children: [
                          t.jsx('path', {
                            fill: 'rgb(177,98,253)',
                            fillOpacity: '1',
                            d: ' M1.2870399951934814,0.2207774966955185 C0.992609977722168,-0.07359249889850616 0.5152599811553955,-0.07359249889850616 0.22082999348640442,0.2207774966955185 C-0.07361000031232834,0.5151575207710266 -0.07361000031232834,0.992437481880188 0.22082999348640442,1.2868175506591797 C0.8473266959190369,1.9131841659545898 1.4738233089447021,2.53955078125 2.1003201007843018,3.16591739654541 C1.4738233089447021,3.7922842502593994 0.8473266959190369,4.4186506271362305 0.22082999348640442,5.045017719268799 C-0.07361000031232834,5.339417457580566 -0.07361000031232834,5.816617488861084 0.22082999348640442,6.11101770401001 C0.5152599811553955,6.405417442321777 0.992609977722168,6.405417442321777 1.2870399951934814,6.11101770401001 C2.091266632080078,5.306983947753906 2.895493268966675,4.502950668334961 3.6997199058532715,3.6989173889160156 C3.994119882583618,3.404517412185669 3.994119882583618,2.927217483520508 3.6997199058532715,2.6329174041748047 C2.895493268966675,1.8288708925247192 2.091266632080078,1.0248241424560547 1.2870399951934814,0.2207774966955185 C1.2870399951934814,0.2207774966955185 1.2870399951934814,0.2207774966955185 1.2870399951934814,0.2207774966955185 C1.2870399951934814,0.2207774966955185 1.2870399951934814,0.2207774966955185 1.2870399951934814,0.2207774966955185',
                          }),
                          t.jsx('path', {
                            strokeLinecap: 'round',
                            strokeLinejoin: 'round',
                            fillOpacity: '0',
                            stroke: 'rgb(177,98,253)',
                            strokeOpacity: '1',
                            strokeWidth: '0.201031',
                            d: ' M1.2870399951934814,0.2207774966955185 C0.992609977722168,-0.07359249889850616 0.5152599811553955,-0.07359249889850616 0.22082999348640442,0.2207774966955185 C-0.07361000031232834,0.5151575207710266 -0.07361000031232834,0.992437481880188 0.22082999348640442,1.2868175506591797 C0.8473266959190369,1.9131841659545898 1.4738233089447021,2.53955078125 2.1003201007843018,3.16591739654541 C1.4738233089447021,3.7922842502593994 0.8473266959190369,4.4186506271362305 0.22082999348640442,5.045017719268799 C-0.07361000031232834,5.339417457580566 -0.07361000031232834,5.816617488861084 0.22082999348640442,6.11101770401001 C0.5152599811553955,6.405417442321777 0.992609977722168,6.405417442321777 1.2870399951934814,6.11101770401001 C2.091266632080078,5.306983947753906 2.895493268966675,4.502950668334961 3.6997199058532715,3.6989173889160156 C3.994119882583618,3.404517412185669 3.994119882583618,2.927217483520508 3.6997199058532715,2.6329174041748047 C2.895493268966675,1.8288708925247192 2.091266632080078,1.0248241424560547 1.2870399951934814,0.2207774966955185 C1.2870399951934814,0.2207774966955185 1.2870399951934814,0.2207774966955185 1.2870399951934814,0.2207774966955185 C1.2870399951934814,0.2207774966955185 1.2870399951934814,0.2207774966955185 1.2870399951934814,0.2207774966955185',
                          }),
                        ],
                      }),
                    }),
                    t.jsx('g', {
                      style: { display: 'block', transform: 'matrix(1,0,0,1,-2,-2)', opacity: 1 },
                      className: 'slide-to-down',
                      children: t.jsxs('g', {
                        opacity: '1',
                        transform: 'matrix(1,0,0,1,11.79640007019043,13.512199401855469)',
                        children: [
                          t.jsx('path', {
                            fill: 'rgb(177,98,253)',
                            fillOpacity: '1',
                            d: ' M4.3225998878479,0 C3.1498000621795654,0 1.9769999980926514,0 0.8041999936103821,0 C0.36010000109672546,0 0,0.36000001430511475 0,0.804099977016449 C0,1.2482000589370728 0.36010000109672546,1.6081000566482544 0.8041999936103821,1.6081000566482544 C1.9769999980926514,1.6081000566482544 3.1498000621795654,1.6081000566482544 4.3225998878479,1.6081000566482544 C4.7667999267578125,1.6081000566482544 5.126800060272217,1.2482000589370728 5.126800060272217,0.804099977016449 C5.126800060272217,0.36000001430511475 4.7667999267578125,0 4.3225998878479,0 C4.3225998878479,0 4.3225998878479,0 4.3225998878479,0 C4.3225998878479,0 4.3225998878479,0 4.3225998878479,0',
                          }),
                          t.jsx('path', {
                            strokeLinecap: 'round',
                            strokeLinejoin: 'round',
                            fillOpacity: '0',
                            stroke: 'rgb(177,98,253)',
                            strokeOpacity: '1',
                            strokeWidth: '0.100515',
                            d: ' M4.3225998878479,0 C3.1498000621795654,0 1.9769999980926514,0 0.8041999936103821,0 C0.36010000109672546,0 0,0.36000001430511475 0,0.804099977016449 C0,1.2482000589370728 0.36010000109672546,1.6081000566482544 0.8041999936103821,1.6081000566482544 C1.9769999980926514,1.6081000566482544 3.1498000621795654,1.6081000566482544 4.3225998878479,1.6081000566482544 C4.7667999267578125,1.6081000566482544 5.126800060272217,1.2482000589370728 5.126800060272217,0.804099977016449 C5.126800060272217,0.36000001430511475 4.7667999267578125,0 4.3225998878479,0 C4.3225998878479,0 4.3225998878479,0 4.3225998878479,0 C4.3225998878479,0 4.3225998878479,0 4.3225998878479,0',
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
              ],
            }),
          }),
          t.jsx(ii, { radius: o, circumference: n, offset: e }),
        ],
      });
function rb({ input: e, output: n, function_name: o, domain: a }) {
  const i = D(),
    s = (r) => {
      try {
        return JSON.stringify(JSON.parse(r), null, 2);
      } catch {
        return r;
      }
    };
  return t.jsx(Wt, {
    children: t.jsx(Et, {
      side: 'bottom',
      align: 'start',
      sideOffset: 12,
      alignOffset: -5,
      className: 'w-18 min-w-[180px]  max-w-sm rounded-lg bg-white dark:bg-gray-900',
      children: t.jsx('div', {
        tabIndex: -1,
        children: t.jsxs('div', {
          className:
            'bg-token-surface-primary max-w-sm rounded-md p-2 shadow-[0_0_24px_0_rgba(0,0,0,0.05),inset_0_0.5px_0_0_rgba(0,0,0,0.05),0_2px_8px_0_rgba(0,0,0,0.05)]',
          children: [
            t.jsx('div', {
              className: 'mb-2 text-sm font-medium dark:text-gray-100',
              children: a
                ? i('com_assistants_domain_info', a)
                : i('com_assistants_function_use', o),
            }),
            t.jsx('div', {
              className:
                'bg-token-surface-secondary text-token-text-primary dark rounded-md text-xs',
              children: t.jsx('div', {
                className: 'max-h-32 overflow-y-auto rounded-md p-2 dark:bg-gray-700',
                children: t.jsx('code', { className: '!whitespace-pre-wrap ', children: s(e) }),
              }),
            }),
            n &&
              t.jsxs(t.Fragment, {
                children: [
                  t.jsx('div', {
                    className: 'mb-2 mt-2 text-sm font-medium dark:text-gray-100',
                    children: i('com_ui_result'),
                  }),
                  t.jsx('div', {
                    className:
                      'bg-token-surface-secondary text-token-text-primary dark rounded-md text-xs',
                    children: t.jsx('div', {
                      className: 'max-h-32 overflow-y-auto rounded-md p-2 dark:bg-gray-700',
                      children: t.jsx('code', {
                        className: '!whitespace-pre-wrap ',
                        children: s(n),
                      }),
                    }),
                  }),
                ],
              }),
          ],
        }),
      }),
    }),
  });
}
function cb() {
  const [e, n] = p.useState(!1);
  return (
    p.useEffect(() => {
      const o = setInterval(() => {
        n((a) => !a);
      }, 2e3);
      return () => clearInterval(o);
    }, []),
    t.jsxs('svg', {
      xmlns: 'http://www.w3.org/2000/svg',
      xmlnsXlink: 'http://www.w3.org/1999/xlink',
      viewBox: '0 0 24 24',
      width: '24',
      height: '24',
      style: { width: '100%', height: '100%', transform: 'rotate(30deg)' },
      preserveAspectRatio: 'xMidYMid meet',
      children: [
        t.jsx('defs', {
          children: t.jsx('clipPath', {
            id: '__lottie_element_28',
            children: t.jsx('rect', { width: '24', height: '24', x: '0', y: '0' }),
          }),
        }),
        t.jsx('g', {
          clipPath: 'url(#__lottie_element_28)',
          children: t.jsx('g', {
            style: { display: 'block', transform: 'matrix(1,0,0,1,0,0)' },
            opacity: '1',
            className: 'rotate-adjust-and-back',
            children: t.jsx('g', {
              opacity: '1',
              transform:
                'matrix(0.8995603322982788,-0.8114914894104004,0.8114914894104004,0.8995603322982788,1.0572385787963867,13.542327880859375)',
              children: t.jsx('path', {
                fill: 'rgb(178,98,254)',
                fillOpacity: '1',
                d: ' M8.648597717285156,0.11783526837825775 C9.091397285461426,0.2144152671098709 9.200997352600098,0.7544552683830261 8.880497932434082,1.0749353170394897 C8.137197494506836,1.8182452917099 7.393897533416748,2.5615553855895996 6.65059757232666,3.3048653602600098 C5.901897430419922,4.053555488586426 5.901897430419922,5.267405033111572 6.65059757232666,6.0161051750183105 C7.399197578430176,6.764805316925049 8.613097190856934,6.764805316925049 9.361797332763672,6.0161051750183105 C10.105097770690918,5.2727952003479 10.848397254943848,4.52948522567749 11.591697692871094,3.78617525100708 C11.91219711303711,3.465695381164551 12.452197074890137,3.5752952098846436 12.548797607421875,4.018115043640137 C12.907397270202637,5.6623053550720215 12.44759750366211,7.449105262756348 11.169297218322754,8.727405548095703 C9.65219783782959,10.244504928588867 7.418797492980957,10.608805656433105 5.557697296142578,9.820205688476562 C4.796051025390625,10.581838607788086 4.034404277801514,11.34347152709961 3.2727575302124023,12.10510540008545 C2.5240674018859863,12.853805541992188 1.310207486152649,12.853805541992188 0.5615174770355225,12.10510540008545 C-0.18717250227928162,11.356505393981934 -0.18717250227928162,10.14260482788086 0.5615174770355225,9.393905639648438 C1.3231642246246338,8.632271766662598 2.084810733795166,7.870638370513916 2.8464574813842773,7.109005451202393 C2.0579075813293457,5.247905254364014 2.4221975803375244,3.014495372772217 3.939307451248169,1.497375249862671 C5.217597484588623,0.21908527612686157 7.004397392272949,-0.24075473845005035 8.648597717285156,0.11783526837825775 ',
              }),
            }),
          }),
        }),
      ],
    })
  );
}
function lb({ initialProgress: e = 0.1, isSubmitting: n, name: o, args: a = '', output: i }) {
  var h;
  const s = D(),
    r = Zo(e),
    c = 56.08695652173913,
    l = 2 * Math.PI * c,
    d = l - r * l,
    [_, m] = o.split(N_),
    f = (m == null ? void 0 : m.replaceAll(Gp, '.')) ?? null,
    g =
      (h = i == null ? void 0 : i.toLowerCase()) == null
        ? void 0
        : h.includes('error processing tool');
  return t.jsx(Pt, {
    children: t.jsxs('div', {
      className: 'my-2.5 flex items-center gap-2.5',
      children: [
        t.jsx('div', {
          className: 'relative h-5 w-5 shrink-0',
          children:
            r < 1
              ? t.jsx(Lm, {
                  progress: r,
                  isSubmitting: n,
                  error: g,
                  children: t.jsxs('div', {
                    className:
                      'absolute left-0 top-0 flex h-full w-full items-center justify-center rounded-full bg-transparent text-white',
                    style: { opacity: 1, transform: 'none' },
                    'data-projection-id': '849',
                    children: [
                      t.jsx('div', { children: t.jsx(cb, {}) }),
                      t.jsx(ii, { radius: c, circumference: l, offset: d }),
                    ],
                  }),
                })
              : g
              ? t.jsx(si, {})
              : t.jsx(_r, {}),
        }),
        t.jsx(ri, {
          progress: r,
          onClick: () => ({}),
          inProgressText: s('com_assistants_running_action'),
          finishedText:
            f && f.length !== xt.ENCODED_DOMAIN_LENGTH
              ? s('com_assistants_completed_action', f)
              : s('com_assistants_completed_function', _),
          hasInput: !!(a != null && a.length),
          popover: !0,
        }),
        !!(a != null && a.length) &&
          t.jsx(rb, { input: a, output: i, domain: f, function_name: _ }),
      ],
    }),
  });
}
function _b({ initialProgress: e = 0.1, args: n = '' }) {
  const o = Zo(e),
    a = 56.08695652173913,
    i = 2 * Math.PI * a,
    s = i - o * i,
    [r, c] = p.useState(!1);
  return t.jsxs('div', {
    className: 'my-2.5 flex items-center gap-2.5',
    children: [
      t.jsx('div', {
        className: 'relative h-5 w-5 shrink-0',
        children: t.jsxs('div', {
          className:
            'absolute left-0 top-0 flex h-full w-full items-center justify-center rounded-full bg-transparent text-white',
          style: { opacity: 1, transform: 'none' },
          'data-projection-id': '106',
          children: [
            t.jsx('div', {
              children: t.jsxs('svg', {
                xmlns: 'http://www.w3.org/2000/svg',
                xmlnsXlink: 'http://www.w3.org/1999/xlink',
                viewBox: '0 0 20 20',
                width: '20',
                height: '20',
                style: { width: '100%', height: '100%', transform: 'translate3d(0px, 0px, 0px)' },
                preserveAspectRatio: 'xMidYMid meet',
                children: [
                  t.jsx('g', {
                    className: 'move-up',
                    children: t.jsx('path', {
                      fill: 'rgb(177,98,253)',
                      fillOpacity: '1',
                      d: 'M11.812616,5.914505C11.535567,5.360465,10.744857,5.360465,10.467807,5.914505C9.369731,8.110632,8.271654,10.306758,7.173676,12.502885C6.923041,13.002725,7.286122,13.590845,7.844972,13.590845C10.041112,13.590845,12.237252,13.590845,14.433392,13.590845C14.992292,13.590845,15.355792,13.002725,15.105892,12.502885C14.007888,10.306758,12.909805,8.110632,11.812616,5.914505C11.812616,5.914505,11.812616,5.914505,11.812616,5.914505C11.812616,5.914505,11.812616,5.914505,11.812616,5.914505M7.216073,8.914505C6.939024,8.360465,6.148304,8.360465,5.871264,8.914505C5.274365,10.10828,4.677499,11.302055,4.080601,12.495835C3.83003,12.99568,4.193122,13.58379,4.751975,13.58379C5.946767,13.58379,7.14156,13.58379,8.336353,13.58379C8.895213,13.58379,9.258683,12.99568,9.008763,12.495835C8.411867,11.302055,7.81497,10.10828,7.216073,8.914505C7.216073,8.914505,7.216073,8.914505,7.216073,8.914505C7.216073,8.914505,7.216073,8.914505,7.216073,8.914505',
                    }),
                  }),
                  t.jsx('g', {
                    style: { display: 'block' },
                    transform: 'matrix(-1,0,0,-1,10,10)',
                    opacity: '1',
                    className: 'moon-rise',
                    children: t.jsx('g', {
                      opacity: '1',
                      transform: 'matrix(1,0,0,1,3.75,5.5)',
                      children: t.jsx('path', {
                        fill: 'rgb(177,98,253)',
                        fillOpacity: '1',
                        d: ' M2.660290002822876,2.2502501010894775 C2.7567598819732666,2.2502501010894775 2.850860118865967,2.241950035095215 2.9425699710845947,2.225330114364624 C3.034290075302124,2.208709955215454 3.1081299781799316,2.1867599487304688 3.164109945297241,2.1594600677490234 C3.239150047302246,2.120300054550171 3.305850028991699,2.100709915161133 3.364219903945923,2.100709915161133 C3.405900001525879,2.100709915161133 3.438659906387329,2.113770008087158 3.462480068206787,2.1398799419403076 C3.487489938735962,2.165990114212036 3.5,2.2009999752044678 3.5,2.2449100017547607 C3.5,2.2698400020599365 3.4958300590515137,2.2983200550079346 3.487489938735962,2.3303699493408203 C3.4803500175476074,2.362410068511963 3.468440055847168,2.3968300819396973 3.4517600536346436,2.433619976043701 C3.3803000450134277,2.5950300693511963 3.287990093231201,2.7410099506378174 3.1748299598693848,2.871570110321045 C3.0628700256347656,3.002120018005371 2.9348299503326416,3.1142799854278564 2.790709972381592,3.2080399990081787 C2.646589994430542,3.3029799461364746 2.4905600547790527,3.375380039215088 2.3226099014282227,3.425230026245117 C2.15585994720459,3.4750800132751465 1.9825600385665894,3.5 1.8027100563049316,3.5 C1.5430500507354736,3.5 1.3036400079727173,3.4554901123046875 1.0844800472259521,3.3664801120758057 C0.8653200268745422,3.2786500453948975 0.6741499900817871,3.1540400981903076 0.5109699964523315,2.9926199913024902 C0.34898999333381653,2.831209897994995 0.22333000600337982,2.641319990158081 0.1340000033378601,2.4229400157928467 C0.04467000067234039,2.2045600414276123 0,1.9660099744796753 0,1.7072700262069702 C0,1.4639699459075928 0.04645000025629997,1.2325400114059448 0.1393599957227707,1.012969970703125 C0.23226000368595123,0.7922199964523315 0.3626900017261505,0.5975800156593323 0.5306299924850464,0.4290440082550049 C0.6997600197792053,0.2593249976634979 0.8968899846076965,0.12877200543880463 1.121999979019165,0.03738600015640259 C1.1541600227355957,0.024329999461770058 1.1833399534225464,0.01483600027859211 1.2095500230789185,0.008901000022888184 C1.2369400262832642,0.0029670000076293945 1.2631399631500244,2.220446049250313e-16 1.288159966468811,2.220446049250313e-16 C1.335800051689148,2.220446049250313e-16 1.3733199834823608,0.014241999946534634 1.4007099866867065,0.042725998908281326 C1.4292999505996704,0.07121100276708603 1.4435900449752808,0.10681600123643875 1.4435900449752808,0.14954200387001038 C1.4435900449752808,0.1780260056257248 1.438230037689209,0.2076980024576187 1.4275100231170654,0.23855499923229218 C1.41798996925354,0.2682270109653473 1.404289960861206,0.2996779978275299 1.3864200115203857,0.3329089879989624 C1.3625999689102173,0.3768230080604553 1.3423500061035156,0.4302310049533844 1.3256800174713135,0.493133008480072 C1.309000015258789,0.5548499822616577 1.296489953994751,0.6225000023841858 1.288159966468811,0.6960800290107727 C1.2798199653625488,0.7684800028800964 1.2756500244140625,0.8414700031280518 1.2756500244140625,0.9150599837303162 C1.2756500244140625,1.1215699911117554 1.3072099685668945,1.3073099851608276 1.3703399896621704,1.4722800254821777 C1.4346599578857422,1.6372499465942383 1.5269700288772583,1.7778899669647217 1.6472699642181396,1.8941999673843384 C1.7675700187683105,2.0093300342559814 1.9128799438476562,2.097749948501587 2.083209991455078,2.1594600677490234 C2.2547199726104736,2.2199900150299072 2.44707989692688,2.2502501010894775 2.660290002822876,2.2502501010894775 C2.660290002822876,2.2502501010894775 2.660290002822876,2.2502501010894775 2.660290002822876,2.2502501010894775 C2.660290002822876,2.2502501010894775 2.660290002822876,2.2502501010894775 2.660290002822876,2.2502501010894775',
                      }),
                    }),
                  }),
                ],
              }),
            }),
            t.jsx(ii, { radius: a, circumference: i, offset: s }),
          ],
        }),
      }),
      t.jsx(ri, {
        progress: o,
        onClick: () => c((l) => !l),
        inProgressText: 'Creating Image',
        finishedText: 'Finished.',
        hasInput: !1,
      }),
    ],
  });
}
const il = ({ text: e, isCreatedByUser: n = !1, message: o, showCursor: a }) =>
  t.jsx('div', {
    className: b(
      a && e != null && e.length ? 'result-streaming' : '',
      'markdown prose dark:prose-invert light w-full break-words',
      n ? 'whitespace-pre-wrap dark:text-gray-20' : 'dark:text-gray-70',
    ),
    children: n
      ? t.jsx(t.Fragment, { children: e })
      : t.jsx(Am, { content: e, message: o, showCursor: a }),
  });
function Pm({ part: e, showCursor: n, isSubmitting: o, message: a }) {
  if (!e) return null;
  if (e.type === ee.ERROR)
    return t.jsx(lr, { message: a, text: e[ee.TEXT].value, className: 'my-2' });
  if (e.type === ee.TEXT)
    return t.jsx($o, {
      message: a,
      children: t.jsx('div', {
        className:
          'markdown prose dark:prose-invert light dark:text-gray-70 my-1 w-full break-words',
        children: t.jsx(il, {
          text: e[ee.TEXT].value,
          isCreatedByUser: a.isCreatedByUser,
          message: a,
          showCursor: n,
        }),
      }),
    });
  if (e.type === ee.TOOL_CALL && e[ee.TOOL_CALL].type === dt.CODE_INTERPRETER) {
    const i = e[ee.TOOL_CALL],
      s = i[dt.CODE_INTERPRETER];
    return t.jsx(ib, {
      initialProgress: i.progress ?? 0.1,
      code: s.input,
      outputs: s.outputs ?? [],
      isSubmitting: o,
    });
  } else if (
    e.type === ee.TOOL_CALL &&
    (e[ee.TOOL_CALL].type === dt.RETRIEVAL || e[ee.TOOL_CALL].type === dt.FILE_SEARCH)
  ) {
    const i = e[ee.TOOL_CALL];
    return t.jsx(ab, { initialProgress: i.progress ?? 0.1, isSubmitting: o });
  } else if (
    e.type === ee.TOOL_CALL &&
    e[ee.TOOL_CALL].type === dt.FUNCTION &&
    R_.has(e[ee.TOOL_CALL].function.name)
  ) {
    const i = e[ee.TOOL_CALL];
    return t.jsx(_b, { initialProgress: i.progress ?? 0.1, args: i.function.arguments });
  } else if (e.type === ee.TOOL_CALL && e[ee.TOOL_CALL].type === dt.FUNCTION) {
    const i = e[ee.TOOL_CALL];
    return ba(i)
      ? o && n
        ? t.jsx($o, {
            message: a,
            children: t.jsx('div', {
              className:
                'markdown prose dark:prose-invert light dark:text-gray-70 my-1 w-full break-words',
              children: t.jsx(il, {
                text: '',
                isCreatedByUser: a.isCreatedByUser,
                message: a,
                showCursor: n,
              }),
            }),
          })
        : null
      : t.jsx(lb, {
          initialProgress: i.progress ?? 0.1,
          isSubmitting: o,
          args: i.function.arguments,
          name: i.function.name,
          output: i.function.output,
        });
  } else if (e.type === ee.IMAGE_FILE) {
    const i = e[ee.IMAGE_FILE],
      s = i.height ?? 1920,
      r = i.width ?? 1080;
    return t.jsx(jm, {
      imagePath: i.filepath,
      height: s,
      width: r,
      altText: i.filename ?? 'Uploaded Image',
      placeholderDimensions: { height: s + 'px', width: r + 'px' },
    });
  }
  return null;
}
const Em = ({ message: e }) => {
  const { messageId: n } = e;
  return Array.isArray(e.content) && e.content.length > 0
    ? t.jsxs(t.Fragment, {
        children: [
          e.content
            .filter((o) => o)
            .map((o, a) =>
              o
                ? t.jsx(
                    Pm,
                    { showCursor: !1, isSubmitting: !1, part: o, message: e },
                    `display-${n}-${a}`,
                  )
                : null,
            ),
          e.unfinished &&
            t.jsx(p.Suspense, {
              children: t.jsx(om, {
                delay: 250,
                children: t.jsx(Tm, { message: e }, `unfinished-${n}`),
              }),
            }),
        ],
      })
    : t.jsx('div', {
        className: b(
          'markdown prose dark:prose-invert light w-full break-words',
          e.isCreatedByUser ? 'whitespace-pre-wrap dark:text-gray-20' : 'dark:text-gray-70',
        ),
        children: t.jsx(zm, { content: e.text ?? '' }),
      });
};
function dr({ siblingIdx: e, siblingCount: n, setSiblingIdx: o }) {
  if (e === void 0) return null;
  if (n === void 0) return null;
  const a = () => {
      o && o(e - 1);
    },
    i = () => {
      o && o(e + 1);
    };
  return n > 1
    ? t.jsxs('div', {
        className: 'visible flex items-center justify-center gap-1 self-center pt-0 text-xs',
        children: [
          t.jsx('button', {
            className: 'disabled:text-gray-300 dark:text-white dark:disabled:text-gray-400',
            onClick: a,
            disabled: e == 0,
            children: t.jsx('svg', {
              stroke: 'currentColor',
              fill: 'none',
              strokeWidth: '1.5',
              viewBox: '0 0 24 24',
              strokeLinecap: 'round',
              strokeLinejoin: 'round',
              className: 'h-3 w-3',
              height: '1em',
              width: '1em',
              xmlns: 'http://www.w3.org/2000/svg',
              children: t.jsx('polyline', { points: '15 18 9 12 15 6' }),
            }),
          }),
          t.jsxs('span', {
            className: 'flex-shrink-0 flex-grow tabular-nums',
            children: [e + 1, ' / ', n],
          }),
          t.jsx('button', {
            className: 'disabled:text-gray-300 dark:text-white dark:disabled:text-gray-400',
            onClick: i,
            disabled: e == n - 1,
            children: t.jsx('svg', {
              stroke: 'currentColor',
              fill: 'none',
              strokeWidth: '1.5',
              viewBox: '0 0 24 24',
              strokeLinecap: 'round',
              strokeLinejoin: 'round',
              className: 'h-3 w-3',
              height: '1em',
              width: '1em',
              xmlns: 'http://www.w3.org/2000/svg',
              children: t.jsx('polyline', { points: '9 18 15 12 9 6' }),
            }),
          }),
        ],
      })
    : null;
}
const db = ze.memo(({ inline: e, className: n, children: o }) => {
    const a = /language-(\w+)/.exec(n || ''),
      i = a && a[1];
    return e
      ? t.jsx('code', { className: n, children: o })
      : t.jsx(Bo, { lang: i || 'text', codeChildren: o });
  }),
  mb = ze.memo(({ children: e }) =>
    t.jsx('p', { className: 'mb-2 whitespace-pre-wrap', children: e }),
  );
ze.memo(({ content: e, message: n, showCursor: o }) => {
  const [a, i] = p.useState('█'),
    s = Y(O.isSubmitting),
    r = Y(O.latestMessage),
    c = e === '<span className="result-streaming">█</span>',
    { isEdited: l, messageId: d } = n ?? {},
    _ = d === (r == null ? void 0 : r.messageId),
    m = (e == null ? void 0 : e.replace('z-index: 1;', '')) ?? '';
  p.useEffect(() => {
    let h, v;
    if (!o) {
      i('ㅤ');
      return;
    }
    return (
      s && _
        ? (h = setInterval(() => {
            i('ㅤ'),
              (v = setTimeout(() => {
                i('█');
              }, 200));
          }, 1e3))
        : i('ㅤ'),
      () => {
        clearInterval(h), clearTimeout(v);
      }
    );
  }, [s, _, o]);
  const f = [[Cs, { output: 'mathml' }], [Ns, { detect: !0, ignoreMissing: !0, subset: Ds }], [g_]];
  let g = !1;
  return (
    l || (g = Z_(m)),
    (l || ((!c || !_) && !g)) && f.pop(),
    t.jsx(Da, {
      remarkPlugins: [ks, ws, [js, { singleDollarTextMath: !0 }]],
      rehypePlugins: f,
      linkTarget: '_new',
      components: { code: db, p: mb },
      children: _ && s && !c ? m + a : m,
    })
  );
});
function ci({ children: e, classes: n = '', onClick: o }) {
  return t.jsx('div', {
    className: b('mt-1 flex justify-start gap-3 empty:hidden lg:flex', n),
    onClick: o,
    children: e,
  });
}
function ub(e) {
  var d;
  const { message: n, conversation: o, assistant: a } = e,
    i = a ? a.name : '',
    s = a ? ((d = a.metadata) == null ? void 0 : d.avatar) : '',
    r = p.useMemo(
      () => ({ ...(o ?? {}), ...n, iconURL: (n == null ? void 0 : n.iconURL) ?? '' }),
      [o, n],
    ),
    c = r == null ? void 0 : r.iconURL;
  let l = r == null ? void 0 : r.endpoint;
  return (
    (l = io({ endpointsConfig: void 0, iconURL: c, endpoint: l })),
    !(n != null && n.isCreatedByUser) && c && c.includes('http')
      ? t.jsx(ta, { preset: r, context: 'message', assistantAvatar: s, assistantName: i })
      : n != null && n.isCreatedByUser
      ? t.jsx('div', {
          style: {
            backgroundColor: 'rgb(121, 137, 255)',
            width: '20px',
            height: '20px',
            boxShadow: 'rgba(240, 246, 252, 0.1) 0px 0px 0px 1px',
          },
          className: 'relative flex h-9 w-9 items-center justify-center rounded-sm p-1 text-white',
          children: t.jsx(ai, {}),
        })
      : t.jsx(vm, {
          ...r,
          endpoint: l,
          iconURL: a ? s : void 0,
          model: (n == null ? void 0 : n.model) ?? (o == null ? void 0 : o.model),
          assistantName: i,
          size: 28.8,
        })
  );
}
function pb(e) {
  const {
    message: n,
    siblingIdx: o,
    siblingCount: a,
    conversation: i,
    setSiblingIdx: s,
    currentEditId: r,
    setCurrentEditId: c,
  } = e;
  if (!n) return null;
  const {
    text: l,
    children: d,
    messageId: _ = null,
    isCreatedByUser: m,
    error: f,
    unfinished: g,
  } = n ?? {};
  let h = '';
  return (
    m ? (h = 'anonymous') : (h = n.sender),
    t.jsxs(t.Fragment, {
      children: [
        t.jsx('div', {
          className:
            'text-token-text-primary w-full border-0 bg-transparent dark:border-0 dark:bg-transparent',
          children: t.jsx('div', {
            className: 'm-auto justify-center p-4 py-2 text-base md:gap-6 ',
            children: t.jsxs('div', {
              className:
                'final-completion group mx-auto flex flex-1 gap-3 text-base md:max-w-3xl md:px-5 lg:max-w-[40rem] lg:px-1 xl:max-w-[48rem] xl:px-5',
              children: [
                t.jsx('div', {
                  className: 'relative flex flex-shrink-0 flex-col items-end',
                  children: t.jsx('div', {
                    children: t.jsx('div', {
                      className: 'pt-0.5',
                      children: t.jsx('div', {
                        className:
                          'flex h-6 w-6 items-center justify-center overflow-hidden rounded-full',
                        children: t.jsx(ub, { message: n, conversation: i }),
                      }),
                    }),
                  }),
                }),
                t.jsxs('div', {
                  className: b('relative flex w-11/12 flex-col', m ? '' : 'agent-turn'),
                  children: [
                    t.jsx('div', { className: 'select-none font-semibold', children: h }),
                    t.jsx('div', {
                      className: 'flex-col gap-1 md:gap-3',
                      children: t.jsxs('div', {
                        className: 'flex max-w-full flex-grow flex-col gap-0',
                        children: [
                          (n == null ? void 0 : n.plugin) &&
                            t.jsx(ir, { plugin: n == null ? void 0 : n.plugin }),
                          n != null && n.content
                            ? t.jsx(Em, { message: n })
                            : t.jsx(Im, {
                                edit: !1,
                                error: f,
                                isLast: !1,
                                ask: () => ({}),
                                text: l ?? '',
                                message: n,
                                isSubmitting: !1,
                                enterEdit: () => ({}),
                                unfinished: !!g,
                                isCreatedByUser: m ?? !0,
                                siblingIdx: o ?? 0,
                                setSiblingIdx: s ?? (() => ({})),
                              }),
                        ],
                      }),
                    }),
                    t.jsxs(ci, {
                      classes: 'text-xs',
                      children: [
                        t.jsx(dr, { siblingIdx: o, siblingCount: a, setSiblingIdx: s }),
                        t.jsx(fm, { message: n }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
        }),
        t.jsx(
          Mm,
          { messageId: _, messagesTree: d ?? [], currentEditId: r, setCurrentEditId: c },
          _,
        ),
      ],
    })
  );
}
function Mm({ messageId: e, messagesTree: n, currentEditId: o, setCurrentEditId: a }) {
  const [i, s] = W(O.messagesSiblingIdxFamily(e)),
    r = (l) => {
      s(((n == null ? void 0 : n.length) ?? 0) - l - 1);
    };
  if (
    (p.useEffect(() => {
      s(0);
    }, [n == null ? void 0 : n.length]),
    p.useEffect(() => {
      n != null && n.length && i >= (n == null ? void 0 : n.length) && s(0);
    }, [i, n == null ? void 0 : n.length, s]),
    !(n && n != null && n.length))
  )
    return null;
  const c = n[n.length - i - 1];
  return c
    ? t.jsx(
        pb,
        {
          message: c,
          currentEditId: o,
          setCurrentEditId: a,
          siblingIdx: n.length - i - 1,
          siblingCount: n.length,
          setSiblingIdx: r,
        },
        c.messageId,
      )
    : null;
}
function hb({ messagesTree: e, conversationId: n }) {
  const [o, a] = p.useState(-1);
  return t.jsx('div', {
    className: 'flex-1 pb-[50px]',
    children: t.jsx('div', {
      className: 'dark:gpt-dark-gray relative h-full',
      children: t.jsx('div', {
        style: { height: '100%', overflowY: 'auto', width: '100%' },
        children: t.jsxs('div', {
          className: 'flex flex-col pb-9 text-sm dark:bg-transparent',
          children: [
            (e && (e == null ? void 0 : e.length) == 0) || e === null
              ? t.jsx('div', {
                  className:
                    'flex w-full items-center justify-center gap-1 bg-gray-50 p-3 text-sm text-gray-500 dark:border-gray-800/50 dark:bg-gray-800 dark:text-gray-300',
                  children: 'Nothing found',
                })
              : t.jsx(t.Fragment, {
                  children: t.jsx('div', {
                    children: t.jsx(
                      Mm,
                      {
                        messagesTree: e,
                        messageId: n ?? null,
                        setCurrentEditId: a,
                        currentEditId: o ?? null,
                      },
                      n,
                    ),
                  }),
                }),
            t.jsx('div', {
              className:
                'dark:gpt-dark-gray group h-0 w-full flex-shrink-0 dark:border-gray-800/50',
            }),
          ],
        }),
      }),
    }),
  });
}
function Rm({ className: e }) {
  var _, m;
  const { data: n } = bt(),
    o = D(),
    a = (_ = n == null ? void 0 : n.interface) == null ? void 0 : _.privacyPolicy,
    i = (m = n == null ? void 0 : n.interface) == null ? void 0 : m.termsOfService,
    s =
      (a == null ? void 0 : a.externalUrl) &&
      t.jsx('a', {
        className: ' text-gray-600 underline dark:text-gray-300',
        href: a.externalUrl,
        target: a.openNewTab ? '_blank' : void 0,
        rel: 'noreferrer',
        children: o('com_ui_privacy_policy'),
      }),
    r =
      (i == null ? void 0 : i.externalUrl) &&
      t.jsx('a', {
        className: ' text-gray-600 underline dark:text-gray-300',
        href: i.externalUrl,
        target: i.openNewTab ? '_blank' : void 0,
        rel: 'noreferrer',
        children: o('com_ui_terms_of_service'),
      });
  if (n != null && n.analyticsGtmId) {
    const f = { gtmId: n == null ? void 0 : n.analyticsGtmId };
    kl.initialize(f);
  }
  const d = [
    ...(typeof (n == null ? void 0 : n.customFooter) == 'string'
      ? n.customFooter
      : '[LibreChat ' + xt.VERSION + '](https://librechat.ai) - ' + o('com_ui_pay_per_call')
    )
      .split('|')
      .map((f, g) =>
        t.jsx(
          ze.Fragment,
          {
            children: t.jsx(Da, {
              components: {
                a: (h) => {
                  const { ['node']: v, href: x, ...y } = h;
                  return t.jsx('a', {
                    className: ' text-gray-600 underline dark:text-gray-300',
                    href: x,
                    target: '_blank',
                    rel: 'noreferrer',
                    ...y,
                  });
                },
                p: ({ node: h, ...v }) => t.jsx('span', { ...v }),
              },
              children: f.trim(),
            }),
          },
          `main-content-part-${g}`,
        ),
      ),
    s,
    r,
  ].filter(Boolean);
  return t.jsx('div', {
    className:
      e ||
      'relative flex items-center justify-center gap-2 px-2 py-2 text-center text-xs text-gray-600 dark:text-gray-300 md:px-[60px]',
    children: d.map((f, g) => {
      const h = g === d.length - 1;
      return t.jsxs(
        ze.Fragment,
        {
          children: [
            f,
            !h &&
              t.jsx('div', { className: 'h-2 border-r-[1px] border-gray-300' }, `separator-${g}`),
          ],
        },
        `footer-element-${g}`,
      );
    }),
  });
}
function gb() {
  const e = D(),
    { shareId: n } = Kt(),
    { data: o, isLoading: a } = Ff(n ?? ''),
    i = o && Ko({ messages: o.messages }),
    s = (i == null ? void 0 : i.length) === 0 ? null : i ?? null;
  return t.jsx(vd.Provider, {
    value: { isSharedConvo: !0 },
    children: t.jsx('div', {
      className: 'relative flex w-full grow overflow-hidden bg-white dark:bg-gray-800',
      style: { paddingBottom: '50px' },
      children: t.jsx('div', {
        className:
          'transition-width relative flex h-full w-full flex-1 flex-col items-stretch overflow-hidden bg-white pt-0 dark:bg-gray-800',
        children: t.jsxs('div', {
          className: 'flex h-full flex-col',
          role: 'presentation',
          tabIndex: 0,
          children: [
            a
              ? t.jsx('div', {
                  className: 'flex h-screen items-center justify-center',
                  children: t.jsx(Oe, { className: '' }),
                })
              : o && s && s.length !== 0
              ? t.jsxs(t.Fragment, {
                  children: [
                    t.jsxs('div', {
                      className:
                        'final-completion group mx-auto flex min-w-[40rem] flex-col gap-3 pb-6 pt-4 md:max-w-3xl md:px-5 lg:max-w-[40rem] lg:px-1 xl:max-w-[48rem] xl:px-5',
                      children: [
                        t.jsx('h1', {
                          className: 'text-4xl font-bold dark:text-white',
                          children: o.title,
                        }),
                        t.jsx('div', {
                          className: 'border-b pb-6 text-base text-gray-300',
                          children: new Date(o.createdAt).toLocaleDateString('en-US', {
                            month: 'long',
                            day: 'numeric',
                            year: 'numeric',
                          }),
                        }),
                      ],
                    }),
                    t.jsx(hb, { messagesTree: s, conversationId: o.conversationId }),
                  ],
                })
              : t.jsx('div', {
                  className: 'flex h-screen items-center justify-center',
                  children: e('com_ui_shared_link_not_found'),
                }),
            t.jsx('div', {
              className:
                'w-full border-t-0 pl-0 pt-2 dark:border-white/20 md:w-[calc(100%-.5rem)] md:border-t-0 md:border-transparent md:pl-0 md:pt-0 md:dark:border-transparent',
              children: t.jsx(Rm, {
                className:
                  'fixed bottom-0 left-0 right-0 z-50 flex items-center justify-center gap-2 bg-gradient-to-t from-gray-50 to-transparent px-2 pb-2 pt-8 text-xs text-gray-600 dark:from-gray-800 dark:text-gray-300 md:px-[60px]',
              }),
            }),
          ],
        }),
      }),
    }),
  });
}
const fb = p.memo(gb);
function xb() {
  return t.jsx(fb, {});
}
function vb({ scrollHandler: e }) {
  return t.jsx('button', {
    onClick: e,
    className:
      'absolute bottom-5 right-1/2 cursor-pointer rounded-full border border-gray-200 bg-white bg-clip-padding text-gray-600 dark:border-white/10 dark:bg-gray-750/90 dark:text-gray-200',
    children: t.jsx('svg', {
      width: '24',
      height: '24',
      viewBox: '0 0 24 24',
      fill: 'none',
      className: 'm-1 text-black dark:text-white',
      children: t.jsx('path', {
        d: 'M17 13L12 18L7 13M12 6L12 17',
        stroke: 'currentColor',
        strokeWidth: '2',
        strokeLinecap: 'round',
        strokeLinejoin: 'round',
      }),
    }),
  });
}
function mr(e) {
  var m;
  const { data: n } = Se(),
    { message: o, conversation: a, assistant: i } = e,
    s = i ? i.name : '',
    r = i ? ((m = i.metadata) == null ? void 0 : m.avatar) : '',
    c = p.useMemo(
      () => ({ ...(a ?? {}), ...o, iconURL: (o == null ? void 0 : o.iconURL) ?? '' }),
      [a, o],
    ),
    l = c == null ? void 0 : c.iconURL;
  let d = c == null ? void 0 : c.endpoint;
  d = io({ endpointsConfig: n, iconURL: l, endpoint: d });
  const _ = Ce(n, d, 'iconURL');
  return !(o != null && o.isCreatedByUser) && l && l.includes('http')
    ? t.jsx(ta, {
        preset: c,
        context: 'message',
        assistantAvatar: r,
        endpointIconURL: _,
        assistantName: s,
      })
    : t.jsx(ls, {
        ...c,
        endpoint: d,
        iconURL: i ? r : _,
        model: (o == null ? void 0 : o.model) ?? (a == null ? void 0 : a.model),
        assistantName: s,
        size: 28.8,
      });
}
const Jn = {
    [rt.DIRECT_PATH]: 'com_ui_fork_visible',
    [rt.INCLUDE_BRANCHES]: 'com_ui_fork_branches',
    [rt.TARGET_LEVEL]: 'com_ui_fork_all_target',
    default: 'com_ui_fork_from_message',
  },
  Oi = ({
    children: e,
    setting: n,
    onClick: o,
    setActiveSetting: a,
    sideOffset: i = 30,
    timeoutRef: s,
    hoverInfo: r,
    hoverTitle: c,
    hoverDescription: l,
  }) =>
    t.jsxs(ie, {
      openDelay: 200,
      children: [
        t.jsx(Uo, {
          onClick: () => o(n),
          onMouseEnter: () => {
            s.current && (clearTimeout(s.current), (s.current = null)), a(Jn[n]);
          },
          onMouseLeave: () => {
            s.current && clearTimeout(s.current),
              (s.current = setTimeout(() => {
                a(Jn.default);
              }, 175));
          },
          className:
            'mx-1 max-w-14 flex-1 rounded-lg border-2 bg-white text-gray-700 transition duration-300 ease-in-out hover:bg-gray-200 hover:text-gray-900 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-gray-100 ',
          type: 'button',
          children: e,
        }),
        (r || c || l) &&
          t.jsx(ea, {
            children: t.jsx(_o, {
              side: 'right',
              className: 'z-[999] w-80 dark:bg-gray-700',
              sideOffset: i,
              children: t.jsx('div', {
                className: 'space-y-2',
                children: t.jsxs('p', {
                  className: 'flex flex-col gap-2 text-sm text-gray-600 dark:text-gray-300',
                  children: [
                    r && r,
                    c &&
                      t.jsx('span', { className: 'flex flex-wrap gap-1 font-bold', children: c }),
                    l && l,
                  ],
                }),
              }),
            }),
          }),
      ],
    });
function bb({ isLast: e, messageId: n, conversationId: o, forkingSupported: a, latestMessage: i }) {
  const s = D(),
    { index: r } = me(),
    { showToast: c } = Ie(),
    [l, d] = p.useState(!1),
    { navigateToConvo: _ } = Hs(r),
    m = p.useRef(null),
    [f, g] = W(O.forkSetting),
    [h, v] = p.useState(Jn.default),
    [x, y] = W(O.splitAtTarget),
    [k, C] = W(O.rememberForkOption),
    j = D0({
      onSuccess: (T) => {
        T && (_(T.conversation), c({ message: s('com_ui_fork_success'), status: 'success' }));
      },
      onMutate: () => {
        c({ message: s('com_ui_fork_processing'), status: 'info' });
      },
      onError: () => {
        c({ message: s('com_ui_fork_error'), status: 'error' });
      },
    });
  if (!a || !o || !n) return null;
  const w = (T) => {
    l && (C(!0), g(T)),
      j.mutate({
        messageId: n,
        conversationId: o,
        option: T,
        splitAtTarget: x,
        latestMessageId: i == null ? void 0 : i.messageId,
      });
  };
  return t.jsxs(Pt, {
    children: [
      t.jsx(Ht, {
        asChild: !0,
        children: t.jsx('button', {
          className: b(
            'hover-button active rounded-md p-1 hover:bg-gray-200 hover:text-gray-700 dark:text-gray-400/70 dark:hover:bg-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:invisible md:group-hover:visible ',
            'data-[state=open]:active data-[state=open]:bg-gray-200 data-[state=open]:text-gray-700 data-[state=open]:dark:bg-gray-700 data-[state=open]:dark:text-gray-200',
            e ? '' : 'data-[state=open]:opacity-100 md:opacity-0 md:group-hover:opacity-100',
          ),
          onClick: (T) => {
            k &&
              (T.preventDefault(),
              j.mutate({
                messageId: n,
                splitAtTarget: x,
                conversationId: o,
                option: f,
                latestMessageId: i == null ? void 0 : i.messageId,
              }));
          },
          type: 'button',
          title: s('com_ui_fork'),
          children: t.jsx(sp, {
            className:
              'h-4 w-4 hover:text-gray-700 dark:hover:bg-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400',
          }),
        }),
      }),
      t.jsx(Wt, {
        children: t.jsx('div', {
          dir: 'ltr',
          children: t.jsxs(Et, {
            side: 'top',
            role: 'menu',
            className:
              'bg-token-surface-primary flex min-h-[120px] min-w-[215px] flex-col gap-3 overflow-hidden rounded-lg bg-white p-2 px-3 shadow-lg dark:bg-gray-700',
            style: { outline: 'none', pointerEvents: 'auto', boxSizing: 'border-box' },
            tabIndex: -1,
            sideOffset: 5,
            align: 'center',
            children: [
              t.jsxs('div', {
                className: 'flex h-6 w-full items-center justify-center text-sm dark:text-gray-200',
                children: [
                  s(h),
                  t.jsxs(ie, {
                    openDelay: 50,
                    children: [
                      t.jsx(oe, {
                        asChild: !0,
                        children: t.jsx(u_, {
                          className: 'ml-auto flex h-4 w-4 gap-2 text-gray-500 dark:text-white/50',
                        }),
                      }),
                      t.jsx(ea, {
                        children: t.jsx(_o, {
                          side: 'right',
                          className: 'z-[999] w-80 dark:bg-gray-700',
                          sideOffset: 19,
                          children: t.jsxs('div', {
                            className:
                              'flex flex-col gap-2 space-y-2 text-sm text-gray-600 dark:text-gray-300',
                            children: [
                              t.jsx('span', { children: s('com_ui_fork_info_1') }),
                              t.jsx('span', { children: s('com_ui_fork_info_2') }),
                              t.jsx('span', {
                                children: s('com_ui_fork_info_3', s('com_ui_fork_split_target')),
                              }),
                            ],
                          }),
                        }),
                      }),
                    ],
                  }),
                ],
              }),
              t.jsxs('div', {
                className: 'flex h-full w-full items-center justify-center gap-1',
                children: [
                  t.jsx(Oi, {
                    sideOffset: 155,
                    setActiveSetting: v,
                    timeoutRef: m,
                    onClick: w,
                    setting: rt.DIRECT_PATH,
                    hoverTitle: t.jsxs(t.Fragment, {
                      children: [
                        t.jsx(Cr, { className: 'h-5 w-5 rotate-90' }),
                        s(Jn[rt.DIRECT_PATH]),
                      ],
                    }),
                    hoverDescription: s('com_ui_fork_info_visible'),
                    children: t.jsx(oe, {
                      asChild: !0,
                      children: t.jsx(Cr, { className: 'h-full w-full rotate-90 p-2' }),
                    }),
                  }),
                  t.jsx(Oi, {
                    sideOffset: 90,
                    setActiveSetting: v,
                    timeoutRef: m,
                    onClick: w,
                    setting: rt.INCLUDE_BRANCHES,
                    hoverTitle: t.jsxs(t.Fragment, {
                      children: [
                        t.jsx(Nr, { className: 'h-4 w-4 rotate-180' }),
                        s(Jn[rt.INCLUDE_BRANCHES]),
                      ],
                    }),
                    hoverDescription: s('com_ui_fork_info_branches'),
                    children: t.jsx(oe, {
                      asChild: !0,
                      children: t.jsx(Nr, { className: 'h-full w-full rotate-180 p-2' }),
                    }),
                  }),
                  t.jsx(Oi, {
                    sideOffset: 25,
                    setActiveSetting: v,
                    timeoutRef: m,
                    onClick: w,
                    setting: rt.TARGET_LEVEL,
                    hoverTitle: t.jsxs(t.Fragment, {
                      children: [
                        t.jsx(Sr, { className: 'h-5 w-5' }),
                        `${s(Jn[rt.TARGET_LEVEL])} (${s('com_endpoint_default')})`,
                      ],
                    }),
                    hoverDescription: s('com_ui_fork_info_target'),
                    children: t.jsx(oe, {
                      asChild: !0,
                      children: t.jsx(Sr, { className: 'h-full w-full p-2' }),
                    }),
                  }),
                ],
              }),
              t.jsxs(ie, {
                openDelay: 50,
                children: [
                  t.jsx(oe, {
                    asChild: !0,
                    children: t.jsxs('div', {
                      className:
                        'flex h-6 w-full items-center justify-start text-sm dark:text-gray-300 dark:hover:text-gray-200',
                      children: [
                        t.jsx(vt, {
                          checked: x,
                          onCheckedChange: (T) => y(T),
                          className: 'm-2 transition duration-300 ease-in-out',
                        }),
                        s('com_ui_fork_split_target'),
                      ],
                    }),
                  }),
                  t.jsx(on, {
                    side: ce.Right,
                    description: 'com_ui_fork_info_start',
                    langCode: !0,
                    sideOffset: 20,
                  }),
                ],
              }),
              t.jsxs(ie, {
                openDelay: 50,
                children: [
                  t.jsx(oe, {
                    asChild: !0,
                    children: t.jsxs('div', {
                      className:
                        'flex h-6 w-full items-center justify-start text-sm dark:text-gray-300 dark:hover:text-gray-200',
                      children: [
                        t.jsx(vt, {
                          checked: l,
                          onCheckedChange: (T) => {
                            T && c({ message: s('com_ui_fork_remember_checked'), status: 'info' }),
                              d(T);
                          },
                          className: 'm-2 transition duration-300 ease-in-out',
                        }),
                        s('com_ui_fork_remember'),
                      ],
                    }),
                  }),
                  t.jsx(on, {
                    side: ce.Right,
                    description: 'com_ui_fork_info_remember',
                    langCode: !0,
                    sideOffset: 20,
                  }),
                ],
              }),
            ],
          }),
        }),
      }),
    ],
  });
}
function Om({
  conversationId: e,
  renaming: n,
  retainView: o,
  title: a,
  appendLabel: i = !1,
  className: s = '',
}) {
  const r = D(),
    c = _t(),
    l = X(),
    { newConversation: d } = sn(),
    { conversationId: _ } = Kt(),
    m = O0({
      onSuccess: () => {
        (_ === e || _ === 'new') && (d(), c('/c/new', { replace: !0 })), o();
      },
    }),
    f = p.useCallback(() => {
      var x;
      const h = l.getQueryData([G.messages, e]),
        v =
          (x = h == null ? void 0 : h[(h == null ? void 0 : h.length) - 1]) == null
            ? void 0
            : x.thread_id;
      m.mutate({ conversationId: e, thread_id: v, source: 'button' });
    }, [e, m, l]),
    g = () =>
      i
        ? t.jsxs(t.Fragment, { children: [t.jsx(za, {}), ' ', r('com_ui_delete')] })
        : t.jsx(pt, {
            delayDuration: 250,
            children: t.jsxs(ht, {
              children: [
                t.jsx(gt, {
                  asChild: !0,
                  children: t.jsx('span', { children: t.jsx(za, { className: 'h-5 w-5' }) }),
                }),
                t.jsx(ft, { side: 'top', sideOffset: 0, children: r('com_ui_delete') }),
              ],
            }),
          });
  return t.jsxs(nt, {
    children: [
      t.jsx(Fn, {
        asChild: !0,
        children: t.jsx('button', { className: s, children: n ? t.jsx(sm, {}) : g() }),
      }),
      t.jsx(Zt, {
        showCloseButton: !1,
        title: r('com_ui_delete_conversation'),
        className: 'max-w-[450px]',
        main: t.jsx(t.Fragment, {
          children: t.jsx('div', {
            className: 'flex w-full flex-col items-center gap-2',
            children: t.jsx('div', {
              className: 'grid w-full items-center gap-2',
              children: t.jsxs(Z, {
                htmlFor: 'chatGptLabel',
                className: 'text-left text-sm font-medium',
                children: [
                  r('com_ui_delete_conversation_confirm'),
                  ' ',
                  t.jsx('strong', { children: a }),
                ],
              }),
            }),
          }),
        }),
        selection: {
          selectHandler: f,
          selectClasses:
            'bg-red-700 dark:bg-red-600 hover:bg-red-800 dark:hover:bg-red-800 text-white',
          selectText: r('com_ui_delete'),
        },
      }),
    ],
  });
}
function yb({
  renaming: e,
  renameHandler: n,
  onRename: o,
  appendLabel: a = !1,
  className: i = '',
}) {
  const s = D(),
    r = e ? o : n;
  return t.jsx('button', {
    className: b(
      'group m-1.5 flex w-full cursor-pointer items-center gap-2 rounded p-2.5 text-sm hover:bg-gray-200 focus-visible:bg-gray-200 focus-visible:outline-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-gray-600 dark:focus-visible:bg-gray-600',
      i,
    ),
    onClick: r,
    children: e
      ? t.jsx(mo, {})
      : a
      ? t.jsxs(t.Fragment, { children: [t.jsx(Ia, {}), ' ', s('com_ui_rename')] })
      : t.jsx(Ia, {}),
  });
}
const kb = () => ({}),
  Dm = p.createContext({ setPopoverActive: kb, isPopoverActive: !1 }),
  wb = () => p.useContext(Dm),
  Fm = ({ children: e, icon: n = t.jsx(Xx, {}), tooltip: o = 'More', className: a }) => {
    const i = D(),
      { isPopoverActive: s, setPopoverActive: r } = wb();
    return t.jsxs(Pt, {
      open: s,
      onOpenChange: (c) => r(c),
      children: [
        t.jsx(Ht, {
          asChild: !0,
          children: t.jsx('div', {
            className: b(
              'pointer-cursor relative flex flex-col text-left focus:outline-none focus:ring-0 focus:ring-offset-0 sm:text-sm',
              'hover:text-gray-400 radix-state-open:text-gray-400 dark:hover:text-gray-400 dark:radix-state-open:text-gray-400',
              'z-50 flex h-[40px] min-w-4 flex-none items-center justify-center focus:ring-0 focus:ring-offset-0',
            ),
            id: 'edit-menu-button',
            'data-testid': 'edit-menu-button',
            title: i('com_ui_more_options'),
            children: t.jsx(pt, {
              delayDuration: 500,
              children: t.jsxs(ht, {
                children: [
                  t.jsx(gt, {
                    asChild: !0,
                    children: t.jsx('button', {
                      type: 'button',
                      className: a,
                      children: p.cloneElement(n, {
                        className:
                          'h-[18px] w-[18px] flex-shrink-0 text-gray-500 hover:text-gray-400 dark:text-gray-300 dark:hover:text-gray-400',
                      }),
                    }),
                  }),
                  t.jsx(ft, { side: 'top', sideOffset: 0, children: o }),
                ],
              }),
            }),
          }),
        }),
        t.jsx(Wt, {
          children: t.jsx(Et, {
            side: 'bottom',
            align: 'start',
            className: b(
              'popover radix-side-bottom:animate-slideUpAndFade radix-side-left:animate-slideRightAndFade radix-side-right:animate-slideLeftAndFade radix-side-top:animate-slideDownAndFade overflow-hidden rounded-lg shadow-lg',
              'border border-gray-200 bg-white dark:border-gray-600 dark:bg-gray-700 dark:text-white',
              'flex min-w-[200px] max-w-xs flex-wrap',
            ),
            children: e,
          }),
        }),
      ],
    });
  };
function Bm({ conversationId: e, retainView: n, shouldArchive: o, icon: a, className: i = '' }) {
  const s = D(),
    r = _t(),
    { showToast: c } = Ie(),
    { newConversation: l } = sn(),
    { refreshConversations: d } = Wo(),
    { conversationId: _ } = Kt(),
    m = P0(e),
    f = o ? 'archive' : 'unarchive',
    g = (h) => {
      h.preventDefault(),
        m.mutate(
          { conversationId: e, isArchived: o },
          {
            onSuccess: () => {
              (_ === e || _ === 'new') && (l(), r('/c/new', { replace: !0 })), d(), n();
            },
            onError: () => {
              c({ message: s(`com_ui_${f}_error`), severity: ct.ERROR, showIcon: !0 });
            },
          },
        );
    };
  return t.jsx('button', {
    type: 'button',
    className: i,
    onClick: g,
    children: t.jsx(pt, {
      delayDuration: 250,
      children: t.jsxs(ht, {
        children: [
          t.jsx(gt, {
            asChild: !0,
            children: t.jsx('span', { className: 'h-5 w-5', children: a }),
          }),
          t.jsx(ft, { side: 'top', sideOffset: 0, children: s(`com_ui_${f}`) }),
        ],
      }),
    }),
  });
}
const $m = ({
  children: e,
  isActiveConvo: n,
  isPopoverActive: o,
  setIsPopoverActive: a,
  className: i = 'absolute bottom-0 right-0 top-0',
}) => {
  const s = (r) => a(r);
  return t.jsx(Dm.Provider, {
    value: { isPopoverActive: o, setPopoverActive: s },
    children: t.jsx('div', {
      className: b(
        'peer items-center gap-1.5 rounded-r-lg from-gray-500 from-gray-900 pl-2 pr-2 dark:text-white',
        o || n ? 'flex' : 'hidden group-hover:flex',
        n
          ? 'from-gray-50 from-85% to-transparent group-hover:bg-gradient-to-l group-hover:from-gray-200 dark:from-gray-800 dark:group-hover:from-gray-800'
          : 'z-50 from-gray-200 from-gray-50 from-0% to-transparent hover:bg-gradient-to-l hover:from-gray-200 dark:from-gray-750 dark:from-gray-800 dark:hover:from-gray-800',
        o && !n ? 'from-gray-50 dark:from-gray-800' : '',
        i,
      ),
      children: e,
    }),
  });
};
function jb({ conversationId: e, share: n, setShare: o, isUpdated: a, setIsUpdated: i }) {
  const s = D(),
    [r, c] = p.useState(!1),
    { mutateAsync: l, isLoading: d } = M0(),
    _ = () => {
      if (!n) return;
      c(!0);
      const h = window.location.protocol + '//' + window.location.host + '/share/' + n.shareId;
      ds(h),
        setTimeout(() => {
          c(!1);
        }, 1500);
    },
    m = async () => {
      if (!n) return;
      const h = await l({
        shareId: n.shareId,
        conversationId: e,
        isPublic: !0,
        isVisible: !0,
        isAnonymous: !0,
      });
      h && (o(h), i(!0), _());
    },
    g = a
      ? {
          handler: () => {
            _();
          },
          label: t.jsxs(t.Fragment, {
            children: [t.jsx(Ar, { className: 'mr-2 h-4 w-4' }), s('com_ui_copy_link')],
          }),
        }
      : n != null && n.isPublic
      ? {
          handler: async () => {
            await m();
          },
          label: t.jsxs(t.Fragment, {
            children: [t.jsx(fa, { className: 'mr-2 h-4 w-4' }), s('com_ui_update_link')],
          }),
        }
      : {
          handler: m,
          label: t.jsxs(t.Fragment, {
            children: [t.jsx(fa, { className: 'mr-2 h-4 w-4' }), s('com_ui_create_link')],
          }),
        };
  return t.jsxs(Ne, {
    disabled: d || r,
    onClick: () => {
      g.handler();
    },
    className:
      'min-w-32 whitespace-nowrap bg-green-500 text-white hover:bg-green-600 dark:bg-green-600 dark:text-white dark:hover:bg-green-800',
    children: [
      r &&
        t.jsxs(t.Fragment, {
          children: [t.jsx(Ar, { className: 'mr-2 h-4 w-4' }), s('com_ui_copied')],
        }),
      !r && !d && g.label,
      !r && d && t.jsx(Oe, { className: 'h-4 w-4' }),
    ],
  });
}
function Cb({
  conversationId: e,
  title: n,
  share: o,
  setShare: a,
  setDialogOpen: i,
  isUpdated: s,
}) {
  const r = D(),
    { showToast: c } = Ie(),
    { mutate: l, isLoading: d } = E0(),
    [_, m] = p.useState(!1);
  return (
    p.useEffect(() => {
      if (d || o) return;
      l(
        { conversationId: e, title: n, isAnonymous: !0 },
        {
          onSuccess: (g) => {
            a(g), m(!g.isPublic);
          },
          onError: () => {
            c({ message: r('com_ui_share_error'), severity: ct.ERROR, showIcon: !0 }), i(!1);
          },
        },
      );
    }, []),
    t.jsx('div', {
      children: t.jsx('div', {
        className: 'h-full py-2 text-gray-400 dark:text-gray-200',
        children: d
          ? t.jsx(Oe, { className: 'm-auto h-14 animate-spin' })
          : s
          ? r(_ ? 'com_ui_share_created_message' : 'com_ui_share_updated_message')
          : o != null && o.isPublic
          ? r('com_ui_share_update_message')
          : r('com_ui_share_create_message'),
      }),
    })
  );
}
function qm({
  conversationId: e,
  title: n,
  className: o,
  appendLabel: a = !1,
  setPopoverActive: i,
}) {
  const s = D(),
    [r, c] = p.useState(null),
    [l, d] = p.useState(!1),
    [_, m] = p.useState(!1),
    f = () =>
      a
        ? t.jsxs(t.Fragment, {
            children: [t.jsx(Tr, { className: 'h-4 w-4' }), ' ', s('com_ui_share')],
          })
        : t.jsx(pt, {
            delayDuration: 250,
            children: t.jsxs(ht, {
              children: [
                t.jsx(gt, { asChild: !0, children: t.jsx('span', { children: t.jsx(Tr, {}) }) }),
                t.jsx(ft, { side: 'top', sideOffset: 0, children: s('com_ui_share') }),
              ],
            }),
          }),
    g = r && t.jsx(jb, { share: r, conversationId: e, setShare: c, isUpdated: _, setIsUpdated: m }),
    h = (v) => {
      i(v), d(v);
    };
  return t.jsxs(nt, {
    open: l,
    onOpenChange: h,
    children: [
      t.jsx(Fn, {
        asChild: !0,
        children: t.jsx('button', {
          className: b(
            'group m-1.5 flex w-full cursor-pointer items-center gap-2 rounded p-2.5 text-sm hover:bg-gray-200 focus-visible:bg-gray-200 focus-visible:outline-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-gray-600 dark:focus-visible:bg-gray-600',
            o,
          ),
          children: f(),
        }),
      }),
      t.jsx(Zt, {
        buttons: g,
        showCloseButton: !0,
        showCancelButton: !1,
        title: s('com_ui_share_link_to_chat'),
        className: 'max-w-[550px]',
        main: t.jsx(t.Fragment, {
          children: t.jsx(Cb, {
            setDialogOpen: d,
            conversationId: e,
            title: n,
            share: r,
            setShare: c,
            isUpdated: _,
          }),
        }),
      }),
    ],
  });
}
function Nb({ conversation: e, retainView: n, toggleNav: o, isLatestConvo: a }) {
  const i = Kt(),
    s = p.useMemo(() => i.conversationId, [i.conversationId]),
    r = L0(s ?? ''),
    c = Y(O.allConversationsSelector),
    { data: l } = Se(),
    { navigateWithLastTools: d } = Hs(),
    { data: _ } = bt(),
    { refreshConversations: m } = Wo(),
    { showToast: f } = Ie(),
    { conversationId: g, title: h } = e,
    v = p.useRef(null),
    [x, y] = p.useState(h),
    [k, C] = p.useState(!1),
    [j, w] = p.useState(!1),
    T = async (R) => {
      if (R.button === 0 && (R.ctrlKey || R.metaKey)) {
        o();
        return;
      }
      R.preventDefault(), s !== g && (o(), (document.title = h), d(e));
    },
    S = (R) => {
      R.preventDefault(),
        y(h),
        C(!0),
        setTimeout(() => {
          v.current && v.current.focus();
        }, 25);
    },
    I = (R) => {
      R.preventDefault(),
        C(!1),
        x !== h &&
          r.mutate(
            { conversationId: g, title: x },
            {
              onSuccess: () => m(),
              onError: () => {
                y(h),
                  f({ message: 'Failed to rename conversation', severity: ct.ERROR, showIcon: !0 });
              },
            },
          );
    },
    P = (R) => {
      R.key === 'Escape' ? (y(h), C(!1)) : R.key === 'Enter' && I(R);
    },
    F = s === g || (a && s === 'new' && c[0] && c[0] !== 'new');
  return t.jsxs('div', {
    className: b(
      'hover:bg-token-sidebar-surface-secondary group relative rounded-lg active:opacity-90',
    ),
    children: [
      k
        ? t.jsx('div', {
            className:
              'absolute inset-0 z-50 flex w-full items-center rounded-lg bg-gray-200 p-1.5 dark:bg-gray-700',
            children: t.jsx('input', {
              ref: v,
              type: 'text',
              className:
                'w-full rounded border border-blue-500 bg-transparent p-0.5 text-sm leading-tight outline-none',
              value: x,
              onChange: (R) => y(R.target.value),
              onBlur: I,
              onKeyDown: P,
            }),
          })
        : t.jsxs($m, {
            isActiveConvo: F,
            isPopoverActive: j,
            setIsPopoverActive: w,
            children: [
              t.jsxs(Fm, {
                children: [
                  _ &&
                    _.sharedLinksEnabled &&
                    t.jsx(qm, {
                      conversationId: g,
                      title: h,
                      appendLabel: !0,
                      className: 'mb-[3.5px]',
                      setPopoverActive: w,
                    }),
                  t.jsx(yb, {
                    renaming: k,
                    onRename: I,
                    renameHandler: S,
                    appendLabel: !0,
                    className: 'mb-[3.5px]',
                  }),
                  t.jsx(Om, {
                    conversationId: g,
                    retainView: n,
                    renaming: k,
                    title: h,
                    appendLabel: !0,
                    className:
                      'group m-1.5 mt-[3.5px] flex w-full cursor-pointer items-center gap-2 rounded p-2.5 text-sm hover:bg-gray-200 focus-visible:bg-gray-200 focus-visible:outline-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-gray-600 dark:focus-visible:bg-gray-600',
                  }),
                ],
              }),
              t.jsx(Bm, {
                className: 'z-50 hover:text-black dark:hover:text-white',
                conversationId: g,
                retainView: n,
                shouldArchive: !0,
                icon: t.jsx(Fx, { className: 'hover:text-gray-400' }),
              }),
            ],
          }),
      t.jsxs('a', {
        href: `/c/${g}`,
        'data-testid': 'convo-item',
        onClick: T,
        className: b(
          F || j
            ? 'group relative mt-2 flex cursor-pointer items-center gap-2 break-all rounded-lg bg-gray-200 px-2 py-2 active:opacity-50 dark:bg-gray-700'
            : 'group relative mt-2 flex grow cursor-pointer items-center gap-2 overflow-hidden whitespace-nowrap break-all rounded-lg rounded-lg px-2 py-2 hover:bg-gray-200 active:opacity-50 dark:hover:bg-gray-700',
          !F && !k ? 'peer-hover:bg-gray-200 dark:peer-hover:bg-gray-800' : '',
        ),
        title: h,
        children: [
          t.jsx(zo, { conversation: e, endpointsConfig: l, size: 20, context: 'menu-item' }),
          !k &&
            t.jsx('div', {
              className: 'relative line-clamp-1 max-h-5 flex-1 grow overflow-hidden',
              children: h,
            }),
          F
            ? t.jsx('div', {
                className: b(
                  'absolute bottom-0 right-0 top-0 w-20 rounded-r-lg bg-gradient-to-l',
                  k ? '' : 'from-gray-200 from-60% to-transparent dark:from-gray-700',
                ),
              })
            : t.jsx('div', {
                className:
                  'absolute bottom-0 right-0 top-0 w-20 rounded-r-lg bg-gradient-to-l from-gray-50 from-0% to-transparent group-hover:from-gray-200 group-hover:from-60% dark:from-[#181818] dark:group-hover:from-gray-700',
              }),
        ],
      }),
    ],
  });
}
const Sb = ({ conversations: e, moveToTop: n, toggleNav: o }) => {
    const a = D(),
      i = p.useMemo(() => sg(e), [e]),
      s = p.useMemo(() => {
        var r;
        return (r = e.find((c) => c && c.updatedAt && yl(bl(c.updatedAt)))) == null
          ? void 0
          : r.conversationId;
      }, [e]);
    return t.jsx('div', {
      className: 'text-token-text-primary flex flex-col gap-2 pb-2 text-sm',
      children: t.jsx('div', {
        children: t.jsx('span', {
          children: i.map(([r, c]) =>
            t.jsxs(
              'div',
              {
                children: [
                  t.jsx('div', {
                    style: {
                      color: '#aaa',
                      fontSize: '0.7rem',
                      marginTop: '20px',
                      marginBottom: '5px',
                      paddingLeft: '10px',
                    },
                    children: a(r) || r,
                  }),
                  c.map((l, d) =>
                    t.jsx(
                      Nb,
                      {
                        isLatestConvo: l.conversationId === s,
                        conversation: l,
                        retainView: n,
                        toggleNav: o,
                      },
                      `${r}-${l.conversationId}-${d}`,
                    ),
                  ),
                  t.jsx('div', { style: { marginTop: '5px', marginBottom: '5px' } }),
                ],
              },
              r,
            ),
          ),
        }),
      }),
    });
  },
  Ab = p.memo(Sb);
function Tb({ index: e, message: n, isLast: o }) {
  var _;
  const a = D(),
    i = Y(O.playbackRate),
    { toggleSpeech: s, isSpeaking: r, isLoading: c, audioRef: l } = Y1(n, o, e),
    d = (m) => (c ? t.jsx(Oe, { size: m }) : r ? t.jsx(iv, { size: m }) : t.jsx(av, { size: m }));
  return (
    p.useEffect(() => {
      const m = document.getElementById(`audio-${n.messageId}`);
      m && i && i > 0 && m && m.playbackRate !== i && (m.playbackRate = i);
    }, [l, r, i, n.messageId]),
    t.jsxs(t.Fragment, {
      children: [
        t.jsx('button', {
          className:
            'hover-button rounded-md p-1 pl-0 text-gray-400 hover:text-gray-950 dark:text-gray-400/70 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:group-hover:visible md:group-[.final-completion]:visible',
          onClickCapture: () => {
            l.current && (l.current.muted = !1), s();
          },
          type: 'button',
          title: a(r ? 'com_ui_stop' : 'com_ui_read_aloud'),
          children: d('19'),
        }),
        t.jsx('audio', {
          ref: l,
          controls: !0,
          controlsList: 'nodownload nofullscreen noremoteplayback',
          style: {
            position: 'absolute',
            overflow: 'hidden',
            display: 'none',
            height: '0px',
            width: '0px',
          },
          src: ((_ = l.current) == null ? void 0 : _.src) || void 0,
          id: `audio-${n.messageId}`,
          muted: !0,
          autoPlay: !0,
        }),
      ],
    })
  );
}
function Um({
  index: e,
  isEditing: n,
  enterEdit: o,
  copyToClipboard: a,
  conversation: i,
  isSubmitting: s,
  message: r,
  regenerate: c,
  handleContinue: l,
  latestMessage: d,
  isLast: _,
}) {
  const m = D(),
    { endpoint: f, endpointType: g } = i ?? {},
    h = g ?? f,
    [v, x] = p.useState(!1),
    [y] = W(O.TextToSpeech),
    {
      hideEditButton: k,
      regenerateEnabled: C,
      continueSupported: j,
      forkingSupported: w,
      isEditableEndpoint: T,
    } = sx({ isEditing: n, isSubmitting: s, message: r, endpoint: h ?? '', latestMessage: d });
  if (!i) return null;
  const { isCreatedByUser: S } = r,
    I = () => {
      if (n) return o(!0);
      o();
    };
  return t.jsxs('div', {
    className: 'visible mt-0 flex justify-center gap-1 self-end text-gray-400 lg:justify-start',
    children: [
      y && t.jsx(Tb, { index: e, message: r, isLast: _ }),
      T &&
        t.jsx('button', {
          className: b(
            'hover-button rounded-md p-1 text-gray-400 hover:text-gray-900 dark:text-gray-400/70 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:group-hover:visible md:group-[.final-completion]:visible',
            S ? '' : 'active',
            k ? 'opacity-0' : '',
            n ? 'active text-gray-700 dark:text-gray-200' : '',
            _ ? '' : 'md:opacity-0 md:group-hover:opacity-100',
          ),
          onClick: I,
          type: 'button',
          title: m('com_ui_edit'),
          disabled: k,
          children: t.jsx(Ia, { size: '19' }),
        }),
      t.jsx('button', {
        className: b(
          'ml-0 flex items-center gap-1.5 rounded-md p-1 text-xs hover:text-gray-900 dark:text-gray-400/70 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:group-hover:visible md:group-[.final-completion]:visible',
          s && S ? 'md:opacity-0 md:group-hover:opacity-100' : '',
          _ ? '' : 'md:opacity-0 md:group-hover:opacity-100',
        ),
        onClick: () => a(x),
        type: 'button',
        title: m(v ? 'com_ui_copied_to_clipboard' : 'com_ui_copy_to_clipboard'),
        children: v ? t.jsx(mo, { className: 'h-[18px] w-[18px]' }) : t.jsx(tr, { size: '19' }),
      }),
      C
        ? t.jsx('button', {
            className: b(
              'hover-button active rounded-md p-1 text-gray-400 hover:text-gray-900 dark:text-gray-400/70 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:invisible md:group-hover:visible md:group-[.final-completion]:visible',
              _ ? '' : 'md:opacity-0 md:group-hover:opacity-100',
            ),
            onClick: c,
            type: 'button',
            title: m('com_ui_regenerate'),
            children: t.jsx(Vx, {
              className:
                'hover:text-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400',
              size: '19',
            }),
          })
        : null,
      t.jsx(bb, {
        isLast: _,
        messageId: r.messageId,
        conversationId: i.conversationId,
        forkingSupported: w,
        latestMessage: d,
      }),
      j
        ? t.jsx('button', {
            className: b(
              'hover-button active rounded-md p-1 hover:bg-gray-200 hover:text-gray-700 dark:text-gray-400/70 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400 md:invisible md:group-hover:visible ',
              _ ? '' : 'md:opacity-0 md:group-hover:opacity-100',
            ),
            onClick: l,
            type: 'button',
            title: m('com_ui_continue'),
            children: t.jsx(Gx, {
              className:
                'h-4 w-4 hover:text-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400',
            }),
          })
        : null,
    ],
  });
}
function Ib(e) {
  const n = Y(O.UsernameDisplay),
    { user: o } = Re(),
    a = D(),
    {
      ask: i,
      edit: s,
      index: r,
      isLast: c,
      enterEdit: l,
      handleScroll: d,
      conversation: _,
      isSubmitting: m,
      latestMessage: f,
      handleContinue: g,
      copyToClipboard: h,
      regenerateMessage: v,
    } = Pd(e),
    {
      message: x,
      siblingIdx: y,
      siblingCount: k,
      setSiblingIdx: C,
      currentEditId: j,
      setCurrentEditId: w,
    } = e;
  if (!x) return null;
  const {
    text: T,
    children: S,
    messageId: I = null,
    isCreatedByUser: P,
    error: F,
    unfinished: R,
  } = x ?? {};
  let E = '';
  return (
    P
      ? (E = n
          ? (o == null ? void 0 : o.name) || (o == null ? void 0 : o.username)
          : a('com_user_message'))
      : (E = x.sender),
    t.jsxs(t.Fragment, {
      children: [
        t.jsx('div', {
          className:
            'text-token-text-primary w-full border-0 bg-transparent dark:border-0 dark:bg-transparent',
          onWheel: d,
          onTouchMove: d,
          children: t.jsx('div', {
            className: 'm-auto justify-center p-4 py-2 text-base md:gap-6 ',
            children: t.jsxs('div', {
              className:
                'final-completion group mx-auto flex flex-1 gap-3 text-base md:max-w-3xl md:px-5 lg:max-w-[40rem] lg:px-1 xl:max-w-[48rem] xl:px-5',
              children: [
                t.jsx('div', {
                  className: 'relative flex flex-shrink-0 flex-col items-end',
                  children: t.jsx('div', {
                    children: t.jsx('div', {
                      className: 'pt-0.5',
                      children: t.jsx('div', {
                        className:
                          'flex h-6 w-6 items-center justify-center overflow-hidden rounded-full',
                        children: t.jsx(mr, { message: x, conversation: _ }),
                      }),
                    }),
                  }),
                }),
                t.jsxs('div', {
                  className: b('relative flex w-11/12 flex-col', P ? '' : 'agent-turn'),
                  children: [
                    t.jsx('div', { className: 'select-none font-semibold', children: E }),
                    t.jsx('div', {
                      className: 'flex-col gap-1 md:gap-3',
                      children: t.jsxs('div', {
                        className: 'flex max-w-full flex-grow flex-col gap-0',
                        children: [
                          (x == null ? void 0 : x.plugin) &&
                            t.jsx(ir, { plugin: x == null ? void 0 : x.plugin }),
                          t.jsx(Im, {
                            ask: i,
                            edit: s,
                            isLast: c,
                            text: T ?? '',
                            message: x,
                            enterEdit: l,
                            error: !!F,
                            isSubmitting: m,
                            unfinished: R ?? !1,
                            isCreatedByUser: P ?? !0,
                            siblingIdx: y ?? 0,
                            setSiblingIdx: C ?? (() => {}),
                          }),
                        ],
                      }),
                    }),
                    c && m
                      ? null
                      : t.jsxs(ci, {
                          classes: 'text-xs',
                          children: [
                            t.jsx(dr, { siblingIdx: y, siblingCount: k, setSiblingIdx: C }),
                            t.jsx(Um, {
                              index: r,
                              isEditing: s,
                              message: x,
                              enterEdit: l,
                              isSubmitting: m,
                              conversation: _ ?? null,
                              regenerate: () => v(),
                              copyToClipboard: h,
                              handleContinue: g,
                              latestMessage: f,
                              isLast: c,
                            }),
                          ],
                        }),
                  ],
                }),
              ],
            }),
          }),
        }),
        t.jsx(
          ur,
          {
            messageId: I,
            conversation: _,
            messagesTree: S ?? [],
            currentEditId: j,
            setCurrentEditId: w,
          },
          I,
        ),
      ],
    })
  );
}
const zb = ({ error: e, unfinished: n, isSubmitting: o, isLast: a, content: i, ...s }) => {
  if (!e) {
    const { message: r } = s,
      { messageId: c } = r;
    return t.jsx(t.Fragment, {
      children: i
        .filter((l) => l)
        .map((l, d) => {
          const _ = d === i.length - 1 && a;
          return t.jsx(
            Pm,
            { showCursor: _ && o, isSubmitting: o, part: l, ...s },
            `display-${c}-${d}`,
          );
        }),
    });
  }
};
function Lb(e) {
  const {
      message: n,
      siblingIdx: o,
      siblingCount: a,
      setSiblingIdx: i,
      currentEditId: s,
      setCurrentEditId: r,
    } = e,
    {
      ask: c,
      edit: l,
      index: d,
      isLast: _,
      enterEdit: m,
      assistant: f,
      handleScroll: g,
      conversation: h,
      isSubmitting: v,
      latestMessage: x,
      handleContinue: y,
      copyToClipboard: k,
      regenerateMessage: C,
    } = Pd(e),
    {
      content: j,
      children: w,
      messageId: T = null,
      isCreatedByUser: S,
      error: I,
      unfinished: P,
    } = n ?? {};
  return n
    ? t.jsxs(t.Fragment, {
        children: [
          t.jsx('div', {
            className:
              'text-token-text-primary w-full border-0 bg-transparent dark:border-0 dark:bg-transparent',
            onWheel: g,
            onTouchMove: g,
            children: t.jsx('div', {
              className: 'm-auto justify-center p-4 py-2 text-base md:gap-6 ',
              children: t.jsxs('div', {
                className:
                  'group mx-auto flex flex-1 gap-3 text-base md:max-w-3xl md:px-5 lg:max-w-[40rem] lg:px-1 xl:max-w-[48rem] xl:px-5',
                children: [
                  t.jsx('div', {
                    className: 'relative flex flex-shrink-0 flex-col items-end',
                    children: t.jsx('div', {
                      children: t.jsx('div', {
                        className: 'pt-0.5',
                        children: t.jsx('div', {
                          className:
                            'shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full',
                          children: t.jsx(mr, { message: n, conversation: h, assistant: f }),
                        }),
                      }),
                    }),
                  }),
                  t.jsxs('div', {
                    className: b('relative flex w-full flex-col', S ? '' : 'agent-turn'),
                    children: [
                      t.jsx('div', {
                        className: 'select-none font-semibold',
                        children: S ? 'You' : (f && (f == null ? void 0 : f.name)) ?? 'Assistant',
                      }),
                      t.jsx('div', {
                        className: 'flex-col gap-1 md:gap-3',
                        children: t.jsx('div', {
                          className: 'flex max-w-full flex-grow flex-col gap-0',
                          children: t.jsx(zb, {
                            ask: c,
                            edit: l,
                            isLast: _,
                            content: j ?? [],
                            message: n,
                            messageId: T,
                            enterEdit: m,
                            error: !!I,
                            isSubmitting: v,
                            unfinished: P ?? !1,
                            isCreatedByUser: S ?? !0,
                            siblingIdx: o ?? 0,
                            setSiblingIdx: i ?? (() => {}),
                          }),
                        }),
                      }),
                      _ && v
                        ? null
                        : t.jsxs(ci, {
                            classes: 'text-xs',
                            children: [
                              t.jsx(dr, { siblingIdx: o, siblingCount: a, setSiblingIdx: i }),
                              t.jsx(Um, {
                                index: d,
                                isEditing: l,
                                message: n,
                                enterEdit: m,
                                isSubmitting: v,
                                conversation: h ?? null,
                                regenerate: () => C(),
                                copyToClipboard: k,
                                handleContinue: y,
                                latestMessage: x,
                                isLast: _,
                              }),
                            ],
                          }),
                    ],
                  }),
                ],
              }),
            }),
          }),
          t.jsx(
            ur,
            {
              messageId: T,
              conversation: h,
              messagesTree: w ?? [],
              currentEditId: s,
              setCurrentEditId: r,
            },
            T,
          ),
        ],
      })
    : null;
}
function ur({ messageId: e, messagesTree: n, currentEditId: o, setCurrentEditId: a }) {
  const [i, s] = W(O.messagesSiblingIdxFamily(e)),
    r = (l) => {
      s(((n == null ? void 0 : n.length) ?? 0) - l - 1);
    };
  if (
    (p.useEffect(() => {
      s(0);
    }, [n == null ? void 0 : n.length]),
    p.useEffect(() => {
      n != null && n.length && i >= (n == null ? void 0 : n.length) && s(0);
    }, [i, n == null ? void 0 : n.length, s]),
    !(n && n != null && n.length))
  )
    return null;
  const c = n[n.length - i - 1];
  return c
    ? c.content
      ? t.jsx(
          Lb,
          {
            message: c,
            currentEditId: o,
            setCurrentEditId: a,
            siblingIdx: n.length - i - 1,
            siblingCount: n.length,
            setSiblingIdx: r,
          },
          c.messageId,
        )
      : t.jsx(
          Ib,
          {
            message: c,
            currentEditId: o,
            setCurrentEditId: a,
            siblingIdx: n.length - i - 1,
            siblingCount: n.length,
            setSiblingIdx: r,
          },
          c.messageId,
        )
    : null;
}
function Pb({ messagesTree: e, Header: n }) {
  const { screenshotTargetRef: o } = Sd(),
    [a, i] = p.useState(-1),
    {
      conversation: s,
      scrollableRef: r,
      messagesEndRef: c,
      showScrollButton: l,
      handleSmoothToRef: d,
      debouncedHandleScroll: _,
    } = ex(e),
    { conversationId: m } = s ?? {};
  return t.jsx('div', {
    className: 'flex-1 overflow-hidden overflow-y-auto',
    children: t.jsxs('div', {
      className: 'dark:gpt-dark-gray relative h-full',
      children: [
        t.jsx('div', {
          onScroll: _,
          ref: r,
          style: { height: '100%', overflowY: 'auto', width: '100%' },
          children: t.jsxs('div', {
            className: 'flex flex-col pb-9 text-sm dark:bg-transparent',
            children: [
              (e && (e == null ? void 0 : e.length) == 0) || e === null
                ? t.jsx('div', {
                    className:
                      'flex w-full items-center justify-center gap-1 bg-gray-50 p-3 text-sm text-gray-500 dark:border-gray-800/50 dark:bg-gray-800 dark:text-gray-300',
                    children: 'Nothing found',
                  })
                : t.jsxs(t.Fragment, {
                    children: [
                      n && n,
                      t.jsx('div', {
                        ref: o,
                        children: t.jsx(
                          ur,
                          {
                            messagesTree: e,
                            messageId: m ?? null,
                            setCurrentEditId: i,
                            currentEditId: a ?? null,
                          },
                          m,
                        ),
                      }),
                    ],
                  }),
              t.jsx('div', {
                className:
                  'dark:gpt-dark-gray group h-0 w-full flex-shrink-0 dark:border-gray-800/50',
                ref: c,
              }),
            ],
          }),
        }),
        t.jsx(rp, {
          in: l,
          timeout: 400,
          classNames: 'scroll-down',
          unmountOnExit: !1,
          children: () => l && t.jsx(vb, { scrollHandler: d }),
        }),
      ],
    }),
  });
}
function sl() {
  return t.jsxs('div', {
    className:
      'absolute inset-0 flex flex-col items-center justify-center gap-2 bg-gray-200 opacity-80 dark:bg-gray-800 dark:text-gray-200',
    children: [
      t.jsxs('svg', {
        xmlns: 'http://www.w3.org/2000/svg',
        viewBox: '0 0 132 108',
        fill: 'none',
        width: '132',
        height: '108',
        children: [
          t.jsx('g', {
            clipPath: 'url(#clip0_3605_64419)',
            children: t.jsx('path', {
              fillRule: 'evenodd',
              clipRule: 'evenodd',
              d: 'M25.2025 29.3514C10.778 33.2165 8.51524 37.1357 11.8281 49.4995L13.4846 55.6814C16.7975 68.0453 20.7166 70.308 35.1411 66.443L43.3837 64.2344C57.8082 60.3694 60.0709 56.4502 56.758 44.0864L55.1016 37.9044C51.7887 25.5406 47.8695 23.2778 33.445 27.1428L29.3237 28.2471L25.2025 29.3514ZM18.1944 42.7244C18.8572 41.5764 20.325 41.1831 21.4729 41.8459L27.3517 45.24C28.4996 45.9027 28.8929 47.3706 28.2301 48.5185L24.836 54.3972C24.1733 55.5451 22.7054 55.9384 21.5575 55.2757C20.4096 54.613 20.0163 53.1451 20.6791 51.9972L22.8732 48.1969L19.0729 46.0028C17.925 45.3401 17.5317 43.8723 18.1944 42.7244ZM29.4091 56.3843C29.066 55.104 29.8258 53.7879 31.1062 53.4449L40.3791 50.9602C41.6594 50.6172 42.9754 51.377 43.3184 52.6573C43.6615 53.9376 42.9017 55.2536 41.6214 55.5967L32.3485 58.0813C31.0682 58.4244 29.7522 57.6646 29.4091 56.3843Z',
              fill: '#AFC1FF',
            }),
          }),
          t.jsx('g', {
            clipPath: 'url(#clip1_3605_64419)',
            children: t.jsx('path', {
              fillRule: 'evenodd',
              clipRule: 'evenodd',
              d: 'M86.8124 13.4036C81.0973 11.8722 78.5673 13.2649 77.0144 19.0603L68.7322 49.97C67.1793 55.7656 68.5935 58.2151 74.4696 59.7895L97.4908 65.958C103.367 67.5326 105.816 66.1184 107.406 60.1848L115.393 30.379C115.536 29.8456 115.217 29.2959 114.681 29.16C113.478 28.8544 112.435 28.6195 111.542 28.4183C106.243 27.2253 106.22 27.2201 109.449 20.7159C109.73 20.1507 109.426 19.4638 108.816 19.3004L86.8124 13.4036ZM87.2582 28.4311C86.234 28.1567 85.1812 28.7645 84.9067 29.7888C84.6323 30.813 85.2401 31.8658 86.2644 32.1403L101.101 36.1158C102.125 36.3902 103.178 35.7824 103.453 34.7581C103.727 33.7339 103.119 32.681 102.095 32.4066L87.2582 28.4311ZM82.9189 37.2074C83.1934 36.1831 84.2462 35.5753 85.2704 35.8497L100.107 39.8252C101.131 40.0996 101.739 41.1524 101.465 42.1767C101.19 43.201 100.137 43.8088 99.1132 43.5343L84.2766 39.5589C83.2523 39.2844 82.6445 38.2316 82.9189 37.2074ZM83.2826 43.2683C82.2584 42.9939 81.2056 43.6017 80.9311 44.626C80.6567 45.6502 81.2645 46.703 82.2888 46.9775L89.7071 48.9652C90.7313 49.2396 91.7841 48.6318 92.0586 47.6076C92.333 46.5833 91.7252 45.5305 90.7009 45.256L83.2826 43.2683Z',
              fill: '#7989FF',
            }),
          }),
          t.jsx('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: 'M40.4004 71.8426C40.4004 57.2141 44.0575 53.5569 61.1242 53.5569H66.0004H70.8766C87.9432 53.5569 91.6004 57.2141 91.6004 71.8426V79.1569C91.6004 93.7855 87.9432 97.4426 70.8766 97.4426H61.1242C44.0575 97.4426 40.4004 93.7855 40.4004 79.1569V71.8426ZM78.8002 67.4995C78.8002 70.1504 76.6512 72.2995 74.0002 72.2995C71.3492 72.2995 69.2002 70.1504 69.2002 67.4995C69.2002 64.8485 71.3492 62.6995 74.0002 62.6995C76.6512 62.6995 78.8002 64.8485 78.8002 67.4995ZM60.7204 70.8597C60.2672 70.2553 59.5559 69.8997 58.8004 69.8997C58.045 69.8997 57.3337 70.2553 56.8804 70.8597L47.2804 83.6597C46.4851 84.72 46.7 86.2244 47.7604 87.0197C48.8208 87.8149 50.3251 87.6 51.1204 86.5397L58.8004 76.2997L66.4804 86.5397C66.8979 87.0962 67.5363 87.4443 68.2303 87.4936C68.9243 87.5429 69.6055 87.2887 70.0975 86.7967L74.8004 82.0938L79.5034 86.7967C80.4406 87.734 81.9602 87.734 82.8975 86.7967C83.8347 85.8595 83.8347 84.3399 82.8975 83.4026L76.4975 77.0026C75.5602 76.0653 74.0406 76.0653 73.1034 77.0026L68.6601 81.4459L60.7204 70.8597Z',
            fill: '#3C46FF',
          }),
          t.jsxs('defs', {
            children: [
              t.jsx('clipPath', {
                id: 'clip0_3605_64419',
                children: t.jsx('rect', {
                  width: '56',
                  height: '56',
                  fill: 'white',
                  transform: 'translate(0 26.9939) rotate(-15)',
                }),
              }),
              t.jsx('clipPath', {
                id: 'clip1_3605_64419',
                children: t.jsx('rect', {
                  width: '64',
                  height: '64',
                  fill: 'white',
                  transform: 'translate(69.5645 0.5) rotate(15)',
                }),
              }),
            ],
          }),
        ],
      }),
      t.jsx('h3', { children: 'Add anything' }),
      t.jsx('h4', {
        className: 'w-2/3',
        children: 'Drop any file here to add it to the conversation',
      }),
    ],
  });
}
const Eb = ({ className: e = '', ...n }) =>
    t.jsx(cp, {
      className: b('flex h-full w-full data-[panel-group-direction=vertical]:flex-col', e),
      ...n,
    }),
  rl = lp,
  Mb = ({ withHandle: e, className: n = '', ...o }) =>
    t.jsx(_p, {
      className: b(
        'bg-border focus-visible:ring-ring group relative flex w-px items-center justify-center after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90',
        n,
      ),
      ...o,
      children:
        e &&
        t.jsx('div', {
          className:
            'bg-border invisible z-10 flex h-4 w-3 items-center justify-center rounded-sm border group-hover:visible group-active:visible',
          children: t.jsx(dp, { className: 'h-2.5 w-2.5' }),
        }),
    });
function Rb({ tool: e, onAddTool: n, onRemoveTool: o, isInstalled: a }) {
  const i = D(),
    s = () => {
      a ? o() : n();
    };
  return t.jsxs('div', {
    className:
      'flex flex-col gap-4 rounded border border-black/10 bg-white p-6 dark:border-white/20 dark:bg-gray-800',
    children: [
      t.jsxs('div', {
        className: 'flex gap-4',
        children: [
          t.jsx('div', {
            className: 'h-[70px] w-[70px] shrink-0',
            children: t.jsxs('div', {
              className: 'relative h-full w-full',
              children: [
                t.jsx('img', {
                  src: e.icon,
                  alt: `${e.name} logo`,
                  className: 'h-full w-full rounded-[5px] bg-white',
                }),
                t.jsx('div', {
                  className: 'absolute inset-0 rounded-[5px] ring-1 ring-inset ring-black/10',
                }),
              ],
            }),
          }),
          t.jsxs('div', {
            className: 'flex min-w-0 flex-col items-start justify-between',
            children: [
              t.jsx('div', {
                className:
                  'mb-2 line-clamp-1 max-w-full text-lg leading-5 text-gray-700/80 dark:text-gray-50',
                children: e.name,
              }),
              a
                ? t.jsx('button', {
                    className:
                      'btn relative bg-gray-300 hover:bg-gray-400 dark:bg-gray-50 dark:hover:bg-gray-200',
                    onClick: s,
                    'aria-label': `${i('com_nav_tool_remove')} ${e.name}`,
                    children: t.jsxs('div', {
                      className: 'flex w-full items-center justify-center gap-2',
                      children: [
                        i('com_nav_tool_remove'),
                        t.jsx(d_, { className: 'flex h-4 w-4 items-center stroke-2' }),
                      ],
                    }),
                  })
                : t.jsx('button', {
                    className: 'btn btn-primary relative',
                    'aria-label': `${i('com_nav_tool_add')} ${e.name}`,
                    onClick: s,
                    children: t.jsxs('div', {
                      className: 'flex w-full items-center justify-center gap-2',
                      children: [
                        i('com_nav_tool_add'),
                        t.jsx(mp, { className: 'flex h-4 w-4 items-center stroke-2' }),
                      ],
                    }),
                  }),
            ],
          }),
        ],
      }),
      t.jsx('div', {
        className: 'line-clamp-3 h-[60px] text-sm text-gray-700/70 dark:text-gray-50/70',
        children: e.description,
      }),
    ],
  });
}
function Ob({ isOpen: e, setIsOpen: n, endpoint: o }) {
  const a = D(),
    { getValues: i, setValue: s } = Jt(),
    { data: r = [] } = Cg(o),
    {
      maxPage: c,
      setMaxPage: l,
      currentPage: d,
      setCurrentPage: _,
      itemsPerPage: m,
      searchChanged: f,
      setSearchChanged: g,
      searchValue: h,
      setSearchValue: v,
      gridRef: x,
      handleSearch: y,
      handleChangePage: k,
      error: C,
      setError: j,
      errorMessage: w,
      setErrorMessage: T,
      showPluginAuthForm: S,
      setShowPluginAuthForm: I,
      selectedPlugin: P,
      setSelectedPlugin: F,
    } = Ed(),
    R = pd(),
    E = (L) => {
      var z, B, U, V;
      j(!0),
        (B = (z = L.response) == null ? void 0 : z.data) != null &&
          B.message &&
          T((V = (U = L.response) == null ? void 0 : U.data) == null ? void 0 : V.message),
        setTimeout(() => {
          j(!1), T('');
        }, 5e3);
    },
    M = (L) => {
      const z = () => {
        const B = i('functions').slice();
        B.push(L.pluginKey), s('functions', B);
      };
      if (!L.auth) return z();
      R.mutate(L, {
        onError: (B) => {
          E(B);
        },
        onSuccess: z,
      }),
        I(!1);
    },
    A = (L) => {
      I(!1),
        R.mutate(
          { pluginKey: L, action: 'uninstall', auth: null, isAssistantTool: !0 },
          {
            onError: (z) => {
              E(z);
            },
            onSuccess: () => {
              const z = i('functions').filter((B) => B !== L);
              s('functions', z);
            },
          },
        );
    },
    q = (L) => {
      I(!1);
      const z = r == null ? void 0 : r.find((V) => V.pluginKey === L);
      F(z);
      const { authConfig: B, authenticated: U } = z ?? {};
      B && B.length > 0 && !U ? I(!0) : M({ pluginKey: L, action: 'install', auth: null });
    },
    $ = r == null ? void 0 : r.filter((L) => L.name.toLowerCase().includes(h.toLowerCase()));
  return (
    p.useEffect(() => {
      $ && (l(Math.ceil($.length / m)), f && (_(1), g(!1)));
    }, [r, m, h, $, f, l, _, g]),
    t.jsxs(Ln, {
      open: e,
      onClose: () => {
        n(!1), _(1), v('');
      },
      className: 'relative z-[102]',
      children: [
        t.jsx('div', {
          className: 'fixed inset-0 bg-gray-600/65 transition-opacity dark:bg-black/80',
        }),
        t.jsx('div', {
          className: 'fixed inset-0 flex items-center justify-center p-4',
          children: t.jsxs(Ln.Panel, {
            className:
              'relative w-full transform overflow-hidden overflow-y-auto rounded-lg bg-white text-left shadow-xl transition-all dark:bg-gray-800 max-sm:h-full sm:mx-7 sm:my-8 sm:max-w-2xl lg:max-w-5xl xl:max-w-7xl',
            style: { minHeight: '610px' },
            children: [
              t.jsxs('div', {
                className:
                  'flex items-center justify-between border-b-[1px] border-black/10 px-4 pb-4 pt-5 dark:border-white/10 sm:p-6',
                children: [
                  t.jsx('div', {
                    className: 'flex items-center',
                    children: t.jsxs('div', {
                      className: 'text-center sm:text-left',
                      children: [
                        t.jsx(Ln.Title, {
                          className:
                            'text-lg font-medium leading-6 text-gray-900 dark:text-gray-200',
                          children: a('com_nav_tool_dialog'),
                        }),
                        t.jsx(Ln.Description, {
                          className: 'text-sm text-gray-500 dark:text-gray-300',
                          children: a('com_nav_tool_dialog_description'),
                        }),
                      ],
                    }),
                  }),
                  t.jsx('div', {
                    children: t.jsx('div', {
                      className: 'sm:mt-0',
                      children: t.jsx('button', {
                        onClick: () => {
                          n(!1), _(1);
                        },
                        className: 'inline-block text-gray-500 hover:text-gray-200',
                        tabIndex: 0,
                        children: t.jsx(oo, {}),
                      }),
                    }),
                  }),
                ],
              }),
              C &&
                t.jsxs('div', {
                  className:
                    'relative m-4 rounded border border-red-400 bg-red-100 px-4 py-3 text-red-700',
                  role: 'alert',
                  children: [a('com_nav_plugin_auth_error'), ' ', w],
                }),
              S &&
                t.jsx('div', {
                  className: 'p-4 sm:p-6 sm:pt-4',
                  children: t.jsx(hm, { plugin: P, onSubmit: (L) => M(L), isAssistantTool: !0 }),
                }),
              t.jsxs('div', {
                className: 'p-4 sm:p-6 sm:pt-4',
                children: [
                  t.jsxs('div', {
                    className: 'mt-4 flex flex-col gap-4',
                    children: [
                      t.jsxs('div', {
                        className: 'flex items-center justify-center space-x-4',
                        children: [
                          t.jsx(ao, { className: 'h-6 w-6 text-gray-500' }),
                          t.jsx('input', {
                            type: 'text',
                            value: h,
                            onChange: y,
                            placeholder: a('com_nav_plugin_search'),
                            className:
                              'w-64 rounded border border-gray-300 px-2 py-1 focus:outline-none dark:border-gray-600 dark:bg-gray-800 dark:text-gray-200',
                          }),
                        ],
                      }),
                      t.jsx('div', {
                        ref: x,
                        className:
                          'grid grid-cols-1 grid-rows-2 gap-3 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4',
                        style: { minHeight: '410px' },
                        children:
                          $ &&
                          $.slice((d - 1) * m, d * m).map((L, z) =>
                            t.jsx(
                              Rb,
                              {
                                tool: L,
                                isInstalled: i('functions').includes(L.pluginKey),
                                onAddTool: () => q(L.pluginKey),
                                onRemoveTool: () => A(L.pluginKey),
                              },
                              z,
                            ),
                          ),
                      }),
                    ],
                  }),
                  t.jsx('div', {
                    className:
                      'mt-2 flex flex-col items-center gap-2 sm:flex-row sm:justify-between',
                    children:
                      c > 0
                        ? t.jsx(pm, { currentPage: d, maxPage: c, onChangePage: k })
                        : t.jsx('div', { style: { height: '21px' } }),
                  }),
                ],
              }),
            ],
          }),
        }),
      ],
    })
  );
}
function Db() {
  const e = D(),
    n = Jt(),
    { control: o, setValue: a, getValues: i } = n;
  return t.jsxs('div', {
    className: 'flex items-center',
    children: [
      t.jsx(Ge, {
        name: fe.image_vision,
        control: o,
        render: ({ field: s }) => {
          var r;
          return t.jsx(vt, {
            ...s,
            checked: s.value,
            onCheckedChange: s.onChange,
            className: 'relative float-left  mr-2 inline-flex h-4 w-4 cursor-pointer',
            value: (r = s == null ? void 0 : s.value) == null ? void 0 : r.toString(),
          });
        },
      }),
      t.jsx('label', {
        className: 'form-check-label text-token-text-primary w-full cursor-pointer',
        htmlFor: fe.image_vision,
        onClick: () => a(fe.image_vision, !i(fe.image_vision), { shouldDirty: !0 }),
        children: t.jsxs('div', {
          className: 'flex items-center',
          children: [e('com_assistants_image_vision'), t.jsx(Qd, {})],
        }),
      }),
    ],
  });
}
function Fb({ version: e, retrievalModels: n }) {
  const o = D(),
    a = Jt(),
    { control: i, setValue: s, getValues: r } = a,
    c = fn({ control: i, name: 'model' }),
    l = fn({ control: i, name: 'assistant' });
  p.useMemo(() => {
    var _;
    return typeof l == 'string' ? [] : (_ = l.tool_resources) == null ? void 0 : _.file_search;
  }, [l]);
  const d = p.useMemo(() => !n.has(c), [c, n]);
  return (
    p.useEffect(() => {
      c && d && s(fe.retrieval, !1);
    }, [c, s, d]),
    t.jsxs(t.Fragment, {
      children: [
        t.jsxs('div', {
          className: 'flex items-center',
          children: [
            t.jsx(Ge, {
              name: fe.retrieval,
              control: i,
              render: ({ field: _ }) => {
                var m;
                return t.jsx(vt, {
                  ..._,
                  checked: _.value,
                  disabled: d,
                  onCheckedChange: _.onChange,
                  className: 'relative float-left mr-2 inline-flex h-4 w-4 cursor-pointer',
                  value: (m = _ == null ? void 0 : _.value) == null ? void 0 : m.toString(),
                });
              },
            }),
            t.jsxs(ie, {
              openDelay: 50,
              children: [
                t.jsx(oe, {
                  asChild: !0,
                  children: t.jsx('label', {
                    className: b(
                      'form-check-label text-token-text-primary w-full select-none',
                      d ? 'cursor-no-drop opacity-50' : 'cursor-pointer',
                    ),
                    htmlFor: fe.retrieval,
                    onClick: () =>
                      n.has(c) && s(fe.retrieval, !r(fe.retrieval), { shouldDirty: !0 }),
                    children:
                      e == 1 ? o('com_assistants_retrieval') : o('com_assistants_file_search'),
                  }),
                }),
                t.jsx(on, {
                  side: ce.Top,
                  disabled: !d,
                  description: 'com_assistants_non_retrieval_model',
                  langCode: !0,
                  sideOffset: 20,
                }),
              ],
            }),
          ],
        }),
        e == 2 &&
          t.jsx('div', {
            className: 'text-token-text-tertiary rounded-lg text-xs',
            children: o('com_assistants_file_search_info'),
          }),
      ],
    })
  );
}
const pr = ({ imageBase64: e, url: n, progress: o = 1, className: a = '', source: i }) => {
    let s = {
      backgroundSize: 'cover',
      backgroundPosition: 'center',
      backgroundRepeat: 'no-repeat',
    };
    if (
      (e
        ? (s = { ...s, backgroundImage: `url(${e})` })
        : n && (s = { ...s, backgroundImage: `url(${n})` }),
      !s.backgroundImage)
    )
      return null;
    const c = 2 * Math.PI * 55,
      l = c - o * c,
      d = { transition: 'stroke-dashoffset 0.3s linear' };
    return t.jsxs('div', {
      className: b('h-14 w-14', a),
      children: [
        t.jsx('button', {
          type: 'button',
          'aria-haspopup': 'dialog',
          'aria-expanded': 'false',
          className: 'h-full w-full',
          style: s,
        }),
        o < 1 && t.jsx(xm, { circumference: c, offset: l, circleCSSProperties: d }),
        t.jsx(ym, { source: i }),
      ],
    });
  },
  Bb = ({ imageBase64: e, url: n, onDelete: o, progress: a = 1, source: i = ue.local }) =>
    t.jsxs('div', {
      className: 'group relative inline-block text-sm text-black/70 dark:text-white/90',
      children: [
        t.jsx('div', {
          className:
            'relative overflow-hidden rounded-xl border border-gray-200 dark:border-gray-600',
          children: t.jsx(pr, { source: i, imageBase64: e, url: n, progress: a }),
        }),
        t.jsx(km, { onRemove: o }),
      ],
    });
function La({
  files: e,
  setFiles: n,
  setFilesLoading: o,
  assistant_id: a,
  tool_resource: i,
  fileFilter: s,
  Wrapper: r,
}) {
  const c = Array.from(e.values()).filter((m) => (s ? s(m) : !0)),
    { mutateAsync: l } = Wa({
      onMutate: async () => console.log('Deleting files: assistant_id, tool_resource', a, i),
      onSuccess: () => {
        console.log('Files deleted');
      },
      onError: (m) => {
        console.log('Error deleting files:', m);
      },
    }),
    { deleteFile: d } = Ad({ mutateAsync: l, assistant_id: a, tool_resource: i });
  if (
    (p.useEffect(() => {
      c &&
        c.length !== 0 &&
        (c.some((m) => m.progress < 1) || (c.every((m) => m.progress === 1) && o(!1)));
    }, [c]),
    c.length === 0)
  )
    return null;
  const _ = () =>
    t.jsx(t.Fragment, {
      children: c
        .reduce(
          (m, f) => (m.map.has(f.file_id) || (m.map.set(f.file_id, !0), m.uniqueFiles.push(f)), m),
          { map: new Map(), uniqueFiles: [] },
        )
        .uniqueFiles.map((m, f) => {
          var h;
          const g = () => d({ file: m, setFiles: n });
          return (h = m.type) != null && h.startsWith('image')
            ? t.jsx(
                Bb,
                {
                  url: m.preview || m.filepath,
                  onDelete: g,
                  progress: m.progress,
                  source: m.source,
                },
                f,
              )
            : t.jsx(wm, { file: m, onDelete: g }, f);
        }),
    });
  return r ? t.jsx(r, { children: _() }) : _();
}
const cl = xa.code_interpreter;
function $b({ endpoint: e, assistant_id: n, files: o }) {
  const a = D(),
    { setFilesLoading: i } = me(),
    s = p.useRef(null),
    [r, c] = p.useState(new Map()),
    { data: l = Lt } = wn({ select: (f) => yn(f) }),
    { handleFileChange: d } = Jo({
      overrideEndpoint: e,
      additionalMetadata: { assistant_id: n, tool_resource: cl },
      fileSetter: c,
    });
  p.useEffect(() => {
    o && c(new Map(o));
  }, [o]);
  const _ = l.endpoints[e];
  if (_ != null && _.disabled) return null;
  const m = () => {
    var f;
    s.current && (s.current.value = ''), (f = s.current) == null || f.click();
  };
  return t.jsx('div', {
    className: 'mb-2',
    children: t.jsxs('div', {
      className: 'flex flex-col gap-4',
      children: [
        t.jsx('div', {
          className: 'text-token-text-tertiary rounded-lg text-xs',
          children: a('com_assistants_code_interpreter_files'),
        }),
        t.jsx(La, {
          files: r,
          setFiles: c,
          assistant_id: n,
          tool_resource: cl,
          setFilesLoading: i,
          Wrapper: ({ children: f }) =>
            t.jsx('div', { className: 'flex flex-wrap gap-2', children: f }),
        }),
        t.jsx('div', {
          children: t.jsx('button', {
            type: 'button',
            disabled: !n,
            className:
              'btn btn-neutral border-token-border-light relative h-8 rounded-lg font-medium',
            onClick: m,
            children: t.jsxs('div', {
              className: 'flex w-full items-center justify-center gap-2',
              children: [
                t.jsx('input', {
                  multiple: !0,
                  type: 'file',
                  style: { display: 'none' },
                  tabIndex: -1,
                  ref: s,
                  disabled: !n,
                  onChange: d,
                }),
                a('com_ui_upload_files'),
              ],
            }),
          }),
        }),
      ],
    }),
  });
}
function qb({ version: e, endpoint: n }) {
  const o = D(),
    a = Jt(),
    { control: i, setValue: s, getValues: r } = a,
    c = fn({ control: i, name: 'assistant' }),
    l = fn({ control: i, name: 'id' }),
    d = p.useMemo(() => (typeof c == 'string' ? [] : c.code_files), [c]);
  return t.jsxs(t.Fragment, {
    children: [
      t.jsxs('div', {
        className: 'flex items-center',
        children: [
          t.jsx(Ge, {
            name: fe.code_interpreter,
            control: i,
            render: ({ field: _ }) => {
              var m;
              return t.jsx(vt, {
                ..._,
                checked: _.value,
                onCheckedChange: _.onChange,
                className: 'relative float-left  mr-2 inline-flex h-4 w-4 cursor-pointer',
                value: (m = _ == null ? void 0 : _.value) == null ? void 0 : m.toString(),
              });
            },
          }),
          t.jsx('label', {
            className: 'form-check-label text-token-text-primary w-full cursor-pointer',
            htmlFor: fe.code_interpreter,
            onClick: () => s(fe.code_interpreter, !r(fe.code_interpreter), { shouldDirty: !0 }),
            children: t.jsxs('div', {
              className: 'flex select-none items-center',
              children: [o('com_assistants_code_interpreter'), t.jsx(Qd, {})],
            }),
          }),
        ],
      }),
      e == 2 && t.jsx($b, { assistant_id: l, version: e, endpoint: n, files: d }),
    ],
  });
}
function Ub({ version: e, endpoint: n, codeEnabled: o, retrievalEnabled: a, assistantsConfig: i }) {
  const s = D(),
    r = p.useMemo(() => new Set((i == null ? void 0 : i.retrievalModels) ?? []), [i]),
    c = p.useMemo(() => {
      var l;
      return (l = i == null ? void 0 : i.capabilities) == null
        ? void 0
        : l.includes(fe.image_vision);
    }, [i]);
  return t.jsxs('div', {
    className: 'mb-6',
    children: [
      t.jsx('div', {
        className: 'mb-1.5 flex items-center',
        children: t.jsx('span', {
          children: t.jsx('label', {
            className: 'text-token-text-primary block font-medium',
            children: s('com_assistants_capabilities'),
          }),
        }),
      }),
      t.jsxs('div', {
        className: 'flex flex-col items-start gap-2',
        children: [
          o && t.jsx(qb, { endpoint: n, version: e }),
          c && e == 1 && t.jsx(Db, {}),
          a && t.jsx(Fb, { endpoint: n, version: e, retrievalModels: r }),
        ],
      }),
    ],
  });
}
function Vb() {
  return t.jsx('div', {
    className:
      'border-token-border-medium flex h-full w-full items-center justify-center rounded-full border-2 border-dashed border-black',
    children: t.jsxs('svg', {
      stroke: 'currentColor',
      fill: 'none',
      strokeWidth: '2',
      viewBox: '0 0 24 24',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
      className: 'text-4xl',
      height: '1em',
      width: '1em',
      xmlns: 'http://www.w3.org/2000/svg',
      children: [
        t.jsx('line', { x1: '12', y1: '5', x2: '12', y2: '19' }),
        t.jsx('line', { x1: '5', y1: '12', x2: '19', y2: '12' }),
      ],
    }),
  });
}
const Gb = ({ url: e, progress: n = 1 }) => {
  const a = 2 * Math.PI * 55,
    i = a - n * a,
    s = { transition: 'stroke-dashoffset 0.3s linear' };
  return t.jsx('div', {
    children: t.jsxs('div', {
      className: 'relative h-20 w-20 overflow-hidden rounded-full',
      children: [
        t.jsx('img', {
          src: e,
          className:
            'bg-token-surface-secondary dark:bg-token-surface-tertiary h-full w-full rounded-full object-cover',
          alt: 'GPT',
          width: '80',
          height: '80',
          style: { opacity: n < 1 ? 0.4 : 1 },
        }),
        n < 1 &&
          t.jsx('div', {
            className: 'absolute inset-0 flex items-center justify-center bg-black/5 text-white',
            children: t.jsxs('svg', {
              width: '120',
              height: '120',
              viewBox: '0 0 120 120',
              className: 'h-6 w-6',
              children: [
                t.jsx('circle', {
                  className: 'origin-[50%_50%] -rotate-90 stroke-gray-400',
                  strokeWidth: '10',
                  fill: 'transparent',
                  r: '55',
                  cx: '60',
                  cy: '60',
                }),
                t.jsx('circle', {
                  className: 'origin-[50%_50%] -rotate-90 transition-[stroke-dashoffset]',
                  stroke: 'currentColor',
                  strokeWidth: '10',
                  strokeDasharray: `${a} ${a}`,
                  strokeDashoffset: i,
                  fill: 'transparent',
                  r: '55',
                  cx: '60',
                  cy: '60',
                  style: s,
                }),
              ],
            }),
          }),
      ],
    }),
  });
};
function Kb({ handleFileChange: e }) {
  const n = p.useRef(null),
    o = () => {
      var a;
      n.current && (n.current.value = ''), (a = n.current) == null || a.click();
    };
  return t.jsx(Wt, {
    children: t.jsxs(Et, {
      className:
        'flex min-w-[100px] max-w-xs flex-col rounded-xl border border-gray-400 bg-white shadow-lg dark:border-gray-700 dark:bg-gray-850 dark:text-white',
      sideOffset: 5,
      children: [
        t.jsx('div', {
          role: 'menuitem',
          className:
            'group m-1.5 flex cursor-pointer gap-2 rounded p-2.5 text-sm hover:bg-gray-100 focus:ring-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-gray-800 dark:hover:bg-white/5',
          tabIndex: -1,
          'data-orientation': 'vertical',
          onClick: o,
          children: 'Upload Photo',
        }),
        t.jsx('input', {
          accept: 'image/png,.png,image/jpeg,.jpg,.jpeg,image/gif,.gif,image/webp,.webp',
          multiple: !1,
          type: 'file',
          style: { display: 'none' },
          onChange: e,
          ref: n,
          tabIndex: -1,
        }),
      ],
    }),
  });
}
function Hb({ endpoint: e, version: n, assistant_id: o, metadata: a, createMutation: i }) {
  const s = X(),
    r = Mt(),
    [c, l] = p.useState(!1),
    [d, _] = p.useState(1),
    [m, f] = p.useState(null),
    [g, h] = p.useState(null),
    v = p.useRef(null),
    { data: x = Lt } = wn({ select: (T) => yn(T) }),
    y = D(),
    { showToast: k } = Ie(),
    C = p.useMemo(() => {
      var T;
      return ((T = r[e][o ?? '']) == null ? void 0 : T.model) ?? '';
    }, [r, e, o]),
    { mutate: j } = Z0({
      onMutate: () => {
        _(0.4);
      },
      onSuccess: (T, S) => {
        var F, R, E;
        S.postCreation
          ? v.current !== ((F = i.data) == null ? void 0 : F.id) &&
            (v.current = ((R = i.data) == null ? void 0 : R.id) ?? '')
          : k({ message: y('com_ui_upload_success') }),
          f(null),
          h((E = T.metadata) == null ? void 0 : E.avatar);
        const I = s.getQueryData([G.assistants, e, ut]);
        if (!(I != null && I.data) || !I) return;
        const P = I.data.map((M) => (M.id === o ? { ...M, ...T } : M)) ?? [];
        s.setQueryData([G.assistants, e, ut], { ...I, data: P }), _(1);
      },
      onError: (T) => {
        console.error('Error:', T),
          f(null),
          h(null),
          k({ message: y('com_ui_upload_error'), status: 'error' }),
          _(1);
      },
    });
  p.useEffect(() => {
    if (m) {
      const T = new FileReader();
      (T.onloadend = () => {
        h(T.result);
      }),
        T.readAsDataURL(m);
    }
  }, [m]),
    p.useEffect(() => {
      h((a == null ? void 0 : a.avatar) ?? null);
    }, [a]),
    p.useEffect(() => {
      var S, I, P;
      const T = !!(i.isSuccess && m && g && g != null && g.includes('base64'));
      if (!(T && v.current === ((S = i.data) == null ? void 0 : S.id)) && T && i.data.id) {
        console.log('[AssistantAvatar] Uploading Avatar after Assistant Creation');
        const F = new FormData();
        F.append('file', m, m.name),
          F.append('assistant_id', i.data.id),
          typeof ((I = i.data) == null ? void 0 : I.metadata) == 'object' &&
            F.append('metadata', JSON.stringify((P = i.data) == null ? void 0 : P.metadata)),
          j({
            assistant_id: i.data.id,
            model: C,
            postCreation: !0,
            formData: F,
            endpoint: e,
            version: n,
          });
      }
    }, [i.data, i.isSuccess, m, g, j, C, e, n]);
  const w = (T) => {
    var I;
    const S = (I = T.target.files) == null ? void 0 : I[0];
    if (x.avatarSizeLimit && S && S.size <= x.avatarSizeLimit) {
      if (!S) {
        console.error('No file selected');
        return;
      }
      if ((f(S), l(!1), !o)) {
        console.log('[AssistantAvatar] No assistant_id, will wait until form submission + upload');
        return;
      }
      const P = new FormData();
      P.append('file', S, S.name),
        P.append('assistant_id', o),
        typeof a == 'object' && P.append('metadata', JSON.stringify(a)),
        j({ assistant_id: o, model: C, formData: P, endpoint: e, version: n });
    } else k({ message: y('com_ui_upload_invalid'), status: 'error' });
    l(!1);
  };
  return t.jsxs(Pt, {
    open: c,
    onOpenChange: l,
    children: [
      t.jsx('div', {
        className: 'flex w-full items-center justify-center gap-4',
        children: t.jsx(Ht, {
          asChild: !0,
          children: t.jsx('button', {
            type: 'button',
            className: 'h-20 w-20',
            children: g ? t.jsx(Gb, { url: g, progress: d }) : t.jsx(Vb, {}),
          }),
        }),
      }),
      t.jsx(Kb, { handleFileChange: w }),
    ],
  });
}
const Wb = new Set(['name', 'id', 'description', 'instructions', 'model']);
function Jb({
  reset: e,
  value: n,
  endpoint: o,
  selectedAssistant: a,
  setCurrentAssistantId: i,
  createMutation: s,
}) {
  const r = D(),
    c = Za(),
    l = p.useRef(null),
    [d] = Yo(te.LAST_MODEL, {}),
    _ = Ro(o, void 0, {
      select: (g) =>
        g.data.map((h) => {
          var k, C, j, w, T, S, I;
          const v = o === N.assistants ? ue.openai : ue.azure,
            x = {
              ...h,
              label: (h == null ? void 0 : h.name) ?? '',
              value: h.id,
              files: h != null && h.file_ids ? [] : void 0,
              code_files:
                (C =
                  (k = h == null ? void 0 : h.tool_resources) == null
                    ? void 0
                    : k.code_interpreter) != null && C.file_ids
                  ? []
                  : void 0,
            },
            y = (P, F) => {
              const R = c == null ? void 0 : c[P];
              R
                ? F == null ||
                  F.push([
                    P,
                    {
                      file_id: R.file_id,
                      type: R.type,
                      filepath: R.filepath,
                      filename: R.filename,
                      width: R.width,
                      height: R.height,
                      size: R.bytes,
                      preview: R.filepath,
                      progress: 1,
                      source: v,
                    },
                  ])
                : F == null ||
                  F.push([
                    P,
                    {
                      file_id: P,
                      type: '',
                      filename: '',
                      size: 1,
                      progress: 1,
                      filepath: o,
                      source: v,
                    },
                  ]);
            };
          return (
            x.files && h.file_ids && h.file_ids.forEach((P) => y(P, x.files)),
            x.code_files &&
              (w = (j = h.tool_resources) == null ? void 0 : j.code_interpreter) != null &&
              w.file_ids &&
              ((I =
                (S = (T = h.tool_resources) == null ? void 0 : T.code_interpreter) == null
                  ? void 0
                  : S.file_ids) == null ||
                I.forEach((P) => y(P, x.code_files))),
            x
          );
        }),
    }),
    m = p.useCallback(
      (g) => {
        var C, j, w, T, S;
        const h = (C = _.data) == null ? void 0 : C.find((I) => I.id === g);
        if ((s.reset(), !h))
          return i(void 0), e({ ...A_, model: (d == null ? void 0 : d[o]) ?? '' });
        const v = {
            ...h,
            label: (h == null ? void 0 : h.name) ?? '',
            value: (h == null ? void 0 : h.id) ?? '',
          },
          x = { [fe.code_interpreter]: !1, [fe.image_vision]: !1, [fe.retrieval]: !1 };
        (w =
          (j = h == null ? void 0 : h.tools) == null
            ? void 0
            : j.filter((I) => I.type !== 'function' || ba(I))) == null ||
          w
            .map((I) => {
              var P;
              return ((P = I == null ? void 0 : I.function) == null ? void 0 : P.name) || I.type;
            })
            .forEach((I) => {
              I === nn.file_search && (x[fe.retrieval] = !0), (x[I] = !0);
            });
        const k = {
          functions:
            ((S =
              (T = h == null ? void 0 : h.tools) == null
                ? void 0
                : T.filter((I) => I.type === 'function' && !ba(I))) == null
              ? void 0
              : S.map((I) => {
                  var P;
                  return ((P = I.function) == null ? void 0 : P.name) ?? '';
                })) ?? [],
          ...x,
          assistant: v,
          model: v.model,
        };
        Object.entries(h).forEach(([I, P]) => {
          typeof P != 'number' && typeof P != 'object' && Wb.has(I) && (k[I] = P);
        }),
          e(k),
          i(h == null ? void 0 : h.id);
      },
      [_.data, e, i, s, o, d],
    );
  p.useEffect(() => {
    let g = null;
    if (a !== l.current)
      return (
        a &&
          _.data &&
          (g = setTimeout(() => {
            (l.current = a), m(a);
          }, 5)),
        () => {
          g && clearTimeout(g);
        }
      );
  }, [a, _.data, m]);
  const f = r('com_ui_create') + ' ' + r('com_ui_assistant');
  return t.jsx(Qe, {
    value: n || f,
    setValue: m,
    availableValues: _.data ?? [{ label: 'Loading...', value: '' }],
    iconSide: 'left',
    showAbove: !1,
    showLabel: !1,
    emptyTitle: !0,
    containerClassName: 'flex-grow',
    searchClassName: 'dark:from-gray-850',
    searchPlaceholder: r('com_assistants_search_name'),
    optionsClass: 'hover:bg-gray-20/50 dark:border-gray-700',
    optionsListClass: 'rounded-lg shadow-lg dark:bg-gray-850 dark:border-gray-700 dark:last:border',
    currentValueClass: b(
      'text-md font-semibold text-gray-900 dark:text-white',
      n === '' ? 'text-gray-500' : '',
    ),
    className: b(
      'mt-1 rounded-md dark:border-gray-700 dark:bg-gray-850',
      'z-50 flex h-[40px] w-full flex-none items-center justify-center px-4 hover:cursor-pointer hover:border-green-500 focus:border-gray-400',
    ),
    renderOption: () =>
      t.jsxs('span', {
        className: 'flex items-center gap-1.5 truncate',
        children: [
          t.jsx('span', {
            className:
              'absolute inset-y-0 left-0 flex items-center pl-2 text-gray-800 dark:text-gray-100',
            children: t.jsx(h_, { className: 'w-[16px]' }),
          }),
          t.jsx('span', {
            className: b('ml-4 flex h-6 items-center gap-1 text-gray-800 dark:text-gray-100'),
            children: f,
          }),
        ],
      }),
  });
}
function Qb({ action: e, onClick: n }) {
  return t.jsx('div', {
    children: t.jsxs('div', {
      onClick: n,
      className:
        'border-token-border-medium flex w-full rounded-lg border text-sm hover:cursor-pointer',
      children: [
        t.jsx('div', {
          className: 'h-9 grow whitespace-nowrap px-3 py-2',
          style: { textOverflow: 'ellipsis', wordBreak: 'break-all', overflow: 'hidden' },
          children: e.metadata.domain,
        }),
        t.jsx('div', { className: 'w-px bg-gray-300 dark:bg-gray-600' }),
        t.jsx('button', {
          type: 'button',
          className: 'flex h-9 w-9 min-w-9 items-center justify-center rounded-lg rounded-l-none',
          children: t.jsx(ni, { className: 'icon-sm' }),
        }),
      ],
    }),
  });
}
function Zb({
  activeModel: e,
  assistant_id: n,
  setCurrentAssistantId: o,
  createMutation: a,
  endpoint: i,
}) {
  const s = D(),
    { showToast: r } = Ie(),
    { conversation: c } = me(),
    { setOption: l } = rn(),
    d = Q0({
      onSuccess: (_, m, f) => {
        var x;
        const g = f;
        if (!g) return;
        r({ message: s('com_ui_assistant_deleted'), status: 'success' }),
          (x = a.data) != null &&
            x.id &&
            (console.log('[deleteAssistant] resetting createMutation'), a.reset());
        const h = g[0];
        if (!h) return l('assistant_id')('');
        if (m.assistant_id === (c == null ? void 0 : c.assistant_id))
          return l('assistant_id')(h.id);
        const v =
          g == null ? void 0 : g.find((y) => y.id === (c == null ? void 0 : c.assistant_id));
        v && o(v.id), o(h.id);
      },
      onError: (_) => {
        console.error(_), r({ message: s('com_ui_assistant_delete_error'), status: 'error' });
      },
    });
  return n
    ? t.jsx(nt, {
        children: t.jsxs(Pt, {
          children: [
            t.jsx(Ht, {
              asChild: !0,
              children: t.jsx('button', {
                className: b(
                  'btn border-token-border-light relative h-9 rounded-lg bg-transparent font-medium hover:bg-gray-100 dark:hover:bg-gray-800',
                  tt,
                ),
                type: 'button',
                children: t.jsx('div', {
                  className: 'flex w-full items-center justify-center gap-2',
                  children: t.jsx('svg', {
                    width: '24',
                    height: '24',
                    viewBox: '0 0 24 24',
                    fill: 'none',
                    xmlns: 'http://www.w3.org/2000/svg',
                    className: 'icon-md',
                    children: t.jsx('path', {
                      fillRule: 'evenodd',
                      clipRule: 'evenodd',
                      d: 'M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z',
                      fill: 'currentColor',
                    }),
                  }),
                }),
              }),
            }),
            t.jsx('div', {
              style: {
                position: 'fixed',
                left: ' 0px',
                top: ' 0px',
                transform: 'translate(1772.8px, 49.6px)',
                minWidth: 'max-content',
                zIndex: 'auto',
              },
              dir: 'ltr',
              children: t.jsx(Et, {
                side: 'top',
                role: 'menu',
                className:
                  'bg-token-surface-primary min-w-[180px] max-w-xs rounded-lg border border-gray-100 bg-white shadow-lg dark:border-gray-900 dark:bg-gray-850',
                style: { outline: 'none', pointerEvents: 'auto' },
                sideOffset: 8,
                tabIndex: -1,
                align: 'end',
                children: t.jsx(Fn, {
                  asChild: !0,
                  children: t.jsxs(Uo, {
                    role: 'menuitem',
                    className:
                      'group m-1.5 flex w-full cursor-pointer gap-2 rounded p-2.5 text-sm text-red-500 hover:bg-black/5 focus:ring-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-white/5',
                    tabIndex: -1,
                    children: [t.jsx(or, {}), s('com_ui_delete') + ' ' + s('com_ui_assistant')],
                  }),
                }),
              }),
            }),
            t.jsx(Zt, {
              title: s('com_ui_delete') + ' ' + s('com_ui_assistant'),
              className: 'max-w-[450px]',
              main: t.jsx(t.Fragment, {
                children: t.jsx('div', {
                  className: 'flex w-full flex-col items-center gap-2',
                  children: t.jsx('div', {
                    className: 'grid w-full items-center gap-2',
                    children: t.jsx(Z, {
                      htmlFor: 'delete-assistant',
                      className: 'text-left text-sm font-medium',
                      children: s('com_ui_delete_assistant_confirm'),
                    }),
                  }),
                }),
              }),
              selection: {
                selectHandler: () => d.mutate({ assistant_id: n, model: e, endpoint: i }),
                selectClasses: 'bg-red-600 hover:bg-red-700 dark:hover:bg-red-800 text-white',
                selectText: s('com_ui_delete'),
              },
            }),
          ],
        }),
      })
    : null;
}
function Yb({ tool: e, allTools: n, assistant_id: o }) {
  const a = n.find((i) => i.pluginKey === e);
  return a
    ? t.jsx('div', {
        children: t.jsxs('div', {
          className: b(
            'border-token-border-medium flex w-full rounded-lg border text-sm hover:cursor-pointer',
            o ? '' : 'opacity-40',
          ),
          children: [
            a.icon &&
              t.jsx('div', {
                className: 'flex h-9 w-9 items-center justify-center overflow-hidden rounded-full',
                children: t.jsx('div', {
                  className:
                    'flex h-6 w-6 items-center justify-center overflow-hidden rounded-full bg-center bg-no-repeat dark:bg-white/20',
                  style: { backgroundImage: `url(${a.icon})`, backgroundSize: 'cover' },
                }),
              }),
            t.jsx('div', {
              className: 'h-9 grow px-3 py-2',
              style: { textOverflow: 'ellipsis', wordBreak: 'break-all', overflow: 'hidden' },
              children: a.name,
            }),
            t.jsx('div', { className: 'w-px bg-gray-300 dark:bg-gray-600' }),
            t.jsx('button', {
              type: 'button',
              className:
                'flex h-9 w-9 min-w-9 items-center justify-center rounded-lg rounded-l-none',
              children: t.jsx(ni, { className: 'icon-sm' }),
            }),
          ],
        }),
      })
    : null;
}
const Xb = ({ children: e }) => {
  const n = D();
  return t.jsxs('div', {
    children: [
      t.jsx('div', {
        className: 'text-token-text-tertiary mb-2 text-xs',
        children: n('com_assistants_code_interpreter_files'),
      }),
      t.jsx('div', { className: 'flex flex-wrap gap-2', children: e }),
    ],
  });
};
function e2({ endpoint: e, assistant_id: n, files: o }) {
  const a = D(),
    { setFilesLoading: i } = me(),
    s = p.useRef(null),
    [r, c] = p.useState(new Map()),
    { data: l = Lt } = wn({ select: (f) => yn(f) }),
    { handleFileChange: d } = Jo({
      overrideEndpoint: e,
      additionalMetadata: { assistant_id: n },
      fileSetter: c,
    });
  p.useEffect(() => {
    o && c(new Map(o));
  }, [o]);
  const _ = l.endpoints[e];
  if (_ != null && _.disabled) return null;
  const m = () => {
    var f;
    s.current && (s.current.value = ''), (f = s.current) == null || f.click();
  };
  return t.jsxs('div', {
    className: 'mb-6',
    children: [
      t.jsx('div', {
        className: 'mb-1.5 flex items-center',
        children: t.jsx('span', {
          children: t.jsx('label', {
            className: 'text-token-text-primary block font-medium',
            children: a(n ? 'com_assistants_knowledge' : 'com_assistants_knowledge_disabled'),
          }),
        }),
      }),
      t.jsxs('div', {
        className: 'flex flex-col gap-4',
        children: [
          t.jsx('div', {
            className: 'text-token-text-tertiary rounded-lg',
            children: n ? a('com_assistants_knowledge_info') : '',
          }),
          t.jsx(La, {
            files: r,
            setFiles: c,
            setFilesLoading: i,
            assistant_id: n,
            fileFilter: (f) => Gr.some((g) => g.test(f.type ?? '')),
            Wrapper: ({ children: f }) =>
              t.jsx('div', { className: 'flex flex-wrap gap-2', children: f }),
          }),
          t.jsx(La, {
            files: r,
            setFiles: c,
            setFilesLoading: i,
            assistant_id: n,
            fileFilter: (f) => !Gr.some((g) => g.test(f.type ?? '')),
            Wrapper: Xb,
          }),
          t.jsx('div', {
            children: t.jsx('button', {
              type: 'button',
              disabled: !n,
              className:
                'btn btn-neutral border-token-border-light relative h-8 rounded-lg font-medium',
              onClick: m,
              children: t.jsxs('div', {
                className: 'flex w-full items-center justify-center gap-2',
                children: [
                  t.jsx('input', {
                    multiple: !0,
                    type: 'file',
                    style: { display: 'none' },
                    tabIndex: -1,
                    ref: s,
                    disabled: !n,
                    onChange: d,
                  }),
                  a('com_ui_upload_files'),
                ],
              }),
            }),
          }),
        ],
      }),
    ],
  });
}
const bo = 'mb-2 block text-xs font-bold text-gray-700 dark:text-gray-400',
  ll =
    'focus:shadow-outline w-full appearance-none rounded-md border px-3 py-2 text-sm leading-tight text-gray-700 dark:text-white shadow focus:border-green-500 focus:outline-none focus:ring-0 dark:bg-gray-800 dark:border-gray-700/80';
function t2({
  setAction: e,
  endpoint: n,
  actions: o = [],
  setActivePanel: a,
  assistant_id: i,
  setCurrentAssistantId: s,
  assistantsConfig: r,
  version: c,
}) {
  const l = X(),
    d = Qt(),
    _ = Mt(),
    m = l.getQueryData([G.tools]) ?? [],
    { onSelect: f } = gd(n),
    { showToast: g } = Ie(),
    h = D(),
    v = an({ defaultValues: A_ }),
    [x, y] = p.useState(!1),
    { control: k, handleSubmit: C, reset: j } = v,
    w = fn({ control: k, name: 'assistant' }),
    T = fn({ control: k, name: 'functions' }),
    S = fn({ control: k, name: 'id' }),
    I = p.useMemo(() => {
      var L, z;
      return (z = (L = _ == null ? void 0 : _[n]) == null ? void 0 : L[S]) == null
        ? void 0
        : z.model;
    }, [_, n, S]),
    P = p.useMemo(() => {
      var L;
      return (L = r == null ? void 0 : r.capabilities) == null ? void 0 : L.includes(fe.tools);
    }, [r]),
    F = p.useMemo(() => {
      var L;
      return (L = r == null ? void 0 : r.capabilities) == null ? void 0 : L.includes(fe.actions);
    }, [r]),
    R = p.useMemo(() => {
      var L;
      return (L = r == null ? void 0 : r.capabilities) == null ? void 0 : L.includes(fe.retrieval);
    }, [r]),
    E = p.useMemo(() => {
      var L;
      return (L = r == null ? void 0 : r.capabilities) == null
        ? void 0
        : L.includes(fe.code_interpreter);
    }, [r]),
    M = J0({
      onSuccess: (L) => {
        g({ message: `${h('com_assistants_update_success')} ${L.name ?? h('com_ui_assistant')}` });
      },
      onError: (L) => {
        const z = L;
        g({
          message: `${h('com_assistants_update_error')}${
            z != null && z.message ? ` ${h('com_ui_error')}: ${z == null ? void 0 : z.message}` : ''
          }`,
          status: 'error',
        });
      },
    }),
    A = W0({
      onSuccess: (L) => {
        s(L.id),
          g({
            message: `${h('com_assistants_create_success')} ${L.name ?? h('com_ui_assistant')}`,
          });
      },
      onError: (L) => {
        const z = L;
        g({
          message: `${h('com_assistants_create_error')}${
            z != null && z.message ? ` ${h('com_ui_error')}: ${z == null ? void 0 : z.message}` : ''
          }`,
          status: 'error',
        });
      },
    }),
    q = p.useMemo(() => (typeof w == 'string' ? [] : w.files), [w]),
    $ = (L) => {
      const z = [...T].map((ne) => {
        var re, Ee;
        if (ne.includes(N_)) {
          const yt = (re = _ == null ? void 0 : _[n]) == null ? void 0 : re[S],
            Yt =
              (Ee = yt == null ? void 0 : yt.tools) == null
                ? void 0
                : Ee.find((na) => {
                    var po;
                    return ((po = na.function) == null ? void 0 : po.name) === ne;
                  });
          if (yt && Yt) return Yt;
        } else return ne;
        return ne;
      });
      console.log(L),
        L.code_interpreter && z.push({ type: nn.code_interpreter }),
        L.retrieval && z.push({ type: c == 2 ? nn.file_search : nn.retrieval }),
        L.image_vision && z.push(qi);
      const { name: B, description: U, instructions: V, model: H } = L;
      if (S) {
        M.mutate({
          assistant_id: S,
          data: { name: B, description: U, instructions: V, model: H, tools: z, endpoint: n },
        });
        return;
      }
      A.mutate({
        name: B,
        description: U,
        instructions: V,
        model: H,
        tools: z,
        endpoint: n,
        version: c,
      });
    };
  return t.jsx(Ss, {
    ...v,
    children: t.jsxs('form', {
      onSubmit: C($),
      className: 'h-auto w-full flex-shrink-0 overflow-x-hidden',
      children: [
        t.jsxs('div', {
          className: 'flex w-full flex-wrap',
          children: [
            t.jsx(Ge, {
              name: 'assistant',
              control: k,
              render: ({ field: L }) =>
                t.jsx(Jb, {
                  reset: j,
                  value: L.value,
                  endpoint: n,
                  setCurrentAssistantId: s,
                  selectedAssistant: i ?? null,
                  createMutation: A,
                }),
            }),
            S &&
              t.jsx('button', {
                className:
                  'btn btn-primary focus:shadow-outline mx-2 mt-1 h-[40px] rounded bg-green-500 px-4 py-2 font-semibold text-white hover:bg-green-400 focus:border-green-500 focus:outline-none focus:ring-0',
                type: 'button',
                disabled: !S,
                onClick: (L) => {
                  L.preventDefault(), f(S);
                },
                children: h('com_ui_select'),
              }),
          ],
        }),
        t.jsxs('div', {
          className: 'h-auto bg-white px-4 pb-8 pt-3 dark:bg-transparent',
          children: [
            t.jsxs('div', {
              className: 'mb-4',
              children: [
                t.jsx(Hb, {
                  createMutation: A,
                  assistant_id: S ?? null,
                  metadata: (w == null ? void 0 : w.metadata) ?? null,
                  endpoint: n,
                  version: c,
                }),
                t.jsx('label', { className: bo, htmlFor: 'name', children: h('com_ui_name') }),
                t.jsx(Ge, {
                  name: 'name',
                  control: k,
                  render: ({ field: L }) =>
                    t.jsx('input', {
                      ...L,
                      value: L.value ?? '',
                      max: 256,
                      className: ll,
                      id: 'name',
                      type: 'text',
                      placeholder: h('com_assistants_name_placeholder'),
                    }),
                }),
                t.jsx(Ge, {
                  name: 'id',
                  control: k,
                  render: ({ field: L }) =>
                    t.jsx('p', {
                      className: 'h-3 text-xs italic text-gray-600',
                      children: L.value ?? '',
                    }),
                }),
              ],
            }),
            t.jsxs('div', {
              className: 'mb-4',
              children: [
                t.jsx('label', {
                  className: bo,
                  htmlFor: 'description',
                  children: h('com_ui_description'),
                }),
                t.jsx(Ge, {
                  name: 'description',
                  control: k,
                  render: ({ field: L }) =>
                    t.jsx('input', {
                      ...L,
                      value: L.value ?? '',
                      max: 512,
                      className: ll,
                      id: 'description',
                      type: 'text',
                      placeholder: h('com_assistants_description_placeholder'),
                    }),
                }),
              ],
            }),
            t.jsxs('div', {
              className: 'mb-6',
              children: [
                t.jsx('label', {
                  className: bo,
                  htmlFor: 'instructions',
                  children: h('com_ui_instructions'),
                }),
                t.jsx(Ge, {
                  name: 'instructions',
                  control: k,
                  render: ({ field: L }) =>
                    t.jsx('textarea', {
                      ...L,
                      value: L.value ?? '',
                      max: 32768,
                      className:
                        'focus:shadow-outline min-h-[150px] w-full resize-none resize-y appearance-none rounded-md border px-3 py-2 text-sm leading-tight text-gray-700 shadow focus:border-green-500 focus:outline-none focus:ring-0 dark:border-gray-700/80 dark:bg-gray-800 dark:text-white',
                      id: 'instructions',
                      placeholder: h('com_assistants_instructions_placeholder'),
                      rows: 3,
                    }),
                }),
              ],
            }),
            t.jsxs('div', {
              className: 'mb-6',
              children: [
                t.jsx('label', { className: bo, htmlFor: 'model', children: h('com_ui_model') }),
                t.jsx(Ge, {
                  name: 'model',
                  control: k,
                  rules: { required: !0, minLength: 1 },
                  render: ({ field: L, fieldState: { error: z } }) => {
                    var B;
                    return t.jsxs(t.Fragment, {
                      children: [
                        t.jsx(Qe, {
                          emptyTitle: !0,
                          value: L.value,
                          setValue: L.onChange,
                          availableValues: ((B = d.data) == null ? void 0 : B[n]) ?? [],
                          showAbove: !1,
                          showLabel: !1,
                          className: b(
                            Gt,
                            'flex h-[40px] w-full flex-none items-center justify-center px-4 hover:cursor-pointer',
                          ),
                          containerClassName: b('rounded-md', z ? 'border-red-500 border-2' : ''),
                        }),
                        z &&
                          t.jsx('span', {
                            className: 'text-sm text-red-500 transition duration-300 ease-in-out',
                            children: h('com_ui_field_required'),
                          }),
                      ],
                    });
                  },
                }),
              ],
            }),
            (E || R) && c == 1 && t.jsx(e2, { assistant_id: S, files: q, endpoint: n }),
            t.jsx(Ub, {
              version: c,
              endpoint: n,
              codeEnabled: E,
              assistantsConfig: r,
              retrievalEnabled: R,
            }),
            t.jsxs('div', {
              className: 'mb-6',
              children: [
                t.jsx('label', {
                  className: bo,
                  children: `${P ? h('com_assistants_tools') : ''}
              ${P && F ? ' + ' : ''}
              ${F ? h('com_assistants_actions') : ''}`,
                }),
                t.jsxs('div', {
                  className: 'space-y-1',
                  children: [
                    T.map((L, z) =>
                      t.jsx(Yb, { tool: L, allTools: m, assistant_id: S }, `${L}-${z}-${S}`),
                    ),
                    o
                      .filter((L) => L.assistant_id === S)
                      .map((L, z) => t.jsx(Qb, { action: L, onClick: () => e(L) }, z)),
                    P &&
                      t.jsx('button', {
                        type: 'button',
                        onClick: () => y(!0),
                        className:
                          'btn border-token-border-light relative mx-1 mt-2 h-8 rounded-lg bg-transparent font-medium hover:bg-gray-100 dark:hover:bg-gray-800',
                        children: t.jsx('div', {
                          className: 'flex w-full items-center justify-center gap-2',
                          children: h('com_assistants_add_tools'),
                        }),
                      }),
                    F &&
                      t.jsx('button', {
                        type: 'button',
                        disabled: !S,
                        onClick: () => {
                          if (!S)
                            return g({
                              message: h('com_assistants_actions_disabled'),
                              status: 'warning',
                            });
                          a(En.actions);
                        },
                        className:
                          'btn border-token-border-light relative mt-2 h-8 rounded-lg bg-transparent font-medium hover:bg-gray-100 dark:hover:bg-gray-800',
                        children: t.jsx('div', {
                          className: 'flex w-full items-center justify-center gap-2',
                          children: h('com_assistants_add_actions'),
                        }),
                      }),
                  ],
                }),
              ],
            }),
            t.jsxs('div', {
              className: 'flex items-center justify-end gap-2',
              children: [
                t.jsx(Zb, {
                  assistant_id: S,
                  activeModel: I,
                  setCurrentAssistantId: s,
                  createMutation: A,
                  endpoint: n,
                }),
                S &&
                  t.jsx('button', {
                    className: 'btn btn-secondary',
                    type: 'button',
                    disabled: !S,
                    onClick: (L) => {
                      L.preventDefault(), f(S);
                    },
                    children: h('com_ui_select'),
                  }),
                t.jsx('button', {
                  className:
                    'btn btn-primary focus:shadow-outline flex w-[90px] items-center justify-center px-4 py-2 font-semibold text-white hover:bg-green-600 focus:border-green-500',
                  type: 'submit',
                  children:
                    A.isLoading || M.isLoading
                      ? t.jsx(Oe, { className: 'icon-md' })
                      : h(S ? 'com_ui_save' : 'com_ui_create'),
                }),
              ],
            }),
          ],
        }),
        t.jsx(Ob, { isOpen: x, setIsOpen: y, assistant_id: S, endpoint: n }),
      ],
    }),
  });
}
function n2({ columns: e, data: n }) {
  const o = As({ columns: e, data: n, getCoreRowModel: Ts() });
  return t.jsxs('table', {
    className: 'w-full text-sm',
    children: [
      t.jsx('thead', {
        children: o
          .getHeaderGroups()
          .map((a, i) =>
            t.jsx(
              'tr',
              {
                className:
                  'border-token-border-light text-token-text-tertiary border-b text-left text-xs',
                children: a.headers.map((s, r) =>
                  t.jsx(
                    'th',
                    {
                      className: 'py-1 font-normal',
                      children: s.isPlaceholder
                        ? null
                        : Zn(s.column.columnDef.header, s.getContext()),
                    },
                    r,
                  ),
                ),
              },
              i,
            ),
          ),
      }),
      t.jsx('tbody', {
        children: o
          .getRowModel()
          .rows.map((a, i) =>
            t.jsx(
              'tr',
              {
                className: 'border-token-border-light border-b',
                children: a
                  .getVisibleCells()
                  .map((s, r) =>
                    t.jsx(
                      'td',
                      { className: 'py-2', children: Zn(s.column.columnDef.cell, s.getContext()) },
                      r,
                    ),
                  ),
              },
              i,
            ),
          ),
      }),
    ],
  });
}
const o2 = [
    { header: 'Name', accessorKey: 'name' },
    { header: 'Method', accessorKey: 'method' },
    { header: 'Path', accessorKey: 'path' },
  ],
  _l = Rn((e, n) => {
    const o = Vh(e);
    n(o);
  }, 800);
function a2({ action: e, assistant_id: n, endpoint: o, version: a, setAction: i }) {
  var T;
  const s = (S) => {
      S.status || (x(null), k(null)), f(S);
    },
    r = D(),
    { showToast: c } = Ie(),
    l = Mt(),
    { handleSubmit: d, reset: _ } = Jt(),
    [m, f] = p.useState(null),
    [g, h] = p.useState(''),
    [v, x] = p.useState(null),
    [y, k] = p.useState(null);
  p.useEffect(() => {
    var S;
    (S = e == null ? void 0 : e.metadata) != null &&
      S.raw_spec &&
      (h(e.metadata.raw_spec), _l(e.metadata.raw_spec, s));
  }, [(T = e == null ? void 0 : e.metadata) == null ? void 0 : T.raw_spec]),
    p.useEffect(() => {
      if (!m || !m.status || !m.spec) return;
      const { functionSignatures: S, requestBuilders: I } = Uh(m.spec),
        P = Object.entries(I).map(([F, R]) => ({
          name: F,
          method: R.method,
          path: R.path,
          domain: R.domain,
        }));
      x(P), f(null), k(S.map((F) => F.toObjectTool()));
    }, [m]);
  const C = Y0({
      onSuccess(S) {
        c({ message: r('com_assistants_update_actions_success'), status: 'success' }), _(), i(S[2]);
      },
      onError(S) {
        c({
          message: (S == null ? void 0 : S.message) ?? r('com_assistants_update_actions_error'),
          status: 'error',
        });
      },
    }),
    j = d((S) => {
      if ((console.log('authFormData', S), !n || !y || !v)) return;
      let { metadata: I = {} } = e ?? {};
      const P = e == null ? void 0 : e.action_id;
      I.raw_spec = g;
      const R = new URL(v[0].domain).hostname;
      if (!R) return;
      I.domain = R;
      const { type: E, saved_auth_fields: M } = S,
        A = (q) => {
          delete q.auth, delete q.api_key, delete q.oauth_client_id, delete q.oauth_client_secret;
        };
      M && E === $e.ServiceHttp
        ? (I = {
            ...I,
            api_key: S.api_key,
            auth: {
              type: E,
              authorization_type: S.authorization_type,
              custom_auth_header: S.custom_auth_header,
            },
          })
        : M && E === $e.OAuth
        ? (I = {
            ...I,
            auth: {
              type: E,
              authorization_url: S.authorization_url,
              client_url: S.client_url,
              scope: S.scope,
              token_exchange_method: S.token_exchange_method,
            },
            oauth_client_id: S.oauth_client_id,
            oauth_client_secret: S.oauth_client_secret,
          })
        : M
        ? (A(I), (I.auth = { type: E }))
        : A(I),
        C.mutate({
          action_id: P,
          metadata: I,
          functions: y,
          assistant_id: n,
          endpoint: o,
          version: a,
          model: l[o][n].model,
        });
    }),
    w = (S) => {
      const I = S.target.value;
      if ((h(I), !I)) return x(null), k(null), f(null);
      _l(I, s);
    };
  return t.jsxs(t.Fragment, {
    children: [
      t.jsxs('div', {
        className: '',
        children: [
          t.jsxs('div', {
            className: 'mb-1 flex flex-wrap items-center justify-between gap-4',
            children: [
              t.jsx('label', {
                className: 'text-token-text-primary whitespace-nowrap font-medium',
                children: 'Schema',
              }),
              t.jsx('div', {
                className: 'flex items-center gap-2',
                children: t.jsxs('select', {
                  onChange: (S) => console.log(S.target.value),
                  className:
                    'border-token-border-medium h-8 min-w-[100px] rounded-lg border bg-transparent px-2 py-0 text-sm',
                  children: [
                    t.jsx('option', { value: 'label', children: r('com_ui_examples') }),
                    t.jsx('option', { value: '0', children: 'Weather (JSON)' }),
                    t.jsx('option', { value: '1', children: 'Pet Store (YAML)' }),
                    t.jsx('option', { value: '2', children: 'Blank Template' }),
                  ],
                }),
              }),
            ],
          }),
          t.jsxs('div', {
            className: 'border-token-border-light mb-4 overflow-hidden rounded-lg border',
            children: [
              t.jsx('div', {
                className: 'relative',
                children: t.jsx('textarea', {
                  value: g,
                  onChange: w,
                  spellCheck: 'false',
                  placeholder: 'Enter your OpenAPI schema here',
                  className: b(
                    'text-token-text-primary block h-96 w-full border-none bg-transparent p-2 font-mono text-xs',
                    tt,
                  ),
                }),
              }),
              m &&
                m.message !== 'OpenAPI spec is valid.' &&
                t.jsx('div', {
                  className: 'border-token-border-light border-t p-2 text-red-500',
                  children: m.message
                    .split(
                      `
`,
                    )
                    .map((S, I) => t.jsx('div', { children: S }, I)),
                }),
            ],
          }),
        ],
      }),
      !!v &&
        t.jsxs('div', {
          children: [
            t.jsx('div', {
              className: 'mb-1.5 flex items-center',
              children: t.jsx('label', {
                className: 'text-token-text-primary block font-medium',
                children: r('com_assistants_available_actions'),
              }),
            }),
            t.jsx(n2, { columns: o2, data: v }),
          ],
        }),
      t.jsxs('div', {
        className: 'mt-4',
        children: [
          t.jsx('div', {
            className: 'mb-1.5 flex items-center',
            children: t.jsx('span', {
              className: '',
              'data-state': 'closed',
              children: t.jsx('label', {
                className: 'text-token-text-primary block font-medium',
                children: r('com_ui_privacy_policy'),
              }),
            }),
          }),
          t.jsxs('div', {
            className:
              'rounded-md border border-gray-300 px-3 py-2 shadow-none focus-within:border-gray-800 focus-within:ring-1 focus-within:ring-gray-800 dark:border-gray-700 dark:bg-gray-700 dark:focus-within:border-gray-500 dark:focus-within:ring-gray-500',
            children: [
              t.jsx('label', {
                htmlFor: 'privacyPolicyUrl',
                className: 'block text-xs font-medium text-gray-900 dark:text-gray-100',
              }),
              t.jsx('div', {
                className: 'relative',
                children: t.jsx('input', {
                  name: 'privacyPolicyUrl',
                  id: 'privacyPolicyUrl',
                  className:
                    'block w-full border-0 p-0 text-gray-900 placeholder-gray-500 shadow-none outline-none focus-within:shadow-none focus-within:outline-none focus-within:ring-0 focus:border-none focus:ring-0 dark:bg-gray-700 dark:text-gray-100 sm:text-sm',
                  placeholder: 'https://api.example-weather-app.com/privacy',
                }),
              }),
            ],
          }),
        ],
      }),
      t.jsx('div', {
        className: 'flex items-center justify-end',
        children: t.jsx('button', {
          disabled: !y || !y.length,
          onClick: j,
          className:
            'focus:shadow-outline mt-1 flex min-w-[100px] items-center justify-center rounded bg-green-500 px-4 py-2 font-semibold text-white hover:bg-green-400 focus:border-green-500 focus:outline-none focus:ring-0 disabled:bg-green-400',
          type: 'button',
          children: C.isLoading
            ? t.jsx(Oe, { className: 'icon-md' })
            : e != null && e.action_id
            ? r('com_ui_update')
            : r('com_ui_create'),
        }),
      }),
    ],
  });
}
function i2({ setOpenAuthDialog: e }) {
  const { watch: n, setValue: o, trigger: a } = Jt(),
    i = n('type');
  return t.jsxs(Bn, {
    role: 'dialog',
    id: 'radix-:rf5:',
    'aria-describedby': 'radix-:rf7:',
    'aria-labelledby': 'radix-:rf6:',
    'data-state': 'open',
    className:
      'left-1/2 col-auto col-start-2 row-auto row-start-2 w-full max-w-md -translate-x-1/2 rounded-xl bg-white pb-0 text-left shadow-xl transition-all dark:bg-gray-700 dark:text-gray-100',
    tabIndex: -1,
    style: { pointerEvents: 'auto' },
    children: [
      t.jsx('div', {
        className:
          'flex items-center justify-between border-b border-black/10 px-4 pb-4 pt-5 dark:border-white/10 sm:p-6',
        children: t.jsx('div', {
          className: 'flex',
          children: t.jsx('div', {
            className: 'flex items-center',
            children: t.jsx('div', {
              className: 'flex grow flex-col gap-1',
              children: t.jsx('h2', {
                id: 'radix-:rf6:',
                className: 'text-token-text-primary text-lg font-medium leading-6',
                children: 'Authentication',
              }),
            }),
          }),
        }),
      }),
      t.jsxs('div', {
        className: 'p-4 sm:p-6 sm:pt-0',
        children: [
          t.jsxs('div', {
            className: 'mb-4',
            children: [
              t.jsx('label', {
                className: 'mb-1 block text-sm font-medium',
                children: 'Authentication Type',
              }),
              t.jsxs(Is, {
                defaultValue: $e.None,
                onValueChange: (s) => o('type', s),
                value: i,
                role: 'radiogroup',
                'aria-required': 'false',
                dir: 'ltr',
                className: 'flex gap-4',
                tabIndex: 0,
                style: { outline: 'none' },
                children: [
                  t.jsx('div', {
                    className: 'flex items-center gap-2',
                    children: t.jsxs('label', {
                      htmlFor: ':rf8:',
                      className: 'flex cursor-pointer items-center gap-1',
                      children: [
                        t.jsx(xn, {
                          type: 'button',
                          role: 'radio',
                          value: $e.None,
                          id: ':rf8:',
                          className:
                            'mr-1 flex h-5 w-5 items-center justify-center rounded-full border border-gray-500 bg-white dark:border-gray-500 dark:bg-gray-500',
                          tabIndex: -1,
                          children: t.jsx(vn, {
                            className: 'h-2 w-2 rounded-full bg-gray-950 dark:bg-white',
                          }),
                        }),
                        'None',
                      ],
                    }),
                  }),
                  t.jsx('div', {
                    className: 'flex items-center gap-2',
                    children: t.jsxs('label', {
                      htmlFor: ':rfa:',
                      className: 'flex cursor-pointer items-center gap-1',
                      children: [
                        t.jsx(xn, {
                          type: 'button',
                          role: 'radio',
                          value: $e.ServiceHttp,
                          id: ':rfa:',
                          className:
                            'mr-1 flex h-5 w-5 items-center justify-center rounded-full border border-gray-500 bg-white dark:border-gray-500 dark:bg-gray-500',
                          tabIndex: 0,
                          children: t.jsx(vn, {
                            className: 'h-2 w-2 rounded-full bg-gray-950 dark:bg-white',
                          }),
                        }),
                        'API Key',
                      ],
                    }),
                  }),
                  t.jsx('div', {
                    className: 'flex items-center gap-2 text-gray-500',
                    children: t.jsxs('label', {
                      htmlFor: ':rfc:',
                      className: 'flex cursor-not-allowed items-center gap-1',
                      children: [
                        t.jsx(xn, {
                          type: 'button',
                          role: 'radio',
                          disabled: !0,
                          value: $e.OAuth,
                          id: ':rfc:',
                          className:
                            'mr-1 flex h-5 w-5 cursor-not-allowed items-center justify-center rounded-full border border-gray-500 bg-gray-300 dark:border-gray-600 dark:bg-gray-700',
                          tabIndex: -1,
                          children: t.jsx(vn, {
                            className: 'h-2 w-2 rounded-full bg-gray-950 dark:bg-white',
                          }),
                        }),
                        'OAuth',
                      ],
                    }),
                  }),
                ],
              }),
            ],
          }),
          i === 'none' ? null : i === 'service_http' ? t.jsx(s2, {}) : t.jsx(r2, {}),
          t.jsxs('div', {
            className: 'mt-5 flex flex-col gap-3 sm:mt-4 sm:flex-row-reverse',
            children: [
              t.jsx('button', {
                className:
                  'btn relative bg-green-500 text-white hover:bg-green-600 dark:hover:bg-green-600',
                onClick: async () => {
                  const s = await a(void 0, { shouldFocus: !0 });
                  o('saved_auth_fields', s), e(!s);
                },
                children: t.jsx('div', {
                  className: 'flex w-full items-center justify-center gap-2',
                  children: 'Save',
                }),
              }),
              t.jsx(Ra, {
                className: 'btn btn-neutral relative',
                children: t.jsx('div', {
                  className: 'flex w-full items-center justify-center gap-2',
                  children: 'Cancel',
                }),
              }),
            ],
          }),
        ],
      }),
    ],
  });
}
const s2 = () => {
    const { register: e, watch: n, setValue: o } = Jt(),
      a = n('authorization_type'),
      i = n('type');
    return t.jsxs(t.Fragment, {
      children: [
        t.jsx('label', { className: 'mb-1 block text-sm font-medium', children: 'API Key' }),
        t.jsx('input', {
          placeholder: '<HIDDEN>',
          type: 'password',
          autoComplete: 'new-password',
          className:
            'border-token-border-medium mb-2 h-9 w-full resize-none overflow-y-auto rounded-lg border px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-blue-400 dark:bg-gray-600',
          ...e('api_key', { required: i === $e.ServiceHttp }),
        }),
        t.jsx('label', { className: 'mb-1 block text-sm font-medium', children: 'Auth Type' }),
        t.jsxs(Is, {
          defaultValue: st.Basic,
          onValueChange: (s) => o('authorization_type', s),
          value: a,
          role: 'radiogroup',
          'aria-required': 'true',
          dir: 'ltr',
          className: 'mb-2 flex gap-6 overflow-hidden rounded-lg',
          tabIndex: 0,
          style: { outline: 'none' },
          children: [
            t.jsx('div', {
              className: 'flex items-center gap-2',
              children: t.jsxs('label', {
                htmlFor: ':rfu:',
                className: 'flex cursor-pointer items-center gap-1',
                children: [
                  t.jsx(xn, {
                    type: 'button',
                    role: 'radio',
                    value: st.Basic,
                    id: ':rfu:',
                    className:
                      'mr-1 flex h-5 w-5 items-center justify-center rounded-full border border-gray-500 bg-white dark:border-gray-500 dark:bg-gray-500',
                    tabIndex: -1,
                    children: t.jsx(vn, {
                      className: 'h-2 w-2 rounded-full bg-gray-950 dark:bg-white',
                    }),
                  }),
                  'Basic',
                ],
              }),
            }),
            t.jsx('div', {
              className: 'flex items-center gap-2',
              children: t.jsxs('label', {
                htmlFor: ':rg0:',
                className: 'flex cursor-pointer items-center gap-1',
                children: [
                  t.jsx(xn, {
                    type: 'button',
                    role: 'radio',
                    value: st.Bearer,
                    id: ':rg0:',
                    className:
                      'mr-1 flex h-5 w-5 items-center justify-center rounded-full border border-gray-500 bg-white dark:border-gray-500 dark:bg-gray-500',
                    tabIndex: -1,
                    children: t.jsx(vn, {
                      className: 'h-2 w-2 rounded-full bg-gray-950 dark:bg-white',
                    }),
                  }),
                  'Bearer',
                ],
              }),
            }),
            t.jsx('div', {
              className: 'flex items-center gap-2',
              children: t.jsxs('label', {
                htmlFor: ':rg2:',
                className: 'flex cursor-pointer items-center gap-1',
                children: [
                  t.jsx(xn, {
                    type: 'button',
                    role: 'radio',
                    value: st.Custom,
                    id: ':rg2:',
                    className:
                      'mr-1 flex h-5 w-5 items-center justify-center rounded-full border border-gray-500 bg-white dark:border-gray-500 dark:bg-gray-500',
                    tabIndex: 0,
                    children: t.jsx(vn, {
                      className: 'h-2 w-2 rounded-full bg-gray-950 dark:bg-white',
                    }),
                  }),
                  'Custom',
                ],
              }),
            }),
          ],
        }),
        a === st.Custom &&
          t.jsxs('div', {
            className: 'mt-2',
            children: [
              t.jsx('label', {
                className: 'mb-1 block text-sm font-medium',
                children: 'Custom Header Name',
              }),
              t.jsx('input', {
                className:
                  'border-token-border-medium mb-2 h-9 w-full resize-none overflow-y-auto rounded-lg border px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-blue-400 dark:bg-gray-600',
                placeholder: 'X-Api-Key',
                ...e('custom_auth_header', { required: a === st.Custom }),
              }),
            ],
          }),
      ],
    });
  },
  r2 = () => {
    const { register: e, watch: n, setValue: o } = Jt(),
      a = n('token_exchange_method'),
      i = n('type');
    return t.jsxs(t.Fragment, {
      children: [
        t.jsx('label', { className: 'mb-1 block text-sm font-medium', children: 'Client ID' }),
        t.jsx('input', {
          placeholder: '<HIDDEN>',
          type: 'password',
          autoComplete: 'off',
          className:
            'border-token-border-medium mb-2 h-9 w-full resize-none overflow-y-auto rounded-lg border px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-blue-400 dark:bg-gray-800',
          ...e('oauth_client_id', { required: i === $e.OAuth }),
        }),
        t.jsx('label', { className: 'mb-1 block text-sm font-medium', children: 'Client Secret' }),
        t.jsx('input', {
          placeholder: '<HIDDEN>',
          type: 'password',
          autoComplete: 'off',
          className:
            'border-token-border-medium mb-2 h-9 w-full resize-none overflow-y-auto rounded-lg border px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-blue-400 dark:bg-gray-800',
          ...e('oauth_client_secret', { required: i === $e.OAuth }),
        }),
        t.jsx('label', {
          className: 'mb-1 block text-sm font-medium',
          children: 'Authorization URL',
        }),
        t.jsx('input', {
          className:
            'border-token-border-medium mb-2 h-9 w-full resize-none overflow-y-auto rounded-lg border px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-blue-400 dark:bg-gray-800',
          ...e('authorization_url', { required: i === $e.OAuth }),
        }),
        t.jsx('label', { className: 'mb-1 block text-sm font-medium', children: 'Token URL' }),
        t.jsx('input', {
          className:
            'border-token-border-medium mb-2 h-9 w-full resize-none overflow-y-auto rounded-lg border px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-blue-400 dark:bg-gray-800',
          ...e('client_url', { required: i === $e.OAuth }),
        }),
        t.jsx('label', { className: 'mb-1 block text-sm font-medium', children: 'Scope' }),
        t.jsx('input', {
          className:
            'border-token-border-medium mb-2 h-9 w-full resize-none overflow-y-auto rounded-lg border px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-blue-400 dark:bg-gray-800',
          ...e('scope', { required: i === $e.OAuth }),
        }),
        t.jsx('label', {
          className: 'mb-1 block text-sm font-medium',
          children: 'Token Exchange Method',
        }),
        t.jsxs(Is, {
          defaultValue: st.Basic,
          onValueChange: (s) => o('token_exchange_method', s),
          value: a,
          role: 'radiogroup',
          'aria-required': 'true',
          dir: 'ltr',
          tabIndex: 0,
          style: { outline: 'none' },
          children: [
            t.jsx('div', {
              className: 'flex items-center gap-2',
              children: t.jsxs('label', {
                htmlFor: ':rj1:',
                className: 'flex cursor-pointer items-center gap-1',
                children: [
                  t.jsx(xn, {
                    type: 'button',
                    role: 'radio',
                    value: Yn.DefaultPost,
                    id: ':rj1:',
                    className:
                      'mr-1 flex h-5 w-5 items-center justify-center rounded-full border border-gray-500 bg-white dark:border-gray-700 dark:bg-gray-700',
                    tabIndex: -1,
                    children: t.jsx(vn, {
                      className: 'h-2 w-2 rounded-full bg-gray-950 dark:bg-white',
                    }),
                  }),
                  'Default (POST request)',
                ],
              }),
            }),
            t.jsx('div', {
              className: 'flex items-center gap-2',
              children: t.jsxs('label', {
                htmlFor: ':rj3:',
                className: 'flex cursor-pointer items-center gap-1',
                children: [
                  t.jsx(xn, {
                    type: 'button',
                    role: 'radio',
                    value: Yn.BasicAuthHeader,
                    id: ':rj3:',
                    className:
                      'mr-1 flex h-5 w-5 items-center justify-center rounded-full border border-gray-500 bg-white dark:border-gray-700 dark:bg-gray-700',
                    tabIndex: -1,
                    children: t.jsx(vn, {
                      className: 'h-2 w-2 rounded-full bg-gray-950 dark:bg-white',
                    }),
                  }),
                  'Basic authorization header',
                ],
              }),
            }),
          ],
        }),
      ],
    });
  };
function c2({
  action: e,
  endpoint: n,
  version: o,
  setAction: a,
  assistant_id: i,
  setActivePanel: s,
}) {
  const r = D(),
    { showToast: c } = Ie(),
    l = Mt(),
    [d, _] = p.useState(!1),
    m = X0({
      onSuccess: () => {
        c({ message: r('com_assistants_delete_actions_success'), status: 'success' }),
          s(En.builder),
          a(void 0);
      },
      onError(x) {
        c({
          message: (x == null ? void 0 : x.message) ?? r('com_assistants_delete_actions_error'),
          status: 'error',
        });
      },
    }),
    f = an({
      defaultValues: {
        type: $e.None,
        saved_auth_fields: !1,
        api_key: '',
        authorization_type: st.Basic,
        custom_auth_header: '',
        oauth_client_id: '',
        oauth_client_secret: '',
        authorization_url: '',
        client_url: '',
        scope: '',
        token_exchange_method: Yn.DefaultPost,
      },
    }),
    { reset: g, watch: h } = f,
    v = h('type');
  return (
    p.useEffect(() => {
      var x;
      (x = e == null ? void 0 : e.metadata) != null &&
        x.auth &&
        g({
          type: e.metadata.auth.type || $e.None,
          saved_auth_fields: !1,
          api_key: e.metadata.api_key ?? '',
          authorization_type: e.metadata.auth.authorization_type || st.Basic,
          oauth_client_id: e.metadata.oauth_client_id ?? '',
          oauth_client_secret: e.metadata.oauth_client_secret ?? '',
          authorization_url: e.metadata.auth.authorization_url ?? '',
          client_url: e.metadata.auth.client_url ?? '',
          scope: e.metadata.auth.scope ?? '',
          token_exchange_method: e.metadata.auth.token_exchange_method ?? Yn.DefaultPost,
        });
    }, [e, g]),
    t.jsx(Ss, {
      ...f,
      children: t.jsx('form', {
        className: 'h-full grow overflow-hidden',
        children: t.jsxs('div', {
          className: 'h-full overflow-auto px-2 pb-12 text-sm',
          children: [
            t.jsxs('div', {
              className: 'relative flex flex-col items-center px-16 py-6 text-center',
              children: [
                t.jsx('div', {
                  className: 'absolute left-0 top-6',
                  children: t.jsx('button', {
                    type: 'button',
                    className: 'btn btn-neutral relative',
                    onClick: () => {
                      s(En.builder), a(void 0);
                    },
                    children: t.jsx('div', {
                      className: 'flex w-full items-center justify-center gap-2',
                      children: t.jsx('svg', {
                        width: '24',
                        height: '24',
                        viewBox: '0 0 24 24',
                        fill: 'none',
                        xmlns: 'http://www.w3.org/2000/svg',
                        className: 'icon-md',
                        children: t.jsx('path', {
                          d: 'M15 5L8 12L15 19',
                          stroke: 'currentColor',
                          strokeWidth: '2',
                          strokeLinecap: 'round',
                          strokeLinejoin: 'round',
                        }),
                      }),
                    }),
                  }),
                }),
                !!e &&
                  t.jsx('div', {
                    className: 'absolute right-0 top-6',
                    children: t.jsx('button', {
                      type: 'button',
                      disabled: !i || !e.action_id,
                      className:
                        'btn relative bg-transparent text-red-500 hover:bg-gray-100 dark:hover:bg-gray-800',
                      onClick: () => {
                        if (!i) return prompt('No assistant_id found, is the assistant created?');
                        confirm('Are you sure you want to delete this action?') &&
                          m.mutate({
                            model: l[n][i].model,
                            action_id: e.action_id,
                            assistant_id: i,
                            endpoint: n,
                          });
                      },
                      children: t.jsx('div', {
                        className: 'flex w-full items-center justify-center gap-2',
                        children: t.jsx(or, { className: 'icon-md text-red-500' }),
                      }),
                    }),
                  }),
                t.jsx('div', {
                  className: 'text-xl font-medium',
                  children: (e ? 'Edit' : 'Add') + ' actions',
                }),
                t.jsx('div', {
                  className: 'text-token-text-tertiary text-sm',
                  children: r('com_assistants_actions_info'),
                }),
              ],
            }),
            t.jsxs(nt, {
              open: d,
              onOpenChange: _,
              children: [
                t.jsx(Fn, {
                  asChild: !0,
                  children: t.jsxs('div', {
                    className: 'relative mb-6',
                    children: [
                      t.jsx('div', {
                        className: 'mb-1.5 flex items-center',
                        children: t.jsx('label', {
                          className: 'text-token-text-primary block font-medium',
                          children: r('com_ui_authentication'),
                        }),
                      }),
                      t.jsxs('div', {
                        className:
                          'border-token-border-medium flex rounded-lg border text-sm hover:cursor-pointer',
                        children: [
                          t.jsx('div', { className: 'h-9 grow px-3 py-2', children: v }),
                          t.jsx('div', { className: 'bg-token-border-medium w-px' }),
                          t.jsx('button', {
                            type: 'button',
                            color: 'neutral',
                            className: 'flex items-center gap-2 px-3',
                            children: t.jsxs('svg', {
                              width: '24',
                              height: '24',
                              viewBox: '0 0 24 24',
                              fill: 'none',
                              xmlns: 'http://www.w3.org/2000/svg',
                              className: 'icon-sm',
                              children: [
                                t.jsx('path', {
                                  d: 'M11.6439 3C10.9352 3 10.2794 3.37508 9.92002 3.98596L9.49644 4.70605C8.96184 5.61487 7.98938 6.17632 6.93501 6.18489L6.09967 6.19168C5.39096 6.19744 4.73823 6.57783 4.38386 7.19161L4.02776 7.80841C3.67339 8.42219 3.67032 9.17767 4.01969 9.7943L4.43151 10.5212C4.95127 11.4386 4.95127 12.5615 4.43151 13.4788L4.01969 14.2057C3.67032 14.8224 3.67339 15.5778 4.02776 16.1916L4.38386 16.8084C4.73823 17.4222 5.39096 17.8026 6.09966 17.8083L6.93502 17.8151C7.98939 17.8237 8.96185 18.3851 9.49645 19.294L9.92002 20.014C10.2794 20.6249 10.9352 21 11.6439 21H12.3561C13.0648 21 13.7206 20.6249 14.08 20.014L14.5035 19.294C15.0381 18.3851 16.0106 17.8237 17.065 17.8151L17.9004 17.8083C18.6091 17.8026 19.2618 17.4222 19.6162 16.8084L19.9723 16.1916C20.3267 15.5778 20.3298 14.8224 19.9804 14.2057L19.5686 13.4788C19.0488 12.5615 19.0488 11.4386 19.5686 10.5212L19.9804 9.7943C20.3298 9.17767 20.3267 8.42219 19.9723 7.80841L19.6162 7.19161C19.2618 6.57783 18.6091 6.19744 17.9004 6.19168L17.065 6.18489C16.0106 6.17632 15.0382 5.61487 14.5036 4.70605L14.08 3.98596C13.7206 3.37508 13.0648 3 12.3561 3H11.6439Z',
                                  stroke: 'currentColor',
                                  strokeWidth: '2',
                                  strokeLinejoin: 'round',
                                }),
                                t.jsx('circle', {
                                  cx: '12',
                                  cy: '12',
                                  r: '2.5',
                                  stroke: 'currentColor',
                                  strokeWidth: '2',
                                }),
                              ],
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
                t.jsx(i2, { setOpenAuthDialog: _ }),
              ],
            }),
            t.jsx(a2, { action: e, assistant_id: i, setAction: a, endpoint: n, version: o }),
          ],
        }),
      }),
    })
  );
}
function l2() {
  const { conversation: e, index: n } = me(),
    [o, a] = p.useState(En.builder),
    [i, s] = p.useState(void 0),
    [r, c] = p.useState(e == null ? void 0 : e.assistant_id),
    { data: l = {} } = Se(),
    { data: d = [] } = Ng(e == null ? void 0 : e.endpoint),
    _ = p.useMemo(
      () => (l == null ? void 0 : l[(e == null ? void 0 : e.endpoint) ?? '']),
      [e == null ? void 0 : e.endpoint, l],
    );
  if (
    (p.useEffect(() => {
      e != null && e.assistant_id && c(e == null ? void 0 : e.assistant_id);
    }, [e == null ? void 0 : e.assistant_id]),
    !(e != null && e.endpoint))
  )
    return null;
  const m = (_ == null ? void 0 : _.version) ?? kn[e.endpoint];
  if (o === En.actions || i)
    return t.jsx(c2, {
      index: n,
      action: i,
      actions: d,
      setAction: s,
      activePanel: o,
      setActivePanel: a,
      assistant_id: r,
      setCurrentAssistantId: c,
      endpoint: e.endpoint,
      version: m,
    });
  if (o === En.builder)
    return t.jsx(t2, {
      index: n,
      activePanel: o,
      action: i,
      actions: d,
      setAction: s,
      setActivePanel: a,
      assistant_id: r,
      setCurrentAssistantId: c,
      endpoint: e.endpoint,
      assistantsConfig: _,
      version: m,
    });
}
function _2({ row: e }) {
  var m;
  const n = D(),
    o = Za(),
    { showToast: a } = Ie(),
    { setFiles: i, conversation: s } = me(),
    { data: r = Lt } = wn({ select: (f) => yn(f) }),
    { addFile: c } = Td(i),
    l = p.useCallback(() => {
      const f = e.original,
        g = s == null ? void 0 : s.endpoint,
        h = o == null ? void 0 : o[f.file_id];
      if (!h) return;
      if (!g) return a({ message: n('com_ui_attach_error'), status: 'error' });
      if (Hr((h == null ? void 0 : h.source) ?? '') && !he(g))
        return a({ message: n('com_ui_attach_error_openai'), status: 'error' });
      !Hr((h == null ? void 0 : h.source) ?? '') &&
        he(g) &&
        a({ message: n('com_ui_attach_warn_endpoint'), status: 'warning' });
      const { fileSizeLimit: v, supportedMimeTypes: x } = r.endpoints[g] ?? r.endpoints.default;
      if (h.bytes > v)
        return a({
          message: `${n('com_ui_attach_error_size')} ${v / ya} MB (${g})`,
          status: 'error',
        });
      if (!Lt.checkType(f.type, x))
        return a({ message: `${n('com_ui_attach_error_type')} ${f.type} (${g})`, status: 'error' });
      c({
        progress: 1,
        attached: !0,
        file_id: h.file_id,
        filepath: h.filepath,
        preview: h.filepath,
        type: h.type,
        height: h.height,
        width: h.width,
        filename: h.filename,
        source: h.source,
        size: h.bytes,
      });
    }, [c, o, e.original, s, n, a, r.endpoints]),
    d = e.original;
  if ((m = d.type) != null && m.startsWith('image'))
    return t.jsxs('div', {
      onClick: l,
      className: 'flex cursor-pointer gap-2 rounded-md dark:hover:bg-gray-700',
      children: [
        t.jsx(pr, {
          url: d.filepath,
          className: 'relative h-10 w-10 shrink-0 overflow-hidden rounded-md',
          source: d.source,
        }),
        t.jsx('span', { className: 'self-center truncate text-xs', children: d.filename }),
      ],
    });
  const _ = Os(d.type);
  return t.jsxs('div', {
    onClick: l,
    className: 'flex cursor-pointer gap-2 rounded-md dark:hover:bg-gray-700',
    children: [
      _ && t.jsx(cr, { fileType: _, className: 'relative', file: d }),
      t.jsx('span', { className: 'self-center truncate', children: d.filename }),
    ],
  });
}
const d2 = [
  {
    accessorKey: 'filename',
    header: ({ column: e }) =>
      t.jsxs(Ne, {
        variant: 'ghost',
        onClick: () => e.toggleSorting(e.getIsSorted() === 'asc'),
        children: ['Name', t.jsx(No, { className: 'ml-2 h-4 w-4' })],
      }),
    meta: { size: '150px' },
    cell: ({ row: e }) => t.jsx(_2, { row: e }),
  },
  {
    accessorKey: 'updatedAt',
    meta: { size: '10%' },
    header: ({ column: e }) =>
      t.jsxs(Ne, {
        variant: 'ghost',
        onClick: () => e.toggleSorting(e.getIsSorted() === 'asc'),
        children: ['Date', t.jsx(No, { className: 'ml-2 h-4 w-4' })],
      }),
    cell: ({ row: e }) =>
      t.jsx('span', { className: 'flex justify-end text-xs', children: $_(e.original.updatedAt) }),
  },
];
function m2({ columns: e, data: n }) {
  var v, x;
  const o = D(),
    [a, i] = p.useState({}),
    [s, r] = p.useState([]),
    [c, l] = p.useState([]),
    [d, _] = p.useState({}),
    [m, f] = p.useState({ pageIndex: 0, pageSize: 10 }),
    g = ye(O.showFiles),
    h = As({
      data: n,
      columns: e,
      onSortingChange: r,
      onPaginationChange: f,
      getCoreRowModel: Ts(),
      getSortedRowModel: f_(),
      onColumnFiltersChange: l,
      getFilteredRowModel: x_(),
      onColumnVisibilityChange: _,
      getPaginationRowModel: v_(),
      onRowSelectionChange: i,
      state: { sorting: s, columnFilters: c, columnVisibility: d, rowSelection: a, pagination: m },
      defaultColumn: { minSize: 0, size: 10, maxSize: 10, enableResizing: !0 },
    });
  return t.jsxs(t.Fragment, {
    children: [
      t.jsx('div', {
        className: 'flex items-center gap-4 px-2 py-4',
        children: t.jsx(Je, {
          placeholder: o('com_files_filter'),
          value: ((v = h.getColumn('filename')) == null ? void 0 : v.getFilterValue()) ?? '',
          onChange: (y) => {
            var k;
            return (k = h.getColumn('filename')) == null
              ? void 0
              : k.setFilterValue(y.target.value);
          },
          className: 'max-w-xs dark:border-gray-700',
        }),
      }),
      t.jsx('div', {
        className: 'overflow-y-auto rounded-md border border-black/10 dark:border-white/10',
        children: t.jsxs(Js, {
          className: 'border-separate border-spacing-0 ',
          children: [
            t.jsx(Qs, {
              children: h
                .getHeaderGroups()
                .map((y, k) =>
                  t.jsx(
                    Mn,
                    {
                      children: y.headers.map((C) =>
                        t.jsx(
                          Ys,
                          {
                            style: { width: k === 0 ? '75%' : '25%' },
                            className:
                              'sticky top-0 h-auto border-b border-black/10 bg-white py-1 text-left font-medium text-gray-700 dark:border-white/10 dark:bg-gray-800 dark:text-gray-100',
                            children: C.isPlaceholder
                              ? null
                              : Zn(C.column.columnDef.header, C.getContext()),
                          },
                          C.id,
                        ),
                      ),
                    },
                    y.id,
                  ),
                ),
            }),
            t.jsx(Zs, {
              children:
                (x = h.getRowModel().rows) != null && x.length
                  ? h
                      .getRowModel()
                      .rows.map((y) =>
                        t.jsx(
                          Mn,
                          {
                            'data-state': y.getIsSelected() && 'selected',
                            className:
                              'border-b border-black/10 text-left text-gray-600 dark:border-white/10 dark:text-gray-300 [tr:last-child_&]:border-b-0',
                            children: y
                              .getVisibleCells()
                              .map((k) =>
                                t.jsx(
                                  Do,
                                  {
                                    className: 'p-2 px-4 [tr[data-disabled=true]_&]:opacity-50',
                                    style: { maxWidth: k.column.columnDef.meta.size },
                                    children: Zn(k.column.columnDef.cell, k.getContext()),
                                  },
                                  k.id,
                                ),
                              ),
                          },
                          y.id,
                        ),
                      )
                  : t.jsx(Mn, {
                      children: t.jsx(Do, {
                        colSpan: e.length,
                        className: 'h-24 text-center',
                        children: o('com_files_no_results'),
                      }),
                    }),
            }),
          ],
        }),
      }),
      t.jsxs('div', {
        className: 'flex items-center justify-around space-x-2 py-4',
        children: [
          t.jsxs(Ne, {
            variant: 'outline',
            size: 'sm',
            onClick: () => g(!0),
            className: 'flex gap-2',
            children: [t.jsx(up, { className: 'icon-sm' }), o('com_sidepanel_manage_files')],
          }),
          t.jsxs('div', {
            className: 'flex gap-2',
            children: [
              t.jsx(Ne, {
                variant: 'outline',
                size: 'sm',
                onClick: () => h.previousPage(),
                disabled: !h.getCanPreviousPage(),
                children: o('com_ui_prev'),
              }),
              t.jsx(Ne, {
                variant: 'outline',
                size: 'sm',
                onClick: () => h.nextPage(),
                disabled: !h.getCanNextPage(),
                children: o('com_ui_next'),
              }),
            ],
          }),
        ],
      }),
    ],
  });
}
function u2() {
  const { data: e = [] } = Ga();
  return t.jsx('div', {
    className: 'h-auto max-w-full overflow-x-hidden',
    children: t.jsx(m2, { columns: d2, data: e }),
  });
}
function p2({ hidePanel: e, assistants: n, keyProvided: o, endpoint: a, interfaceConfig: i }) {
  return p.useMemo(() => {
    const r = [];
    return (
      he(a) &&
        n &&
        n.disableBuilder !== !0 &&
        o &&
        i.parameters &&
        r.push({
          title: 'com_sidepanel_assistant_builder',
          label: '',
          icon: Bx,
          id: 'assistants',
          Component: l2,
        }),
      r.push({
        title: 'com_sidepanel_attach_files',
        label: '',
        icon: rm,
        id: 'files',
        Component: u2,
      }),
      r.push({
        title: 'com_sidepanel_hide_panel',
        label: '',
        icon: pp,
        onClick: e,
        id: 'hide-panel',
      }),
      r
    );
  }, [n, o, e, a, i.parameters]);
}
function Vm({
  onToggle: e,
  navVisible: n,
  isHovering: o,
  setIsHovering: a,
  side: i = 'left',
  className: s = '',
  translateX: r = !0,
}) {
  const c = D(),
    l = { transition: 'transform 0.3s ease, opacity 0.2s ease' },
    [d] = Yo('newUser', !0),
    m = o || !n ? '15deg' : '0deg',
    f = i === 'right' ? `-${m}` : m,
    g = i === 'right' ? m : `-${m}`;
  return t.jsx('div', {
    className: b(
      s,
      '-translate-y-1/2 transition-transform',
      n ? 'rotate-0' : 'rotate-180',
      n && r ? 'translate-x-[260px]' : 'translate-x-0 ',
    ),
    onMouseEnter: () => a(!0),
    onMouseLeave: () => a(!1),
    children: t.jsx(gt, {
      asChild: !0,
      children: t.jsx('button', {
        onClick: e,
        children: t.jsxs('span', {
          className: '',
          'data-state': 'closed',
          children: [
            t.jsx('div', {
              className: 'flex h-[72px] w-8 items-center justify-center',
              style: { ...l, opacity: o ? 1 : 0.25 },
              children: t.jsxs('div', {
                className: 'flex h-6 w-6 flex-col items-center',
                children: [
                  t.jsx('div', {
                    className: 'h-3 w-1 rounded-full bg-black dark:bg-white',
                    style: { ...l, transform: `translateY(0.15rem) rotate(${f}) translateZ(0px)` },
                  }),
                  t.jsx('div', {
                    className: 'h-3 w-1 rounded-full bg-black dark:bg-white',
                    style: { ...l, transform: `translateY(-0.15rem) rotate(${g}) translateZ(0px)` },
                  }),
                ],
              }),
            }),
            t.jsx(ft, {
              forceMount: d ? !0 : void 0,
              side: i === 'right' ? 'left' : 'right',
              sideOffset: 4,
              children: c(n ? 'com_nav_close_sidebar' : 'com_nav_open_sidebar'),
            }),
          ],
        }),
      }),
    }),
  });
}
function h2({ isCollapsed: e }) {
  var g, h, v;
  const n = D(),
    { setOption: o } = rn(),
    { index: a, conversation: i } = me(),
    { assistant_id: s = null, endpoint: r } = i ?? {},
    c = so((x) =>
      x.data.map(({ id: y, name: k, metadata: C }) => ({ id: y, name: k, metadata: C })),
    ),
    l = p.useMemo(() => c[r ?? ''] ?? [], [r, c]),
    d = Mt(),
    { onSelect: _ } = gd(r);
  p.useEffect(() => {
    var x, y;
    if (!s && l && l.length && d) {
      const k =
          localStorage.getItem(`${te.ASST_ID_PREFIX}${a}${r}`) ??
          ((x = l[0]) == null ? void 0 : x.id) ??
          '',
        C = (y = d == null ? void 0 : d[r ?? '']) == null ? void 0 : y[k];
      if (!C || !he(r)) return;
      o('model')(C.model), o('assistant_id')(k);
    }
  }, [a, l, s, d, r, o]);
  const m = (g = d == null ? void 0 : d[r ?? '']) == null ? void 0 : g[s ?? ''],
    f = p.useMemo(
      () =>
        l.map((x) => {
          var y;
          return {
            label: x.name ?? '',
            value: x.id,
            icon: t.jsx(ls, {
              isCreatedByUser: !1,
              endpoint: r,
              assistantName: x.name ?? '',
              iconURL: ((y = x.metadata) == null ? void 0 : y.avatar) ?? '',
            }),
          };
        }),
      [l, r],
    );
  return t.jsx(nm, {
    selectedValue: (m == null ? void 0 : m.id) ?? '',
    displayValue:
      ((h = l.find((x) => x.id === s)) == null ? void 0 : h.name) ??
      n('com_sidepanel_select_assistant'),
    selectPlaceholder: n('com_sidepanel_select_assistant'),
    searchPlaceholder: n('com_assistants_search_name'),
    isCollapsed: e,
    ariaLabel: 'assistant',
    setValue: _,
    items: f,
    SelectIcon: t.jsx(ls, {
      isCreatedByUser: !1,
      endpoint: r,
      assistantName: (m == null ? void 0 : m.name) ?? '',
      iconURL: ((v = m == null ? void 0 : m.metadata) == null ? void 0 : v.avatar) ?? '',
    }),
  });
}
function g2({ isCollapsed: e }) {
  const n = D(),
    o = Qt(),
    { conversation: a } = me(),
    { setOption: i } = rn(),
    s = p.useRef(),
    { endpoint: r, model: c = null } = a ?? {},
    l = p.useMemo(() => {
      var _;
      return ((_ = o == null ? void 0 : o.data) == null ? void 0 : _[r ?? '']) ?? [];
    }, [o, r]),
    d = p.useCallback(
      (_) => {
        i('model')(_),
          clearTimeout(s.current),
          (s.current = setTimeout(() => {
            const m = document.getElementById($s);
            m && m.focus();
          }, 150));
      },
      [i],
    );
  return t.jsx(nm, {
    selectPlaceholder: n('com_ui_select_model'),
    searchPlaceholder: n('com_ui_select_search_model'),
    isCollapsed: e,
    ariaLabel: 'model',
    selectedValue: c ?? '',
    setValue: d,
    items: l,
    SelectIcon: t.jsx(rr, { isCreatedByUser: !1, endpoint: r }),
  });
}
function f2(e) {
  return he(e.endpoint) && e.endpointKeyProvided
    ? t.jsxs(t.Fragment, {
        children: [
          t.jsx(h2, { ...e }),
          t.jsx(rs, { className: 'bg-gray-100/50 dark:bg-gray-600' }),
        ],
      })
    : he(e.endpoint)
    ? null
    : t.jsxs(t.Fragment, {
        children: [
          t.jsx(g2, { ...e }),
          t.jsx(rs, { className: 'bg-gray-100/50 dark:bg-gray-600' }),
        ],
      });
}
const x2 = gp,
  Gm = p.forwardRef(({ className: e = '', ...n }, o) =>
    t.jsx(hp, { ref: o, className: b('border-b', e), ...n }),
  );
Gm.displayName = 'AccordionItem';
const v2 = p.forwardRef(({ className: e = '', children: n, ...o }, a) =>
  t.jsx(b_, {
    className: 'flex',
    children: t.jsxs(zs, {
      ref: a,
      className: b(
        'flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180',
        e,
      ),
      ...o,
      children: [
        n,
        t.jsx(fs, {
          className: 'text-muted-foreground h-4 w-4 shrink-0 transition-transform duration-200',
        }),
      ],
    }),
  }),
);
v2.displayName = zs.displayName;
const Km = p.forwardRef(({ className: e = '', children: n, ...o }, a) =>
  t.jsx(y_, {
    ref: a,
    className:
      'overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down',
    ...o,
    children: t.jsx('div', { className: b('pb-4 pt-0', e), children: n }),
  }),
);
Km.displayName = y_.displayName;
function b2({ links: e, isCollapsed: n, resize: o, defaultActive: a }) {
  const i = D(),
    [s, r] = p.useState(a),
    c = (d) => (d.id === s ? 'default' : 'ghost'),
    l = (d) => {
      localStorage.setItem('side:active-panel', d + ''), r(d);
    };
  return t.jsx('div', {
    'data-collapsed': n,
    className:
      'bg-token-sidebar-surface-primary hide-scrollbar group flex-shrink-0 overflow-x-hidden py-2 data-[collapsed=true]:py-2',
    children: t.jsx('div', {
      className: 'h-full',
      children: t.jsx('div', {
        className: 'flex h-full min-h-0 flex-col',
        children: t.jsx('div', {
          className: 'flex h-full min-h-0 flex-col opacity-100 transition-opacity',
          children: t.jsx('div', {
            className:
              'scrollbar-trigger relative h-full w-full flex-1 items-start border-white/20',
            children: t.jsx('nav', {
              className:
                'flex h-full w-full flex-col gap-1 px-2 px-3 pb-3.5 group-[[data-collapsed=true]]:items-center group-[[data-collapsed=true]]:justify-center group-[[data-collapsed=true]]:px-2',
              children: e.map((d, _) => {
                const m = c(d);
                return n
                  ? t.jsxs(
                      ht,
                      {
                        delayDuration: 0,
                        children: [
                          t.jsx(gt, {
                            asChild: !0,
                            children: t.jsxs('button', {
                              className: b(
                                ss({ variant: m, size: 'icon' }),
                                tt,
                                'h-9 w-9',
                                m === 'default'
                                  ? 'dark:bg-muted dark:text-muted-foreground dark:hover:bg-muted dark:hover:text-white'
                                  : '',
                              ),
                              onClick: () => {
                                if (d.onClick) {
                                  d.onClick(), l('');
                                  return;
                                }
                                l(d.id), o && o(25);
                              },
                              children: [
                                t.jsx(d.icon, { className: 'h-4 w-4' }),
                                t.jsx('span', { className: 'sr-only', children: d.title }),
                              ],
                            }),
                          }),
                          t.jsxs(ft, {
                            side: 'left',
                            sideOffset: 10,
                            className: 'flex items-center gap-4',
                            children: [
                              i(d.title),
                              d.label &&
                                t.jsx('span', {
                                  className: 'text-muted-foreground ml-auto',
                                  children: d.label,
                                }),
                            ],
                          }),
                        ],
                      },
                      _,
                    )
                  : t.jsx(
                      x2,
                      {
                        type: 'single',
                        value: s,
                        onValueChange: l,
                        collapsible: !0,
                        children: t.jsxs(Gm, {
                          value: d.id,
                          className: 'w-full border-none',
                          children: [
                            t.jsx(b_, {
                              asChild: !0,
                              children: t.jsx(zs, {
                                asChild: !0,
                                children: t.jsxs('button', {
                                  className: b(
                                    ss({ variant: m, size: 'sm' }),
                                    tt,
                                    m === 'default'
                                      ? 'dark:bg-muted dark:hover:bg-muted dark:text-white dark:hover:text-white'
                                      : '',
                                    'hover:bg-gray-50 data-[state=open]:bg-gray-50 data-[state=open]:text-black dark:hover:bg-gray-700 dark:data-[state=open]:bg-gray-700 dark:data-[state=open]:text-white',
                                    'w-full justify-start rounded-md border dark:border-gray-700',
                                  ),
                                  onClick: () => {
                                    d.onClick && (d.onClick(), l(''));
                                  },
                                  children: [
                                    t.jsx(d.icon, { className: 'mr-2 h-4 w-4' }),
                                    i(d.title),
                                    d.label &&
                                      t.jsx('span', {
                                        className: b(
                                          'ml-auto transition-all duration-300 ease-in-out',
                                          m === 'default' ? 'text-background dark:text-white' : '',
                                          n ? 'opacity-0' : 'opacity-100',
                                        ),
                                        children: d.label,
                                      }),
                                  ],
                                }),
                              }),
                            }),
                            t.jsx(Km, {
                              className: 'w-full dark:text-white',
                              children: d.Component && t.jsx(d.Component, {}),
                            }),
                          ],
                        }),
                      },
                      _,
                    );
              }),
            }),
          }),
        }),
      }),
    }),
  });
}
const yo = 20,
  y2 = Fa().interface,
  k2 = ({
    defaultLayout: e = [97, 3],
    defaultCollapsed: n = !1,
    fullPanelCollapse: o = !1,
    navCollapsedSize: a = 3,
    children: i,
  }) => {
    var L;
    const [s, r] = p.useState(!1),
      [c, l] = p.useState(yo),
      [d, _] = Yo('newUser', !0),
      [m, f] = p.useState(n),
      [g, h] = p.useState(o),
      [v, x] = p.useState(a),
      { data: y = {} } = Se(),
      { data: k } = bt(),
      C = p.useMemo(() => (k == null ? void 0 : k.interface) ?? y2, [k]),
      j = Dn('(max-width: 767px)'),
      { conversation: w } = me(),
      { endpoint: T } = w ?? {},
      { data: S = { expiresAt: void 0 } } = ud(T ?? ''),
      I = p.useRef(null),
      P = p.useMemo(() => {
        const z = localStorage.getItem('side:active-panel');
        return z || void 0;
      }, []),
      F = p.useMemo(() => (y == null ? void 0 : y[T ?? '']), [T, y]),
      R = p.useMemo(() => {
        var z;
        return !!((z = y == null ? void 0 : y[T ?? '']) != null && z.userProvide);
      }, [y, T]),
      E = p.useMemo(
        () => (R ? !!(S != null && S.expiresAt) : !0),
        [S == null ? void 0 : S.expiresAt, R],
      ),
      M = p.useCallback(() => {
        var z;
        f(!0),
          x(0),
          l(yo),
          h(!0),
          localStorage.setItem('fullPanelCollapse', 'true'),
          (z = I.current) == null || z.collapse();
      }, []),
      A = p2({ hidePanel: M, assistants: F, keyProvided: E, endpoint: T, interfaceConfig: C }),
      q = p.useCallback(
        ha((z) => {
          localStorage.setItem('react-resizable-panels:layout', JSON.stringify(z));
        }, 350),
        [],
      );
    p.useEffect(() => {
      var z;
      if (j) {
        f(!0),
          x(0),
          l(yo),
          h(!0),
          localStorage.setItem('fullPanelCollapse', 'true'),
          (z = I.current) == null || z.collapse();
        return;
      } else f(n), x(a), l(yo);
    }, [j, n, a, o]);
    const $ = p.useCallback(() => {
      var z, B;
      d && _(!1),
        f(
          (U) => (
            U && (l(yo), x(a), h(!1), localStorage.setItem('fullPanelCollapse', 'false')), !U
          ),
        ),
        m ? (B = I.current) == null || B.expand() : (z = I.current) == null || z.collapse();
    }, [m, d, _, a]);
    return t.jsxs(t.Fragment, {
      children: [
        t.jsx(pt, {
          delayDuration: 0,
          children: t.jsxs(Eb, {
            direction: 'horizontal',
            onLayout: (z) => q(z),
            className:
              'transition-width relative h-full w-full flex-1 overflow-auto bg-white dark:bg-gray-800',
            children: [
              t.jsx(rl, { defaultSize: e[0], minSize: 30, children: i }),
              t.jsx(pt, {
                delayDuration: 400,
                children: t.jsx(ht, {
                  children: t.jsx('div', {
                    onMouseEnter: () => r(!0),
                    onMouseLeave: () => r(!1),
                    className: 'relative flex w-px items-center justify-center',
                    children: t.jsx(Vm, {
                      navVisible: !m,
                      isHovering: s,
                      onToggle: $,
                      setIsHovering: r,
                      className: b(
                        'fixed top-1/2',
                        (m && (c === 0 || v === 0)) || g ? 'mr-9' : 'mr-16',
                      ),
                      translateX: !1,
                      side: 'right',
                    }),
                  }),
                }),
              }),
              (!m || c > 0) &&
                !j &&
                !g &&
                t.jsx(Mb, { withHandle: !0, className: 'bg-transparent dark:text-white' }),
              t.jsxs(rl, {
                collapsedSize: v,
                defaultSize: e[1],
                collapsible: !0,
                minSize: c,
                maxSize: 40,
                ref: I,
                style: {
                  overflowY: 'auto',
                  transition: 'width 0.2s ease, visibility 0s linear 0.2s',
                },
                onExpand: () => {
                  f(!1), localStorage.setItem('react-resizable-panels:collapsed', 'false');
                },
                onCollapse: () => {
                  f(!0), localStorage.setItem('react-resizable-panels:collapsed', 'true');
                },
                className: b(
                  'sidenav hide-scrollbar border-l border-gray-200 bg-white transition-opacity dark:border-gray-800/50 dark:bg-gray-850',
                  m ? 'min-w-[50px]' : 'min-w-[340px] sm:min-w-[352px]',
                  (j && m && (c === 0 || v === 0)) || g ? 'hidden min-w-0' : 'opacity-100',
                ),
                children: [
                  C.modelSelect &&
                    t.jsx('div', {
                      className: b(
                        'sticky left-0 right-0 top-0 z-[100] flex h-[52px] flex-wrap items-center justify-center bg-white dark:bg-gray-850',
                        m ? 'h-[52px]' : 'px-2',
                      ),
                      children: t.jsx(f2, { isCollapsed: m, endpointKeyProvided: E, endpoint: T }),
                    }),
                  t.jsx(b2, {
                    resize: (L = I.current) == null ? void 0 : L.resize,
                    isCollapsed: m,
                    defaultActive: P,
                    links: A,
                  }),
                ],
              }),
            ],
          }),
        }),
        t.jsx('div', {
          className: `nav-mask${m ? '' : ' active'}`,
          onClick: () => {
            var z;
            f(() => (localStorage.setItem('fullPanelCollapse', 'true'), h(!0), x(0), l(0), !1)),
              (z = I.current) == null || z.collapse();
          },
        }),
      ],
    });
  },
  w2 = p.memo(k2),
  j2 = Fa().interface;
function C2({ children: e, useSidePanel: n = !1, panel: o }) {
  const { data: a } = bt(),
    i = Y(O.hideSidePanel),
    s = p.useMemo(() => (a == null ? void 0 : a.interface) ?? j2, [a]),
    r = ei(),
    { isOver: c, canDrop: l, drop: d } = F1(),
    { mutateAsync: _ } = Wa({
      onSuccess: () => {
        console.log('Temporary Files deleted'), r({});
      },
      onError: (x) => {
        console.log('Error deleting temporary files:', x);
      },
    });
  p.useEffect(() => {
    const x = localStorage.getItem(te.FILES_TO_DELETE),
      y = JSON.parse(x ?? '{}'),
      k = Object.values(y)
        .filter((C) => C.filepath && C.source && !C.embedded && C.temp_file_id)
        .map((C) => ({
          file_id: C.file_id,
          filepath: C.filepath,
          source: C.source,
          embedded: !!C.embedded,
        }));
    k.length !== 0 && _({ files: k });
  }, [_]);
  const m = l && c,
    f = p.useMemo(() => {
      const x = localStorage.getItem('react-resizable-panels:layout');
      return x ? JSON.parse(x) : void 0;
    }, []),
    g = p.useMemo(() => {
      const x = localStorage.getItem('react-resizable-panels:collapsed');
      return x ? JSON.parse(x) : void 0;
    }, []),
    h = p.useMemo(() => localStorage.getItem('fullPanelCollapse') === 'true', []),
    v = () =>
      t.jsx('div', {
        className:
          'transition-width relative flex h-full w-full flex-1 flex-col items-stretch overflow-hidden bg-white pt-0 dark:bg-gray-800',
        children: t.jsxs('div', {
          className: 'flex h-full flex-col',
          role: 'presentation',
          tabIndex: 0,
          children: [e, m && t.jsx(sl, {})],
        }),
      });
  return n && !i && s.sidePanel
    ? t.jsx('div', {
        ref: d,
        className: 'relative flex w-full grow overflow-hidden bg-white dark:bg-gray-800',
        children: t.jsx(w2, {
          defaultLayout: f,
          defaultCollapsed: g,
          fullPanelCollapse: h,
          children: t.jsxs('div', {
            className: 'flex h-full flex-col',
            role: 'presentation',
            tabIndex: 0,
            children: [e, m && t.jsx(sl, {})],
          }),
        }),
      })
    : t.jsxs('div', {
        ref: d,
        className: 'relative flex w-full grow overflow-hidden bg-white dark:bg-gray-800',
        children: [v(), o && o],
      });
}
const N2 = ({ conversationId: e, textAreaRef: n, files: o, setFiles: a, setValue: i }) => {
    const s = Y(O.saveDrafts),
      [r, c] = p.useState(null),
      l = p.useMemo(() => Array.from(o.keys()), [o]),
      { data: d } = Ga(),
      _ = (x) => {
        try {
          const y = new TextEncoder().encode(x);
          return btoa(String.fromCharCode(...y));
        } catch {
          return '';
        }
      },
      m = (x) => {
        try {
          const y = atob(x),
            k = new Uint8Array(y.length);
          for (let C = 0; C < y.length; C++) k[C] = y.charCodeAt(C);
          return new TextDecoder().decode(k);
        } catch {
          return '';
        }
      },
      f = p.useCallback(
        (x) => {
          const y = JSON.parse(localStorage.getItem(`${te.FILES_DRAFT}${x}`) || '[]');
          if (y.length === 0) {
            a(new Map());
            return;
          }
          y.forEach((k) => {
            const C = d == null ? void 0 : d.find((S) => S.file_id === k),
              j = d == null ? void 0 : d.find((S) => S.temp_file_id === k),
              { fileToRecover: w, fileIdToRecover: T } = C
                ? { fileToRecover: C, fileIdToRecover: k }
                : { fileToRecover: j, fileIdToRecover: (j == null ? void 0 : j.temp_file_id) || k };
            w &&
              a((S) => {
                const I = new Map(S);
                return I.set(T, { ...w, progress: 1, attached: !0, size: w.bytes }), I;
              });
          });
        },
        [d, a],
      ),
      g = p.useCallback(
        (x) => {
          const y = localStorage.getItem(`${te.TEXT_DRAFT}${x}`) || '';
          i('text', m(y));
        },
        [i],
      ),
      h = p.useCallback(
        (x) => {
          n != null &&
            n.current &&
            (n.current.value === ''
              ? localStorage.removeItem(`${te.TEXT_DRAFT}${x}`)
              : localStorage.setItem(`${te.TEXT_DRAFT}${x}`, _(n.current.value)));
        },
        [n],
      );
    return (
      p.useEffect(() => {
        if (!s || !e) return;
        const x = Rn(() => {
            n.current && n.current.value
              ? localStorage.setItem(`${te.TEXT_DRAFT}${e}`, _(n.current.value))
              : localStorage.removeItem(`${te.TEXT_DRAFT}${e}`);
          }, 1e3),
          y = n.current;
        return (
          y && y.addEventListener('input', x),
          () => {
            y && y.removeEventListener('input', x), x.cancel();
          }
        );
      }, [e, s, n]),
      p.useEffect(() => {
        if (!(!s || !e) && e !== r) {
          a(new Map());
          try {
            r && h(r), g(e), f(e);
          } catch (x) {
            console.error(x);
          }
          c(e);
        }
      }, [e, r, f, g, s, h, a]),
      p.useEffect(() => {
        !s ||
          !e ||
          r !== e ||
          (l.length === 0
            ? localStorage.removeItem(`${te.FILES_DRAFT}${e}`)
            : localStorage.setItem(`${te.FILES_DRAFT}${e}`, JSON.stringify(l)));
      }, [o, e, s, r, l]),
      {
        clearDraft: p.useCallback(() => {
          e &&
            (localStorage.removeItem(`${te.TEXT_DRAFT}${e}`),
            localStorage.removeItem(`${te.FILES_DRAFT}${e}`));
        }, [e]),
      }
    );
  },
  S2 = ({ endpoint: e, endpointType: n, disabled: o = !1 }) => {
    const { handleFileChange: a } = Jo(),
      { data: i = Lt } = wn({ select: (r) => yn(r) }),
      s = i.endpoints[e ?? ''];
    return !z_[n ?? e ?? ''] || (s != null && s.disabled)
      ? null
      : t.jsx('div', {
          className: 'absolute bottom-2 left-2 md:bottom-3 md:left-4',
          children: t.jsx(Ex, {
            handleFileChange: a,
            className: 'flex',
            children: t.jsx('button', {
              disabled: !!o,
              type: 'button',
              className: 'btn relative p-0 text-black dark:text-white',
              'aria-label': 'Attach files',
              style: { padding: 0 },
              children: t.jsx('div', {
                className: 'flex w-full items-center justify-center gap-2',
                children: t.jsx(rm, {}),
              }),
            }),
          }),
        });
  },
  A2 = ze.memo(S2);
function T2({ textAreaRef: e, methods: n, ask: o, disabled: a }) {
  const i = D(),
    s = (v) => {
      if (v) {
        const x = document.getElementById(Ha);
        x && (console.log('Unmuting global audio'), (x.muted = !1)),
          o({ text: v }),
          n.reset({ text: '' }),
          m();
      }
    },
    {
      isListening: r,
      isLoading: c,
      startRecording: l,
      stopRecording: d,
      speechText: _,
      clearText: m,
    } = H1(s);
  p.useEffect(() => {
    e.current && ((e.current.value = _), n.setValue('text', _, { shouldValidate: !0 }));
  }, [_, n, e]);
  const f = async () => {
      await l();
    },
    g = async () => {
      await d();
    },
    h = () =>
      r
        ? t.jsx(Zc, { className: 'stroke-red-500' })
        : c
        ? t.jsx(Oe, { className: 'stroke-gray-700 dark:stroke-gray-300' })
        : t.jsx(Zc, { className: 'stroke-gray-700 dark:stroke-gray-300' });
  return t.jsx(pt, {
    delayDuration: 250,
    children: t.jsxs(ht, {
      children: [
        t.jsx(gt, {
          asChild: !0,
          children: t.jsx('button', {
            onClick: r ? g : f,
            disabled: a,
            className:
              'absolute bottom-1.5 right-12 flex h-[30px] w-[30px] items-center justify-center rounded-lg p-0.5 transition-colors hover:bg-gray-200 dark:hover:bg-gray-700 md:bottom-3 md:right-12',
            type: 'button',
            children: h(),
          }),
        }),
        t.jsx(ft, { side: 'top', sideOffset: 10, children: i('com_ui_use_micrphone') }),
      ],
    }),
  });
}
function I2(e, n) {
  return new Promise((o, a) => setTimeout(() => a(new Error(n ?? 'Promise timed out')), e));
}
const Di = 'Reader promise timed out',
  z2 = 15e3;
function L2({ index: e = 0 }) {
  const { token: n } = Re(),
    o = Y(O.cacheTTS),
    a = Y(O.playbackRate),
    i = Y(O.voice),
    s = Y(O.activeRunFamily(e)),
    r = Y(O.automaticPlayback),
    c = Y(O.isSubmittingFamily(e)),
    l = Y(O.latestMessageFamily(e)),
    d = ye(O.globalAudioPlayingFamily(e)),
    [_, m] = W(O.audioRunFamily(e)),
    [f, g] = W(O.globalAudioFetchingFamily(e)),
    [h, v] = W(O.globalAudioURLFamily(e)),
    { audioRef: x } = S1({ setIsPlaying: d }),
    { pauseGlobalAudio: y } = Ks(),
    { conversationId: k } = Kt(),
    C = k === 'new' ? k : (l == null ? void 0 : l.conversationId) ?? k ?? '',
    j = X(),
    w = p.useCallback(() => j.getQueryData([G.messages, C]), [C, j]);
  return (
    p.useEffect(() => {
      const T = J_(l);
      if (
        !!!(
          n &&
          r &&
          c &&
          l &&
          !l.isCreatedByUser &&
          T &&
          l.messageId &&
          !l.messageId.includes('_') &&
          !f &&
          s &&
          s !== _
        )
      )
        return;
      async function I() {
        g(!0);
        try {
          x.current && (x.current.pause(), URL.revokeObjectURL(x.current.src), v(null));
          let P = (l == null ? void 0 : l.text) ?? '';
          const F = await caches.open('tts-responses'),
            R = await F.match(P);
          if ((m(s), R)) {
            console.log('Audio found in cache');
            const B = await R.blob(),
              U = URL.createObjectURL(B);
            v(U), g(!1);
            return;
          }
          console.log('Fetching audio...', navigator.userAgent);
          const E = await fetch('/api/files/tts', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${n}` },
            body: JSON.stringify({
              messageId: l == null ? void 0 : l.messageId,
              runId: s,
              voice: i,
            }),
          });
          if (!E.ok) throw new Error('Failed to fetch audio');
          if (!E.body) throw new Error('Null Response body');
          const M = E.body.getReader(),
            A = 'audio/mpeg',
            q = MediaSource.isTypeSupported(A);
          let $;
          q && (($ = new N1(A)), v($.mediaSourceUrl));
          let L = !1;
          const z = [];
          for (; !L; ) {
            const B = M.read(),
              { value: U, done: V } = await Promise.race([B, I2(z2, Di)]);
            o && U && z.push(U), U && $ && $.addData(U), (L = V);
          }
          if (z.length) {
            console.log('Adding audio to cache');
            const U = (w() ?? []).find((ne) => ne.messageId === (l == null ? void 0 : l.messageId));
            if (((P = (U == null ? void 0 : U.text) ?? ''), !P))
              throw new Error('Cache key not found');
            const V = new Blob(z, { type: A }),
              H = new Response(V);
            if ((await F.put(P, H), !q)) {
              const ne = await F.match(P);
              if (!ne) throw new Error('Failed to fetch audio from cache');
              const re = await ne.blob(),
                Ee = URL.createObjectURL(re);
              v(Ee);
            }
            g(!1);
          }
          console.log('Audio stream reading ended');
        } catch (P) {
          if ((P == null ? void 0 : P.message) !== Di) {
            console.log(Di);
            return;
          }
          console.error('Error fetching audio:', P), g(!1), v(null);
        } finally {
          g(!1);
        }
      }
      I();
    }, [r, v, m, g, l, c, s, w, f, _, o, x, i, n]),
    p.useEffect(() => {
      a && h && a > 0 && x.current && x.current.playbackRate !== a && (x.current.playbackRate = a);
    }, [x, h, a]),
    p.useEffect(() => {
      y();
    }, [k]),
    t.jsx('audio', {
      ref: x,
      controls: !0,
      controlsList: 'nodownload nofullscreen noremoteplayback',
      style: {
        position: 'absolute',
        overflow: 'hidden',
        display: 'none',
        height: '0px',
        width: '0px',
      },
      src: h || void 0,
      id: Ha,
      muted: !0,
      autoPlay: !0,
    })
  );
}
function P2({ stop: e, setShowStopButton: n }) {
  return t.jsx('div', {
    className: 'absolute bottom-0 right-2 top-0 p-1 md:right-3 md:p-2',
    children: t.jsx('div', {
      className: 'flex h-full',
      children: t.jsx('div', {
        className: 'flex h-full flex-row items-center justify-center gap-3',
        children: t.jsx('button', {
          type: 'button',
          className: 'border-gizmo-gray-900 rounded-full border-2 p-1 dark:border-gray-200',
          'aria-label': 'Stop generating',
          onClick: (o) => {
            n(!1), e(o);
          },
          children: t.jsx('svg', {
            xmlns: 'http://www.w3.org/2000/svg',
            viewBox: '0 0 16 16',
            fill: 'currentColor',
            className: 'text-gizmo-gray-900 h-2 w-2 dark:text-gray-200',
            height: '16',
            width: '16',
            children: t.jsx('path', {
              d: 'M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2z',
              strokeWidth: '0',
            }),
          }),
        }),
      }),
    }),
  });
}
const E2 = ze.memo(
    p.forwardRef((e, n) => {
      const o = D();
      return t.jsx(pt, {
        delayDuration: 250,
        children: t.jsxs(ht, {
          children: [
            t.jsx(gt, {
              asChild: !0,
              children: t.jsx('button', {
                ref: n,
                disabled: e.disabled,
                className: b(
                  'absolute bottom-1.5 right-2 rounded-lg border border-black p-0.5 text-white transition-colors enabled:bg-black disabled:bg-black disabled:text-gray-400 disabled:opacity-10 dark:border-white dark:bg-white dark:disabled:bg-white md:bottom-3 md:right-3',
                ),
                'data-testid': 'send-button',
                type: 'submit',
                children: t.jsx('span', {
                  className: '',
                  'data-state': 'closed',
                  children: t.jsx(Zx, { size: 24 }),
                }),
              }),
            }),
            t.jsx(ft, { side: 'top', sideOffset: 10, children: o('com_nav_send_message') }),
          ],
        }),
      });
    }),
  ),
  M2 = ze.memo(
    p.forwardRef((e, n) => {
      const o = fn({ control: e.control });
      return t.jsx(E2, { ref: n, disabled: e.disabled || !(o != null && o.text) });
    }),
  );
function R2({ presets: e, modelSpecs: n, endpointsConfig: o, assistantMap: a }) {
  const { conversation: i } = me(),
    { newConversation: s } = sn(),
    r = Ho(),
    c = Y(O.modularChat),
    l = Y(O.availableTools),
    d = p.useCallback(
      (g) => {
        if (!g) return;
        const { preset: h } = g;
        (h.iconURL = to(g)), (h.spec = g.name);
        const { endpoint: v } = h;
        if (!v) return;
        const {
          shouldSwitch: x,
          isNewModular: y,
          isCurrentModular: k,
          isExistingConversation: C,
          newEndpointType: j,
          template: w,
        } = Qn({ newEndpoint: v, modularChat: c, conversation: i, endpointsConfig: o });
        if (C && k && y && x) {
          w.endpointType = j;
          const T = r({ conversation: { ...(i ?? {}), endpointType: w.endpointType }, preset: w });
          s({ template: T, preset: h, keepLatestMessage: !0 });
          return;
        }
        s({ template: { ...w }, preset: h });
      },
      [i, r, c, s, o],
    ),
    _ = p.useCallback(
      (g, h = {}) => {
        if (!g) return;
        const {
          shouldSwitch: v,
          isNewModular: x,
          isCurrentModular: y,
          isExistingConversation: k,
          newEndpointType: C,
          template: j,
        } = Qn({ newEndpoint: g, modularChat: c, conversation: i, endpointsConfig: o });
        if (
          (h.model && (j.model = h.model),
          h.assistant_id && (j.assistant_id = h.assistant_id),
          k && y && x && v)
        ) {
          j.endpointType = C;
          const w = r({ conversation: { ...(i ?? {}), endpointType: j.endpointType }, preset: j });
          s({ template: w, preset: w, keepLatestMessage: !0 });
          return;
        }
        s({ template: { ...j }, preset: { ...h, endpoint: g } });
      },
      [i, r, c, s, o],
    ),
    m = p.useCallback(
      (g) => {
        if (!g) return;
        const h = W_(g, l),
          v = h.endpoint ?? '',
          {
            shouldSwitch: x,
            isNewModular: y,
            isCurrentModular: k,
            isExistingConversation: C,
            newEndpointType: j,
            template: w,
          } = Qn({ newEndpoint: v, modularChat: c, conversation: i, endpointsConfig: o });
        if (C && k && y && x) {
          w.endpointType = j;
          const T = r({ conversation: { ...(i ?? {}), endpointType: w.endpointType }, preset: w });
          s({ template: T, preset: h, keepLatestMessage: !0 });
          return;
        }
        s({ preset: h });
      },
      [l, i, r, c, s, o],
    );
  return {
    onSelectMention: p.useCallback(
      (g) => {
        var v, x;
        const h = g.value;
        if (g.type === 'preset') {
          const y = e == null ? void 0 : e.find((k) => k.presetId === h);
          m(y);
        } else if (g.type === 'modelSpec') {
          const y = n.find((k) => k.name === h);
          d(y);
        } else
          g.type === 'model'
            ? _(h, { model: g.label })
            : g.type === 'endpoint'
            ? _(h)
            : he(g.type) &&
              _(g.type, {
                assistant_id: h,
                model:
                  ((x = (v = a == null ? void 0 : a[g.type]) == null ? void 0 : v[h]) == null
                    ? void 0
                    : x.model) ?? '',
              });
      },
      [n, _, m, d, e, a],
    ),
  };
}
const O2 = Fa().interface,
  dl =
    ({ endpoint: e, assistantMap: n, endpointsConfig: o }) =>
    ({ id: a, name: i, description: s }) => ({
      type: e,
      label: i ?? '',
      value: a,
      description: s ?? '',
      icon: zo({
        conversation: { assistant_id: a, endpoint: e },
        containerClassName: 'shadow-stroke overflow-hidden rounded-full',
        endpointsConfig: o,
        context: 'menu-item',
        assistantMap: n,
        size: 20,
      }),
    });
function D2({ assistantMap: e }) {
  const { data: n } = X_(),
    { data: o } = Qt(),
    { data: a } = bt(),
    { data: i } = Se(),
    { data: s = [] } = Se({ select: qa }),
    r = so((f) =>
      f.data.map(({ id: g, name: h, description: v }) => ({ id: g, name: h, description: v })),
    ),
    c = p.useMemo(() => {
      var f, g, h, v;
      return {
        [N.assistants]:
          (g =
            (f = r[N.assistants]) == null
              ? void 0
              : f.map(dl({ endpoint: N.assistants, assistantMap: e, endpointsConfig: i }))) == null
            ? void 0
            : g.filter(Boolean),
        [N.azureAssistants]:
          (v =
            (h = r[N.azureAssistants]) == null
              ? void 0
              : h.map(dl({ endpoint: N.azureAssistants, assistantMap: e, endpointsConfig: i }))) ==
          null
            ? void 0
            : v.filter(Boolean),
      };
    }, [r, e, i]),
    l = p.useMemo(() => {
      var f;
      return ((f = a == null ? void 0 : a.modelSpecs) == null ? void 0 : f.list) ?? [];
    }, [a]),
    d = p.useMemo(() => (a == null ? void 0 : a.interface) ?? O2, [a]),
    { onSelectMention: _ } = R2({ modelSpecs: l, endpointsConfig: i, presets: n, assistantMap: e });
  return {
    options: p.useMemo(() => {
      var g;
      return [
        ...((l == null ? void 0 : l.length) > 0 ? l : []).map((h) => ({
          value: h.name,
          label: h.label,
          description: h.description,
          icon: zo({
            conversation: { ...h.preset, iconURL: h.iconURL },
            endpointsConfig: i,
            context: 'menu-item',
            size: 20,
          }),
          type: 'modelSpec',
        })),
        ...(d.endpointsMenu ? s : []).map((h) => ({
          value: h,
          label: Vo[h] ?? h ?? '',
          type: 'endpoint',
          icon: zo({
            conversation: { endpoint: h },
            endpointsConfig: i,
            context: 'menu-item',
            size: 20,
          }),
        })),
        ...(i != null && i[N.assistants] ? c[N.assistants] || [] : []),
        ...(i != null && i[N.azureAssistants] ? c[N.azureAssistants] || [] : []),
        ...(((g = d.presets ? n : []) == null
          ? void 0
          : g.map((h, v) => ({
              value: h.presetId ?? `preset-${v}`,
              label: h.title ?? h.modelLabel ?? h.chatGptLabel ?? '',
              description: H_(h, !0),
              icon: zo({
                conversation: h,
                containerClassName: 'shadow-stroke overflow-hidden rounded-full',
                endpointsConfig: i,
                context: 'menu-item',
                assistantMap: e,
                size: 20,
              }),
              type: 'preset',
            }))) ?? []),
      ];
    }, [n, s, l, e, i, c, d.presets, d.endpointsMenu]),
    modelsConfig: o,
    onSelectMention: _,
    assistantListMap: c,
  };
}
function F2({ name: e, onClick: n, index: o, icon: a, isActive: i, description: s }) {
  return t.jsx('div', {
    tabIndex: o,
    onClick: n,
    id: `mention-item-${o}`,
    className: 'cursor-pointer',
    children: t.jsxs('div', {
      className: b(
        'text-token-text-primary bg-token-main-surface-secondary group flex h-10 items-center gap-2 rounded-lg px-2 text-sm font-medium hover:bg-gray-100 dark:hover:bg-gray-600',
        i ? 'bg-gray-100 dark:bg-gray-600' : '',
      ),
      children: [
        a || null,
        t.jsxs('div', {
          className:
            'flex h-fit grow flex-row justify-between space-x-2 overflow-hidden text-ellipsis whitespace-nowrap',
          children: [
            t.jsxs('div', {
              className: 'flex flex-row space-x-2',
              children: [
                t.jsx('span', { className: 'shrink-0 truncate', children: e }),
                s
                  ? t.jsx('span', {
                      className:
                        'text-token-text-tertiary flex-grow truncate text-sm font-light sm:max-w-xs lg:max-w-md',
                      children: s,
                    })
                  : null,
              ],
            }),
            t.jsx('span', {
              className: 'shrink-0 self-center',
              children: t.jsx(fp, { size: 16, className: 'icon-sm' }),
            }),
          ],
        }),
      ],
    }),
  });
}
function B2({ setShowMentionPopover: e, textAreaRef: n }) {
  const o = D(),
    a = Mt(),
    {
      options: i,
      modelsConfig: s,
      assistantListMap: r,
      onSelectMention: c,
    } = D2({ assistantMap: a }),
    [l, d] = p.useState(0),
    _ = p.useRef(null),
    m = p.useRef(null),
    [f, g] = p.useState(i),
    {
      open: h,
      setOpen: v,
      searchValue: x,
      setSearchValue: y,
      matches: k,
    } = Id({ value: '', options: f }),
    C = (j) => {
      var T, S, I;
      if (!j) return;
      const w = () => {
        y(''), v(!1), e(!1), c(j), n.current && _g(n.current);
      };
      if (j.type === 'endpoint' && j.value === N.assistants)
        y(''), g(r[N.assistants]), d(0), (T = m.current) == null || T.focus();
      else if (j.type === 'endpoint' && j.value === N.azureAssistants)
        y(''), g(r[N.azureAssistants]), d(0), (S = m.current) == null || S.focus();
      else if (j.type === 'endpoint') {
        const P = ((s == null ? void 0 : s[j.value ?? '']) ?? []).map((F) => ({
          value: j.value,
          label: F,
          type: 'model',
        }));
        d(0), y(''), g(P), (I = m.current) == null || I.focus();
      } else w();
    };
  return (
    p.useEffect(() => {
      h || (g(i), d(0));
    }, [h, i]),
    p.useEffect(() => {
      const j = document.getElementById(`mention-item-${l}`);
      j == null || j.scrollIntoView({ behavior: 'instant', block: 'nearest' });
    }, [l]),
    t.jsx('div', {
      className: 'absolute bottom-16 z-10 w-full space-y-2',
      children: t.jsxs('div', {
        className:
          'popover border-token-border-light rounded-2xl border bg-white p-2 shadow-lg dark:bg-gray-700',
        children: [
          t.jsx('input', {
            autoFocus: !0,
            ref: m,
            placeholder: o('com_ui_mention'),
            className:
              'mb-1 w-full border-0 bg-white p-2 text-sm focus:outline-none dark:bg-gray-700 dark:text-gray-200',
            autoComplete: 'off',
            value: x,
            onKeyDown: (j) => {
              var w, T;
              if (
                (j.key === 'Escape' && (v(!1), e(!1), (w = n.current) == null || w.focus()),
                j.key === 'ArrowDown')
              )
                d((S) => (S + 1) % k.length);
              else if (j.key === 'ArrowUp') d((S) => (S - 1 + k.length) % k.length);
              else if (j.key === 'Enter' || j.key === 'Tab') {
                const S = k[l];
                ((S == null ? void 0 : S.type) === 'endpoint' || j.key === 'Enter') &&
                  j.preventDefault(),
                  C(k[l]);
              } else
                j.key === 'Backspace' &&
                  x === '' &&
                  (v(!1), e(!1), (T = n.current) == null || T.focus());
            },
            onChange: (j) => y(j.target.value),
            onFocus: () => v(!0),
            onBlur: () => {
              _.current = setTimeout(() => {
                v(!1), e(!1);
              }, 150);
            },
          }),
          h &&
            t.jsx('div', {
              className: 'max-h-40 overflow-y-auto',
              children: k.map((j, w) =>
                t.jsx(
                  F2,
                  {
                    index: w,
                    onClick: () => {
                      _.current && clearTimeout(_.current), (_.current = null), C(j);
                    },
                    name: j.label ?? '',
                    icon: j.icon,
                    description: j.description,
                    isActive: w === l,
                  },
                  `${j.value}-${w}`,
                ),
              ),
            }),
        ],
      }),
    })
  );
}
const $2 = ({ index: e = 0 }) => {
    const n = p.useRef(null),
      o = p.useRef(null),
      a = Y(O.SpeechToText),
      i = Y(O.TextToSpeech),
      s = Y(O.automaticPlayback),
      [r, c] = W(O.showStopButtonByIndex(e)),
      [l, d] = W(O.showMentionPopoverFamily(e)),
      { requiresKey: _ } = U1(),
      m = an({ defaultValues: { text: '' } }),
      {
        handlePaste: f,
        handleKeyDown: g,
        handleKeyUp: h,
        handleCompositionStart: v,
        handleCompositionEnd: x,
      } = q1({ textAreaRef: o, submitButtonRef: n, disabled: !!_ }),
      {
        ask: y,
        files: k,
        setFiles: C,
        conversation: j,
        isSubmitting: w,
        filesLoading: T,
        setFilesLoading: S,
        handleStopGenerating: I,
      } = me(),
      { clearDraft: P } = N2({
        conversationId: p.useMemo(() => (j == null ? void 0 : j.conversationId), [j]),
        textAreaRef: o,
        setValue: m.setValue,
        files: k,
        setFiles: C,
      }),
      F = Mt(),
      R = p.useCallback(
        (V) => {
          if (!V) return console.warn('No data provided to submitMessage');
          y({ text: V.text }), m.reset(), P();
        },
        [y, m, P],
      ),
      { endpoint: E, endpointType: M } = j ?? { endpoint: null },
      A = M ?? E,
      { data: q = Lt } = wn({ select: (V) => yn(V) }),
      $ = q.endpoints[A ?? ''],
      L = p.useMemo(() => {
        var V;
        return (
          he(j == null ? void 0 : j.endpoint) &&
          (!(j != null && j.assistant_id) ||
            !(
              (V = F == null ? void 0 : F[(j == null ? void 0 : j.endpoint) ?? '']) != null &&
              V[(j == null ? void 0 : j.assistant_id) ?? '']
            ))
        );
      }, [j == null ? void 0 : j.assistant_id, j == null ? void 0 : j.endpoint, F]),
      z = p.useMemo(() => !!(_ || L), [_, L]),
      { ref: B, ...U } = m.register('text', {
        required: !0,
        onChange: (V) => {
          m.setValue('text', V.target.value, { shouldValidate: !0 });
        },
      });
    return t.jsx('form', {
      onSubmit: m.handleSubmit((V) => R(V)),
      className:
        'stretch mx-2 flex flex-row gap-3 last:mb-2 md:mx-4 md:last:mb-6 lg:mx-auto lg:max-w-2xl xl:max-w-3xl',
      children: t.jsx('div', {
        className: 'relative flex h-full flex-1 items-stretch md:flex-col',
        children: t.jsxs('div', {
          className: 'flex w-full items-center',
          children: [
            l && t.jsx(B2, { setShowMentionPopover: d, textAreaRef: o }),
            t.jsxs('div', {
              className:
                'bg-token-main-surface-primary relative flex w-full flex-grow flex-col overflow-hidden rounded-2xl border dark:border-gray-600 dark:text-white [&:has(textarea:focus)]:border-gray-300 [&:has(textarea:focus)]:shadow-[0_2px_6px_rgba(0,0,0,.05)] dark:[&:has(textarea:focus)]:border-gray-500',
              children: [
                t.jsx(La, {
                  files: k,
                  setFiles: C,
                  setFilesLoading: S,
                  Wrapper: ({ children: V }) =>
                    t.jsx('div', {
                      className: 'mx-2 mt-2 flex flex-wrap gap-2 px-2.5 md:pl-0 md:pr-4',
                      children: V,
                    }),
                }),
                A &&
                  t.jsx(Sx, {
                    ...U,
                    autoFocus: !0,
                    ref: (V) => {
                      B(V), (o.current = V);
                    },
                    disabled: z,
                    onPaste: f,
                    onKeyDown: g,
                    onKeyUp: h,
                    onCompositionStart: v,
                    onCompositionEnd: x,
                    id: $s,
                    tabIndex: 0,
                    'data-testid': 'text-input',
                    style: { height: 44, overflowY: 'auto' },
                    rows: 1,
                    className: b(
                      z_[M ?? A ?? ''] && !($ != null && $.disabled)
                        ? ' pl-10 md:pl-[55px]'
                        : 'pl-3 md:pl-4',
                      'm-0 w-full resize-none border-0 bg-transparent py-[10px] placeholder-black/50 focus:ring-0 focus-visible:ring-0 dark:bg-transparent dark:placeholder-white/50 md:py-3.5  ',
                      a ? 'pr-20 md:pr-[85px]' : 'pr-10 md:pr-12',
                      'max-h-[65vh] md:max-h-[75vh]',
                      Vt,
                    ),
                  }),
                t.jsx(A2, { endpoint: E ?? '', endpointType: M, disabled: z }),
                w && r
                  ? t.jsx(P2, { stop: I, setShowStopButton: c })
                  : A && t.jsx(M2, { ref: n, control: m.control, disabled: !!(T || w || z) }),
                a && t.jsx(T2, { disabled: !!z, textAreaRef: o, ask: R, methods: m }),
                i && s && t.jsx(L2, { index: e }),
              ],
            }),
          ],
        }),
      }),
    });
  },
  q2 = p.memo($2);
function U2({ Header: e }) {
  var v, x;
  const { conversation: n } = me(),
    o = Mt(),
    { data: a } = bt(),
    { data: i } = Se(),
    s = D();
  let { endpoint: r = '' } = n ?? {};
  const { assistant_id: c = null } = n ?? {};
  (r === N.chatGPTBrowser || r === N.azureOpenAI || r === N.gptPlugins) && (r = N.openAI);
  const l = n == null ? void 0 : n.iconURL;
  r = io({ endpointsConfig: i, iconURL: l, endpoint: r });
  const d = he(r),
    _ = d && ((v = o == null ? void 0 : o[r]) == null ? void 0 : v[c ?? '']),
    m = (_ && (_ == null ? void 0 : _.name)) || '',
    f = (_ && (_ == null ? void 0 : _.description)) || '',
    g = (_ && ((x = _ == null ? void 0 : _.metadata) == null ? void 0 : x.avatar)) || '';
  return t.jsx(pt, {
    delayDuration: 50,
    children: t.jsx(ht, {
      children: t.jsxs('div', {
        className: 'relative h-full',
        children: [
          t.jsx('div', { className: 'absolute left-0 right-0', children: e && e }),
          t.jsxs('div', {
            className: 'flex h-full flex-col items-center justify-center',
            children: [
              t.jsxs('div', {
                className: b('relative h-12 w-12', m && g ? 'mb-0' : 'mb-3'),
                children: [
                  t.jsx(zv, {
                    conversation: n,
                    assistantMap: o,
                    endpointsConfig: i,
                    containerClassName:
                      'shadow-stroke relative flex h-full items-center justify-center rounded-full bg-white text-black',
                    context: 'landing',
                    className: 'h-2/3 w-2/3',
                    size: 41,
                  }),
                  !!(a != null && a.showBirthdayIcon) &&
                    t.jsxs('div', {
                      children: [
                        t.jsx(gt, {
                          children: t.jsx(rv, { className: 'absolute bottom-8 right-2.5' }),
                        }),
                        t.jsx(ft, {
                          side: 'top',
                          sideOffset: 110,
                          className: '',
                          children: s('com_ui_happy_birthday'),
                        }),
                      ],
                    }),
                ],
              }),
              m
                ? t.jsxs('div', {
                    className: 'flex flex-col items-center gap-0 p-2',
                    children: [
                      t.jsx('div', {
                        className: 'text-center text-2xl font-medium dark:text-white',
                        children: m,
                      }),
                      t.jsx('div', {
                        className:
                          'text-token-text-secondary max-w-md text-center text-xl font-normal ',
                        children: f || s('com_nav_welcome_message'),
                      }),
                    ],
                  })
                : t.jsx('div', {
                    className:
                      'mb-5 max-w-[75vh] px-12 text-center text-lg font-medium dark:text-white md:px-0 md:text-2xl',
                    children: d
                      ? (n == null ? void 0 : n.greeting) ?? s('com_nav_welcome_assistant')
                      : (n == null ? void 0 : n.greeting) ?? s('com_nav_welcome_message'),
                  }),
            ],
          }),
        ],
      }),
    }),
  });
}
function Hm({ buttonClass: e, iconClass: n = '', endpoint: o, endpointType: a, model: i }) {
  var R, E;
  const {
      conversation: s,
      optionSettings: r,
      setOptionSettings: c,
      showAgentSettings: l,
      setShowAgentSettings: d,
    } = me(),
    _ = D(),
    [m, f] = W(O.currentSettingsView),
    { model: g, endpoint: h, endpointType: v } = s ?? {},
    y = a ?? o ?? v ?? h,
    k = i ?? g,
    C = (R = k == null ? void 0 : k.toLowerCase()) == null ? void 0 : R.includes('gemini'),
    j = !C && ((E = k == null ? void 0 : k.toLowerCase()) == null ? void 0 : E.includes('chat')),
    w = !C && !j && /code|text/.test(k ?? ''),
    { showExamples: T } = r,
    S = !C && !w && j,
    I = () => {
      f(zt.default), c((M) => ({ ...M, showExamples: !M.showExamples }));
    },
    P = {
      [N.google]: [
        {
          label: _(T ? 'com_hide_examples' : 'com_show_examples'),
          buttonClass: C || w ? 'disabled' : '',
          handler: I,
          icon: t.jsx(Ux, { className: b('mr-1 w-[14px]', n) }),
        },
      ],
      [N.gptPlugins]: [
        {
          label: _(l ? 'com_show_completion_settings' : 'com_show_agent_settings'),
          buttonClass: '',
          handler: () => {
            f(zt.default), d((M) => !M);
          },
          icon: t.jsx(Io, { className: b('mr-1 w-[14px]', n), size: 24 }),
        },
      ],
    };
  if (!y || (y === N.google && !S)) return null;
  zt.default + '', b('mr-1 h-6 w-[14px]', n), zt.advanced + '', b('mr-1 h-6 w-[14px]', n);
  const F = P[y] ?? [];
  return t.jsxs('div', {
    className: 'flex w-full justify-between',
    children: [
      t.jsx('div', {
        className: 'flex items-center justify-start',
        children: F.map((M, A) =>
          t.jsxs(
            Ne,
            {
              type: 'button',
              className: b(
                M.buttonClass,
                'border-2 border-gray-300/50 focus:ring-1 focus:ring-green-500/90 dark:border-gray-500/50 dark:focus:ring-green-500',
                'ml-1 h-full bg-transparent px-2 py-1 text-xs font-medium font-normal text-black hover:bg-gray-100 hover:text-black dark:bg-transparent dark:text-white dark:hover:bg-gray-600 dark:hover:text-white',
                e ?? '',
              ),
              onClick: M.handler,
              children: [M.icon, M.label],
            },
            `button-${A}`,
          ),
        ),
      }),
      null,
    ],
  });
}
const V2 = ({ exportPreset: e, submitPreset: n }) => {
    const o = D(),
      a = X(),
      { preset: i, setPreset: s } = me(),
      { setOption: r, setOptions: c, setAgentOption: l } = rn(i),
      [d, _] = ke({ setOption: r, optionKey: 'title', initialValue: i == null ? void 0 : i.title }),
      [m, f] = W(O.presetModalVisible),
      { data: g = [] } = Se({ select: qa });
    p.useEffect(() => {
      var j, w;
      if (!i || !i.endpoint) return;
      const k = a.getQueryData([G.models]);
      if (!k) return;
      const C = k[i.endpoint];
      C &&
        C.length &&
        i.model !== C[0] &&
        (C.includes(i.model ?? '') || (console.log('setting model', C[0]), r('model')(C[0])),
        ((j = i.agentOptions) == null ? void 0 : j.model) !== C[0] &&
          (w = i.agentOptions) != null &&
          w.model &&
          !C.includes(i.agentOptions.model) &&
          (console.log('setting agent model', C[0]), l('model')(C[0])));
    }, [i, a, r, l]);
    const h = p.useCallback(
        (k) => {
          if (!c) return console.warn('setOptions is not defined');
          const { newEndpointType: C } = Qn({
            newEndpoint: k,
            modularChat: !0,
            conversation: null,
            endpointsConfig: a.getQueryData([G.endpoints]) ?? {},
          });
          c({ endpoint: k, endpointType: C });
        },
        [a, c],
      ),
      { endpoint: v, endpointType: x, model: y } = i || {};
    return v
      ? t.jsx(nt, {
          open: m,
          onOpenChange: (k) => {
            f(k), k || s(null);
          },
          children: t.jsx(Zt, {
            title: `${o('com_ui_edit') + ' ' + o('com_endpoint_preset')} - ${
              i == null ? void 0 : i.title
            }`,
            className:
              'h-full max-w-full overflow-y-auto pb-4 sm:w-[680px] sm:pb-0 md:h-[720px] md:w-[750px] md:overflow-y-hidden md:overflow-y-hidden lg:w-[950px] xl:h-[720px]',
            main: t.jsxs('div', {
              className: 'flex w-full flex-col items-center gap-2 md:h-[550px] md:overflow-y-auto',
              children: [
                t.jsxs('div', {
                  className: 'grid w-full',
                  children: [
                    t.jsxs('div', {
                      className:
                        'col-span-4 flex flex-col items-start justify-start gap-6 pb-4 md:flex-row',
                      children: [
                        t.jsxs('div', {
                          className: 'flex w-full flex-col',
                          children: [
                            t.jsx(Z, {
                              htmlFor: 'preset-name',
                              className: 'mb-1 text-left text-sm font-medium',
                              children: o('com_endpoint_preset_name'),
                            }),
                            t.jsx(Je, {
                              id: 'preset-name',
                              value: _ ?? '',
                              onChange: d,
                              placeholder: o('com_endpoint_set_custom_name'),
                              className: b(
                                Q,
                                'flex h-10 max-h-10 w-full resize-none px-3 py-2',
                                tt,
                              ),
                            }),
                          ],
                        }),
                        t.jsxs('div', {
                          className: 'flex w-full flex-col',
                          children: [
                            t.jsx(Z, {
                              htmlFor: 'endpoint',
                              className: 'mb-1 text-left text-sm font-medium',
                              children: o('com_endpoint'),
                            }),
                            t.jsx(jn, { value: v || '', onChange: h, options: g }),
                          ],
                        }),
                      ],
                    }),
                    t.jsx('div', {
                      className: 'col-span-2 flex items-start justify-between gap-4 sm:col-span-4',
                      children: t.jsxs('div', {
                        className: 'flex w-full flex-col',
                        children: [
                          t.jsx(Z, {
                            htmlFor: 'endpoint',
                            className: 'mb-1 hidden text-left text-sm font-medium sm:block',
                            children: 'ㅤ',
                          }),
                          t.jsx(Hm, {
                            buttonClass:
                              'ml-0 w-full border border-gray-100 dark:border-gray-600 dark:bg-gray-700 dark:hover:bg-gray-600 p-2 h-[40px] justify-center mt-0',
                            iconClass: 'hidden lg:block w-4 ',
                            endpoint: v,
                            endpointType: x,
                            model: y,
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                t.jsx('div', {
                  className: 'my-4 w-full border-t border-gray-300 dark:border-gray-600',
                }),
                t.jsx('div', {
                  className: 'w-full p-0',
                  children: t.jsx(bm, {
                    conversation: i,
                    setOption: r,
                    isPreset: !0,
                    className: 'h-full md:mb-4 md:h-[440px]',
                  }),
                }),
              ],
            }),
            buttons: t.jsxs('div', {
              className: 'mb-6 md:mb-2',
              children: [
                t.jsx(Xo, {
                  onClick: e,
                  className:
                    'border-gray-100 hover:bg-gray-100 dark:border-gray-600 dark:hover:bg-gray-600',
                  children: o('com_endpoint_export'),
                }),
                t.jsx(Ta, {
                  onClick: n,
                  className:
                    'ml-2 bg-green-500 text-white hover:bg-green-600 dark:hover:bg-green-600',
                  children: o('com_ui_save'),
                }),
              ],
            }),
            footerClassName: 'bg-white dark:bg-gray-700',
          }),
        })
      : null;
  },
  Wm = ({
    onFileSelected: e,
    className: n = '',
    containerClassName: o = '',
    successText: a = null,
    invalidText: i = null,
    validator: s = null,
    text: r = null,
    id: c = '1',
  }) => {
    const [l, d] = p.useState('text-gray-600'),
      [_, m] = p.useState(null),
      f = D(),
      g = (v) => {
        var k;
        const x = (k = v.target.files) == null ? void 0 : k[0];
        if (!x) return;
        const y = new FileReader();
        (y.onload = (C) => {
          var w;
          const j = JSON.parse((w = C.target) == null ? void 0 : w.result);
          if (s && !s(j)) {
            m('invalid'), d('text-red-600');
            return;
          }
          s && (m('success'), d('text-green-500 dark:text-green-500')), e(j);
        }),
          y.readAsText(x);
      };
    let h;
    return (
      _
        ? _ === 'success'
          ? (h = a ?? f('com_ui_upload_success'))
          : (h = i ?? f('com_ui_upload_invalid'))
        : (h = r ?? f('com_endpoint_import')),
      t.jsxs('label', {
        htmlFor: `file-upload-${c}`,
        className: b(
          'mr-1 flex h-auto cursor-pointer items-center rounded bg-transparent px-2 py-1 text-xs font-medium font-normal transition-colors hover:bg-gray-100 hover:text-green-600 dark:bg-transparent dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-green-500',
          l,
          o,
        ),
        children: [
          t.jsx(xp, { className: 'mr-1 flex w-[22px] items-center stroke-1' }),
          t.jsx('span', { className: 'flex text-xs ', children: h }),
          t.jsx('input', {
            id: `file-upload-${c}`,
            value: '',
            type: 'file',
            className: b('hidden ', n),
            accept: '.json',
            onChange: g,
          }),
        ],
      })
    );
  },
  hr = () =>
    t.jsx('div', {
      role: 'separator',
      'aria-orientation': 'horizontal',
      className: 'my-1.5 border-b bg-gray-200 dark:border-gray-700',
    });
function G2({ primaryText: e = '', secondaryText: n = '' }) {
  return t.jsx(Ht, {
    asChild: !0,
    children: t.jsxs('div', {
      className:
        'group flex cursor-pointer items-center gap-1 rounded-xl px-3 py-2 text-lg font-medium hover:bg-gray-50 radix-state-open:bg-gray-50 dark:hover:bg-gray-700 dark:radix-state-open:bg-gray-700',
      children: [
        t.jsxs('div', {
          children: [
            e,
            ' ',
            !!n && t.jsx('span', { className: 'text-token-text-secondary', children: n }),
          ],
        }),
        t.jsx('svg', {
          width: '16',
          height: '17',
          viewBox: '0 0 16 17',
          fill: 'none',
          className: 'text-token-text-tertiary',
          children: t.jsx('path', {
            d: 'M11.3346 7.83203L8.00131 11.1654L4.66797 7.83203',
            stroke: 'currentColor',
            strokeWidth: '2',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
          }),
        }),
      ],
    }),
  });
}
const K2 = ({
    presets: e,
    onSetDefaultPreset: n,
    onSelectPreset: o,
    onChangePreset: a,
    onDeletePreset: i,
    clearAllPresets: s,
    onFileSelected: r,
  }) => {
    const { data: c } = Se(),
      l = Y(O.defaultPreset),
      d = D();
    return t.jsxs(t.Fragment, {
      children: [
        t.jsx('div', {
          role: 'menuitem',
          className:
            'pointer-none group m-1.5 flex h-8 min-w-[170px] gap-2 rounded px-5 py-2.5 !pr-3 text-sm !opacity-100 focus:ring-0 radix-disabled:pointer-events-none radix-disabled:opacity-50  md:min-w-[240px]',
          tabIndex: -1,
          children: t.jsxs('div', {
            className: 'flex h-full grow items-center justify-end gap-2',
            children: [
              t.jsx('label', {
                htmlFor: 'default-preset',
                className:
                  'w-40 truncate rounded bg-transparent py-1 text-xs font-medium font-normal text-gray-600 transition-colors dark:bg-transparent dark:text-gray-300 sm:w-72',
                children: l
                  ? `${d('com_endpoint_preset_default_item')} ${l.title}`
                  : d('com_endpoint_preset_default_none'),
              }),
              t.jsxs(nt, {
                children: [
                  t.jsx(Fn, {
                    asChild: !0,
                    children: t.jsxs('label', {
                      htmlFor: 'file-upload',
                      className:
                        'mr-1 flex h-[32px] cursor-pointer items-center rounded bg-transparent px-2 py-1 text-xs font-medium font-normal text-gray-600 transition-colors hover:bg-gray-100 hover:text-red-700 dark:bg-transparent dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-green-500 dark:hover:text-red-700',
                      children: [
                        t.jsx('svg', {
                          width: '24',
                          height: '24',
                          viewBox: '0 0 16 16',
                          fill: 'currentColor',
                          xmlns: 'http://www.w3.org/2000/svg',
                          className: 'mr-1 flex w-[22px] items-center',
                          children: t.jsx('path', {
                            d: 'M9.293 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.707A1 1 0 0 0 13.707 4L10 .293A1 1 0 0 0 9.293 0M9.5 3.5v-2l3 3h-2a1 1 0 0 1-1-1M6.854 7.146 8 8.293l1.146-1.147a.5.5 0 1 1 .708.708L8.707 9l1.147 1.146a.5.5 0 0 1-.708.708L8 9.707l-1.146 1.147a.5.5 0 0 1-.708-.708L7.293 9 6.146 7.854a.5.5 0 1 1 .708-.708',
                          }),
                        }),
                        d('com_ui_clear'),
                        ' ',
                        d('com_ui_all'),
                      ],
                    }),
                  }),
                  t.jsx(Zt, {
                    showCloseButton: !1,
                    title: `${d('com_ui_clear')} ${d('com_endpoint_presets')}`,
                    className: 'max-w-[450px]',
                    main: t.jsx(t.Fragment, {
                      children: t.jsx('div', {
                        className: 'flex w-full flex-col items-center gap-2',
                        children: t.jsx('div', {
                          className: 'grid w-full items-center gap-2',
                          children: t.jsx(Z, {
                            htmlFor: 'chatGptLabel',
                            className: 'text-left text-sm font-medium',
                            children: d('com_endpoint_presets_clear_warning'),
                          }),
                        }),
                      }),
                    }),
                    selection: {
                      selectHandler: s,
                      selectClasses: 'bg-red-600 hover:bg-red-700 dark:hover:bg-red-600 text-white',
                      selectText: d('com_ui_clear'),
                    },
                  }),
                  t.jsx(Wm, { onFileSelected: r }),
                ],
              }),
            ],
          }),
        }),
        e &&
          e.length === 0 &&
          t.jsx('div', {
            role: 'menuitem',
            className:
              'pointer-none group m-1.5 flex h-8 min-w-[170px] gap-2 rounded px-5 py-2.5 !pr-3 text-sm !opacity-100 focus:ring-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 md:min-w-[240px]',
            tabIndex: -1,
            children: t.jsx('div', {
              className:
                'flex h-full grow items-center justify-end gap-2 text-gray-600 dark:text-gray-300',
              children: d('com_endpoint_no_presets'),
            }),
          }),
        t.jsx(vp, {
          flipKey: e.map(({ presetId: _ }) => _).join('.'),
          children:
            e &&
            e.length > 0 &&
            e.map((_, m) => {
              if (!_ || !_.presetId) return null;
              const f = Go({ endpoint: _.endpoint, endpointsConfig: c }),
                g = $t[f];
              return t.jsx(
                Uo,
                {
                  asChild: !0,
                  children: t.jsxs(
                    'div',
                    {
                      children: [
                        t.jsx(bp, {
                          flipId: _.presetId,
                          children: t.jsx(
                            er,
                            {
                              textClassName:
                                'text-xs max-w-[150px] sm:max-w-[200px] truncate md:max-w-full ',
                              title: H_(_),
                              onClick: () => o(_),
                              icon:
                                g &&
                                g({
                                  context: 'menu-item',
                                  iconURL: Ce(c, _.endpoint, 'iconURL'),
                                  className: 'icon-md mr-1 dark:text-white',
                                  endpoint: _.endpoint,
                                }),
                              selected: !1,
                              'data-testid': `preset-item-${_}`,
                              children: t.jsxs('div', {
                                className: 'flex h-full items-center justify-end gap-1',
                                children: [
                                  t.jsx('button', {
                                    className: b(
                                      'm-0 h-full rounded-md bg-transparent p-2 text-gray-400 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200',
                                      (l == null ? void 0 : l.presetId) === _.presetId
                                        ? ''
                                        : 'sm:invisible sm:group-hover:visible',
                                    ),
                                    onClick: (h) => {
                                      h.preventDefault(),
                                        h.stopPropagation(),
                                        n(_, (l == null ? void 0 : l.presetId) === _.presetId);
                                    },
                                    children: t.jsx(ev, {
                                      unpin: (l == null ? void 0 : l.presetId) === _.presetId,
                                    }),
                                  }),
                                  t.jsx('button', {
                                    className:
                                      'm-0 h-full rounded-md p-2 text-gray-400 hover:text-gray-700 dark:bg-gray-600 dark:text-gray-400 dark:hover:text-gray-200 sm:invisible sm:group-hover:visible',
                                    onClick: (h) => {
                                      h.preventDefault(), h.stopPropagation(), a(_);
                                    },
                                    children: t.jsx(Ia, {}),
                                  }),
                                  t.jsx('button', {
                                    className:
                                      'm-0 h-full rounded-md p-2 text-gray-400 hover:text-gray-600 dark:bg-gray-600 dark:text-gray-400 dark:hover:text-gray-200 sm:invisible sm:group-hover:visible',
                                    onClick: (h) => {
                                      h.preventDefault(), h.stopPropagation(), i(_);
                                    },
                                    children: t.jsx(za, {}),
                                  }),
                                ],
                              }),
                            },
                            `preset-item-${_.presetId}`,
                          ),
                        }),
                        m !== e.length - 1 && t.jsx(hr, {}),
                      ],
                    },
                    `preset-${_.presetId}`,
                  ),
                },
                `preset-${_.presetId}`,
              );
            }),
        }),
      ],
    });
  },
  H2 = () => {
    const e = D(),
      {
        presetsQuery: n,
        onSetDefaultPreset: o,
        onFileSelected: a,
        onSelectPreset: i,
        onChangePreset: s,
        clearAllPresets: r,
        onDeletePreset: c,
        submitPreset: l,
        exportPreset: d,
      } = A1(),
      { preset: _ } = me(),
      m = n.data || [];
    return t.jsxs(Pt, {
      children: [
        t.jsx(Ht, {
          asChild: !0,
          children: t.jsx('button', {
            className: b(
              'pointer-cursor relative flex flex-col rounded-md border border-gray-100 bg-white text-left focus:outline-none focus:ring-0 focus:ring-offset-0 dark:border-gray-700 dark:bg-gray-800 sm:text-sm',
              'hover:bg-gray-50 radix-state-open:bg-gray-50 dark:hover:bg-gray-700 dark:radix-state-open:bg-gray-700',
              'z-50 flex h-[40px] min-w-4 flex-none items-center justify-center px-3 focus:ring-0 focus:ring-offset-0',
            ),
            id: 'presets-button',
            'data-testid': 'presets-button',
            title: e('com_endpoint_examples'),
            children: t.jsx(yp, { className: 'icon-sm', id: 'presets-button' }),
          }),
        }),
        t.jsx(Wt, {
          children: t.jsx('div', {
            style: {
              position: 'fixed',
              left: '0px',
              top: '0px',
              transform: 'translate3d(268px, 50px, 0px)',
              minWidth: 'max-content',
              zIndex: 'auto',
            },
            children: t.jsx(Et, {
              side: 'bottom',
              align: 'center',
              className:
                'mt-2 max-h-[495px] overflow-x-hidden rounded-lg border border-gray-200 bg-white shadow-lg dark:border-gray-700 dark:bg-gray-700 dark:text-white md:min-w-[400px]',
              children: t.jsx(K2, {
                presets: m,
                onSetDefaultPreset: o,
                onSelectPreset: i,
                onChangePreset: s,
                onDeletePreset: c,
                clearAllPresets: r,
                onFileSelected: a,
              }),
            }),
          }),
        }),
        _ && t.jsx(V2, { submitPreset: l, exportPreset: d }),
      ],
    });
  };
function W2({ open: e, onOpenChange: n, conversation: o }) {
  const a = D(),
    [i, s] = p.useState(''),
    [r, c] = p.useState('Select a file type'),
    [l, d] = p.useState(!0),
    [_, m] = p.useState(!1),
    [f, g] = p.useState(!0),
    h = [
      { value: 'screenshot', display: 'screenshot (.png)' },
      { value: 'text', display: 'text (.txt)' },
      { value: 'markdown', display: 'markdown (.md)' },
      { value: 'json', display: 'json (.json)' },
      { value: 'csv', display: 'csv (.csv)' },
    ];
  p.useEffect(() => {
    s($i(String((o == null ? void 0 : o.title) || 'file'))), c('screenshot'), d(!0), m(!1), g(!0);
  }, [o == null ? void 0 : o.title, e]);
  const v = (C) => {
      const j = C === 'json' || C === 'csv' || C === 'webpage',
        w = C !== 'csv' && C !== 'screenshot';
      m(j), d(w), c(C);
    },
    x = r === 'json' || r === 'csv' || r === 'webpage',
    y = r !== 'csv' && r !== 'screenshot',
    { exportConversation: k } = M1({
      conversation: o,
      filename: i,
      type: r,
      includeOptions: l,
      exportBranches: _,
      recursive: f,
    });
  return t.jsx(nt, {
    open: e,
    onOpenChange: n,
    children: t.jsx(Zt, {
      title: a('com_nav_export_conversation'),
      className: 'max-w-full sm:max-w-2xl',
      main: t.jsxs('div', {
        className: 'flex w-full flex-col items-center gap-6',
        children: [
          t.jsxs('div', {
            className: 'grid w-full gap-6 sm:grid-cols-2',
            children: [
              t.jsxs('div', {
                className: 'col-span-1 flex flex-col items-start justify-start gap-2',
                children: [
                  t.jsx(Z, {
                    htmlFor: 'filename',
                    className: 'text-left text-sm font-medium',
                    children: a('com_nav_export_filename'),
                  }),
                  t.jsx(Je, {
                    id: 'filename',
                    value: i,
                    onChange: (C) => s($i(C.target.value || '')),
                    placeholder: a('com_nav_export_filename_placeholder'),
                    className: b(Q, 'flex h-10 max-h-10 w-full resize-none px-3 py-2'),
                  }),
                ],
              }),
              t.jsxs('div', {
                className: 'col-span-1 flex w-full flex-col items-start justify-start gap-2',
                children: [
                  t.jsx(Z, {
                    htmlFor: 'type',
                    className: 'text-left text-sm font-medium',
                    children: a('com_nav_export_type'),
                  }),
                  t.jsx(jn, { value: r, onChange: v, options: h }),
                ],
              }),
            ],
          }),
          t.jsxs('div', {
            className: 'grid w-full gap-6 sm:grid-cols-2',
            children: [
              t.jsx('div', {
                className: 'col-span-1 flex flex-col items-start justify-start gap-2',
                children: t.jsxs('div', {
                  className: 'grid w-full items-center gap-2',
                  children: [
                    t.jsx(Z, {
                      htmlFor: 'includeOptions',
                      className: 'text-left text-sm font-medium',
                      children: a('com_nav_export_include_endpoint_options'),
                    }),
                    t.jsxs('div', {
                      className: 'flex h-[40px] w-full items-center space-x-3',
                      children: [
                        t.jsx(vt, {
                          id: 'includeOptions',
                          disabled: !y,
                          checked: l,
                          className:
                            'focus:ring-opacity-20 dark:border-gray-500 dark:bg-gray-700 dark:text-gray-50 dark:focus:ring-gray-600 dark:focus:ring-opacity-50 dark:focus:ring-offset-0',
                          onCheckedChange: d,
                        }),
                        t.jsx('label', {
                          htmlFor: 'includeOptions',
                          className:
                            'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                          children: a(y ? 'com_nav_enabled' : 'com_nav_not_supported'),
                        }),
                      ],
                    }),
                  ],
                }),
              }),
              t.jsxs('div', {
                className: 'grid w-full items-center gap-2',
                children: [
                  t.jsx(Z, {
                    htmlFor: 'exportBranches',
                    className: 'text-left text-sm font-medium',
                    children: a('com_nav_export_all_message_branches'),
                  }),
                  t.jsxs('div', {
                    className: 'flex h-[40px] w-full items-center space-x-3',
                    children: [
                      t.jsx(vt, {
                        id: 'exportBranches',
                        disabled: !x,
                        checked: _,
                        className:
                          'focus:ring-opacity-20 dark:border-gray-500 dark:bg-gray-700 dark:text-gray-50 dark:focus:ring-gray-600 dark:focus:ring-opacity-50 dark:focus:ring-offset-0',
                        onCheckedChange: m,
                      }),
                      t.jsx('label', {
                        htmlFor: 'exportBranches',
                        className:
                          'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                        children: a(x ? 'com_nav_enabled' : 'com_nav_not_supported'),
                      }),
                    ],
                  }),
                ],
              }),
              r === 'json'
                ? t.jsxs('div', {
                    className: 'grid w-full items-center gap-2',
                    children: [
                      t.jsx(Z, {
                        htmlFor: 'recursive',
                        className: 'text-left text-sm font-medium',
                        children: a('com_nav_export_recursive_or_sequential'),
                      }),
                      t.jsxs('div', {
                        className: 'flex h-[40px] w-full items-center space-x-3',
                        children: [
                          t.jsx(vt, {
                            id: 'recursive',
                            checked: f,
                            className:
                              'focus:ring-opacity-20 dark:border-gray-500 dark:bg-gray-700 dark:text-gray-50 dark:focus:ring-gray-600 dark:focus:ring-opacity-50 dark:focus:ring-offset-0',
                            onCheckedChange: g,
                          }),
                          t.jsx('label', {
                            htmlFor: 'recursive',
                            className:
                              'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 dark:text-gray-50',
                            children: a('com_nav_export_recursive'),
                          }),
                        ],
                      }),
                    ],
                  })
                : null,
            ],
          }),
        ],
      }),
      buttons: t.jsx(t.Fragment, {
        children: t.jsx(Xo, {
          onClick: k,
          className:
            'dark:hover:gray-400 border-gray-700 bg-green-500 text-white hover:bg-green-600 dark:hover:bg-green-600',
          children: a('com_endpoint_export'),
        }),
      }),
      selection: void 0,
    }),
  });
}
function J2({ onCheckedChange: e }) {
  const [n, o] = W(O.hideSidePanel),
    a = D(),
    i = (s) => {
      o(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', { children: [' ', a('com_nav_hide_panel'), ' '] }),
      t.jsx(Ae, {
        id: 'hideSidePanel',
        checked: n,
        onCheckedChange: i,
        className: 'ml-4 mt-2',
        'data-testid': 'hideSidePanel',
      }),
    ],
  });
}
function Q2({ onCheckedChange: e }) {
  const [n, o] = W(O.autoScroll),
    a = D(),
    i = (s) => {
      o(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', { children: [' ', a('com_nav_auto_scroll'), ' '] }),
      t.jsx(Ae, {
        id: 'autoScroll',
        checked: n,
        onCheckedChange: i,
        className: 'ml-4 mt-2',
        'data-testid': 'autoScroll',
      }),
    ],
  });
}
const Z2 = (e, n) => {
    const {
        id: o,
        onClick: a,
        mutation: i,
        disabled: s,
        confirmClear: r,
        infoTextCode: c,
        actionTextCode: l,
        className: d = '',
        showText: _ = !0,
        dataTestIdInitial: m,
        dataTestIdConfirm: f,
        confirmActionTextCode: g = 'com_ui_confirm_action',
      } = e,
      h = D(),
      v = (x) => (i && i.isLoading ? t.jsx(Oe, { className: 'h-5 w-5' }) : x);
    return t.jsxs('div', {
      className: 'flex items-center justify-between',
      children: [
        _ && t.jsxs('div', { children: [' ', h(c), ' '] }),
        t.jsx(Xo, {
          id: o,
          ref: n,
          disabled: s,
          onClick: a,
          className: b(
            ' btn btn-danger relative min-w-[70px] border-none bg-red-700 text-white hover:bg-red-800 dark:hover:bg-red-800',
            d,
          ),
          children: r
            ? t.jsxs('div', {
                className: 'flex w-full items-center justify-center gap-2',
                id: `${o}-text`,
                'data-testid': f,
                children: [v(t.jsx(ms, { className: 'h-5 w-5' })), i && i.isLoading ? null : h(g)],
              })
            : t.jsx('div', {
                className: 'flex w-full items-center justify-center gap-2',
                id: `${o}-text`,
                'data-testid': m,
                children: v(h(l)),
              }),
        }),
      ],
    });
  },
  gr = p.forwardRef(Z2);
function Y2({ className: e }) {
  const n = D(),
    { isAuthenticated: o } = Re(),
    [a, i] = p.useState(!1),
    {
      data: s,
      fetchNextPage: r,
      hasNextPage: c,
      isFetchingNextPage: l,
    } = Mo({ pageNumber: '1', isArchived: !0 }, { enabled: o }),
    { containerRef: d, moveToTop: _ } = Xa({
      setShowLoading: i,
      hasNextPage: c,
      fetchNextPage: r,
      isFetchingNextPage: l,
    }),
    m = p.useMemo(() => (s == null ? void 0 : s.pages.flatMap((f) => f.conversations)) || [], [s]);
  return !m || m.length === 0
    ? t.jsx('div', { className: 'text-gray-300', children: n('com_nav_archived_chats_empty') })
    : t.jsxs('div', {
        className: b(
          'grid w-full gap-2',
          'flex-1 flex-col overflow-y-auto pr-2 transition-opacity duration-500',
          'max-h-[350px]',
        ),
        ref: d,
        children: [
          t.jsxs('table', {
            className: 'table-fixed text-left',
            children: [
              t.jsx('thead', {
                className: 'sticky top-0 bg-white dark:bg-gray-700',
                children: t.jsxs('tr', {
                  className:
                    'border-b border-gray-200 text-sm font-semibold text-gray-500 dark:border-white/10 dark:text-gray-200',
                  children: [
                    t.jsx('th', { className: 'p-3', children: n('com_nav_archive_name') }),
                    t.jsx('th', { className: 'p-3', children: n('com_nav_archive_created_at') }),
                  ],
                }),
              }),
              t.jsx('tbody', {
                children: m.map((f) =>
                  t.jsxs(
                    'tr',
                    {
                      className:
                        'border-b border-gray-200 text-sm font-normal dark:border-white/10',
                      children: [
                        t.jsxs('td', {
                          className: 'flex items-center py-3 text-blue-800/70 dark:text-blue-500',
                          children: [t.jsx(kp, { className: 'mr-1 h-5 w-5' }), f.title],
                        }),
                        t.jsx('td', {
                          className: 'p-1',
                          children: t.jsxs('div', {
                            className: 'flex justify-between',
                            children: [
                              t.jsx('div', {
                                className: 'flex justify-start dark:text-gray-200',
                                children: new Date(f.createdAt).toLocaleDateString('en-US', {
                                  month: 'long',
                                  day: 'numeric',
                                  year: 'numeric',
                                }),
                              }),
                              t.jsx('div', {
                                className:
                                  'ml-auto mr-4 flex items-center justify-end gap-1 text-gray-400',
                                children:
                                  f.conversationId &&
                                  t.jsxs(t.Fragment, {
                                    children: [
                                      t.jsx(Bm, {
                                        className: 'hover:text-black dark:hover:text-white',
                                        conversationId: f.conversationId,
                                        retainView: _,
                                        shouldArchive: !1,
                                        icon: t.jsx(wp, {
                                          className: 'h-4 w-4 hover:text-gray-300',
                                        }),
                                      }),
                                      t.jsx('div', {
                                        className: 'h-5 w-5 hover:text-gray-300',
                                        children: t.jsx(Om, {
                                          conversationId: f.conversationId,
                                          retainView: _,
                                          renaming: !1,
                                          title: f.title,
                                          appendLabel: !1,
                                          className:
                                            'group ml-4 flex w-full cursor-pointer items-center items-center gap-2 rounded text-sm hover:bg-gray-200 focus-visible:bg-gray-200 focus-visible:outline-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-gray-600 dark:focus-visible:bg-gray-600',
                                        }),
                                      }),
                                    ],
                                  }),
                              }),
                            ],
                          }),
                        }),
                      ],
                    },
                    f.conversationId,
                  ),
                ),
              }),
            ],
          }),
          (l || a) &&
            t.jsx(Oe, { className: b('m-1 mx-auto mb-4 h-4 w-4 text-black dark:text-white') }),
        ],
      });
}
function X2() {
  const e = D();
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', { children: [' ', e('com_nav_archived_chats'), ' '] }),
      t.jsxs(nt, {
        children: [
          t.jsx(Fn, {
            asChild: !0,
            children: t.jsx('button', {
              className: 'btn btn-neutral relative ',
              children: e('com_nav_archived_chats_manage'),
            }),
          }),
          t.jsx(Zt, {
            title: e('com_nav_archived_chats'),
            className: 'max-w-[1000px]',
            showCancelButton: !1,
            main: t.jsx(Y2, {}),
          }),
        ],
      }),
    ],
  });
}
const ey = ({ theme: e, onChange: n }) => {
    const o = D(),
      a = [
        { value: 'system', display: o('com_nav_theme_system') },
        { value: 'dark', display: o('com_nav_theme_dark') },
        { value: 'light', display: o('com_nav_theme_light') },
      ];
    return t.jsxs('div', {
      className: 'flex items-center justify-between',
      children: [
        t.jsxs('div', { children: [' ', o('com_nav_theme'), ' '] }),
        t.jsx(jn, {
          value: e,
          onChange: n,
          options: a,
          width: 220,
          position: 'left',
          maxHeight: '200px',
          testId: 'theme-selector',
        }),
      ],
    });
  },
  ty = ({ langcode: e, onChange: n }) => {
    const o = D(),
      a = [
        { value: 'auto', display: o('com_nav_lang_auto') },
        { value: 'en-US', display: o('com_nav_lang_english') },
        { value: 'zh-CN', display: o('com_nav_lang_chinese') },
        { value: 'zh-TC', display: o('com_nav_lang_traditionalchinese') },
        { value: 'ar-EG', display: o('com_nav_lang_arabic') },
        { value: 'de-DE', display: o('com_nav_lang_german') },
        { value: 'es-ES', display: o('com_nav_lang_spanish') },
        { value: 'fr-FR', display: o('com_nav_lang_french') },
        { value: 'it-IT', display: o('com_nav_lang_italian') },
        { value: 'pl-PL', display: o('com_nav_lang_polish') },
        { value: 'pt-BR', display: o('com_nav_lang_brazilian_portuguese') },
        { value: 'ru-RU', display: o('com_nav_lang_russian') },
        { value: 'ja-JP', display: o('com_nav_lang_japanese') },
        { value: 'sv-SE', display: o('com_nav_lang_swedish') },
        { value: 'ko-KR', display: o('com_nav_lang_korean') },
        { value: 'vi-VN', display: o('com_nav_lang_vietnamese') },
        { value: 'tr-TR', display: o('com_nav_lang_turkish') },
        { value: 'nl-NL', display: o('com_nav_lang_dutch') },
        { value: 'id-ID', display: o('com_nav_lang_indonesia') },
        { value: 'he-HE', display: o('com_nav_lang_hebrew') },
      ];
    return t.jsxs('div', {
      className: 'flex items-center justify-between',
      children: [
        t.jsxs('div', { children: [' ', o('com_nav_language'), ' '] }),
        t.jsx(jn, { value: e, onChange: n, position: 'left', maxHeight: '271px', options: a }),
      ],
    });
  };
function ny() {
  const { theme: e, setTheme: n } = p.useContext(Ya),
    [o, a] = W(O.lang),
    [i, s] = Yo('selectedLang', o),
    r = p.useRef(null),
    c = p.useCallback(
      (d) => {
        n(d);
      },
      [n],
    ),
    l = p.useCallback(
      (d) => {
        if ((s(d), d === 'auto')) {
          const _ = navigator.language || navigator.languages[0];
          a(_), localStorage.setItem('lang', _);
        } else a(d), localStorage.setItem('lang', d);
      },
      [a, s],
    );
  return t.jsx(bn, {
    value: et.GENERAL,
    role: 'tabpanel',
    className: 'w-full md:min-h-[271px]',
    ref: r,
    children: t.jsxs('div', {
      className: 'flex flex-col gap-3 text-sm text-gray-600 dark:text-gray-50',
      children: [
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(ey, { theme: e, onChange: c }),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(ty, { langcode: i, onChange: l }),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(Q2, {}),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(J2, {}),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(X2, {}),
        }),
      ],
    }),
  });
}
const oy = ze.memo(ny);
function ay({ onCheckedChange: e }) {
  const [n, o] = W(O.enterToSend),
    a = D(),
    i = (s) => {
      o(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', { children: [' ', a('com_nav_enter_to_send'), ' '] }),
      t.jsx(Ae, {
        id: 'enterToSend',
        checked: n,
        onCheckedChange: i,
        className: 'ml-4 mt-2',
        'data-testid': 'enterToSend',
      }),
    ],
  });
}
function iy({ onCheckedChange: e }) {
  const [n, o] = W(O.showCode),
    a = D(),
    i = (s) => {
      o(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', { children: [' ', a('com_nav_show_code'), ' '] }),
      t.jsx(Ae, {
        id: 'showCode',
        checked: n,
        onCheckedChange: i,
        className: 'ml-4 mt-2',
        'data-testid': 'showCode',
      }),
    ],
  });
}
const sy = () => {
  const e = D(),
    [n, o] = W(O.forkSetting),
    [a, i] = W(O.splitAtTarget),
    [s, r] = W(O.rememberForkOption),
    c = [
      { value: rt.DIRECT_PATH, display: e('com_ui_fork_visible') },
      { value: rt.INCLUDE_BRANCHES, display: e('com_ui_fork_branches') },
      { value: rt.TARGET_LEVEL, display: e('com_ui_fork_all_target') },
    ];
  return t.jsxs(t.Fragment, {
    children: [
      t.jsx('div', {
        className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
        children: t.jsxs('div', {
          className: 'flex items-center justify-between',
          children: [
            t.jsxs('div', { children: [' ', e('com_ui_fork_change_default'), ' '] }),
            t.jsx(jn, {
              value: n,
              onChange: o,
              options: c,
              width: 200,
              position: 'left',
              maxHeight: '199px',
              testId: 'fork-setting-dropdown',
            }),
          ],
        }),
      }),
      t.jsx('div', {
        className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
        children: t.jsxs('div', {
          className: 'flex items-center justify-between',
          children: [
            t.jsxs('div', { children: [' ', e('com_ui_fork_default'), ' '] }),
            t.jsx(Ae, {
              id: 'rememberForkOption',
              checked: s,
              onCheckedChange: r,
              className: 'ml-4 mt-2',
              'data-testid': 'rememberForkOption',
            }),
          ],
        }),
      }),
      t.jsx('div', {
        className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
        children: t.jsxs('div', {
          className: 'flex items-center justify-between',
          children: [
            t.jsxs('div', { children: [' ', e('com_ui_fork_split_target_setting'), ' '] }),
            t.jsx(Ae, {
              id: 'splitAtTarget',
              checked: a,
              onCheckedChange: i,
              className: 'ml-4 mt-2',
              'data-testid': 'splitAtTarget',
            }),
          ],
        }),
      }),
    ],
  });
};
function ry({ onCheckedChange: e }) {
  const [n, o] = W(O.saveDrafts),
    a = D(),
    i = (s) => {
      o(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: a('com_nav_save_drafts') }),
      t.jsx(Ae, {
        id: 'saveDrafts',
        checked: n,
        onCheckedChange: i,
        className: 'ml-4 mt-2',
        'data-testid': 'saveDrafts',
      }),
    ],
  });
}
function cy() {
  return t.jsx(bn, {
    value: et.MESSAGES,
    role: 'tabpanel',
    className: 'md: w-full',
    children: t.jsxs('div', {
      className: 'flex flex-col gap-3 text-sm text-gray-600 dark:text-gray-50',
      children: [
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(ay, {}),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(iy, {}),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(ry, {}),
        }),
        t.jsx(sy, {}),
      ],
    }),
  });
}
const ly = p.memo(cy),
  Jm = ({ showText: e = !0, endpoint: n = '', all: o = !1, disabled: a = !1 }) => {
    const [i, s] = p.useState(!1),
      r = Uf(n),
      c = Vf(),
      l = p.useRef(null);
    ro(l, () => i && s(!1), []);
    const d = p.useCallback(() => {
        i ? (c.mutate({}), s(!1)) : s(!0);
      }, [i, c]),
      _ = p.useCallback(() => {
        if (n) i ? (r.mutate({}), s(!1)) : s(!0);
        else return;
      }, [i, r, n]),
      m = o ? d : _;
    return t.jsx(gr, {
      ref: l,
      showText: e,
      onClick: m,
      disabled: a,
      confirmClear: i,
      id: 'revoke-all-user-keys',
      actionTextCode: 'com_ui_revoke',
      infoTextCode: 'com_ui_revoke_info',
      dataTestIdInitial: 'revoke-all-keys-initial',
      dataTestIdConfirm: 'revoke-all-keys-confirm',
      mutation: o ? c : r,
    });
  },
  _y = ({ showText: e = !0, disabled: n = !1 }) => {
    const [o, a] = p.useState(!1),
      [i, s] = p.useState(!0),
      r = p.useRef(null);
    ro(r, () => o && a(!1), []);
    const c = p.useCallback(async () => {
      const _ = await (await caches.open('tts-responses')).keys();
      s(_.length === 0);
    }, []);
    p.useEffect(() => {
      c();
    }, [o]);
    const l = p.useCallback(async () => {
      if (o) {
        const d = await caches.open('tts-responses');
        await d.keys().then((_) => Promise.all(_.map((m) => d.delete(m)))), a(!1);
      } else a(!0);
    }, [o]);
    return t.jsx(gr, {
      ref: r,
      showText: e,
      onClick: l,
      disabled: n || i,
      confirmClear: o,
      id: 'delete-cache',
      actionTextCode: 'com_ui_delete',
      infoTextCode: 'com_nav_delete_cache_storage',
      dataTestIdInitial: 'delete-cache-initial',
      dataTestIdConfirm: 'delete-cache-confirm',
    });
  };
function dy() {
  const e = D(),
    { showToast: n } = Ie(),
    [, o] = p.useState([]),
    [a, i] = p.useState(!0),
    s = (m) => o((f) => [...f, m]),
    { refreshConversations: r } = Wo(),
    c = F0({
      onSuccess: () => {
        r(), n({ message: e('com_ui_import_conversation_success') }), i(!0);
      },
      onError: (m) => {
        var f, g;
        console.error('Error: ', m),
          i(!0),
          s(
            ((g = (f = m == null ? void 0 : m.response) == null ? void 0 : f.data) == null
              ? void 0
              : g.message) ?? 'An error occurred while uploading the file.',
          ),
          m != null && m.toString().includes('Unsupported import type')
            ? n({ message: e('com_ui_import_conversation_file_type_error'), status: 'error' })
            : n({ message: e('com_ui_import_conversation_error'), status: 'error' });
      },
      onMutate: () => {
        i(!1);
      },
    }),
    l = async (m) => {
      const f = new FormData();
      f.append('file', m, encodeURIComponent((m == null ? void 0 : m.name) || 'File')), c.mutate(f);
    },
    d = async (m) => {
      try {
        await l(m);
      } catch (f) {
        console.log('file handling error', f), s('An error occurred while processing the file.');
      }
    },
    _ = (m) => {
      const f = m.target.files[0];
      f && d(f);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('span', { children: e('com_ui_import_conversation_info') }),
      t.jsxs('label', {
        htmlFor: 'import-conversations-file',
        className:
          'flex h-auto cursor-pointer items-center rounded bg-transparent px-2 py-3 text-xs font-medium transition-colors hover:bg-gray-100 hover:text-green-700 dark:bg-transparent dark:text-white dark:hover:bg-gray-600 dark:hover:text-green-500',
        children: [
          a
            ? t.jsx(jp, { className: 'mr-1 flex h-4 w-4 items-center stroke-1' })
            : t.jsx(Oe, { className: 'mr-1 w-4' }),
          t.jsx('span', { children: e('com_ui_import_conversation') }),
          t.jsx('input', {
            id: 'import-conversations-file',
            disabled: !a,
            value: '',
            type: 'file',
            className: b('hidden'),
            accept: '.json',
            onChange: _,
          }),
        ],
      }),
    ],
  });
}
const my = ({ confirmClear: e, className: n = '', showText: o = !0, mutation: a, onClick: i }) =>
  t.jsx(gr, {
    id: 'clearConvosBtn',
    mutation: a,
    confirmClear: e,
    className: n,
    showText: o,
    infoTextCode: 'com_nav_clear_all_chats',
    actionTextCode: 'com_ui_clear',
    confirmActionTextCode: 'com_nav_confirm_clear',
    dataTestIdInitial: 'clear-convos-initial',
    dataTestIdConfirm: 'clear-convos-confirm',
    onClick: i,
  });
function uy({ shareId: e, setIsDeleting: n }) {
  const o = D(),
    a = R0(),
    i = async (s) => {
      s.preventDefault(), !a.isLoading && (n(!0), await a.mutateAsync({ shareId: e }), n(!1));
    };
  return t.jsx(pt, {
    delayDuration: 250,
    children: t.jsxs(ht, {
      children: [
        t.jsx(gt, {
          asChild: !0,
          children: t.jsx('span', { onClick: i, children: t.jsx(za, {}) }),
        }),
        t.jsx(ft, { side: 'top', sideOffset: 0, children: o('com_ui_delete') }),
      ],
    }),
  });
}
function py({ conversationId: e }) {
  const n = D();
  return t.jsx(pt, {
    delayDuration: 250,
    children: t.jsxs(ht, {
      children: [
        t.jsx(gt, {
          asChild: !0,
          children: t.jsx(k_, {
            to: `/c/${e}`,
            target: '_blank',
            rel: 'noreferrer',
            children: t.jsx(w_, { className: 'h-4 w-4 hover:text-gray-300' }),
          }),
        }),
        t.jsx(ft, { side: 'top', sideOffset: 0, children: n('com_nav_source_chat') }),
      ],
    }),
  });
}
function hy({ sharedLink: e }) {
  const [n, o] = p.useState(!1);
  return t.jsxs(
    'tr',
    {
      className: 'border-b border-gray-200 text-sm font-normal dark:border-white/10',
      children: [
        t.jsx('td', {
          className: b(
            'flex items-center py-3 text-blue-800/70 dark:text-blue-500',
            n && 'opacity-50',
          ),
          children: t.jsxs(k_, {
            to: `/share/${e.shareId}`,
            target: '_blank',
            rel: 'noreferrer',
            className: 'flex',
            children: [t.jsx(fa, { className: 'mr-1 h-5 w-5' }), e.title],
          }),
        }),
        t.jsx('td', {
          className: 'p-3',
          children: t.jsxs('div', {
            className: 'flex justify-between',
            children: [
              t.jsx('div', {
                className: b('flex justify-start dark:text-gray-200', n && 'opacity-50'),
                children: new Date(e.createdAt).toLocaleDateString('en-US', {
                  month: 'long',
                  day: 'numeric',
                  year: 'numeric',
                }),
              }),
              t.jsx('div', {
                className: b(
                  'flex items-center justify-end gap-3 text-gray-400',
                  n && 'opacity-50',
                ),
                children:
                  e.conversationId &&
                  t.jsxs(t.Fragment, {
                    children: [
                      t.jsx(py, { conversationId: e.conversationId }),
                      t.jsx('div', {
                        className: b('h-4 w-4 cursor-pointer', !n && 'hover:text-gray-300'),
                        children: t.jsx(uy, { shareId: e.shareId, setIsDeleting: o }),
                      }),
                    ],
                  }),
              }),
            ],
          }),
        }),
      ],
    },
    e.conversationId,
  );
}
function gy({ className: e }) {
  const n = D(),
    { isAuthenticated: o } = Re(),
    [a, i] = p.useState(!1),
    {
      data: s,
      fetchNextPage: r,
      hasNextPage: c,
      isFetchingNextPage: l,
    } = Ka({ pageNumber: '1', isPublic: !0 }, { enabled: o }),
    { containerRef: d } = Xa({
      setShowLoading: i,
      hasNextPage: c,
      fetchNextPage: r,
      isFetchingNextPage: l,
    }),
    _ = p.useMemo(() => (s == null ? void 0 : s.pages.flatMap((m) => m.sharedLinks)) || [], [s]);
  return !_ || _.length === 0
    ? t.jsx('div', { className: 'text-gray-300', children: n('com_nav_shared_links_empty') })
    : t.jsxs('div', {
        className: b(
          'grid w-full gap-2',
          '-mr-2 flex-1 flex-col overflow-y-auto pr-2 transition-opacity duration-500',
          'max-h-[350px]',
        ),
        ref: d,
        children: [
          t.jsxs('table', {
            className: 'table-fixed text-left',
            children: [
              t.jsx('thead', {
                className: 'sticky top-0 bg-white dark:bg-gray-700',
                children: t.jsxs('tr', {
                  className:
                    'border-b border-gray-200 text-sm font-semibold text-gray-500 dark:border-white/10 dark:text-gray-200',
                  children: [
                    t.jsx('th', { className: 'p-3', children: n('com_nav_shared_links_name') }),
                    t.jsx('th', {
                      className: 'p-3',
                      children: n('com_nav_shared_links_date_shared'),
                    }),
                  ],
                }),
              }),
              t.jsx('tbody', { children: _.map((m) => t.jsx(hy, { sharedLink: m }, m.shareId)) }),
            ],
          }),
          (l || a) &&
            t.jsx(Oe, { className: b('m-1 mx-auto mb-4 h-4 w-4 text-black dark:text-white') }),
        ],
      });
}
function fy() {
  const e = D();
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', { children: [' ', e('com_nav_shared_links'), ' '] }),
      t.jsxs(nt, {
        children: [
          t.jsx(Fn, {
            asChild: !0,
            children: t.jsx('button', {
              className: 'btn btn-neutral relative ',
              children: e('com_nav_shared_links_manage'),
            }),
          }),
          t.jsx(Zt, {
            title: e('com_nav_shared_links'),
            className: 'max-w-[1000px]',
            showCancelButton: !1,
            main: t.jsx(gy, {}),
          }),
        ],
      }),
    ],
  });
}
function xy() {
  const e = p.useRef(null),
    [n, o] = p.useState(!1);
  ro(e, () => n && o(!1), []);
  const { newConversation: a } = Us(),
    { refreshConversations: i } = Wo(),
    s = qf(),
    r = () => {
      n
        ? (console.log('Clearing conversations...'),
          o(!1),
          s.mutate(
            {},
            {
              onSuccess: () => {
                a(), i();
              },
            },
          ))
        : o(!0);
    };
  return t.jsx(bn, {
    value: et.DATA,
    role: 'tabpanel',
    className: 'w-full md:min-h-[271px]',
    ref: e,
    children: t.jsxs('div', {
      className: 'flex flex-col gap-3 text-sm text-gray-600 dark:text-gray-50',
      children: [
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(dy, {}),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(fy, {}),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(Jm, { all: !0 }),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(_y, {}),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(my, { confirmClear: n, onClick: r, showText: !0, mutation: s }),
        }),
      ],
    }),
  });
}
const vy = ze.memo(xy);
function by({ onCheckedChange: e }) {
  const [n, o] = W(O.LaTeXParsing),
    a = D(),
    i = (s) => {
      o(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', { children: [a('com_nav_latex_parsing'), ' '] }),
      t.jsx(Ae, {
        id: 'LaTeXParsing',
        checked: n,
        onCheckedChange: i,
        className: 'ml-4 mt-2',
        'data-testid': 'LaTeXParsing',
      }),
    ],
  });
}
function yy({ onCheckedChange: e }) {
  const [n, o] = W(O.modularChat),
    a = D(),
    i = (s) => {
      o(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', { children: [a('com_nav_modular_chat'), ' '] }),
      t.jsx(Ae, {
        id: 'modularChat',
        checked: n,
        onCheckedChange: i,
        className: 'ml-4 mt-2',
        'data-testid': 'modularChat',
      }),
    ],
  });
}
function ky() {
  return t.jsx(bn, {
    value: et.BETA,
    role: 'tabpanel',
    className: 'w-full md:min-h-[271px]',
    children: t.jsxs('div', {
      className: 'flex flex-col gap-3 text-sm text-gray-600 dark:text-gray-50',
      children: [
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(yy, {}),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(by, {}),
        }),
      ],
    }),
  });
}
const wy = p.memo(ky),
  jy = ({ disabled: e = !1 }) => {
    const n = D(),
      { user: o, logout: a } = Re(),
      { mutate: i, isLoading: s } = G0({ onMutate: () => a() }),
      [r, c] = p.useState(!1),
      [l, d] = p.useState(''),
      [_, m] = p.useState(''),
      [f, g] = p.useState(!0),
      h = p.useCallback(() => {
        c(!0);
      }, []),
      v = () => {
        f || i(void 0);
      },
      x = p.useCallback(
        (y, k) => {
          var w;
          const C =
            y.trim().toLowerCase() ===
            ((w = o == null ? void 0 : o.email) == null ? void 0 : w.trim().toLowerCase());
          g(!(C && k === 'DELETE'));
        },
        [o == null ? void 0 : o.email],
      );
    return t.jsxs(t.Fragment, {
      children: [
        t.jsxs('div', {
          className: 'flex items-center justify-between',
          children: [
            t.jsx('span', { children: n('com_nav_delete_account') }),
            t.jsx('label', {
              children: t.jsx(Xo, {
                id: 'delete-user-account',
                disabled: e,
                onClick: h,
                className: b(
                  'btn btn-danger relative border-none bg-red-700 text-white hover:bg-red-800 dark:hover:bg-red-800',
                ),
                children: n('com_ui_delete'),
              }),
            }),
          ],
        }),
        t.jsx(nt, {
          open: r,
          onOpenChange: () => c(!1),
          children: t.jsxs(Bn, {
            className: b('shadow-2xl md:h-[500px] md:w-[450px]'),
            style: { borderRadius: '12px', padding: '20px' },
            children: [
              t.jsx(co, {
                children: t.jsx(lo, {
                  className: 'text-lg font-medium leading-6',
                  children: n('com_nav_delete_account_confirm'),
                }),
              }),
              t.jsx('div', {
                className: 'mb-20 text-sm text-black dark:text-white',
                children: t.jsxs('ul', {
                  children: [
                    t.jsx('li', { children: n('com_nav_delete_warning') }),
                    t.jsx('li', { children: n('com_nav_delete_data_info') }),
                  ],
                }),
              }),
              t.jsxs('div', {
                className: 'flex-col items-center justify-center',
                children: [
                  t.jsx('div', {
                    className: 'mb-4',
                    children: ml(
                      n('com_nav_delete_account_email_placeholder'),
                      'email-confirm-input',
                      (o == null ? void 0 : o.email) || '',
                      (y) => {
                        m(y.target.value), x(y.target.value, l);
                      },
                    ),
                  }),
                  t.jsx('div', {
                    className: 'mb-4',
                    children: ml(
                      n('com_nav_delete_account_confirm_placeholder'),
                      'delete-confirm-input',
                      '',
                      (y) => {
                        d(y.target.value), x(_, y.target.value);
                      },
                    ),
                  }),
                  Cy(v, s, f, n),
                ],
              }),
            ],
          }),
        }),
      ],
    });
  },
  ml = (e, n, o, a) =>
    t.jsxs('div', {
      className: 'mb-4',
      children: [
        t.jsx('label', {
          className: 'mb-1 block text-sm font-medium text-black dark:text-white',
          children: e,
        }),
        t.jsx(Je, {
          id: n,
          onChange: a,
          placeholder: o,
          className: b(Q, 'h-10 max-h-10 w-full max-w-full rounded-md bg-white px-3 py-2', tt),
        }),
      ],
    }),
  Cy = (e, n, o, a) =>
    t.jsx('button', {
      className: b(
        'mt-4 flex w-full items-center justify-center rounded-lg px-4 py-2 transition-colors duration-200',
        o
          ? 'cursor-not-allowed bg-gray-200 text-gray-300 dark:bg-gray-500 dark:text-gray-600'
          : n
          ? 'cursor-not-allowed bg-gray-100 text-gray-700 dark:bg-gray-400 dark:text-gray-700'
          : 'bg-red-700 text-white hover:bg-red-800 ',
      ),
      onClick: e,
      disabled: n || o,
      children: n
        ? t.jsx('div', {
            className: 'flex h-6 justify-center',
            children: t.jsx(Oe, { className: 'icon-sm m-auto' }),
          })
        : t.jsx(t.Fragment, {
            children: o
              ? t.jsxs(t.Fragment, {
                  children: [
                    t.jsx(Yc, {}),
                    t.jsx('span', { className: 'ml-2', children: a('com_ui_locked') }),
                  ],
                })
              : t.jsxs(t.Fragment, {
                  children: [
                    t.jsx(Yc, {}),
                    t.jsx('span', {
                      className: 'ml-2',
                      children: a('com_nav_delete_account_button'),
                    }),
                  ],
                }),
          }),
    });
function Ny() {
  const e = ye(O.user),
    [n, o] = p.useState(null),
    [a, i] = p.useState(!1),
    [s, r] = p.useState(null),
    { data: c = Lt } = wn({ select: (h) => yn(h) }),
    l = D(),
    { showToast: d } = Ie(),
    { mutate: _, isLoading: m } = V0({
      onSuccess: (h) => {
        d({ message: l('com_ui_upload_success') }), i(!1), e((v) => ({ ...v, avatar: h.url }));
      },
      onError: (h) => {
        console.error('Error:', h), d({ message: l('com_ui_upload_error'), status: 'error' });
      },
    });
  p.useEffect(() => {
    if (n) {
      const h = new FileReader();
      (h.onloadend = () => {
        r(h.result);
      }),
        h.readAsDataURL(n);
    } else r(null);
  }, [n]);
  const f = (h) => {
      var x;
      const v = (x = h.target.files) == null ? void 0 : x[0];
      c.avatarSizeLimit && v && v.size <= c.avatarSizeLimit
        ? (o(v), i(!0))
        : d({ message: l('com_ui_upload_invalid'), status: 'error' });
    },
    g = () => {
      if (!n) {
        console.error('No file selected');
        return;
      }
      const h = new FormData();
      h.append('input', n, n.name), h.append('manual', 'true'), _(h);
    };
  return t.jsxs(t.Fragment, {
    children: [
      t.jsxs('div', {
        className: 'flex items-center justify-between',
        children: [
          t.jsx('span', { children: l('com_nav_profile_picture') }),
          t.jsxs('label', {
            htmlFor: 'file-upload-avatar',
            className:
              'flex h-auto cursor-pointer items-center rounded bg-transparent px-2 py-1 text-xs font-medium font-normal transition-colors hover:bg-gray-100 hover:text-green-700 dark:bg-transparent dark:text-white dark:hover:bg-gray-600 dark:hover:text-green-500',
            children: [
              t.jsx(Cp, { className: 'mr-1 flex w-[22px] items-center stroke-1' }),
              t.jsx('span', { children: l('com_nav_change_picture') }),
              t.jsx('input', {
                id: 'file-upload-avatar',
                value: '',
                type: 'file',
                className: b('hidden'),
                accept: '.png, .jpg',
                onChange: f,
              }),
            ],
          }),
        ],
      }),
      t.jsx(nt, {
        open: a,
        onOpenChange: () => i(!1),
        children: t.jsxs(Bn, {
          className: b('shadow-2xl dark:bg-gray-700 dark:text-white md:h-[350px] md:w-[450px] '),
          style: { borderRadius: '12px' },
          children: [
            t.jsx(co, {
              children: t.jsx(lo, {
                className: 'text-lg font-medium leading-6 text-gray-800 dark:text-gray-200',
                children: l('com_ui_preview'),
              }),
            }),
            t.jsxs('div', {
              className: 'flex flex-col items-center justify-center',
              children: [
                s &&
                  t.jsx('img', {
                    src: s,
                    alt: 'Preview',
                    className: 'mb-2 rounded-full',
                    style: {
                      maxWidth: '100%',
                      maxHeight: '150px',
                      width: '150px',
                      height: '150px',
                      objectFit: 'cover',
                    },
                  }),
                t.jsx('button', {
                  className: b(
                    'mt-4 rounded px-4 py-2 text-white transition-colors hover:bg-green-600 hover:text-gray-200',
                    m ? 'cursor-not-allowed bg-green-600' : 'bg-green-500',
                  ),
                  onClick: g,
                  disabled: m,
                  children: m
                    ? t.jsx('div', {
                        className: 'flex h-6',
                        children: t.jsx(Oe, { className: 'icon-sm m-auto' }),
                      })
                    : l('com_ui_upload'),
                }),
              ],
            }),
          ],
        }),
      }),
    ],
  });
}
function Sy({ onCheckedChange: e }) {
  const [n, o] = W(O.UsernameDisplay),
    a = D(),
    i = (s) => {
      o(s), e && e(s);
    };
  return t.jsx(bn, {
    value: et.ACCOUNT,
    role: 'tabpanel',
    className: 'w-full md:min-h-[271px]',
    children: t.jsxs('div', {
      className: 'flex flex-col gap-3 text-sm text-gray-600 dark:text-gray-50',
      children: [
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(Ny, {}),
        }),
        t.jsx('div', {
          className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-600',
          children: t.jsx(jy, {}),
        }),
        t.jsxs('div', {
          className: 'flex items-center justify-between',
          children: [
            t.jsxs('div', { children: [' ', a('com_nav_user_name_display'), ' '] }),
            t.jsx(Ae, {
              id: 'UsernameDisplay',
              checked: n,
              onCheckedChange: i,
              className: 'ml-4 mt-2',
              'data-testid': 'UsernameDisplay',
            }),
          ],
        }),
      ],
    }),
  });
}
const Ay = ze.memo(Sy);
function Ty({ onCheckedChange: e }) {
  const n = D(),
    [o, a] = W(O.conversationMode),
    [i, s] = W(O.advancedMode),
    [r] = W(O.TextToSpeech),
    [, c] = W(O.autoSendText),
    [, l] = W(O.decibelValue),
    [, d] = W(O.autoTranscribeAudio),
    _ = (m) => {
      i || (d(m), c(m), l(-45)), a(m), e && e(m);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: t.jsx('strong', { children: n('com_nav_conversation_mode') }) }),
      t.jsxs('div', {
        className: 'flex items-center justify-between',
        children: [
          t.jsx('label', {
            className:
              'flex h-auto cursor-pointer items-center rounded border border-gray-500/70 bg-transparent px-2 py-1 text-xs font-medium font-normal transition-colors hover:border-gray-500/95 hover:bg-gray-100 hover:text-green-700 dark:bg-transparent dark:text-white dark:hover:bg-gray-600 dark:hover:text-green-500',
            onClick: () => s(!i),
            children: t.jsx('span', { children: i ? 'Advanced Mode' : 'Simple Mode' }),
          }),
          t.jsx('div', { className: 'w-2' }),
          t.jsx(Ae, {
            id: 'ConversationMode',
            checked: o,
            onCheckedChange: _,
            className: 'ml-4',
            'data-testid': 'ConversationMode',
            disabled: !r,
          }),
        ],
      }),
    ],
  });
}
function Iy({ onCheckedChange: e }) {
  const n = D(),
    [o, a] = W(O.automaticPlayback),
    i = (s) => {
      a(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: n('com_nav_automatic_playback') }),
      t.jsx(Ae, {
        id: 'AutomaticPlayback',
        checked: o,
        onCheckedChange: i,
        className: 'ml-4',
        'data-testid': 'AutomaticPlayback',
      }),
    ],
  });
}
function zy({ onCheckedChange: e }) {
  const n = D(),
    [o, a] = W(O.cacheTTS),
    [i] = W(O.TextToSpeech),
    s = (r) => {
      a(r), e && e(r);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: n('com_nav_enable_cache_tts') }),
      t.jsx(Ae, {
        id: 'CacheTTS',
        checked: o,
        onCheckedChange: s,
        className: 'ml-4',
        'data-testid': 'CacheTTS',
        disabled: !i,
      }),
    ],
  });
}
function Ly() {
  const e = D(),
    [n, o] = W(O.endpointTTS),
    a = [
      { value: 'browser', display: e('com_nav_browser') },
      { value: 'external', display: e('com_nav_external') },
    ],
    i = (s) => {
      o(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: e('com_nav_engine') }),
      t.jsx(jn, {
        value: n,
        onChange: i,
        options: a,
        width: 220,
        position: 'left',
        testId: 'EngineTTSDropdown',
      }),
    ],
  });
}
function Py() {
  const e = D(),
    n = Y(O.TextToSpeech),
    [o, a] = W(O.playbackRate);
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', {
        className: 'flex items-center justify-between',
        children: [
          t.jsx('div', { children: e('com_nav_playback_rate') }),
          t.jsx('div', { className: 'w-2' }),
          t.jsxs('small', {
            className: 'opacity-40',
            children: ['(', e('com_endpoint_default_with_num', '1'), ')'],
          }),
        ],
      }),
      t.jsxs('div', {
        className: 'flex items-center justify-between',
        children: [
          t.jsx(we, {
            value: [o ?? 1],
            onValueChange: (i) => a(i[0]),
            doubleClickHandler: () => a(null),
            min: 0.1,
            max: 2,
            step: 0.1,
            className: 'ml-4 flex h-4 w-24',
            disabled: !n,
          }),
          t.jsx('div', { className: 'w-2' }),
          t.jsx(ve, {
            value: o ?? 1,
            disabled: !n,
            onChange: (i) => a(i ? i[0] : 0),
            min: 0.1,
            max: 2,
            className: b(
              Q,
              b(
                ge,
                'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
              ),
            ),
          }),
        ],
      }),
    ],
  });
}
function Ey({ onCheckedChange: e }) {
  const n = D(),
    [o, a] = W(O.TextToSpeech),
    i = (s) => {
      a(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: t.jsx('strong', { children: n('com_nav_text_to_speech') }) }),
      t.jsx(Ae, {
        id: 'TextToSpeech',
        checked: o,
        onCheckedChange: i,
        className: 'ml-4',
        'data-testid': 'TextToSpeech',
      }),
    ],
  });
}
const My = ({
  value: e,
  label: n = '',
  onChange: o,
  options: a,
  className: i = '',
  position: s = 'right',
  width: r,
  maxHeight: c = 'auto',
  testId: l = 'dropdown-menu',
}) => {
  var _;
  const d = { right: 'origin-bottom-left left-0', left: 'origin-bottom-right right-0' };
  return t.jsx('div', {
    className: b('relative', i),
    children: t.jsx(Me, {
      value: e,
      onChange: (m) => {
        o(m);
      },
      children: t.jsxs('div', {
        className: b('relative', i),
        children: [
          t.jsxs(Me.Button, {
            'data-testid': l,
            className: b(
              'relative inline-flex items-center justify-between rounded-md border-gray-300 bg-white py-2 pl-3 pr-8 text-gray-700 hover:bg-gray-50 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:hover:bg-gray-600',
              'w-auto',
              i,
            ),
            children: [
              t.jsxs('span', {
                className: 'block truncate',
                children: [
                  n,
                  ((_ = a
                    .map((m) => (typeof m == 'string' ? { value: m, display: m } : m))
                    .find((m) => m.value === e)) == null
                    ? void 0
                    : _.display) || e,
                ],
              }),
              t.jsx('span', {
                className: 'pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2',
                children: t.jsx('svg', {
                  xmlns: 'http://www.w3.org/2000/svg',
                  fill: 'none',
                  viewBox: '0 0 24 24',
                  strokeWidth: '2',
                  stroke: 'currentColor',
                  className:
                    'h-4 w-5 rotate-0 transform text-gray-400 transition-transform duration-300 ease-in-out',
                  children: t.jsx('polyline', { points: '6 9 12 15 18 9' }),
                }),
              }),
            ],
          }),
          t.jsx(Me.Options, {
            className: b(
              `absolute z-50 mt-1 flex max-h-[40vh] flex-col items-start gap-1 overflow-auto rounded-lg border border-gray-300 bg-white p-1.5 text-gray-700 shadow-lg transition-opacity focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white ${d[s]}`,
              i,
            ),
            style: { width: r ? `${r}px` : 'auto', maxHeight: c },
            children: a.map((m, f) =>
              t.jsx(
                Me.Option,
                {
                  value: typeof m == 'string' ? m : m.value,
                  className: b(
                    'relative cursor-pointer select-none rounded border-gray-300 bg-white py-2.5 pl-3 pr-6 text-gray-700 hover:bg-gray-100 dark:border-gray-300 dark:bg-gray-700 dark:text-white dark:hover:bg-gray-600',
                  ),
                  style: { width: '100%' },
                  'data-theme': typeof m == 'string' ? m : m.value,
                  children: t.jsx('span', {
                    className: 'block truncate',
                    children: typeof m == 'string' ? m : m.display,
                  }),
                },
                f,
              ),
            ),
          }),
        ],
      }),
    }),
  });
};
function Ry() {
  const e = D(),
    [n, o] = W(O.voice),
    { data: a } = Ag();
  p.useEffect(() => {
    !n && a != null && a.length && o(a[0]);
  }, [n, a, o]);
  const i = p.useMemo(() => (a ?? []).map((s) => ({ value: s, display: s })), [a]);
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: e('com_nav_voice_select') }),
      t.jsx(My, {
        value: n,
        onChange: (s) => o(s),
        options: i,
        width: 220,
        position: 'left',
        testId: 'VoiceDropdown',
      }),
    ],
  });
}
function Oy({ onCheckedChange: e }) {
  const n = D(),
    [o, a] = W(O.autoSendText),
    [i] = W(O.SpeechToText),
    s = (r) => {
      a(r), e && e(r);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: n('com_nav_auto_send_text') }),
      t.jsx(Ae, {
        id: 'AutoSendText',
        checked: o,
        onCheckedChange: s,
        className: 'ml-4',
        'data-testid': 'AutoSendText',
        disabled: !i,
      }),
    ],
  });
}
function Dy({ onCheckedChange: e }) {
  const n = D(),
    [o, a] = W(O.SpeechToText),
    i = (s) => {
      a(s), e && e(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: t.jsx('strong', { children: n('com_nav_speech_to_text') }) }),
      t.jsx(Ae, {
        id: 'SpeechToText',
        checked: o,
        onCheckedChange: i,
        className: 'ml-4',
        'data-testid': 'SpeechToText',
      }),
    ],
  });
}
function Fy() {
  const e = D(),
    [n, o] = W(O.endpointSTT),
    a = [
      { value: 'browser', display: e('com_nav_browser') },
      { value: 'external', display: e('com_nav_external') },
    ],
    i = (s) => {
      o(s);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: e('com_nav_engine') }),
      t.jsx(jn, {
        value: n,
        onChange: i,
        options: a,
        width: 220,
        position: 'left',
        testId: 'EngineSTTDropdown',
      }),
    ],
  });
}
function By() {
  const e = D(),
    n = Y(O.SpeechToText),
    [o, a] = W(O.decibelValue);
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsxs('div', {
        className: 'flex items-center justify-between',
        children: [
          t.jsx('div', { children: e('com_nav_db_sensitivity') }),
          t.jsx('div', { className: 'w-2' }),
          t.jsxs('small', {
            className: 'opacity-40',
            children: ['(', e('com_endpoint_default_with_num', '0.45'), ')'],
          }),
        ],
      }),
      t.jsxs('div', {
        className: 'flex items-center justify-between',
        children: [
          t.jsx(we, {
            value: [o ?? -45],
            onValueChange: (i) => a(i[0]),
            doubleClickHandler: () => a(-45),
            min: -100,
            max: -30,
            step: 1,
            className: 'ml-4 flex h-4 w-24',
            disabled: !n,
          }),
          t.jsx('div', { className: 'w-2' }),
          t.jsx(ve, {
            value: o,
            disabled: !n,
            onChange: (i) => a(i ? i[0] : 0),
            min: -100,
            max: -30,
            className: b(
              Q,
              b(
                ge,
                'reset-rc-number-input reset-rc-number-input-text-right h-auto w-12 border-0 group-hover/temp:border-gray-200',
              ),
            ),
          }),
        ],
      }),
    ],
  });
}
function $y({ onCheckedChange: e }) {
  const n = D(),
    [o, a] = W(O.autoTranscribeAudio),
    [i] = W(O.SpeechToText),
    s = (r) => {
      a(r), e && e(r);
    };
  return t.jsxs('div', {
    className: 'flex items-center justify-between',
    children: [
      t.jsx('div', { children: n('com_nav_auto_transcribe_audio') }),
      t.jsx(Ae, {
        id: 'AutoTranscribeAudio',
        checked: o,
        onCheckedChange: s,
        className: 'ml-4',
        'data-testid': 'AutoTranscribeAudio',
        disabled: !i,
      }),
    ],
  });
}
function qy() {
  const [e, n] = p.useState(!1),
    [o] = W(O.advancedMode),
    [a] = W(O.autoTranscribeAudio),
    i = p.useRef(null);
  return (
    ro(i, () => e && n(!1), []),
    t.jsx(bn, {
      value: et.SPEECH,
      role: 'tabpanel',
      className: 'w-full px-4 md:min-h-[300px]',
      ref: i,
      children: t.jsxs('div', {
        className: 'flex flex-col gap-3 text-sm text-gray-600 dark:text-gray-50',
        children: [
          t.jsx('div', {
            className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
            children: t.jsx(Ty, {}),
          }),
          t.jsx('div', { className: 'h-px bg-black/20 bg-white/20', role: 'none' }),
          t.jsx('div', {
            className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
            children: t.jsx(Dy, {}),
          }),
          t.jsx('div', {
            className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
            children: t.jsx(Fy, {}),
          }),
          o &&
            t.jsx('div', {
              className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
              children: t.jsx($y, {}),
            }),
          a &&
            o &&
            t.jsx('div', {
              className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
              children: t.jsx(By, {}),
            }),
          o &&
            t.jsx('div', {
              className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
              children: t.jsx(Oy, {}),
            }),
          t.jsx('div', { className: 'h-px bg-black/20 bg-white/20', role: 'none' }),
          t.jsx('div', {
            className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
            children: t.jsx(Ey, {}),
          }),
          t.jsx('div', {
            className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
            children: t.jsx(Iy, {}),
          }),
          t.jsx('div', {
            className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
            children: t.jsx(Ly, {}),
          }),
          t.jsx('div', {
            className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
            children: t.jsx(Ry, {}),
          }),
          o &&
            t.jsx('div', {
              className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
              children: t.jsx(Py, {}),
            }),
          o &&
            t.jsx('div', {
              className: 'border-b pb-3 last-of-type:border-b-0 dark:border-gray-700',
              children: t.jsx(zy, {}),
            }),
        ],
      }),
    })
  );
}
const Uy = ze.memo(qy),
  Vy = p.forwardRef(() => {
    const { logout: e } = Re(),
      n = D();
    return t.jsxs('button', {
      className:
        'group group flex w-full cursor-pointer items-center gap-2 rounded p-2.5 text-sm transition-colors duration-200 hover:bg-gray-500/10 focus:ring-0 dark:text-white dark:hover:bg-gray-600',
      onClick: () => e(),
      children: [t.jsx(qx, {}), n('com_nav_log_out')],
    });
  });
function Gy({ setNavVisible: e }) {
  const n = D(),
    { newConversation: o } = sn(0),
    a = Y(O.conversationByIndex(0)),
    { title: i = 'New Chat' } = a || {};
  return t.jsxs('div', {
    className:
      'border-token-border-medium bg-token-main-surface-primary sticky top-0 z-10 flex min-h-[40px] items-center justify-center border-b bg-white pl-1 dark:bg-gray-800 dark:text-white md:hidden md:hidden',
    children: [
      t.jsxs('button', {
        type: 'button',
        'data-testid': 'mobile-header-new-chat-button',
        className:
          'inline-flex h-10 w-10 items-center justify-center rounded-md hover:text-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white active:opacity-50 dark:hover:text-white',
        onClick: () => e((s) => (localStorage.setItem('navVisible', JSON.stringify(!s)), !s)),
        children: [
          t.jsx('span', { className: 'sr-only', children: n('com_nav_open_sidebar') }),
          t.jsx('svg', {
            width: '24',
            height: '24',
            viewBox: '0 0 24 24',
            fill: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            className: 'icon-md',
            children: t.jsx('path', {
              fillRule: 'evenodd',
              clipRule: 'evenodd',
              d: 'M3 8C3 7.44772 3.44772 7 4 7H20C20.5523 7 21 7.44772 21 8C21 8.55228 20.5523 9 20 9H4C3.44772 9 3 8.55228 3 8ZM3 16C3 15.4477 3.44772 15 4 15H14C14.5523 15 15 15.4477 15 16C15 16.5523 14.5523 17 14 17H4C3.44772 17 3 16.5523 3 16Z',
              fill: 'currentColor',
            }),
          }),
        ],
      }),
      t.jsx('h1', {
        className:
          'flex-1 overflow-hidden text-ellipsis whitespace-nowrap text-center text-sm font-normal',
        children: i || n('com_ui_new_chat'),
      }),
      t.jsx('button', {
        type: 'button',
        className:
          'inline-flex h-10 w-10 items-center justify-center rounded-md hover:text-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white active:opacity-50 dark:hover:text-white',
        onClick: () => o(),
        children: t.jsx('svg', {
          width: '24',
          height: '24',
          viewBox: '0 0 24 24',
          fill: 'none',
          xmlns: 'http://www.w3.org/2000/svg',
          className: 'icon-md',
          children: t.jsx('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: 'M16.7929 2.79289C18.0118 1.57394 19.9882 1.57394 21.2071 2.79289C22.4261 4.01184 22.4261 5.98815 21.2071 7.20711L12.7071 15.7071C12.5196 15.8946 12.2652 16 12 16H9C8.44772 16 8 15.5523 8 15V12C8 11.7348 8.10536 11.4804 8.29289 11.2929L16.7929 2.79289ZM19.7929 4.20711C19.355 3.7692 18.645 3.7692 18.2071 4.2071L10 12.4142V14H11.5858L19.7929 5.79289C20.2308 5.35499 20.2308 4.64501 19.7929 4.20711ZM6 5C5.44772 5 5 5.44771 5 6V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V14C19 13.4477 19.4477 13 20 13C20.5523 13 21 13.4477 21 14V18C21 19.6569 19.6569 21 18 21H6C4.34315 21 3 19.6569 3 18V6C3 4.34314 4.34315 3 6 3H10C10.5523 3 11 3.44771 11 4C11 4.55228 10.5523 5 10 5H6Z',
            fill: 'currentColor',
          }),
        }),
      }),
    ],
  });
}
const Ky = p.forwardRef((e, n) => {
  const { clearSearch: o } = e,
    a = X(),
    i = O.useClearConvoState(),
    s = ye(O.searchQuery),
    [r, c] = p.useState(!1),
    [l, d] = p.useState(''),
    _ = D(),
    m = p.useCallback(() => {
      c(!1), s(''), o(), d('');
    }, [s, o]),
    f = (x) => {
      const { value: y } = x.target;
      x.key === 'Backspace' && y === '' && m();
    },
    g = p.useCallback(
      (x) => {
        s(x), x && (a.invalidateQueries([G.messages]), i());
      },
      [a, i, s],
    ),
    h = p.useMemo(() => Rn(g, 350), [g]),
    v = (x) => {
      const { value: y } = x.target;
      c(y.length > 0), d(y), h(y);
    };
  return t.jsxs('div', {
    ref: n,
    className:
      'relative mt-1 flex flex h-10 cursor-pointer items-center gap-3 rounded-lg border-white bg-gray-50 px-2 px-3 py-2 text-black transition-colors duration-200 focus-within:bg-gray-200 hover:bg-gray-200 dark:bg-gray-750 dark:text-white dark:focus-within:bg-gray-800 dark:hover:bg-gray-800',
    children: [
      t.jsx(ao, { className: 'absolute left-3 h-4 w-4' }),
      t.jsx('input', {
        type: 'text',
        className:
          'm-0 mr-0 w-full border-none bg-transparent p-0 pl-7 text-sm leading-tight outline-none',
        value: l,
        onChange: v,
        onKeyDown: (x) => {
          x.code === 'Space' && x.stopPropagation();
        },
        placeholder: _('com_nav_search_placeholder'),
        onKeyUp: f,
        autoComplete: 'off',
      }),
      t.jsx(oo, {
        className: b(
          'absolute right-[7px] h-5 w-5 cursor-pointer transition-opacity duration-1000',
          r ? 'opacity-100' : 'opacity-0',
        ),
        onClick: m,
      }),
    ],
  });
});
function ul({ column: e, title: n, className: o = '', filters: a, valueMap: i }) {
  const s = D();
  return e.getCanSort()
    ? t.jsx('div', {
        className: b('flex items-center space-x-2', o),
        children: t.jsxs($d, {
          children: [
            t.jsx(qd, {
              asChild: !0,
              children: t.jsxs(Ne, {
                variant: 'ghost',
                className: 'px-2 py-0 text-xs sm:px-2 sm:py-2 sm:text-sm',
                children: [
                  t.jsx('span', { children: n }),
                  e.getIsFiltered()
                    ? t.jsx(pa, { className: 'icon-sm text-muted-foreground/70 ml-2' })
                    : t.jsx(pa, { className: 'icon-sm ml-2 opacity-30' }),
                  e.getIsSorted() === 'desc'
                    ? t.jsx(Ir, { className: 'icon-sm ml-2' })
                    : e.getIsSorted() === 'asc'
                    ? t.jsx(zr, { className: 'icon-sm ml-2' })
                    : t.jsx(t_, { className: 'icon-sm ml-2' }),
                ],
              }),
            }),
            t.jsxs(Ws, {
              align: 'start',
              className: 'z-[1001] dark:border-gray-700 dark:bg-gray-750',
              children: [
                t.jsxs(jo, {
                  onClick: () => e.toggleSorting(!1),
                  className: 'cursor-pointer dark:text-white dark:hover:bg-gray-800',
                  children: [
                    t.jsx(zr, { className: 'text-muted-foreground/70 mr-2 h-3.5 w-3.5' }),
                    s('com_ui_ascending'),
                  ],
                }),
                t.jsxs(jo, {
                  onClick: () => e.toggleSorting(!0),
                  className: 'cursor-pointer dark:text-white dark:hover:bg-gray-800',
                  children: [
                    t.jsx(Ir, { className: 'text-muted-foreground/70 mr-2 h-3.5 w-3.5' }),
                    s('com_ui_descending'),
                  ],
                }),
                t.jsx(Vd, { className: 'dark:bg-gray-500' }),
                a &&
                  Object.entries(a).map(([r, c]) =>
                    c.map((l) => {
                      const d = s((i == null ? void 0 : i[l]) ?? ''),
                        _ = d != null && d.length ? d : i == null ? void 0 : i[l];
                      return _
                        ? t.jsxs(
                            jo,
                            {
                              className: 'cursor-pointer dark:text-white dark:hover:bg-gray-800',
                              onClick: () => {
                                e.setFilterValue(l);
                              },
                              children: [
                                t.jsx(pa, {
                                  className: 'text-muted-foreground/70 mr-2 h-3.5 w-3.5',
                                }),
                                _,
                              ],
                            },
                            `${r}-${l}`,
                          )
                        : null;
                    }),
                  ),
                a &&
                  t.jsxs(jo, {
                    className: e.getIsFiltered()
                      ? 'cursor-pointer dark:text-white dark:hover:bg-gray-800'
                      : 'pointer-events-none opacity-30',
                    onClick: () => {
                      e.setFilterValue(void 0);
                    },
                    children: [
                      t.jsx(Np, { className: 'text-muted-foreground/70 mr-2 h-3.5 w-3.5' }),
                      s('com_ui_show_all'),
                    ],
                  }),
              ],
            }),
          ],
        }),
      })
    : t.jsx('div', { className: b(o), children: n });
}
const pl = {
    [Ke.avatar]: 'com_ui_avatar',
    [Ke.unknown]: 'com_ui_unknown',
    [Ke.assistants]: 'com_ui_assistants',
    [Ke.image_generation]: 'com_ui_image_gen',
    [Ke.assistants_output]: 'com_ui_assistants_output',
    [Ke.message_attachment]: 'com_ui_attachment',
  },
  Hy = [
    {
      id: 'select',
      header: ({ table: e }) =>
        t.jsx(vt, {
          checked:
            e.getIsAllPageRowsSelected() || (e.getIsSomePageRowsSelected() && 'indeterminate'),
          onCheckedChange: (n) => e.toggleAllPageRowsSelected(!!n),
          'aria-label': 'Select all',
          className: 'flex',
        }),
      cell: ({ row: e }) =>
        t.jsx(vt, {
          checked: e.getIsSelected(),
          onCheckedChange: (n) => e.toggleSelected(!!n),
          'aria-label': 'Select row',
          className: 'flex',
        }),
      enableSorting: !1,
      enableHiding: !1,
    },
    {
      meta: { size: '150px' },
      accessorKey: 'filename',
      header: ({ column: e }) => {
        const n = D();
        return t.jsxs(Ne, {
          variant: 'ghost',
          className: 'px-2 py-0 text-xs sm:px-2 sm:py-2 sm:text-sm',
          onClick: () => e.toggleSorting(e.getIsSorted() === 'asc'),
          children: [n('com_ui_name'), t.jsx(No, { className: 'ml-2 h-3 w-4 sm:h-4 sm:w-4' })],
        });
      },
      cell: ({ row: e }) => {
        var a;
        const n = e.original;
        if ((a = n.type) != null && a.startsWith('image'))
          return t.jsxs('div', {
            className: 'flex gap-2',
            children: [
              t.jsx(pr, {
                url: n.filepath,
                className: 'relative h-10 w-10 shrink-0 overflow-hidden rounded-md',
                source: n == null ? void 0 : n.source,
              }),
              t.jsx('span', { className: 'self-center truncate ', children: n.filename }),
            ],
          });
        const o = Os(n.type);
        return t.jsxs('div', {
          className: 'flex gap-2',
          children: [
            o && t.jsx(cr, { fileType: o, className: 'relative', file: n }),
            t.jsx('span', { className: 'self-center truncate', children: n.filename }),
          ],
        });
      },
    },
    {
      accessorKey: 'updatedAt',
      header: ({ column: e }) => {
        const n = D();
        return t.jsxs(Ne, {
          variant: 'ghost',
          onClick: () => e.toggleSorting(e.getIsSorted() === 'asc'),
          className: 'px-2 py-0 text-xs sm:px-2 sm:py-2 sm:text-sm',
          children: [n('com_ui_date'), t.jsx(No, { className: 'ml-2 h-3 w-4 sm:h-4 sm:w-4' })],
        });
      },
      cell: ({ row: e }) => $_(e.original.updatedAt),
    },
    {
      accessorKey: 'filterSource',
      header: ({ column: e }) => {
        const n = D();
        return t.jsx(ul, {
          column: e,
          title: n('com_ui_storage'),
          filters: {
            Storage: Object.values(ue).filter(
              (o) => o === ue.local || o === ue.openai || o === ue.azure,
            ),
          },
          valueMap: { [ue.azure]: 'Azure', [ue.openai]: 'OpenAI', [ue.local]: 'com_ui_host' },
        });
      },
      cell: ({ row: e }) => {
        const n = D(),
          { source: o } = e.original;
        return o === ue.openai
          ? t.jsxs('div', {
              className: 'flex flex-wrap items-center gap-2',
              children: [t.jsx(lm, { className: 'icon-sm text-green-600/50' }), 'OpenAI'],
            })
          : o === ue.azure
          ? t.jsxs('div', {
              className: 'flex flex-wrap items-center gap-2',
              children: [t.jsx(oi, { className: 'icon-sm text-cyan-700' }), 'Azure'],
            })
          : t.jsxs('div', {
              className: 'flex flex-wrap items-center gap-2',
              children: [t.jsx(Sp, { className: 'icon-sm text-cyan-700' }), n('com_ui_host')],
            });
      },
    },
    {
      accessorKey: 'context',
      header: ({ column: e }) => {
        const n = D();
        return t.jsx(ul, {
          column: e,
          title: n('com_ui_context'),
          filters: { Context: Object.values(Ke).filter((o) => o === Ke[o ?? '']) },
          valueMap: pl,
        });
      },
      cell: ({ row: e }) => {
        const { context: n } = e.original,
          o = D();
        return t.jsx('div', {
          className: 'flex flex-wrap items-center gap-2',
          children: o(pl[n ?? Ke.unknown] ?? 'com_ui_unknown'),
        });
      },
    },
    {
      accessorKey: 'bytes',
      header: ({ column: e }) => {
        const n = D();
        return t.jsxs(Ne, {
          variant: 'ghost',
          className: 'px-2 py-0 text-xs sm:px-2 sm:py-2 sm:text-sm',
          onClick: () => e.toggleSorting(e.getIsSorted() === 'asc'),
          children: [n('com_ui_size'), t.jsx(No, { className: 'ml-2 h-3 w-4 sm:h-4 sm:w-4' })],
        });
      },
      cell: ({ row: e }) => {
        const n = ' MB',
          o = Number((Number(e.original.bytes) / 1024 / 1024).toFixed(2));
        return o < 0.01 ? '< 0.01 MB' : `${o}${n}`;
      },
    },
  ],
  Wy = {
    [Ke.filename]: 'com_ui_name',
    [Ke.updatedAt]: 'com_ui_date',
    [Ke.source]: 'com_ui_storage',
    [Ke.context]: 'com_ui_context',
    [Ke.bytes]: 'com_ui_size',
  };
function Jy({ columns: e, data: n }) {
  var v, x;
  const o = D(),
    [a, i] = p.useState(!1),
    [s, r] = p.useState({}),
    [c, l] = p.useState([]),
    [d, _] = p.useState([]),
    [m, f] = p.useState({}),
    { deleteFiles: g } = R1(() => i(!1)),
    h = As({
      data: n,
      columns: e,
      onSortingChange: l,
      getCoreRowModel: Ts(),
      getSortedRowModel: f_(),
      onColumnFiltersChange: _,
      getFilteredRowModel: x_(),
      onColumnVisibilityChange: f,
      getPaginationRowModel: v_(),
      onRowSelectionChange: r,
      state: { sorting: c, columnFilters: d, columnVisibility: m, rowSelection: s },
    });
  return t.jsxs(t.Fragment, {
    children: [
      t.jsxs('div', {
        className: 'flex items-center gap-4 py-4',
        children: [
          t.jsxs(Ne, {
            variant: 'ghost',
            onClick: () => {
              i(!0);
              const y = h.getFilteredSelectedRowModel().rows.map((k) => k.original);
              g({ files: y }), r({});
            },
            className: 'ml-1 gap-2 dark:hover:bg-gray-750/25 sm:ml-0',
            disabled: !h.getFilteredSelectedRowModel().rows.length || a,
            children: [
              a
                ? t.jsx(Oe, { className: 'h-4 w-4' })
                : t.jsx(or, { className: 'h-4 w-4 text-red-400' }),
              o('com_ui_delete'),
            ],
          }),
          t.jsx(Je, {
            placeholder: o('com_files_filter'),
            value: ((v = h.getColumn('filename')) == null ? void 0 : v.getFilterValue()) ?? '',
            onChange: (y) => {
              var k;
              return (k = h.getColumn('filename')) == null
                ? void 0
                : k.setFilterValue(y.target.value);
            },
            className: 'max-w-sm dark:border-gray-500',
          }),
          t.jsxs($d, {
            children: [
              t.jsx(qd, {
                asChild: !0,
                children: t.jsx(Ne, {
                  variant: 'outline',
                  className: 'ml-auto',
                  children: t.jsx(pa, { className: 'h-4 w-4' }),
                }),
              }),
              t.jsx(Ws, {
                align: 'end',
                className: 'z-[1001] dark:border-gray-700 dark:bg-gray-750',
                children: h
                  .getAllColumns()
                  .filter((y) => y.getCanHide())
                  .map((y) =>
                    t.jsx(
                      Ud,
                      {
                        className:
                          'cursor-pointer capitalize dark:text-white dark:hover:bg-gray-800',
                        checked: y.getIsVisible(),
                        onCheckedChange: (k) => y.toggleVisibility(!!k),
                        children: o(Wy[y.id]),
                      },
                      y.id,
                    ),
                  ),
              }),
            ],
          }),
        ],
      }),
      t.jsx('div', {
        className:
          'relative max-h-[25rem] min-h-0 overflow-y-auto rounded-md border border-black/10 pb-4 dark:border-white/10 sm:min-h-[28rem]',
        children: t.jsxs(Js, {
          className: 'w-full min-w-[600px] border-separate border-spacing-0',
          children: [
            t.jsx(Qs, {
              children: h.getHeaderGroups().map((y) =>
                t.jsx(
                  Mn,
                  {
                    children: y.headers.map((k, C) => {
                      const j = { maxWidth: '32px', minWidth: '125px', zIndex: 50 };
                      return (
                        k.id === 'filename' &&
                          ((j.maxWidth = '50%'), (j.width = '50%'), (j.minWidth = '300px')),
                        C === 0 &&
                          k.id === 'select' &&
                          ((j.width = '25px'), (j.maxWidth = '25px'), (j.minWidth = '35px')),
                        t.jsx(
                          Ys,
                          {
                            className:
                              'align-start sticky top-0 rounded-t border-b border-black/10 bg-white px-2 py-1 text-left font-medium text-gray-700 dark:border-white/10 dark:bg-gray-700 dark:text-gray-100 sm:px-4 sm:py-2',
                            style: j,
                            children: k.isPlaceholder
                              ? null
                              : Zn(k.column.columnDef.header, k.getContext()),
                          },
                          k.id,
                        )
                      );
                    }),
                  },
                  y.id,
                ),
              ),
            }),
            t.jsx(Zs, {
              children:
                (x = h.getRowModel().rows) != null && x.length
                  ? h.getRowModel().rows.map((y) =>
                      t.jsx(
                        Mn,
                        {
                          'data-state': y.getIsSelected() && 'selected',
                          className:
                            'border-b border-black/10 text-left text-gray-600 dark:border-white/10 dark:text-gray-300 [tr:last-child_&]:border-b-0',
                          children: y.getVisibleCells().map((k, C) => {
                            var T, S;
                            const j =
                                ((S = (T = k.column.columnDef) == null ? void 0 : T.meta) == null
                                  ? void 0
                                  : S.size) ?? 'auto',
                              w = {};
                            return (
                              k.column.id === 'filename'
                                ? (w.maxWidth = j)
                                : C === 0 && (w.maxWidth = '20px'),
                              t.jsx(
                                Do,
                                {
                                  className:
                                    'align-start overflow-x-auto px-2 py-1 text-xs sm:px-4 sm:py-2 sm:text-sm [tr[data-disabled=true]_&]:opacity-50',
                                  style: w,
                                  children: Zn(k.column.columnDef.cell, k.getContext()),
                                },
                                k.id,
                              )
                            );
                          }),
                        },
                        y.id,
                      ),
                    )
                  : t.jsx(Mn, {
                      children: t.jsx(Do, {
                        colSpan: e.length,
                        className: 'h-24 text-center',
                        children: o('com_files_no_results'),
                      }),
                    }),
            }),
          ],
        }),
      }),
      t.jsxs('div', {
        className:
          'ml-4 mr-4 mt-4 flex h-auto items-center justify-end space-x-2 py-4 sm:ml-0 sm:mr-0 sm:h-0',
        children: [
          t.jsx('div', {
            className: 'text-muted-foreground ml-2 flex-1 text-sm',
            children: o(
              'com_files_number_selected',
              `${h.getFilteredSelectedRowModel().rows.length}`,
              `${h.getFilteredRowModel().rows.length}`,
            ),
          }),
          t.jsx(Ne, {
            className: 'select-none dark:border-gray-500 dark:hover:bg-gray-600',
            variant: 'outline',
            size: 'sm',
            onClick: () => h.previousPage(),
            disabled: !h.getCanPreviousPage(),
            children: o('com_ui_prev'),
          }),
          t.jsx(Ne, {
            className: 'select-none dark:border-gray-500 dark:hover:bg-gray-600',
            variant: 'outline',
            size: 'sm',
            onClick: () => h.nextPage(),
            disabled: !h.getCanNextPage(),
            children: o('com_ui_next'),
          }),
        ],
      }),
    ],
  });
}
ue.openai, ue.local, ue.local, ue.local;
function Qy({ open: e, onOpenChange: n }) {
  const o = D(),
    { data: a = [] } = Ga({
      select: (i) =>
        i.map(
          (s) => (
            (s.context = s.context ?? Ke.unknown),
            (s.filterSource = s.source === ue.firebase ? ue.local : s.source),
            s
          ),
        ),
    });
  return t.jsx(nt, {
    open: e,
    onOpenChange: n,
    children: t.jsxs(Bn, {
      className: b('w-11/12 overflow-x-auto shadow-2xl dark:bg-gray-700 dark:text-white'),
      children: [
        t.jsx(co, {
          children: t.jsx(lo, {
            className: 'text-lg font-medium leading-6 text-gray-900 dark:text-gray-200',
            children: o('com_nav_my_files'),
          }),
        }),
        t.jsxs('div', {
          className: 'overflow-x-auto p-0 sm:p-6 sm:pt-4',
          children: [
            t.jsx(Jy, { columns: Hy, data: a }),
            t.jsx('div', { className: 'mt-5 sm:mt-4' }),
          ],
        }),
      ],
    }),
  });
}
function Zy({ open: e, onOpenChange: n }) {
  const o = Dn('(max-width: 767px)'),
    a = D();
  return t.jsx(nt, {
    open: e,
    onOpenChange: n,
    children: t.jsxs(Bn, {
      className: b(
        'overflow-hidden shadow-2xl md:min-h-[373px] md:w-[680px]',
        o ? 'top-5 -translate-y-0' : '',
      ),
      children: [
        t.jsx(co, {
          children: t.jsx(lo, {
            className: 'text-lg font-medium leading-6 text-gray-800 dark:text-gray-200',
            children: a('com_nav_settings'),
          }),
        }),
        t.jsx('div', {
          className: 'max-h-[373px] overflow-auto px-6 md:min-h-[373px] md:w-[680px]',
          children: t.jsxs(Ql, {
            defaultValue: et.GENERAL,
            className: 'flex flex-col gap-10 md:flex-row',
            orientation: 'horizontal',
            children: [
              t.jsxs(gs, {
                'aria-label': 'Settings',
                role: 'tablist',
                'aria-orientation': 'horizontal',
                className: b(
                  'min-w-auto max-w-auto -ml-[8px] flex flex-shrink-0 flex-col flex-wrap overflow-auto sm:max-w-none',
                  o ? 'flex-row rounded-lg bg-gray-200 p-1 dark:bg-gray-800' : '',
                ),
                style: { outline: 'none' },
                children: [
                  t.jsxs(un, {
                    className: b(
                      'group m-1 flex items-center justify-start gap-2 rounded-md px-2 py-1.5 text-sm text-black radix-state-active:bg-white radix-state-active:text-black dark:text-white dark:radix-state-active:bg-gray-600',
                      o
                        ? 'flex-1 flex-col items-center justify-center text-sm dark:text-gray-500 dark:radix-state-active:text-white'
                        : 'bg-white radix-state-active:bg-gray-200',
                      o ? '' : 'dark:bg-gray-700',
                    ),
                    value: et.GENERAL,
                    style: { userSelect: 'none' },
                    children: [t.jsx(ni, {}), a('com_nav_setting_general')],
                  }),
                  t.jsxs(un, {
                    className: b(
                      'group m-1 flex items-center justify-start gap-2 rounded-md px-2 py-1.5 text-sm text-black radix-state-active:bg-white radix-state-active:text-black dark:text-white dark:radix-state-active:bg-gray-600',
                      o
                        ? 'flex-1 flex-col items-center justify-center text-sm dark:text-gray-500 dark:radix-state-active:text-white'
                        : 'bg-white radix-state-active:bg-gray-200',
                      o ? '' : 'dark:bg-gray-700',
                    ),
                    value: et.MESSAGES,
                    style: { userSelect: 'none' },
                    children: [t.jsx(w_, { className: 'icon-sm' }), a('com_endpoint_messages')],
                  }),
                  t.jsxs(un, {
                    className: b(
                      'group m-1 flex items-center justify-start gap-2 rounded-md px-2 py-1.5 text-sm text-black radix-state-active:bg-white radix-state-active:text-black dark:text-white dark:radix-state-active:bg-gray-600',
                      o
                        ? 'flex-1 flex-col items-center justify-center text-sm dark:text-gray-500 dark:radix-state-active:text-white'
                        : 'bg-white radix-state-active:bg-gray-200',
                      o ? '' : 'dark:bg-gray-700',
                    ),
                    value: et.BETA,
                    style: { userSelect: 'none' },
                    children: [t.jsx(sv, {}), a('com_nav_setting_beta')],
                  }),
                  t.jsxs(un, {
                    className: b(
                      'group m-1 flex items-center justify-start gap-2 rounded-md px-2 py-1.5 text-sm text-black radix-state-active:bg-white radix-state-active:text-black dark:text-white dark:radix-state-active:bg-gray-600',
                      o
                        ? 'flex-1 flex-col items-center justify-center text-sm dark:text-gray-500 dark:radix-state-active:text-white'
                        : 'bg-white radix-state-active:bg-gray-200',
                      o ? '' : 'dark:bg-gray-700',
                    ),
                    value: et.SPEECH,
                    style: { userSelect: 'none' },
                    children: [t.jsx(cv, { className: 'icon-sm' }), a('com_nav_setting_speech')],
                  }),
                  t.jsxs(un, {
                    className: b(
                      'group m-1 flex items-center justify-start gap-2 rounded-md px-2 py-1.5 text-sm text-black radix-state-active:bg-white radix-state-active:text-black dark:text-white dark:radix-state-active:bg-gray-600',
                      o
                        ? 'flex-1 flex-col items-center justify-center text-sm dark:text-gray-500 dark:radix-state-active:text-white'
                        : 'bg-white radix-state-active:bg-gray-200',
                      o ? '' : 'dark:bg-gray-700',
                    ),
                    value: et.DATA,
                    style: { userSelect: 'none' },
                    children: [t.jsx(im, {}), a('com_nav_setting_data')],
                  }),
                  t.jsxs(un, {
                    className: b(
                      'group m-1 flex items-center justify-start gap-2 rounded-md px-2 py-1.5 text-sm text-black radix-state-active:bg-white radix-state-active:text-black dark:text-white dark:radix-state-active:bg-gray-600',
                      o
                        ? 'flex-1 flex-col items-center justify-center text-sm dark:text-gray-500 dark:radix-state-active:text-white'
                        : 'bg-white radix-state-active:bg-gray-200',
                      o ? '' : 'dark:bg-gray-700',
                    ),
                    value: et.ACCOUNT,
                    style: { userSelect: 'none' },
                    children: [t.jsx(ai, {}), a('com_nav_setting_account')],
                  }),
                ],
              }),
              t.jsxs('div', {
                className: 'h-screen max-h-[373px] overflow-auto sm:w-full sm:max-w-none',
                children: [
                  t.jsx(oy, {}),
                  t.jsx(ly, {}),
                  t.jsx(wy, {}),
                  t.jsx(Uy, {}),
                  t.jsx(vy, {}),
                  t.jsx(Ay, {}),
                ],
              }),
            ],
          }),
        }),
      ],
    }),
  });
}
const Fi = p.forwardRef((e, n) => {
  const { svg: o, text: a, clickHandler: i, disabled: s, className: r = '' } = e,
    c = {
      className: b(
        'flex gap-2 rounded p-2.5 text-sm cursor-pointer focus:ring-0 group items-center transition-colors duration-200 hover:bg-gray-500/10 dark:text-white dark:hover:bg-gray-600',
        r,
        { 'opacity-50 pointer-events-none': s },
      ),
    };
  return i && (c.onClick = i), t.jsxs('a', { ...c, ref: n, children: [o(), a] });
});
function Yy() {
  const e = D(),
    { user: n, isAuthenticated: o } = Re(),
    { data: a } = bt(),
    i = dd({ enabled: !!o && (a == null ? void 0 : a.checkBalance) }),
    [s, r] = p.useState(!1),
    [c, l] = W(O.showFiles),
    d = zd(n);
  return t.jsxs(t.Fragment, {
    children: [
      t.jsx(Sn, {
        as: 'div',
        className: 'group relative',
        children: ({ open: _ }) =>
          t.jsxs(t.Fragment, {
            children: [
              t.jsxs(Sn.Button, {
                className: b(
                  'group-ui-open:bg-gray-100 dark:group-ui-open:bg-gray-700 duration-350 mt-text-sm flex h-auto w-full items-center gap-2 rounded-lg p-2 text-sm transition-colors hover:bg-gray-100 dark:hover:bg-gray-800',
                  _ ? 'bg-gray-100 dark:bg-gray-800' : '',
                ),
                'data-testid': 'nav-user',
                children: [
                  t.jsx('div', {
                    className: '-ml-0.9 -mt-0.8 h-8 w-8 flex-shrink-0',
                    children: t.jsx('div', {
                      className: 'relative flex',
                      children:
                        !(n != null && n.avatar) && !(n != null && n.username)
                          ? t.jsx('div', {
                              style: {
                                backgroundColor: 'rgb(121, 137, 255)',
                                width: '32px',
                                height: '32px',
                                boxShadow: 'rgba(240, 246, 252, 0.1) 0px 0px 0px 1px',
                              },
                              className:
                                'relative flex items-center justify-center rounded-full p-1 text-white',
                              children: t.jsx(ai, {}),
                            })
                          : t.jsx('img', {
                              className: 'rounded-full',
                              src: (n == null ? void 0 : n.avatar) || d,
                              alt: 'avatar',
                            }),
                    }),
                  }),
                  t.jsx('div', {
                    className:
                      'mt-2 grow overflow-hidden text-ellipsis whitespace-nowrap text-left text-black dark:text-gray-100',
                    style: { marginTop: '0', marginLeft: '0' },
                    children:
                      (n == null ? void 0 : n.name) ||
                      (n == null ? void 0 : n.username) ||
                      e('com_nav_user'),
                  }),
                ],
              }),
              t.jsx(bs, {
                as: p.Fragment,
                enter: 'transition ease-out duration-110 transform',
                enterFrom: 'translate-y-2 opacity-0',
                enterTo: 'translate-y-0 opacity-100',
                leave: 'transition ease-in duration-100 transform',
                leaveFrom: 'translate-y-0 opacity-100',
                leaveTo: 'translate-y-2 opacity-0',
                children: t.jsxs(Sn.Items, {
                  className:
                    'absolute bottom-full left-0 z-[100] mb-1 mt-1 w-full translate-y-0 overflow-hidden rounded-lg border border-gray-300 bg-white p-1.5 opacity-100 shadow-lg outline-none dark:border-gray-600 dark:bg-gray-700',
                  children: [
                    t.jsx('div', {
                      className: 'text-token-text-secondary ml-3 mr-2 py-2 text-sm',
                      role: 'none',
                      children: (n == null ? void 0 : n.email) || e('com_nav_user'),
                    }),
                    t.jsx('div', {
                      className: 'my-1.5 h-px bg-black/10 dark:bg-white/10',
                      role: 'none',
                    }),
                    (a == null ? void 0 : a.checkBalance) &&
                      i.data &&
                      !isNaN(parseFloat(i.data)) &&
                      t.jsxs(t.Fragment, {
                        children: [
                          t.jsx('div', {
                            className: 'text-token-text-secondary ml-3 mr-2 py-2 text-sm',
                            children: `Balance: ${parseFloat(i.data).toFixed(2)}`,
                          }),
                          t.jsx('div', {
                            className: 'my-1.5 h-px bg-black/10 dark:bg-white/10',
                            role: 'none',
                          }),
                        ],
                      }),
                    t.jsx(Sn.Item, {
                      as: 'div',
                      children: t.jsx(Fi, {
                        svg: () => t.jsx(Ap, { className: 'icon-md' }),
                        text: e('com_nav_my_files'),
                        clickHandler: () => l(!0),
                      }),
                    }),
                    (a == null ? void 0 : a.helpAndFaqURL) !== '/' &&
                      t.jsx(Sn.Item, {
                        as: 'div',
                        children: t.jsx(Fi, {
                          svg: () => t.jsx(Yx, {}),
                          text: e('com_nav_help_faq'),
                          clickHandler: () =>
                            window.open(a == null ? void 0 : a.helpAndFaqURL, '_blank'),
                        }),
                      }),
                    t.jsx(Sn.Item, {
                      as: 'div',
                      children: t.jsx(Fi, {
                        svg: () => t.jsx(ni, { className: 'icon-md' }),
                        text: e('com_nav_settings'),
                        clickHandler: () => r(!0),
                      }),
                    }),
                    t.jsx('div', {
                      className: 'my-1.5 h-px bg-black/10 dark:bg-white/10',
                      role: 'none',
                    }),
                    t.jsx(Sn.Item, { as: 'div', children: t.jsx(Vy, {}) }),
                  ],
                }),
              }),
            ],
          }),
      }),
      c && t.jsx(Qy, { open: c, onOpenChange: l }),
      s && t.jsx(Zy, { open: s, onOpenChange: r }),
    ],
  });
}
const Xy = p.memo(Yy),
  ek = ({ conversation: e }) => {
    const n = Y(O.searchQuery),
      { data: o } = Se();
    if (n)
      return t.jsx('div', {
        className:
          'shadow-stroke relative flex h-7 w-7 items-center justify-center rounded-full bg-white text-black dark:bg-white',
        children: t.jsx(ao, { className: 'h-5 w-5' }),
      });
    let { endpoint: a = '' } = e ?? {};
    const i = (e == null ? void 0 : e.iconURL) ?? '';
    a = io({ endpointsConfig: o, iconURL: i, endpoint: a });
    const s = Ce(o, a, 'type'),
      r = Ce(o, a, 'iconURL'),
      c = Go({ endpoint: a, endpointsConfig: o, endpointType: s, endpointIconURL: r }),
      l = $t[c];
    return t.jsx('div', {
      className: 'h-7 w-7 flex-shrink-0',
      children:
        i && i.includes('http')
          ? t.jsx(ta, { preset: e, endpointIconURL: i, context: 'nav' })
          : t.jsx('div', {
              className:
                'shadow-stroke relative flex h-full items-center justify-center rounded-full bg-white text-black dark:bg-white',
              children:
                a &&
                l &&
                t.jsx(l, {
                  size: 41,
                  context: 'nav',
                  className: 'h-2/3 w-2/3',
                  endpoint: a,
                  endpointType: s,
                  iconURL: r,
                }),
            }),
    });
  };
function tk({ index: e = 0, toggleNav: n, subHeaders: o }) {
  const { newConversation: a } = sn(e),
    i = _t(),
    s = D(),
    { conversation: r } = O.useCreateConversationAtom(e),
    c = (l) => {
      l.button === 0 && !(l.ctrlKey || l.metaKey) && (l.preventDefault(), a(), i('/c/new'), n());
    };
  return t.jsx(pt, {
    delayDuration: 250,
    children: t.jsx(ht, {
      children: t.jsxs('div', {
        className: 'sticky left-0 right-0 top-0 z-20 bg-gray-50 pt-3.5 dark:bg-gray-750',
        children: [
          t.jsx('div', {
            className: 'pb-0.5 last:pb-0',
            tabIndex: 0,
            style: { transform: 'none' },
            children: t.jsxs('a', {
              href: '/',
              'data-testid': 'nav-new-chat-button',
              onClick: c,
              className:
                'group flex h-10 items-center gap-2 rounded-lg px-2 font-medium hover:bg-gray-200 dark:hover:bg-gray-700',
              children: [
                t.jsx(ek, { conversation: r }),
                t.jsx('div', {
                  className:
                    'text-token-text-primary grow overflow-hidden text-ellipsis whitespace-nowrap text-sm',
                  children: s('com_ui_new_chat'),
                }),
                t.jsx('div', {
                  className: 'flex gap-3',
                  children: t.jsxs('span', {
                    className: 'flex items-center',
                    'data-state': 'closed',
                    children: [
                      t.jsx(gt, {
                        asChild: !0,
                        children: t.jsx('button', {
                          type: 'button',
                          className: 'text-token-text-primary',
                          children: t.jsx(mm, { className: 'h-[18px] w-[18px]' }),
                        }),
                      }),
                      t.jsx(ft, { side: 'right', sideOffset: 20, children: s('com_ui_new_chat') }),
                    ],
                  }),
                }),
              ],
            }),
          }),
          o || null,
        ],
      }),
    }),
  });
}
const nk = ({ navVisible: e, setNavVisible: n }) => {
    const { conversationId: o } = Kt(),
      { isAuthenticated: a } = Re(),
      [i, s] = p.useState('260px'),
      [r, c] = p.useState(!1),
      l = Dn('(max-width: 768px)'),
      [d, _] = Yo('newUser', !0),
      [m, f] = p.useState(!1),
      g = p.useCallback(() => {
        c(!0);
      }, []),
      h = p.useCallback(() => {
        c(!1);
      }, []);
    p.useEffect(() => {
      s(l ? '320px' : '260px');
    }, [l]);
    const { newConversation: v } = Us(),
      [x, y] = p.useState(!1),
      k = Y(O.isSearchEnabled),
      { refreshConversations: C } = Wo(),
      { pageNumber: j, searchQuery: w, setPageNumber: T, searchQueryRes: S } = Vs(),
      {
        data: I,
        fetchNextPage: P,
        hasNextPage: F,
        isFetchingNextPage: R,
      } = Mo({ pageNumber: j.toString(), isArchived: !1 }, { enabled: a }),
      { containerRef: E, moveToTop: M } = Xa({
        setShowLoading: y,
        hasNextPage: w ? S.hasNextPage : F,
        fetchNextPage: w ? S.fetchNextPage : P,
        isFetchingNextPage: w ? S.isFetchingNextPage : R,
      }),
      A = p.useMemo(() => {
        var z;
        return (
          ((z = w ? (S == null ? void 0 : S.data) : I) == null
            ? void 0
            : z.pages.flatMap((B) => B.conversations)) || []
        );
      }, [I, w, S == null ? void 0 : S.data]),
      q = () => {
        T(1), C(), o == 'search' && v();
      },
      $ = () => {
        n((z) => (localStorage.setItem('navVisible', JSON.stringify(!z)), !z)), d && _(!1);
      },
      L = () => {
        l && $();
      };
    return t.jsx(pt, {
      delayDuration: 250,
      children: t.jsxs(ht, {
        children: [
          t.jsx('div', {
            className:
              'nav active max-w-[320px] flex-shrink-0 overflow-x-hidden bg-gray-50 dark:bg-gray-750 md:max-w-[260px]',
            style: {
              width: e ? i : '0px',
              visibility: e ? 'visible' : 'hidden',
              transition: 'width 0.2s, visibility 0.2s',
            },
            children: t.jsx('div', {
              className: 'h-full w-[320px] md:w-[260px]',
              children: t.jsx('div', {
                className: 'flex h-full min-h-0 flex-col',
                children: t.jsx('div', {
                  className: b(
                    'flex h-full min-h-0 flex-col transition-opacity',
                    m && !l ? 'opacity-50' : 'opacity-100',
                  ),
                  children: t.jsx('div', {
                    className: b(
                      'scrollbar-trigger relative h-full w-full flex-1 items-start border-white/20',
                    ),
                    children: t.jsxs('nav', {
                      className: 'flex h-full w-full flex-col px-3 pb-3.5',
                      children: [
                        t.jsxs('div', {
                          className: b(
                            '-mr-2 flex-1 flex-col overflow-y-auto pr-2 transition-opacity duration-500',
                            r ? '' : 'scrollbar-transparent',
                          ),
                          onMouseEnter: g,
                          onMouseLeave: h,
                          ref: E,
                          children: [
                            t.jsx(tk, {
                              toggleNav: L,
                              subHeaders: k && t.jsx(Ky, { clearSearch: q }),
                            }),
                            t.jsx(Ab, { conversations: A, moveToTop: M, toggleNav: L }),
                            (R || x) &&
                              t.jsx(Oe, {
                                className: b('m-1 mx-auto mb-4 h-4 w-4 text-black dark:text-white'),
                              }),
                          ],
                        }),
                        t.jsx(Xy, {}),
                      ],
                    }),
                  }),
                }),
              }),
            }),
          }),
          t.jsx(Vm, {
            isHovering: m,
            setIsHovering: f,
            onToggle: $,
            navVisible: e,
            className: 'fixed left-0 top-1/2 z-40 hidden md:flex',
          }),
          t.jsx('div', { className: `nav-mask${e ? ' active' : ''}`, onClick: $ }),
        ],
      }),
    });
  },
  ok = p.memo(nk),
  Bt = p.forwardRef((e, n) => {
    const {
        id: o,
        value: a,
        label: i,
        subLabel: s,
        onChange: r,
        labelClassName: c = '',
        inputClassName: l = '',
      } = e,
      d = D();
    return t.jsxs(t.Fragment, {
      children: [
        t.jsxs('div', {
          className: b('flex flex-row', c),
          children: [
            t.jsx(Z, { htmlFor: o, className: 'text-left text-sm font-medium', children: i }),
            s &&
              t.jsx('div', {
                className: 'mx-1 text-left text-sm text-gray-700 dark:text-gray-400',
                children: s,
              }),
            t.jsx('br', {}),
          ],
        }),
        t.jsx(Je, {
          id: o,
          'data-testid': `input-${o}`,
          value: a ?? '',
          onChange: r,
          ref: n,
          placeholder: `${d('com_endpoint_config_value')} ${i}`,
          className: b(Q, 'flex h-10 max-h-10 w-full resize-none px-3 py-2', tt, l),
        }),
      ],
    });
  }),
  ak = ({ endpoint: e, userProvideURL: n }) => {
    const { control: o } = Jt();
    return t.jsxs('form', {
      className: 'flex-wrap',
      children: [
        t.jsx(Ge, {
          name: 'apiKey',
          control: o,
          render: ({ field: a }) =>
            t.jsx(Bt, {
              id: 'apiKey',
              ...a,
              label: `${e} API Key`,
              labelClassName: 'mb-1',
              inputClassName: 'mb-2',
            }),
        }),
        n &&
          t.jsx(Ge, {
            name: 'baseURL',
            control: o,
            render: ({ field: a }) =>
              t.jsx(Bt, { id: 'baseURL', ...a, label: `${e} API URL`, labelClassName: 'mb-1' }),
          }),
      ],
    });
  },
  ik = Tp({
    client_email: fi().email().min(3),
    project_id: fi().min(3),
    private_key: fi().min(601),
  }),
  sk = (e) => ik.safeParse(e).success,
  rk = ({ userKey: e, setUserKey: n }) => {
    const o = D(),
      { getMultiKey: a, setMultiKey: i } = V1(n);
    return t.jsxs(t.Fragment, {
      children: [
        t.jsxs('div', {
          className: 'flex flex-row',
          children: [
            t.jsx(Z, {
              htmlFor: pn.GOOGLE_SERVICE_KEY,
              className: 'text-left text-sm font-medium',
              children: o('com_endpoint_config_google_service_key'),
            }),
            t.jsx('div', {
              className: 'mx-1 text-left text-sm text-gray-700 dark:text-gray-400',
              children: o('com_endpoint_config_google_cloud_platform'),
            }),
            t.jsx('br', {}),
          ],
        }),
        t.jsx(Wm, {
          id: pn.GOOGLE_SERVICE_KEY,
          className: 'w-full',
          containerClassName:
            'dark:bg-gray-700 h-10 max-h-10 w-full resize-none py-2 dark:ring-1 dark:ring-gray-600',
          text: o('com_endpoint_config_key_import_json_key'),
          successText: o('com_endpoint_config_key_import_json_key_success'),
          invalidText: o('com_endpoint_config_key_import_json_key_invalid'),
          validator: sk,
          onFileSelected: (s) => {
            i(pn.GOOGLE_SERVICE_KEY, JSON.stringify(s), e);
          },
        }),
        t.jsx(Bt, {
          id: pn.GOOGLE_API_KEY,
          value: a(pn.GOOGLE_API_KEY, e) ?? '',
          onChange: (s) => i(pn.GOOGLE_API_KEY, s.target.value ?? '', e),
          label: o('com_endpoint_config_google_api_key'),
          subLabel: o('com_endpoint_config_google_gemini_api'),
        }),
      ],
    });
  },
  ko = ({ endpoint: e, userProvideURL: n }) => {
    const { control: o } = Jt(),
      a = e === N.azureOpenAI;
    return t.jsxs('form', {
      className: 'flex-wrap',
      children: [
        !a &&
          t.jsx(Ge, {
            name: 'apiKey',
            control: o,
            render: ({ field: i }) =>
              t.jsx(Bt, {
                id: 'apiKey',
                ...i,
                label: `${a ? 'Azure q' : ''}OpenAI API Key`,
                labelClassName: 'mb-1',
                inputClassName: 'mb-2',
              }),
          }),
        a &&
          t.jsxs(t.Fragment, {
            children: [
              t.jsx(Ge, {
                name: 'azureOpenAIApiKey',
                control: o,
                render: ({ field: i }) =>
                  t.jsx(Bt, {
                    id: 'azureOpenAIApiKey',
                    ...i,
                    label: 'Azure OpenAI API Key',
                    labelClassName: 'mb-1',
                  }),
              }),
              t.jsx('div', { className: 'mt-3' }),
              t.jsx(Ge, {
                name: 'azureOpenAIApiInstanceName',
                control: o,
                render: ({ field: i }) =>
                  t.jsx(Bt, {
                    id: 'azureOpenAIApiInstanceName',
                    ...i,
                    label: 'Azure OpenAI Instance Name',
                    labelClassName: 'mb-1',
                  }),
              }),
              t.jsx('div', { className: 'mt-3' }),
              t.jsx(Ge, {
                name: 'azureOpenAIApiDeploymentName',
                control: o,
                render: ({ field: i }) =>
                  t.jsx(Bt, {
                    id: 'azureOpenAIApiDeploymentName',
                    ...i,
                    label: 'Azure OpenAI Deployment Name',
                    labelClassName: 'mb-1',
                  }),
              }),
              t.jsx('div', { className: 'mt-3' }),
              t.jsx(Ge, {
                name: 'azureOpenAIApiVersion',
                control: o,
                render: ({ field: i }) =>
                  t.jsx(Bt, {
                    id: 'azureOpenAIApiVersion',
                    ...i,
                    label: 'Azure OpenAI API Version',
                    labelClassName: 'mb-1',
                  }),
              }),
            ],
          }),
        n &&
          t.jsx('div', {
            className: 'mt-3',
            children: t.jsx(Ge, {
              name: 'baseURL',
              control: o,
              render: ({ field: i }) =>
                t.jsx(Bt, {
                  id: 'baseURL',
                  ...i,
                  label: 'API Base URL',
                  subLabel: '(Optional)',
                  labelClassName: 'mb-1',
                }),
            }),
          }),
      ],
    });
  },
  ck = ({ userKey: e, setUserKey: n, endpoint: o }) => {
    const a = D();
    return t.jsx(Bt, {
      id: o,
      value: e ?? '',
      onChange: (i) => n(i.target.value ?? ''),
      label: a('com_endpoint_config_key_name'),
    });
  };
function lk({ endpoint: e }) {
  const n = D();
  return (
    {
      [N.bingAI]: t.jsxs('small', {
        className: 'break-all text-gray-500',
        children: [
          n('com_endpoint_config_key_get_edge_key'),
          ' ',
          t.jsx('a', {
            target: '_blank',
            href: 'https://www.bing.com',
            rel: 'noreferrer',
            className: 'text-blue-600 underline',
            children: 'https://www.bing.com',
          }),
          '. ',
          n('com_endpoint_config_key_get_edge_key_dev_tool'),
          ' ',
          t.jsx('a', {
            target: '_blank',
            href: 'https://github.com/waylaidwanderer/node-chatgpt-api/issues/378#issuecomment-1559868368',
            rel: 'noreferrer',
            className: 'text-blue-600 underline',
            children: n('com_endpoint_config_key_edge_instructions'),
          }),
          ' ',
          n('com_endpoint_config_key_edge_full_token_string'),
        ],
      }),
      [N.chatGPTBrowser]: t.jsxs('small', {
        className: 'break-all text-gray-500',
        children: [
          n('com_endpoint_config_key_chatgpt'),
          ' ',
          t.jsx('a', {
            target: '_blank',
            href: 'https://chat.openai.com',
            rel: 'noreferrer',
            className: 'text-blue-600 underline',
            children: 'https://chat.openai.com',
          }),
          ', ',
          n('com_endpoint_config_key_chatgpt_then_visit'),
          ' ',
          t.jsx('a', {
            target: '_blank',
            href: 'https://chat.openai.com/api/auth/session',
            rel: 'noreferrer',
            className: 'text-blue-600 underline',
            children: 'https://chat.openai.com/api/auth/session',
          }),
          '. ',
          n('com_endpoint_config_key_chatgpt_copy_token'),
        ],
      }),
      [N.google]: t.jsxs(t.Fragment, {
        children: [
          t.jsxs('small', {
            className: 'break-all text-gray-500',
            children: [
              n('com_endpoint_config_google_service_key'),
              ': ',
              n('com_endpoint_config_key_google_need_to'),
              ' ',
              t.jsx('a', {
                target: '_blank',
                href: 'https://console.cloud.google.com/vertex-ai',
                rel: 'noreferrer',
                className: 'text-blue-600 underline',
                children: n('com_endpoint_config_key_google_vertex_ai'),
              }),
              ' ',
              n('com_endpoint_config_key_google_vertex_api'),
              ' ',
              t.jsx('a', {
                target: '_blank',
                href: 'https://console.cloud.google.com/projectselector/iam-admin/serviceaccounts/create?walkthrough_id=iam--create-service-account#step_index=1',
                rel: 'noreferrer',
                className: 'text-blue-600 underline',
                children: n('com_endpoint_config_key_google_service_account'),
              }),
              '. ',
              n('com_endpoint_config_key_google_vertex_api_role'),
            ],
          }),
          t.jsxs('small', {
            className: 'break-all text-gray-500',
            children: [
              n('com_endpoint_config_google_api_key'),
              ': ',
              n('com_endpoint_config_google_api_info'),
              ' ',
              t.jsx('a', {
                target: '_blank',
                href: 'https://makersuite.google.com/app/apikey',
                rel: 'noreferrer',
                className: 'text-blue-600 underline',
                children: n('com_endpoint_config_click_here'),
              }),
              ' ',
            ],
          }),
        ],
      }),
    }[e] || null
  );
}
const _k = p.memo(lk),
  hl = {
    [N.google]: rk,
    [N.openAI]: ko,
    [N.custom]: ak,
    [N.azureOpenAI]: ko,
    [N.gptPlugins]: ko,
    [N.assistants]: ko,
    [N.azureAssistants]: ko,
    default: ck,
  },
  gl = new Set([N.openAI, N.custom, N.azureOpenAI, N.gptPlugins, N.assistants, N.azureAssistants]),
  fl = {
    THIRTY_MINUTES: { display: 'in 30 minutes', value: 30 * 60 * 1e3 },
    TWO_HOURS: { display: 'in 2 hours', value: 2 * 60 * 60 * 1e3 },
    TWELVE_HOURS: { display: 'in 12 hours', value: 12 * 60 * 60 * 1e3 },
    ONE_DAY: { display: 'in 1 day', value: 24 * 60 * 60 * 1e3 },
    ONE_WEEK: { display: 'in 7 days', value: 7 * 24 * 60 * 60 * 1e3 },
    ONE_MONTH: { display: 'in 30 days', value: 30 * 24 * 60 * 60 * 1e3 },
  },
  Qm = ({ open: e, onOpenChange: n, endpoint: o, endpointType: a, userProvideURL: i }) => {
    const s = an({
        defaultValues: {
          apiKey: '',
          baseURL: '',
          azureOpenAIApiKey: '',
          azureOpenAIApiInstanceName: '',
          azureOpenAIApiDeploymentName: '',
          azureOpenAIApiVersion: '',
        },
      }),
      [r, c] = p.useState(''),
      { data: l } = Se(),
      [d, _] = p.useState(fl.TWELVE_HOURS.display),
      { getExpiry: m, saveUserKey: f } = Qo(o),
      { showToast: g } = Ie(),
      h = D(),
      v = Object.values(fl),
      x = (w) => {
        _(w);
      },
      y = () => {
        const w = v.find((I) => I.display === d),
          T = Date.now() + (w ? w.value : 0),
          S = (I) => {
            f(I, T), n(!1);
          };
        if (gl.has(o) || gl.has(a ?? '')) {
          s.handleSubmit((I) => {
            const P = o === N.azureOpenAI,
              F = P || o === N.openAI || o === N.gptPlugins || he(o);
            P && (I.apiKey = 'n/a');
            const R = Object.keys(I).filter(($) =>
              (!P && $.startsWith('azure')) || (F && $ === 'baseURL') || ($ === 'baseURL' && !i)
                ? !1
                : I[$] === '',
            );
            if (R.length > 0) {
              g({ message: 'The following fields are required: ' + R.join(', '), status: 'error' }),
                n(!0);
              return;
            }
            const { apiKey: E, baseURL: M, ...A } = I,
              q = { apiKey: E, baseURL: M };
            P &&
              (q.apiKey = JSON.stringify({
                azureOpenAIApiKey: A.azureOpenAIApiKey,
                azureOpenAIApiInstanceName: A.azureOpenAIApiInstanceName,
                azureOpenAIApiDeploymentName: A.azureOpenAIApiDeploymentName,
                azureOpenAIApiVersion: A.azureOpenAIApiVersion,
              })),
              S(JSON.stringify(q)),
              s.reset();
          })();
          return;
        }
        S(r), c('');
      },
      k = hl[a ?? o] ?? hl.default,
      C = m(),
      j = l == null ? void 0 : l[o];
    return t.jsx(nt, {
      open: e,
      onOpenChange: n,
      children: t.jsx(Zt, {
        title: `${h('com_endpoint_config_key_for')} ${Vo[o] ?? o}`,
        className: 'w-11/12 max-w-[650px] sm:w-3/4 md:w-3/4 lg:w-3/4',
        main: t.jsxs('div', {
          className: 'grid w-full items-center gap-2',
          children: [
            t.jsx('small', {
              className: 'text-red-600',
              children: `${h('com_endpoint_config_key_encryption')} ${
                C ? `${new Date(C).toLocaleString()}` : h('com_endpoint_config_key_expiry')
              }`,
            }),
            t.jsx(jn, {
              label: 'Expires ',
              value: d,
              onChange: x,
              options: v.map((w) => w.display),
              width: 185,
            }),
            t.jsx(Ss, {
              ...s,
              children: t.jsx(k, {
                userKey: r,
                setUserKey: c,
                endpoint: o === N.gptPlugins && j != null && j.azure ? N.azureOpenAI : o,
                userProvideURL: i,
              }),
            }),
            t.jsx(_k, { endpoint: o }),
          ],
        }),
        selection: {
          selectHandler: y,
          selectClasses: 'bg-green-500 hover:bg-green-600 dark:hover:bg-green-600 text-white',
          selectText: h('com_ui_submit'),
        },
        leftButtons: t.jsx(Jm, { endpoint: o, showText: !1, disabled: !C }),
      }),
    });
  },
  dk = ({ title: e, value: n, description: o, selected: a, userProvidesKey: i, ...s }) => {
    const r = Y(O.modularChat),
      [c, l] = p.useState(!1),
      { data: d } = Se(),
      { conversation: _, newConversation: m } = me(),
      f = Ho(),
      { getExpiry: g } = Qo(n),
      h = D(),
      v = g(),
      x = (j) => {
        if (!j) return;
        v || l(!0);
        const {
          shouldSwitch: w,
          isNewModular: T,
          isCurrentModular: S,
          isExistingConversation: I,
          newEndpointType: P,
          template: F,
        } = Qn({ newEndpoint: j, modularChat: r, conversation: _, endpointsConfig: d });
        if (I && S && T && w) {
          F.endpointType = P;
          const R = f({ conversation: { ...(_ ?? {}), endpointType: F.endpointType }, preset: F });
          m({ template: R, preset: R, keepLatestMessage: !0 });
          return;
        }
        m({ template: { ...F } });
      },
      y = Ce(d, n, 'type'),
      k = Go({ endpoint: n, endpointsConfig: d, endpointType: y }),
      C = $t[k];
    return t.jsxs(t.Fragment, {
      children: [
        t.jsx('div', {
          role: 'menuitem',
          className: b(
            'group m-1.5 flex max-h-[40px] cursor-pointer gap-2 rounded px-5 py-2.5 !pr-3 text-sm !opacity-100 hover:bg-black/5 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-gray-600',
            'focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900',
          ),
          tabIndex: 1,
          ...s,
          onClick: () => x(n),
          onKeyDown: (j) => {
            j.key === 'Enter' && (j.preventDefault(), x(n));
          },
          children: t.jsxs('div', {
            className: 'flex grow items-center justify-between gap-2',
            children: [
              t.jsx('div', {
                children: t.jsxs('div', {
                  className: 'flex items-center gap-2',
                  children: [
                    C &&
                      t.jsx(C, {
                        size: 18,
                        endpoint: n,
                        context: 'menu-item',
                        className: 'icon-md shrink-0 dark:text-white',
                        iconURL: Ce(d, n, 'iconURL'),
                      }),
                    t.jsxs('div', {
                      children: [
                        e,
                        t.jsx('div', { className: 'text-token-text-tertiary', children: o }),
                      ],
                    }),
                  ],
                }),
              }),
              t.jsxs('div', {
                className: 'flex items-center gap-2',
                children: [
                  i
                    ? t.jsx(
                        'div',
                        {
                          className: 'text-token-text-primary',
                          children: t.jsxs('button', {
                            className: b(
                              'invisible flex gap-x-1 group-hover:visible',
                              a ? 'visible' : '',
                              v
                                ? 'w-full rounded-lg p-2 hover:text-gray-400 dark:hover:text-gray-400'
                                : '',
                              'focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 dark:focus:ring-gray-400 dark:focus:ring-offset-gray-900',
                            ),
                            onClick: (j) => {
                              j.preventDefault(), j.stopPropagation(), l(!0);
                            },
                            children: [
                              t.jsx('div', {
                                className: b('invisible group-hover:visible', v ? 'text-xs' : ''),
                                children: h('com_endpoint_config_key'),
                              }),
                              t.jsx(j_, { className: b(v ? 'icon-sm' : 'icon-md stroke-1') }),
                            ],
                          }),
                        },
                        `set-key-${n}`,
                      )
                    : null,
                  a &&
                    t.jsx('svg', {
                      width: '24',
                      height: '24',
                      viewBox: '0 0 24 24',
                      fill: 'none',
                      xmlns: 'http://www.w3.org/2000/svg',
                      className: 'icon-md block group-hover:hidden',
                      children: t.jsx('path', {
                        fillRule: 'evenodd',
                        clipRule: 'evenodd',
                        d: 'M2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM16.0755 7.93219C16.5272 8.25003 16.6356 8.87383 16.3178 9.32549L11.5678 16.0755C11.3931 16.3237 11.1152 16.4792 10.8123 16.4981C10.5093 16.517 10.2142 16.3973 10.0101 16.1727L7.51006 13.4227C7.13855 13.014 7.16867 12.3816 7.57733 12.0101C7.98598 11.6386 8.61843 11.6687 8.98994 12.0773L10.6504 13.9039L14.6822 8.17451C15 7.72284 15.6238 7.61436 16.0755 7.93219Z',
                        fill: 'currentColor',
                      }),
                    }),
                  (!i || v) &&
                    t.jsxs('div', {
                      className: 'text-token-text-primary hidden gap-x-1 group-hover:flex ',
                      children: [
                        !i && t.jsx('div', { className: '', children: h('com_ui_new_chat') }),
                        t.jsx('svg', {
                          width: '24',
                          height: '24',
                          viewBox: '0 0 24 24',
                          fill: 'none',
                          xmlns: 'http://www.w3.org/2000/svg',
                          className: 'icon-md',
                          children: t.jsx('path', {
                            fillRule: 'evenodd',
                            clipRule: 'evenodd',
                            d: 'M16.7929 2.79289C18.0118 1.57394 19.9882 1.57394 21.2071 2.79289C22.4261 4.01184 22.4261 5.98815 21.2071 7.20711L12.7071 15.7071C12.5196 15.8946 12.2652 16 12 16H9C8.44772 16 8 15.5523 8 15V12C8 11.7348 8.10536 11.4804 8.29289 11.2929L16.7929 2.79289ZM19.7929 4.20711C19.355 3.7692 18.645 3.7692 18.2071 4.2071L10 12.4142V14H11.5858L19.7929 5.79289C20.2308 5.35499 20.2308 4.64501 19.7929 4.20711ZM6 5C5.44772 5 5 5.44771 5 6V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V14C19 13.4477 19.4477 13 20 13C20.5523 13 21 13.4477 21 14V18C21 19.6569 19.6569 21 18 21H6C4.34315 21 3 19.6569 3 18V6C3 4.34314 4.34315 3 6 3H10C10.5523 3 11 3.44771 11 4C11 4.55228 10.5523 5 10 5H6Z',
                            fill: 'currentColor',
                          }),
                        }),
                      ],
                    }),
                ],
              }),
            ],
          }),
        }),
        i &&
          t.jsx(Qm, {
            open: c,
            endpoint: n,
            endpointType: y,
            onOpenChange: l,
            userProvideURL: Ce(d, n, 'userProvideURL'),
          }),
      ],
    });
  },
  mk = ({ endpoints: e, selected: n }) => {
    const { data: o } = Se();
    return t.jsx(t.Fragment, {
      children:
        e &&
        e.map((a, i) => {
          if (a) {
            if (!(o != null && o[a])) return null;
          } else return null;
          const s = Ce(o, a, 'userProvide');
          return t.jsx(
            Uo,
            {
              asChild: !0,
              children: t.jsxs(
                'div',
                {
                  children: [
                    t.jsx(
                      dk,
                      {
                        title: Vo[a] || a,
                        value: a,
                        selected: n === a,
                        'data-testid': `endpoint-item-${a}`,
                        userProvidesKey: !!s,
                      },
                      `endpoint-item-${a}`,
                    ),
                    i !== e.length - 1 && t.jsx(hr, {}),
                  ],
                },
                `endpoint-${a}`,
              ),
            },
            `endpoint-${a}`,
          );
        }),
    });
  },
  uk = () => {
    var l;
    const { data: e = [] } = Se({ select: qa }),
      { conversation: n } = me(),
      { endpoint: o = '', assistant_id: a = null } = n ?? {},
      i = Mt(),
      s = he(o) && ((l = i == null ? void 0 : i[o ?? '']) == null ? void 0 : l[a ?? '']),
      r = (s && (s == null ? void 0 : s.name)) || 'Assistant';
    if (!o) return console.warn('No endpoint selected'), null;
    const c = s ? r : (Vo[o] ?? o ?? '') + ' ';
    return t.jsxs(Pt, {
      children: [
        t.jsx(G2, { primaryText: c + ' ' }),
        t.jsx(Wt, {
          children: t.jsx('div', {
            style: {
              position: 'fixed',
              left: '0px',
              top: '0px',
              transform: 'translate3d(268px, 50px, 0px)',
              minWidth: 'max-content',
              zIndex: 'auto',
            },
            children: t.jsx(Et, {
              side: 'bottom',
              align: 'start',
              className:
                'mt-2 max-h-[65vh] min-w-[340px] overflow-y-auto rounded-lg border border-gray-200 bg-white shadow-lg dark:border-gray-700 dark:bg-gray-700 dark:text-white lg:max-h-[75vh]',
              children: t.jsx(mk, { endpoints: e, selected: o }),
            }),
          }),
        }),
      ],
    });
  };
function pk() {
  const { newConversation: e } = me();
  return Dn('(max-width: 768px)')
    ? null
    : t.jsx('button', {
        'data-testid': 'wide-header-new-chat-button',
        type: 'button',
        className:
          'btn btn-neutral btn-small border-token-border-medium relative ml-2 flex hidden h-9 w-9 items-center justify-center whitespace-nowrap rounded-lg rounded-lg border focus:ring-0 focus:ring-offset-0 md:flex',
        onClick: () => e(),
        children: t.jsx('div', {
          className: 'flex w-full items-center justify-center gap-2',
          children: t.jsx(mm, {}),
        }),
      });
}
const Zm = ({ currentSpec: e, endpointsConfig: n }) => {
  const o = to(e),
    { endpoint: a } = e.preset,
    i = Ce(n, a, 'iconURL'),
    s = Go({ endpoint: a, endpointsConfig: n, endpointIconURL: i });
  let r;
  return (
    o != null && o.includes('http')
      ? (r = o
          ? () =>
              t.jsx('div', {
                className: 'icon-xl mr-1 shrink-0 overflow-hidden rounded-full ',
                style: { width: '20', height: '20' },
                children: t.jsx('img', {
                  src: o,
                  alt: e.name,
                  style: { width: '100%', height: '100%' },
                  className: 'object-cover',
                }),
              })
          : $t[a ?? ''] ?? $t.unknown)
      : (r = $t[s] ?? $t.unknown),
    t.jsx(r, {
      size: 20,
      endpoint: a,
      context: 'menu-item',
      iconURL: i,
      className: 'icon-lg mr-1 shrink-0 dark:text-white',
    })
  );
};
function hk({
  selected: e,
  className: n = '',
  textClassName: o = '',
  primaryText: a = '',
  secondaryText: i = '',
  endpointsConfig: s,
}) {
  const r = D();
  return t.jsx(Ht, {
    asChild: !0,
    children: t.jsxs('div', {
      className: b(
        'group flex cursor-pointer items-center gap-1 rounded-xl px-3 py-2 text-lg font-medium hover:bg-gray-50 radix-state-open:bg-gray-50 dark:hover:bg-gray-700 dark:radix-state-open:bg-gray-700',
        n,
      ),
      children: [
        e && e.showIconInHeader && t.jsx(Zm, { currentSpec: e, endpointsConfig: s }),
        t.jsxs('div', {
          className: o,
          children: [
            e ? a : r('com_ui_none_selected'),
            ' ',
            !!i && t.jsx('span', { className: 'text-token-text-secondary', children: i }),
          ],
        }),
        t.jsx('svg', {
          width: '16',
          height: '17',
          viewBox: '0 0 16 17',
          fill: 'none',
          className: 'text-token-text-tertiary',
          children: t.jsx('path', {
            d: 'M11.3346 7.83203L8.00131 11.1654L4.66797 7.83203',
            stroke: 'currentColor',
            strokeWidth: '2',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
          }),
        }),
      ],
    }),
  });
}
const gk = ({
    title: e,
    spec: n,
    selected: o,
    description: a,
    userProvidesKey: i,
    endpointsConfig: s,
    onClick: r,
    ...c
  }) => {
    const { endpoint: l } = n.preset,
      [d, _] = p.useState(!1),
      { getExpiry: m } = Qo(l ?? ''),
      f = D(),
      g = m(),
      h = () => {
        g || _(!0), r && r();
      },
      v = p.useMemo(() => n.preset.endpointType ?? Ce(s, l, 'type'), [n, s, l]),
      { showIconInMenu: x = !0 } = n;
    return t.jsxs(t.Fragment, {
      children: [
        t.jsx('div', {
          role: 'menuitem',
          className:
            'group m-1.5 flex cursor-pointer gap-2 rounded px-1 py-2.5 !pr-3 text-sm !opacity-100 hover:bg-black/5 focus:ring-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-white/5',
          tabIndex: -1,
          ...c,
          onClick: h,
          children: t.jsxs('div', {
            className: 'flex grow items-center justify-between gap-2',
            children: [
              t.jsx('div', {
                children: t.jsxs('div', {
                  className: 'flex items-center gap-2',
                  children: [
                    x && t.jsx(Zm, { currentSpec: n, endpointsConfig: s }),
                    t.jsxs('div', {
                      className: 'break-all',
                      children: [
                        e,
                        t.jsx('div', { className: 'text-token-text-tertiary', children: a }),
                      ],
                    }),
                  ],
                }),
              }),
              t.jsxs('div', {
                className: 'flex items-center gap-2',
                children: [
                  i
                    ? t.jsx(
                        'div',
                        {
                          className: 'text-token-text-primary',
                          children: t.jsxs('button', {
                            className: b(
                              'invisible flex gap-x-1 group-hover:visible',
                              o ? 'visible' : '',
                              g
                                ? 'w-full rounded-lg p-2 hover:bg-gray-200 dark:hover:bg-gray-900'
                                : '',
                            ),
                            onClick: (y) => {
                              y.preventDefault(), y.stopPropagation(), _(!0);
                            },
                            children: [
                              t.jsx('div', {
                                className: b('invisible group-hover:visible', g ? 'text-xs' : ''),
                                children: f('com_endpoint_config_key'),
                              }),
                              t.jsx(j_, { className: b(g ? 'icon-sm' : 'icon-md stroke-1') }),
                            ],
                          }),
                        },
                        `set-key-${l}`,
                      )
                    : null,
                  o &&
                    t.jsx('svg', {
                      width: '24',
                      height: '24',
                      viewBox: '0 0 24 24',
                      fill: 'none',
                      xmlns: 'http://www.w3.org/2000/svg',
                      className: 'icon-md block',
                      children: t.jsx('path', {
                        fillRule: 'evenodd',
                        clipRule: 'evenodd',
                        d: 'M2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM16.0755 7.93219C16.5272 8.25003 16.6356 8.87383 16.3178 9.32549L11.5678 16.0755C11.3931 16.3237 11.1152 16.4792 10.8123 16.4981C10.5093 16.517 10.2142 16.3973 10.0101 16.1727L7.51006 13.4227C7.13855 13.014 7.16867 12.3816 7.57733 12.0101C7.98598 11.6386 8.61843 11.6687 8.98994 12.0773L10.6504 13.9039L14.6822 8.17451C15 7.72284 15.6238 7.61436 16.0755 7.93219Z',
                        fill: 'currentColor',
                      }),
                    }),
                ],
              }),
            ],
          }),
        }),
        i && t.jsx(Qm, { open: d, onOpenChange: _, endpoint: l ?? '', endpointType: v }),
      ],
    });
  },
  fk = ({ specs: e = [], selected: n, setSelected: o = () => ({}), endpointsConfig: a }) =>
    t.jsx(t.Fragment, {
      children:
        e &&
        e.map((i, s) =>
          i
            ? t.jsx(
                Uo,
                {
                  asChild: !0,
                  children: t.jsxs(
                    'div',
                    {
                      children: [
                        t.jsx(
                          gk,
                          {
                            spec: i,
                            title: i.label,
                            description: i.description,
                            onClick: () => o(i),
                            'data-testid': `spec-item-${i.name}`,
                            selected: (n == null ? void 0 : n.name) === i.name,
                            userProvidesKey: i.authType === Xn.USER_PROVIDED,
                            endpointsConfig: a,
                          },
                          `spec-item-${i.name}`,
                        ),
                        s !== e.length - 1 && t.jsx(hr, {}),
                      ],
                    },
                    `spec-${i.name}`,
                  ),
                },
                `spec-${i.name}`,
              )
            : null,
        ),
    });
function xk({ modelSpecs: e }) {
  const { conversation: n } = me(),
    { newConversation: o } = sn(),
    { data: a = {} } = Se(),
    i = Y(O.modularChat),
    s = Ho(),
    r = (l) => {
      const { preset: d } = l;
      (d.iconURL = to(l)), (d.spec = l.name);
      const { endpoint: _ } = d;
      if (!_) return;
      const {
        shouldSwitch: m,
        isNewModular: f,
        isCurrentModular: g,
        isExistingConversation: h,
        newEndpointType: v,
        template: x,
      } = Qn({ newEndpoint: _, modularChat: i, conversation: n, endpointsConfig: a });
      if (h && g && f && m) {
        x.endpointType = v;
        const y = s({ conversation: { ...(n ?? {}), endpointType: x.endpointType }, preset: x });
        o({ template: y, preset: d, keepLatestMessage: !0 });
        return;
      }
      o({ template: { ...x }, preset: d });
    },
    c = p.useMemo(() => {
      const l = e == null ? void 0 : e.find((d) => d.name === (n == null ? void 0 : n.spec));
      if (l) return l;
    }, [e, n == null ? void 0 : n.spec]);
  return t.jsxs(Pt, {
    children: [
      t.jsx(hk, {
        selected: c,
        className: 'min-h-11',
        textClassName:
          'block items-center justify-start text-xs md:text-base whitespace-nowrap max-w-64 overflow-hidden shrink-0 text-ellipsis',
        primaryText: (c == null ? void 0 : c.label) ?? '',
        endpointsConfig: a,
      }),
      t.jsx(Wt, {
        children:
          e &&
          (e == null ? void 0 : e.length) &&
          t.jsx('div', {
            style: {
              position: 'fixed',
              left: '0px',
              top: '0px',
              transform: 'translate3d(268px, 50px, 0px)',
              minWidth: 'max-content',
              zIndex: 'auto',
            },
            children: t.jsx(Et, {
              side: 'bottom',
              align: 'start',
              className:
                'models-scrollbar mt-2 max-h-[65vh] min-w-[340px] max-w-xs overflow-y-auto rounded-lg border border-gray-100 bg-white shadow-lg dark:border-gray-700 dark:bg-gray-700 dark:text-white lg:max-h-[75vh]',
              children: t.jsx(fk, { specs: e, selected: c, setSelected: r, endpointsConfig: a }),
            }),
          }),
      }),
    ],
  });
}
function vk({ conversation: e, setPopoverActive: n }) {
  const o = D(),
    [a, i] = p.useState(!1),
    s = () => {
      i(!0);
    },
    r = (c) => {
      i(c), n(c);
    };
  return t.jsxs(t.Fragment, {
    children: [
      t.jsxs('button', {
        onClick: s,
        className:
          'group m-1.5 flex w-full cursor-pointer items-center gap-2 rounded p-2.5 text-sm hover:bg-gray-200 focus-visible:bg-gray-200 focus-visible:outline-0 radix-disabled:pointer-events-none radix-disabled:opacity-50 dark:hover:bg-gray-600 dark:focus-visible:bg-gray-600',
        children: [t.jsx(C_, { size: 16 }), ' ', o('com_nav_export')],
      }),
      a && t.jsx(W2, { open: a, onOpenChange: r, conversation: e }),
    ],
  });
}
function xl({ isSharedButtonEnabled: e, className: n = '' }) {
  const o = D(),
    a = Y(O.conversationByIndex(0)),
    [i, s] = p.useState(!1),
    r = a && a.conversationId && a.conversationId !== 'new' && a.conversationId !== 'search';
  if (!r) return null;
  const c = r;
  return t.jsx($m, {
    isActiveConvo: !!c,
    isPopoverActive: i,
    setIsPopoverActive: s,
    className: n,
    children: t.jsx(Fm, {
      icon: t.jsx(C_, {}),
      tooltip: o('com_endpoint_export_share'),
      className:
        'pointer-cursor relative z-50 flex h-[40px] min-w-4 flex-none flex-col items-center justify-center rounded-md border border-gray-100 bg-white px-3 text-left hover:bg-gray-50 focus:outline-none focus:ring-0 focus:ring-offset-0 radix-state-open:bg-gray-50 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700 dark:radix-state-open:bg-gray-700 sm:text-sm',
      children:
        a &&
        a.conversationId &&
        t.jsxs(t.Fragment, {
          children: [
            t.jsx(vk, { conversation: a, setPopoverActive: s }),
            e &&
              t.jsx(qm, {
                conversationId: a.conversationId,
                title: a.title ?? '',
                appendLabel: !0,
                className: 'mb-[3.5px]',
                setPopoverActive: s,
              }),
          ],
        }),
    }),
  });
}
function Bi({ conversation: e, setOption: n, models: o, showAbove: a = !0, popover: i = !1 }) {
  const s = i ? uo : Qe;
  return t.jsx(s, {
    value: (e == null ? void 0 : e.model) ?? '',
    setValue: n('model'),
    availableValues: o,
    showAbove: a,
    showLabel: !1,
    className: b(
      Gt,
      'min-w-48 z-50 flex h-[40px] w-48 flex-none items-center justify-center px-4 hover:cursor-pointer',
    ),
  });
}
function bk({ conversation: e, setOption: n, models: o, showAbove: a, popover: i = !1 }) {
  const s = Y(O.showBingToneSetting);
  if (!e) return null;
  const { conversationId: r, toneStyle: c, jailbreak: l } = e;
  if (r !== 'new' && !s) return null;
  const d =
      'p-2 rounded-md min-w-[75px] font-normal bg-white/[.60] dark:bg-gray-700 text-black text-xs',
    _ = b(d, 'font-medium data-[state=active]:text-white text-xs text-white'),
    m = (g) => g + '-tab ' + _,
    f = i ? uo : Qe;
  return t.jsxs(t.Fragment, {
    children: [
      t.jsx(f, {
        title: 'Mode',
        value: l ? 'Sydney' : 'BingAI',
        'data-testid': 'bing-select-dropdown',
        setValue: (g) => n('jailbreak')(g === 'Sydney'),
        availableValues: o,
        showAbove: a,
        showLabel: !1,
        className: b(
          Gt,
          'z-50 flex h-[40px] w-36 flex-none items-center justify-center px-4 ring-0 hover:cursor-pointer hover:bg-gray-50 focus:ring-0 focus:ring-offset-0 data-[state=open]:bg-gray-50 dark:bg-gray-800 dark:hover:bg-gray-700 dark:data-[state=open]:bg-gray-600',
          s ? 'hidden' : '',
        ),
      }),
      t.jsx(wx, {
        value: c ?? 'creative',
        className: b(
          Gt,
          'z-50 flex h-[40px] flex-none items-center justify-center px-0 hover:bg-gray-50 dark:hover:bg-gray-700',
        ),
        onValueChange: (g) => n('toneStyle')(g.toLowerCase()),
        children: t.jsxs(Zd, {
          className: 'bg-white/[.60] dark:bg-gray-700',
          children: [
            t.jsx(Co, {
              value: 'creative',
              className: `${c === 'creative' ? m('creative') : d}`,
              children: 'Creative',
            }),
            t.jsx(Co, {
              value: 'fast',
              className: `${c === 'fast' ? m('fast') : d}`,
              children: 'Fast',
            }),
            t.jsx(Co, {
              value: 'balanced',
              className: `${c === 'balanced' ? m('balanced') : d}`,
              children: 'Balanced',
            }),
            t.jsx(Co, {
              value: 'precise',
              className: `${c === 'precise' ? m('precise') : d}`,
              children: 'Precise',
            }),
          ],
        }),
      }),
    ],
  });
}
function yk({ conversation: e, setOption: n, models: o, showAbove: a, popover: i = !1 }) {
  const s = i ? uo : Qe;
  return t.jsx(s, {
    value: (e == null ? void 0 : e.model) ?? '',
    setValue: n('model'),
    availableValues: o,
    showAbove: a,
    showLabel: !1,
    className: b(
      Gt,
      'min-w-48 z-50 flex h-[40px] w-48 flex-none items-center justify-center px-4 ring-0 hover:cursor-pointer',
    ),
  });
}
function kk({ conversation: e, setOption: n, models: o, showAbove: a, popover: i = !1 }) {
  if (!e) return null;
  const { conversationId: s, model: r } = e;
  if (s !== 'new') return null;
  const c = i ? uo : Qe;
  return t.jsx(c, {
    value: r ?? '',
    setValue: n('model'),
    availableValues: o,
    showAbove: a,
    showLabel: !1,
    className: b(
      Gt,
      'min-w-48 z-50 flex h-[40px] w-60 flex-none items-center justify-center px-4 ring-0 hover:cursor-pointer',
    ),
  });
}
function wk({ conversation: e, setOption: n, models: o, showAbove: a, popover: i = !1 }) {
  const s = i ? uo : Qe;
  return t.jsx(s, {
    value: (e == null ? void 0 : e.model) ?? '',
    setValue: n('model'),
    availableValues: o,
    showAbove: a,
    showLabel: !1,
    className: b(
      Gt,
      'min-w-48 z-50 flex h-[40px] w-48 flex-none items-center justify-center px-4 ring-0 hover:cursor-pointer',
    ),
  });
}
function jk({ conversation: e, setOption: n, models: o, showAbove: a, popover: i = !1 }) {
  const s = D(),
    { user: r } = Re(),
    [c, l] = p.useState(!0),
    d = Dn('(max-width: 640px)'),
    _ = Y(O.availableTools),
    { checkPluginSelection: m, setTools: f } = rn(),
    { data: g } = Qa({ enabled: !!(r != null && r.plugins), select: Es });
  p.useEffect(() => {
    d && l(!1);
  }, [d]);
  const h = p.useMemo(
      () => (e != null && e.tools ? Ms(e.tools, g == null ? void 0 : g.map) : []),
      [e, g],
    ),
    v = p.useMemo(() => (_ ? Object.values(_) : []), [_]);
  if (!e) return null;
  const x = i ? uo : Qe,
    y = i ? Dx : um;
  return t.jsxs(t.Fragment, {
    children: [
      t.jsx(Ne, {
        type: 'button',
        className: b(
          Gt,
          'z-40 flex h-[40px] min-w-4 flex-none items-center justify-center px-3 hover:bg-white focus:ring-0 focus:ring-offset-0 dark:hover:bg-gray-700',
        ),
        onClick: () => l((k) => !k),
        children: t.jsx(p_, {
          className: b(c ? 'rotate-180 transform' : '', 'w-4 text-gray-600 dark:text-white'),
        }),
      }),
      c &&
        t.jsxs(t.Fragment, {
          children: [
            t.jsx(x, {
              value: e.model ?? '',
              setValue: n('model'),
              availableValues: o,
              showAbove: a,
              showLabel: !1,
              className: b(
                Gt,
                'z-50 flex h-[40px] w-48 min-w-48 flex-none items-center justify-center px-4 hover:cursor-pointer',
              ),
            }),
            t.jsx(y, {
              showAbove: !1,
              showLabel: !1,
              setSelected: f,
              value: h,
              optionValueKey: 'pluginKey',
              availableValues: v,
              isSelected: m,
              searchPlaceholder: s('com_ui_select_search_plugin'),
            }),
          ],
        }),
    ],
  });
}
const Ck = {
    [N.openAI]: Bi,
    [N.custom]: Bi,
    [N.azureOpenAI]: Bi,
    [N.bingAI]: bk,
    [N.google]: yk,
    [N.anthropic]: wk,
    [N.chatGPTBrowser]: kk,
  },
  Nk = { ...Ck, [N.gptPlugins]: jk };
function Sk({ conversation: e, setOption: n, popover: o = !1, showAbove: a = !0 }) {
  var _;
  const i = Qt();
  if (!(e != null && e.endpoint)) return null;
  const { endpoint: s, endpointType: r } = e,
    c = ((_ = i == null ? void 0 : i.data) == null ? void 0 : _[s]) ?? [],
    d = Nk[r ?? s];
  return d
    ? t.jsx(d, { conversation: e, setOption: n, models: c, showAbove: a, popover: o })
    : null;
}
function Ak({
  children: e,
  visible: n,
  saveAsPreset: o,
  closePopover: a,
  PopoverButtons: i,
  presetsDisabled: s,
}) {
  const r = p.useRef(null);
  ro(
    r,
    () => a(),
    ['dialog-template-content', 'shadcn-button', 'advanced-settings'],
    (d) => {
      const _ = d;
      if (
        (_ == null ? void 0 : _.id) === 'presets-button' ||
        ((_ == null ? void 0 : _.parentNode) instanceof Element &&
          _.parentNode.id === 'presets-button')
      )
        return !1;
      const m = _ == null ? void 0 : _.tagName;
      return m === 'path' || m === 'svg' || m === 'circle';
    },
  );
  const c = D(),
    l =
      'shadow-xl rounded-md min-w-[75px] font-normal bg-white border-black/10 border dark:bg-gray-700 text-black dark:text-white';
  return n
    ? t.jsx(Wt, {
        children: t.jsx(Et, {
          sideOffset: 8,
          align: 'start',
          ref: r,
          asChild: !0,
          children: t.jsx('div', {
            className: 'z-[70] flex w-screen flex-col items-center md:w-full md:px-4',
            children: t.jsxs('div', {
              className: b(
                l,
                'dark:bg-gray-700',
                'border-d-0 flex w-full flex-col overflow-hidden rounded-none border-s-0 border-t bg-white px-0 pb-[10px] dark:border-white/10 md:rounded-md md:border lg:w-[736px]',
              ),
              children: [
                t.jsxs('div', {
                  className: 'flex w-full items-center bg-gray-50 px-2 py-2 dark:bg-gray-700',
                  children: [
                    s
                      ? null
                      : t.jsxs(Ne, {
                          type: 'button',
                          className:
                            'h-auto w-[150px] justify-start rounded-md border border-gray-300/50 bg-transparent px-2 py-1 text-xs font-medium font-normal text-black hover:bg-gray-100 hover:text-black focus:ring-1 focus:ring-green-500/90 dark:border-gray-500/50 dark:bg-transparent dark:text-white dark:hover:bg-gray-600 dark:focus:ring-green-500',
                          onClick: o,
                          children: [
                            t.jsx(m_, { className: 'mr-1 w-[14px]' }),
                            c('com_endpoint_save_as_preset'),
                          ],
                        }),
                    i,
                    t.jsx(Ne, {
                      type: 'button',
                      className: b(
                        'ml-auto h-auto bg-transparent px-3 py-2 text-xs font-medium font-normal text-black hover:bg-gray-100 hover:text-black dark:bg-transparent dark:text-white dark:hover:bg-gray-700 dark:hover:text-white',
                        tt,
                      ),
                      onClick: a,
                      children: t.jsx(sm, {}),
                    }),
                  ],
                }),
                t.jsx('div', { children: e }),
              ],
            }),
          }),
        }),
      })
    : null;
}
function Tk({ interfaceConfig: e }) {
  const [n, o] = p.useState(!1),
    [a, i] = W(O.showPluginStoreDialog),
    {
      showPopover: s,
      conversation: r,
      latestMessage: c,
      setShowPopover: l,
      setShowBingToneSetting: d,
    } = me(),
    { setOption: _ } = rn(),
    { endpoint: m, conversationId: f, jailbreak: g } = r ?? {},
    h = { bingAI: !!(c && r != null && r.jailbreak && m === 'bingAI') },
    v = { bingAI: () => d((C) => !C) },
    x = p.useMemo(() => ({ [N.chatGPTBrowser]: !0, [N.bingAI]: g ? !1 : f !== 'new' }), [g, f]);
  p.useEffect(() => {
    m && x[m] && l(!1);
  }, [m, x]);
  const y = () => {
    o(!0);
  };
  if (!m) return null;
  const k = h[m] ? v[m] : () => l((C) => !C);
  return t.jsx(Pt, {
    open: s,
    children: t.jsx(Ip, {
      children: t.jsx('div', {
        className: 'my-auto lg:max-w-2xl xl:max-w-3xl',
        children: t.jsxs('span', {
          className:
            'flex w-full flex-col items-center justify-center gap-0 md:order-none md:m-auto md:gap-2',
          children: [
            t.jsxs('div', {
              className: 'z-[61] flex w-full items-center justify-center gap-2',
              children: [
                (e == null ? void 0 : e.modelSelect) &&
                  t.jsx(Sk, { conversation: r, setOption: _, showAbove: !1, popover: !0 }),
                !x[m] &&
                  (e == null ? void 0 : e.parameters) &&
                  t.jsx(Ne, {
                    type: 'button',
                    className: b(
                      Gt,
                      'z-50 flex h-[40px] min-w-4 flex-none items-center justify-center px-3 focus:ring-0 focus:ring-offset-0',
                      'hover:bg-gray-50 radix-state-open:bg-gray-50 dark:hover:bg-gray-700 dark:radix-state-open:bg-gray-700',
                    ),
                    onClick: k,
                    children: t.jsx(zp, { className: 'w-4 text-gray-600 dark:text-white' }),
                  }),
              ],
            }),
            (e == null ? void 0 : e.parameters) &&
              t.jsx(Ak, {
                visible: s,
                saveAsPreset: y,
                presetsDisabled: !(e != null && e.presets),
                PopoverButtons: t.jsx(Hm, {}),
                closePopover: () => l(!1),
                children: t.jsxs('div', {
                  className: 'px-4 py-4',
                  children: [
                    t.jsx(bm, {
                      className: '[&::-webkit-scrollbar]:w-2',
                      conversation: r,
                      setOption: _,
                    }),
                    t.jsx(Gv, { conversation: r, setOption: _ }),
                  ],
                }),
              }),
            (e == null ? void 0 : e.presets) &&
              t.jsx(Vv, { open: n, onOpenChange: o, preset: Xp.parse({ ...r }) }),
            (e == null ? void 0 : e.parameters) && t.jsx(gv, { isOpen: a, setIsOpen: i }),
          ],
        }),
      }),
    }),
  });
}
const Ik = Fa().interface;
function vl() {
  const { data: e } = bt(),
    { navVisible: n } = qo(),
    o = p.useMemo(() => {
      var s;
      return ((s = e == null ? void 0 : e.modelSpecs) == null ? void 0 : s.list) ?? [];
    }, [e]),
    a = p.useMemo(() => (e == null ? void 0 : e.interface) ?? Ik, [e]),
    i = Dn('(max-width: 768px)');
  return t.jsxs('div', {
    className:
      'sticky top-0 z-10 flex h-14 w-full items-center justify-between bg-white p-2 font-semibold dark:bg-gray-800 dark:text-white',
    children: [
      t.jsxs('div', {
        className: 'hide-scrollbar flex w-full items-center justify-between gap-2 overflow-x-auto',
        children: [
          t.jsxs('div', {
            className: 'flex items-center gap-2',
            children: [
              !n && t.jsx(pk, {}),
              a.endpointsMenu && t.jsx(uk, {}),
              (o == null ? void 0 : o.length) > 0 && t.jsx(xk, { modelSpecs: o }),
              t.jsx(Tk, { interfaceConfig: a }),
              a.presets && t.jsx(H2, {}),
              i &&
                t.jsx(xl, {
                  isSharedButtonEnabled: (e == null ? void 0 : e.sharedLinksEnabled) ?? !1,
                  className: 'pl-0',
                }),
            ],
          }),
          !i &&
            t.jsx(xl, { isSharedButtonEnabled: (e == null ? void 0 : e.sharedLinksEnabled) ?? !1 }),
        ],
      }),
      t.jsx('div', {}),
    ],
  });
}
function zk({ index: e = 0 }) {
  const { conversationId: n } = Kt(),
    o = Y(O.submissionByIndex(0));
  ox(o);
  const a = Za(),
    { data: i = null, isLoading: s } = _d(n ?? '', {
      select: (c) => {
        const l = Ko({ messages: c, fileMap: a });
        return (l == null ? void 0 : l.length) === 0 ? null : l ?? null;
      },
      enabled: !!a,
    }),
    r = Md(e, n);
  return t.jsx(hd.Provider, {
    value: r,
    children: t.jsxs(C2, {
      useSidePanel: !0,
      children: [
        s && n !== 'new'
          ? t.jsx('div', {
              className: 'flex h-screen items-center justify-center',
              children: t.jsx(Oe, { className: 'opacity-0' }),
            })
          : i && i.length !== 0
          ? t.jsx(Pb, { messagesTree: i, Header: t.jsx(vl, {}) })
          : t.jsx(U2, { Header: t.jsx(vl, {}) }),
        t.jsxs('div', {
          className:
            'w-full border-t-0 pl-0 pt-2 dark:border-white/20 md:w-[calc(100%-.5rem)] md:border-t-0 md:border-transparent md:pl-0 md:pt-0 md:dark:border-transparent',
          children: [t.jsx(q2, { index: e }), t.jsx(Rm, {})],
        }),
      ],
    }),
  });
}
const Lk = p.memo(zk);
function Pk() {
  const { user: e, isAuthenticated: n } = Re(),
    o = _t();
  return (
    p.useEffect(() => {
      const a = setTimeout(() => {
        n || o('/login', { replace: !0 });
      }, 300);
      return () => {
        clearTimeout(a);
      };
    }, [n, o]),
    { user: e, isAuthenticated: n }
  );
}
function Ek() {
  const { data: e } = bt(),
    { isAuthenticated: n, user: o } = Pk();
  e1({ startupConfig: e, user: o });
  const a = 0,
    { conversationId: i } = Kt(),
    { conversation: s } = O.useCreateConversationAtom(a),
    { newConversation: r } = sn(),
    c = p.useRef(!1),
    l = Qt({ enabled: n, refetchOnMount: 'always' }),
    d = wg(i ?? '', { enabled: n && i !== 'new' }),
    _ = Se({ enabled: n }),
    m = so();
  return (
    p.useEffect(() => {
      var f, g, h, v, x, y;
      if (
        e &&
        i === 'new' &&
        _.data &&
        l.data &&
        !((f = l.data) != null && f.initial) &&
        !c.current
      ) {
        const k = es((g = e.modelSpecs) == null ? void 0 : g.list);
        r({
          modelsData: l.data,
          template: s || void 0,
          ...(k ? { preset: { ...k.preset, iconURL: to(k), spec: k.name } } : {}),
        }),
          (c.current = !0);
      } else if (
        e &&
        d.data &&
        _.data &&
        l.data &&
        !((h = l.data) != null && h.initial) &&
        !c.current
      )
        r({ template: d.data, preset: d.data, modelsData: l.data, keepLatestMessage: !0 }),
          (c.current = !0);
      else if (
        e &&
        !c.current &&
        !((v = l.data) != null && v.initial) &&
        i === 'new' &&
        m[N.assistants] &&
        m[N.azureAssistants]
      ) {
        const k = es((x = e.modelSpecs) == null ? void 0 : x.list);
        r({
          modelsData: l.data,
          template: s || void 0,
          ...(k ? { preset: { ...k.preset, iconURL: to(k), spec: k.name } } : {}),
        }),
          (c.current = !0);
      } else
        e &&
          !c.current &&
          !((y = l.data) != null && y.initial) &&
          m[N.assistants] &&
          m[N.azureAssistants] &&
          (r({ template: d.data, preset: d.data, modelsData: l.data, keepLatestMessage: !0 }),
          (c.current = !0));
    }, [e, d.data, _.data, l.data, m]),
    _.isLoading || l.isLoading
      ? t.jsx(Oe, { className: 'm-auto text-black dark:text-white' })
      : !n ||
        (s == null ? void 0 : s.conversationId) === 'search' ||
        ((s == null ? void 0 : s.conversationId) !== i && !s) ||
        !i
      ? null
      : t.jsx(Lk, { index: a })
  );
}
const Mk = ze.forwardRef((e, n) =>
  t.jsx('div', {
    className: b(
      'relative flex w-full grow overflow-hidden bg-white dark:bg-gray-800',
      e.className,
    ),
    children: t.jsx('div', {
      className:
        'transition-width relative h-full w-full flex-1 overflow-auto bg-white dark:bg-gray-800',
      children: t.jsx('div', {
        className: 'flex h-full flex-col',
        role: 'presentation',
        tabIndex: 0,
        children: t.jsx('div', {
          className: 'flex-1 overflow-hidden overflow-y-auto',
          children: t.jsx('div', {
            className: 'dark:gpt-dark-gray relative h-full',
            children: t.jsx('div', {
              ref: n,
              style: { height: '100%', overflowY: 'auto', width: '100%' },
              children: t.jsxs('div', {
                className: 'flex flex-col pb-9 text-sm dark:bg-transparent',
                children: [
                  e.children,
                  t.jsx('div', {
                    className:
                      'dark:gpt-dark-gray group h-0 w-full flex-shrink-0 dark:border-gray-800/50',
                  }),
                ],
              }),
            }),
          }),
        }),
      }),
    }),
  }),
);
function Rk({ message: e }) {
  const n = D(),
    { searchQueryRes: o } = Vs(),
    { navigateWithLastTools: a } = Hs();
  if (!e.conversationId) return null;
  const i = (s) => {
    s.preventDefault();
    const r = Xi(o == null ? void 0 : o.data, e.conversationId);
    r && ((document.title = e.title ?? ''), a(r));
  };
  return t.jsx('div', {
    className:
      'visible mt-0 flex items-center justify-center gap-1 self-end text-gray-400 lg:justify-start',
    children: t.jsxs('a', {
      className:
        'ml-0 flex cursor-pointer items-center gap-1.5 rounded-md p-1 text-xs hover:text-gray-900 hover:underline dark:text-gray-400/70 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400',
      onClick: i,
      title: n('com_ui_go_to_conversation'),
      children: [t.jsx(fa, { className: 'icon-sm' }), e.title],
    }),
  });
}
function Ok({ message: e }) {
  const n = Y(O.UsernameDisplay),
    { user: o } = Re(),
    a = D();
  if (!e) return null;
  const { isCreatedByUser: i } = e ?? {};
  let s = '';
  return (
    i
      ? (s = n
          ? (o == null ? void 0 : o.name) || (o == null ? void 0 : o.username)
          : a('com_user_message'))
      : (s = e.sender),
    t.jsx(t.Fragment, {
      children: t.jsx('div', {
        className:
          'text-token-text-primary w-full border-0 bg-transparent dark:border-0 dark:bg-transparent',
        children: t.jsx('div', {
          className: 'm-auto justify-center p-4 py-2 text-base md:gap-6 ',
          children: t.jsxs('div', {
            className:
              'final-completion group mx-auto flex flex-1 gap-3 text-base md:max-w-3xl md:px-5 lg:max-w-[40rem] lg:px-1 xl:max-w-[48rem] xl:px-5',
            children: [
              t.jsx('div', {
                className: 'relative flex flex-shrink-0 flex-col items-end',
                children: t.jsx('div', {
                  children: t.jsx('div', {
                    className: 'pt-0.5',
                    children: t.jsx('div', {
                      className:
                        'flex h-6 w-6 items-center justify-center overflow-hidden rounded-full',
                      children: t.jsx(mr, { message: e }),
                    }),
                  }),
                }),
              }),
              t.jsxs('div', {
                className: b('relative flex w-11/12 flex-col', i ? '' : 'agent-turn'),
                children: [
                  t.jsx('div', { className: 'select-none font-semibold', children: s }),
                  t.jsx('div', {
                    className: 'flex-col gap-1 md:gap-3',
                    children: t.jsx('div', {
                      className: 'flex max-w-full flex-grow flex-col gap-0',
                      children: t.jsx(Em, { message: e }),
                    }),
                  }),
                  t.jsxs(ci, {
                    classes: 'text-xs',
                    children: [t.jsx(fm, { message: e }), t.jsx(Rk, { message: e })],
                  }),
                ],
              }),
            ],
          }),
        }),
      }),
    })
  );
}
function Dk() {
  var r;
  const e = D(),
    n = Za(),
    { searchQuery: o, searchQueryRes: a } = Vs(),
    { containerRef: i } = Xa({
      setShowLoading: () => ({}),
      hasNextPage: a == null ? void 0 : a.hasNextPage,
      fetchNextPage: a == null ? void 0 : a.fetchNextPage,
      isFetchingNextPage: a == null ? void 0 : a.isFetchingNextPage,
    }),
    s = p.useMemo(() => {
      var d;
      const c =
          ((d = a == null ? void 0 : a.data) == null
            ? void 0
            : d.pages.flatMap((_) => _.messages)) || [],
        l = Ko({ messages: c, fileMap: n });
      return (l == null ? void 0 : l.length) === 0 ? null : l ?? null;
    }, [n, (r = a == null ? void 0 : a.data) == null ? void 0 : r.pages]);
  return !o || !(a != null && a.data)
    ? null
    : t.jsxs(Mk, {
        ref: i,
        className: 'pt-4',
        children: [
          (s && (s == null ? void 0 : s.length) == 0) || s === null
            ? t.jsx('div', {
                className:
                  'my-auto flex h-full w-full items-center justify-center gap-1 bg-white p-3 text-lg text-gray-500 dark:border-gray-800/50 dark:bg-gray-800 dark:text-gray-300',
                children: e('com_ui_nothing_found'),
              })
            : s == null
            ? void 0
            : s.map((c) => t.jsx(Ok, { message: c }, c.messageId)),
          t.jsx('div', {
            className:
              'absolute bottom-0 left-0 right-0 h-[5%] bg-gradient-to-t from-gray-50 to-transparent dark:from-gray-800',
          }),
        ],
      });
}
function Fk() {
  const { isAuthenticated: e } = Re(),
    [n, o] = p.useState(() => {
      const r = localStorage.getItem('navVisible');
      return r !== null ? JSON.parse(r) : !0;
    }),
    a = t1({ isAuthenticated: e }),
    i = B1({ isAuthenticated: e }),
    s = tf({ isAuthenticated: e });
  return e
    ? t.jsx(bd.Provider, {
        value: a,
        children: t.jsx(yd.Provider, {
          value: i,
          children: t.jsx(kd.Provider, {
            value: s,
            children: t.jsx('div', {
              className: 'flex h-dvh',
              children: t.jsxs('div', {
                className: 'relative z-0 flex h-full w-full overflow-hidden',
                children: [
                  t.jsx(ok, { navVisible: n, setNavVisible: o }),
                  t.jsxs('div', {
                    className: 'relative flex h-full max-w-full flex-1 flex-col overflow-hidden',
                    children: [
                      t.jsx(Gy, { setNavVisible: o }),
                      t.jsx(ys, { context: { navVisible: n, setNavVisible: o } }),
                    ],
                  }),
                ],
              }),
            }),
          }),
        }),
      })
    : null;
}
const Bk = () => t.jsxs(i1, { children: [t.jsx(ys, {}), t.jsx(_v, {})] }),
  $k = Lp([
    { path: 'share/:shareId', element: t.jsx(xb, {}) },
    {
      path: '/',
      element: t.jsx(gm, {}),
      children: [
        { path: 'register', element: t.jsx(_x, {}) },
        { path: 'forgot-password', element: t.jsx(mv, {}) },
        { path: 'reset-password', element: t.jsx(dx, {}) },
      ],
    },
    { path: 'verify', element: t.jsx(lv, {}) },
    {
      element: t.jsx(Bk, {}),
      children: [
        {
          path: '/',
          element: t.jsx(yv, {}),
          children: [{ path: 'login', element: t.jsx(lx, {}) }],
        },
        {
          path: '/',
          element: t.jsx(Fk, {}),
          children: [
            { index: !0, element: t.jsx(Pp, { to: '/c/new', replace: !0 }) },
            { path: 'c/:conversationId?', element: t.jsx(Ek, {}) },
            { path: 'search', element: t.jsx(Dk, {}) },
          ],
        },
      ],
    },
  ]),
  qk = () => {
    const { setError: e } = Od(),
      n = new Ep({
        queryCache: new Mp({
          onError: (o) => {
            var a;
            ((a = o == null ? void 0 : o.response) == null ? void 0 : a.status) === 401 && e(o);
          },
        }),
      });
    return t.jsx(Rp, {
      client: n,
      children: t.jsx(Op, {
        children: t.jsx(P1, {
          children: t.jsx(Dp, {
            children: t.jsx(n1, {
              children: t.jsxs(Fp, {
                backend: Bp,
                children: [
                  t.jsx($p, { router: $k }),
                  t.jsx(qp, { initialIsOpen: !1, position: 'top-right' }),
                  t.jsx(rx, {}),
                  t.jsx(Up, {
                    className:
                      'pointer-events-none fixed inset-0 z-[1000] mx-auto my-2 flex max-w-[560px] flex-col items-stretch justify-start md:pb-5',
                  }),
                ],
              }),
            }),
          }),
        }),
      }),
    });
  },
  Uk = () => t.jsx(E1, { children: t.jsx(qk, {}) }),
  Vk = document.getElementById('root'),
  Gk = Vp(Vk);
Gk.render(t.jsx(ax, { children: t.jsx(Uk, {}) }));
